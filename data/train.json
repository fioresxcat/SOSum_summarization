[
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For example: BIGBLOCK See also Styling <code>&lt;hr&gt;</code> with CSS.",
        "output": "BIGBLOCK See also Styling <code>&lt;hr&gt;</code> with CSS.",
        "answer": "For example: BIGBLOCK See also Styling <code>&lt;hr&gt;</code> with CSS.",
        "summary": "BIGBLOCK See also Styling <code>&lt;hr&gt;</code> with CSS."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Interfaces are light weight way to enforce a particular behavior. That is one way to think of.",
        "output": "Interfaces are light weight way to enforce a particular behavior.",
        "answer": "Interfaces are light weight way to enforce a particular behavior. That is one way to think of.",
        "summary": "Interfaces are light weight way to enforce a particular behavior."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Pay attention <code>--&gt;</code> is not an operator. It is in fact two separate operators, <code>--</code> and <code>&gt;</code>. The conditional's code decrements <code>x</code>, while returning <code>x</code>'s original (not decremented) value, and then compares the original value with <code>0</code> using the <code>&gt;</code> operator. <strong>To better understand, the statement could be written as follows:</strong>",
        "output": "<code>--&gt;</code> is not an operator. It is in fact two separate operators, <code>--</code> and <code>&gt;</code>.",
        "answer": "Pay attention <code>--&gt;</code> is not an operator. It is in fact two separate operators, <code>--</code> and <code>&gt;</code>. The conditional's code decrements <code>x</code>, while returning <code>x</code>'s original (not decremented) value, and then compares the original value with <code>0</code> using the <code>&gt;</code> operator. <strong>To better understand, the statement could be written as follows:</strong>",
        "summary": "<code>--&gt;</code> is not an operator. It is in fact two separate operators, <code>--</code> and <code>&gt;</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have created a SQL Server User Defined Function to calculate someone's age, given their birthdate. This is useful when you need it as part of a query:",
        "output": "I have created a SQL Server User Defined Function to calculate someone's age, given their birthdate.",
        "answer": "I have created a SQL Server User Defined Function to calculate someone's age, given their birthdate. This is useful when you need it as part of a query:",
        "summary": "I have created a SQL Server User Defined Function to calculate someone's age, given their birthdate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If your base class is called <code>Base</code>, and your function is called <code>FooBar()</code> you can call it directly using <code>Base::FooBar()</code>",
        "output": "If your base class is called <code>Base</code>, and your function is called <code>FooBar()</code> you can call it directly using <code>Base::FooBar()</code>",
        "answer": "If your base class is called <code>Base</code>, and your function is called <code>FooBar()</code> you can call it directly using <code>Base::FooBar()</code>",
        "summary": "If your base class is called <code>Base</code>, and your function is called <code>FooBar()</code> you can call it directly using <code>Base::FooBar()</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Please see this link. I looked in all my apache log files until I found the actual error (I had changed the <code>&lt;VirtualHost&gt;</code> from <code>_default_</code> to my <code>fqdn</code>). When I fixed this error, everything worked fine.",
        "output": "I looked in all my apache log files until I found the actual error (I had changed the <code>&lt;VirtualHost&gt;</code> from <code>_default_</code> to my <code>fqdn</code>).",
        "answer": "Please see this link. I looked in all my apache log files until I found the actual error (I had changed the <code>&lt;VirtualHost&gt;</code> from <code>_default_</code> to my <code>fqdn</code>). When I fixed this error, everything worked fine.",
        "summary": "I looked in all my apache log files until I found the actual error (I had changed the <code>&lt;VirtualHost&gt;</code> from <code>_default_</code> to my <code>fqdn</code>)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've used it a lot in the past to work with input and output streams. You can nest them nicely and it takes away a lot of the potential problems you usually run into (by automatically calling dispose). For example: BIGBLOCK",
        "output": "You can nest them nicely and it takes away a lot of the potential problems you usually run into (by automatically calling dispose).",
        "answer": "I've used it a lot in the past to work with input and output streams. You can nest them nicely and it takes away a lot of the potential problems you usually run into (by automatically calling dispose). For example: BIGBLOCK",
        "summary": "You can nest them nicely and it takes away a lot of the potential problems you usually run into (by automatically calling dispose)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I figured out this workaround: BIGBLOCK Is there a better one?",
        "output": "I figured out this workaround: BIGBLOCK",
        "answer": "I figured out this workaround: BIGBLOCK Is there a better one?",
        "summary": "I figured out this workaround: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n \"Apparently a cStringIO.StringIO object doesn't quack close enough to a file duck to suit subprocess.Popen\" :-) I'm afraid not. The pipe is a low-level OS concept, so it absolutely requires a file object that is represented by an OS-level file descriptor. Your workaround is the right one.",
        "output": "The pipe is a low-level OS concept, so it absolutely requires a file object that is represented by an OS-level file descriptor.",
        "answer": "\"Apparently a cStringIO.StringIO object doesn't quack close enough to a file duck to suit subprocess.Popen\" :-) I'm afraid not. The pipe is a low-level OS concept, so it absolutely requires a file object that is represented by an OS-level file descriptor. Your workaround is the right one.",
        "summary": "The pipe is a low-level OS concept, so it absolutely requires a file object that is represented by an OS-level file descriptor."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes, you can include custom fonts. Refer to the documentation on UIFont, specifically, the <code>fontWithName:size:</code> method. 1) Make sure you include the font in your resources folder. 2) The \"name\" of the font is not necessarily the filename. 3) Make sure you have the legal right to use that font. By including it in your app, you're also distributing it, and you need to have the right to do that.",
        "output": "Yes, you can include custom fonts. 1) Make sure you include the font in your resources folder. 2) The \"name\" of the font is not necessarily the filename. 3) Make sure you have the legal right to use that font.",
        "answer": "Yes, you can include custom fonts. Refer to the documentation on UIFont, specifically, the <code>fontWithName:size:</code> method. 1) Make sure you include the font in your resources folder. 2) The \"name\" of the font is not necessarily the filename. 3) Make sure you have the legal right to use that font. By including it in your app, you're also distributing it, and you need to have the right to do that.",
        "summary": "Yes, you can include custom fonts. 1) Make sure you include the font in your resources folder. 2) The \"name\" of the font is not necessarily the filename. 3) Make sure you have the legal right to use that font."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To put text, use <code>.text('text')</code> If you want to use <code>.html(SomeValue)</code>, SomeValue should have html tags that can be inside a div it must work too. Just check your script location, as farzad said. Reference: .html and text",
        "output": "To put text, use <code>.text('text')</code>",
        "answer": "To put text, use <code>.text('text')</code> If you want to use <code>.html(SomeValue)</code>, SomeValue should have html tags that can be inside a div it must work too. Just check your script location, as farzad said. Reference: .html and text",
        "summary": "To put text, use <code>.text('text')</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Pretty much anything you can do with <code>lambda</code> you can do better with either named functions or list and generator expressions. Consequently, for the most part you should just one of those in basically any situation (except maybe for scratch code written in the interactive interpreter).",
        "output": "Pretty much anything you can do with <code>lambda</code> you can do better with either named functions or list and generator expressions.",
        "answer": "Pretty much anything you can do with <code>lambda</code> you can do better with either named functions or list and generator expressions. Consequently, for the most part you should just one of those in basically any situation (except maybe for scratch code written in the interactive interpreter).",
        "summary": "Pretty much anything you can do with <code>lambda</code> you can do better with either named functions or list and generator expressions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK Just use the coordinates as <code>q</code>-parameter. Strip the <code>z</code> and <code>t</code> prameters. While <code>z</code> should actually just be the zoom level, it seems that it won't work if you set any. <code>t</code> is the map type. Having that said, it's not obvious how those parameters would affect the result in the shown way. But they do. Maybe you should try the <code>ll</code>-parameter, but only decimal format will be accepted. You can find a quick overview of all the parameters here.",
        "output": "Just use the coordinates as <code>q</code>-parameter. Strip the <code>z</code> and <code>t</code> prameters. While <code>z</code> should actually just be the zoom level, it seems that it won't work if you set any. <code>t</code> is the map type.",
        "answer": "BIGBLOCK Just use the coordinates as <code>q</code>-parameter. Strip the <code>z</code> and <code>t</code> prameters. While <code>z</code> should actually just be the zoom level, it seems that it won't work if you set any. <code>t</code> is the map type. Having that said, it's not obvious how those parameters would affect the result in the shown way. But they do. Maybe you should try the <code>ll</code>-parameter, but only decimal format will be accepted. You can find a quick overview of all the parameters here.",
        "summary": "Just use the coordinates as <code>q</code>-parameter. Strip the <code>z</code> and <code>t</code> prameters. While <code>z</code> should actually just be the zoom level, it seems that it won't work if you set any. <code>t</code> is the map type."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use CollectionUtils.filter(Collection,Predicate), from Apache Commons.",
        "output": "Use CollectionUtils.filter(Collection,Predicate), from Apache Commons.",
        "answer": "Use CollectionUtils.filter(Collection,Predicate), from Apache Commons.",
        "summary": "Use CollectionUtils.filter(Collection,Predicate), from Apache Commons."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n try this for size full listing: see it in action",
        "output": "try this for size",
        "answer": "try this for size full listing: see it in action",
        "summary": "try this for size"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Not an elegant solution, but you could achieve it with a nested looping structure BIGBLOCK You could probably speed this up by checking which columns contain strings while building your column array, and also by combining all the columns per table in one giant, comma-separated WHERE clause.",
        "output": "Not an elegant solution, but you could achieve it with a nested looping structure BIGBLOCK",
        "answer": "Not an elegant solution, but you could achieve it with a nested looping structure BIGBLOCK You could probably speed this up by checking which columns contain strings while building your column array, and also by combining all the columns per table in one giant, comma-separated WHERE clause.",
        "summary": "Not an elegant solution, but you could achieve it with a nested looping structure BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Official python docs:</strong> @classmethod A class method receives the class as  implicit first argument, just like an  instance method receives the instance. To declare a class method, use this  idiom: The <code>@classmethod</code> form is a function  <em>decorator</em> Ã©Â?see the description of  function definitions in <em>Function  definitions</em> for details. It can be called either on the class  (such as <code>C.f()</code>) or on an instance  (such as <code>C().f()</code>). The instance is  ignored except for its class. If a  class method is called for a derived  class, the derived class object is  passed as the implied first argument. Class methods are different than C++  or Java static methods. If you want  those, see <code>staticmethod()</code> in this  section. @staticmethod A static method does not receive an  implicit first argument. To declare a  static method, use this idiom: The <code>@staticmethod</code> form is a function  <em>decorator</em> Ã©Â?see the description of  function definitions in <em>Function  definitions</em> for details. It can be called either on the class  (such as <code>C.f()</code>) or on an instance  (such as <code>C().f()</code>). The instance is  ignored except for its class. Static methods in Python are similar  to those found in Java or C++. For a  more advanced concept, see  <code>classmethod()</code> in this section.",
        "output": "@classmethod A class method receives the class as  implicit first argument, just like an  instance method receives the instance. To declare a class method, use this  idiom: @staticmethod A static method does not receive an  implicit first argument. To declare a  static method, use this idiom:",
        "answer": "<strong>Official python docs:</strong> @classmethod A class method receives the class as  implicit first argument, just like an  instance method receives the instance. To declare a class method, use this  idiom: The <code>@classmethod</code> form is a function  <em>decorator</em> Ã©Â?see the description of  function definitions in <em>Function  definitions</em> for details. It can be called either on the class  (such as <code>C.f()</code>) or on an instance  (such as <code>C().f()</code>). The instance is  ignored except for its class. If a  class method is called for a derived  class, the derived class object is  passed as the implied first argument. Class methods are different than C++  or Java static methods. If you want  those, see <code>staticmethod()</code> in this  section. @staticmethod A static method does not receive an  implicit first argument. To declare a  static method, use this idiom: The <code>@staticmethod</code> form is a function  <em>decorator</em> Ã©Â?see the description of  function definitions in <em>Function  definitions</em> for details. It can be called either on the class  (such as <code>C.f()</code>) or on an instance  (such as <code>C().f()</code>). The instance is  ignored except for its class. Static methods in Python are similar  to those found in Java or C++. For a  more advanced concept, see  <code>classmethod()</code> in this section.",
        "summary": "@classmethod A class method receives the class as  implicit first argument, just like an  instance method receives the instance. To declare a class method, use this  idiom: @staticmethod A static method does not receive an  implicit first argument. To declare a  static method, use this idiom:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to implement a custom <code>Authenticator</code> Now use it in the <code>Session</code> Also check out the JavaMail FAQ",
        "output": "You need to implement a custom <code>Authenticator</code> Now use it in the <code>Session</code>",
        "answer": "You need to implement a custom <code>Authenticator</code> Now use it in the <code>Session</code> Also check out the JavaMail FAQ",
        "summary": "You need to implement a custom <code>Authenticator</code> Now use it in the <code>Session</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n EOF indicates \"end of file\". A newline (which is what happens when you press enter) isn't the end of a <em>file</em>, it's the end of a <em>line</em>, so a newline doesn't terminate this loop. The code isn't wrong[*], it just doesn't do what you seem to expect. It reads to the end of the input, but you seem to want to read only to the end of a line. The value of EOF is -1 because it has to be different from any return value from <code>getchar</code> that is an actual character. So <code>getchar</code> returns any character value as an unsigned char, converted to int, which will therefore be non-negative. If you're typing at the terminal and you want to provoke an end-of-file, use CTRL-D (unix-style systems) or CTRL-Z (Windows). Then after all the input has been read, <code>getchar()</code> will return <code>EOF</code>, and hence <code>getchar() != EOF</code> will be false, and the loop will terminate. [*] well, it has undefined behavior if the input is more than LONG_MAX characters due to integer overflow, but we can probably forgive that in a simple example.",
        "output": "A newline (which is what happens when you press enter) isn't the end of a <em>file</em>, it's the end of a <em>line</em>, so a newline doesn't terminate this loop. The value of EOF is -1 because it has to be different from any return value from <code>getchar</code> that is an actual character. If you're typing at the terminal and you want to provoke an end-of-file, use CTRL-D (unix-style systems) or CTRL-Z (Windows).",
        "answer": "EOF indicates \"end of file\". A newline (which is what happens when you press enter) isn't the end of a <em>file</em>, it's the end of a <em>line</em>, so a newline doesn't terminate this loop. The code isn't wrong[*], it just doesn't do what you seem to expect. It reads to the end of the input, but you seem to want to read only to the end of a line. The value of EOF is -1 because it has to be different from any return value from <code>getchar</code> that is an actual character. So <code>getchar</code> returns any character value as an unsigned char, converted to int, which will therefore be non-negative. If you're typing at the terminal and you want to provoke an end-of-file, use CTRL-D (unix-style systems) or CTRL-Z (Windows). Then after all the input has been read, <code>getchar()</code> will return <code>EOF</code>, and hence <code>getchar() != EOF</code> will be false, and the loop will terminate. [*] well, it has undefined behavior if the input is more than LONG_MAX characters due to integer overflow, but we can probably forgive that in a simple example.",
        "summary": "A newline (which is what happens when you press enter) isn't the end of a <em>file</em>, it's the end of a <em>line</em>, so a newline doesn't terminate this loop. The value of EOF is -1 because it has to be different from any return value from <code>getchar</code> that is an actual character. If you're typing at the terminal and you want to provoke an end-of-file, use CTRL-D (unix-style systems) or CTRL-Z (Windows)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think you pinned down quite well the difference: the framework provides a frame in which we do our work... Somehow, it is more \"constraining\" than a simple library. The framework is also supposed to add consistency to a set of libraries.",
        "output": "The framework is also supposed to add consistency to a set of libraries.",
        "answer": "I think you pinned down quite well the difference: the framework provides a frame in which we do our work... Somehow, it is more \"constraining\" than a simple library. The framework is also supposed to add consistency to a set of libraries.",
        "summary": "The framework is also supposed to add consistency to a set of libraries."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n PHP manual has a good read on the question here. The visibility of a property or method can be defined by prefixing the declaration with the keywords public, protected or private. Class members declared public can be accessed everywhere. Members declared protected can be accessed only within the class itself and by inherited and parent classes. Members declared as private may only be accessed by the class that defines the member.",
        "output": "Class members declared public can be accessed everywhere. Members declared protected can be accessed only within the class itself and by inherited and parent classes. Members declared as private may only be accessed by the class that defines the member.",
        "answer": "PHP manual has a good read on the question here. The visibility of a property or method can be defined by prefixing the declaration with the keywords public, protected or private. Class members declared public can be accessed everywhere. Members declared protected can be accessed only within the class itself and by inherited and parent classes. Members declared as private may only be accessed by the class that defines the member.",
        "summary": "Class members declared public can be accessed everywhere. Members declared protected can be accessed only within the class itself and by inherited and parent classes. Members declared as private may only be accessed by the class that defines the member."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you don't want to use external packages and don't want to rely on outside Internet servers, this might help. It's a code sample that I found on Google Code Search and modified to return required information: Usage: As it relies on <code>windll</code>, this will work only on Windows.",
        "output": "If you don't want to use external packages and don't want to rely on outside Internet servers, this might help.",
        "answer": "If you don't want to use external packages and don't want to rely on outside Internet servers, this might help. It's a code sample that I found on Google Code Search and modified to return required information: Usage: As it relies on <code>windll</code>, this will work only on Windows.",
        "summary": "If you don't want to use external packages and don't want to rely on outside Internet servers, this might help."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Definitions provided by Chris, Sergdev and Llyod are correct. I prefer a simpler definition though, just to keep my life simple: A smart pointer is simply a class that overloads the <code>-&gt;</code>  and <code>*</code> operators. Which means that your object semantically looks like a pointer but you can make it do way cooler things, including reference counting, automatic destruction etc. <code>shared_ptr</code> and <code>auto_ptr</code> are sufficient in most cases, but come along with their own set of small idiosyncrasies.",
        "output": "A smart pointer is simply a class that overloads the <code>-&gt;</code>  and <code>*</code> operators. Which means that your object semantically looks like a pointer but you can make it do way cooler things, including reference counting, automatic destruction etc.",
        "answer": "Definitions provided by Chris, Sergdev and Llyod are correct. I prefer a simpler definition though, just to keep my life simple: A smart pointer is simply a class that overloads the <code>-&gt;</code>  and <code>*</code> operators. Which means that your object semantically looks like a pointer but you can make it do way cooler things, including reference counting, automatic destruction etc. <code>shared_ptr</code> and <code>auto_ptr</code> are sufficient in most cases, but come along with their own set of small idiosyncrasies.",
        "summary": "A smart pointer is simply a class that overloads the <code>-&gt;</code>  and <code>*</code> operators. Which means that your object semantically looks like a pointer but you can make it do way cooler things, including reference counting, automatic destruction etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think the TimeSpan has all that we need in it, without having to resort to 365.25 (or any other approximation). Expanding on Aug's example:",
        "output": "I think the TimeSpan has all that we need in it, without having to resort to 365.25 (or any other approximation).",
        "answer": "I think the TimeSpan has all that we need in it, without having to resort to 365.25 (or any other approximation). Expanding on Aug's example:",
        "summary": "I think the TimeSpan has all that we need in it, without having to resort to 365.25 (or any other approximation)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think what you are looking for is the RGB -> Luma conversion formula. Photometric/digital ITU BT.709: BIGBLOCK Digital ITU BT.601 (gives more weight to the R and B components): BIGBLOCK If you are willing to trade accuracy for perfomance, there are two approximation formulas for this one: BIGBLOCK These can be calculated quickly as BIGBLOCK",
        "output": "Photometric/digital ITU BT.709: BIGBLOCK Digital ITU BT.601 (gives more weight to the R and B components): BIGBLOCK If you are willing to trade accuracy for perfomance, there are two approximation formulas for this one: These can be calculated quickly as BIGBLOCK",
        "answer": "I think what you are looking for is the RGB -> Luma conversion formula. Photometric/digital ITU BT.709: BIGBLOCK Digital ITU BT.601 (gives more weight to the R and B components): BIGBLOCK If you are willing to trade accuracy for perfomance, there are two approximation formulas for this one: BIGBLOCK These can be calculated quickly as BIGBLOCK",
        "summary": "Photometric/digital ITU BT.709: BIGBLOCK Digital ITU BT.601 (gives more weight to the R and B components): BIGBLOCK If you are willing to trade accuracy for perfomance, there are two approximation formulas for this one: These can be calculated quickly as BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n PHP Solution Borrowing directly from Gordon's very comprehensive answer, I note that your question mentions being page-specific in forcing HTTPS/SSL connections. BIGBLOCK Then, as close to the top of these pages which you want to force to connect via PHP, you can <code>require()</code> a centralised file containing this (and any other) custom functions, and then simply run the <code>forceHTTPS()</code> function. HTACCESS / mod_rewrite Solution I have not implemented this kind of solution personally (I have tended to use the PHP solution, like the one above, for it's simplicity), but the following may be, at least, a good start. BIGBLOCK",
        "output": "PHP Solution Borrowing directly from Gordon's very comprehensive answer, I note that your question mentions being page-specific in forcing HTTPS/SSL connections. HTACCESS / mod_rewrite Solution I have not implemented this kind of solution personally (I have tended to use the PHP solution, like the one above, for it's simplicity), but the following may be, at least, a good start.",
        "answer": "PHP Solution Borrowing directly from Gordon's very comprehensive answer, I note that your question mentions being page-specific in forcing HTTPS/SSL connections. BIGBLOCK Then, as close to the top of these pages which you want to force to connect via PHP, you can <code>require()</code> a centralised file containing this (and any other) custom functions, and then simply run the <code>forceHTTPS()</code> function. HTACCESS / mod_rewrite Solution I have not implemented this kind of solution personally (I have tended to use the PHP solution, like the one above, for it's simplicity), but the following may be, at least, a good start. BIGBLOCK",
        "summary": "PHP Solution Borrowing directly from Gordon's very comprehensive answer, I note that your question mentions being page-specific in forcing HTTPS/SSL connections. HTACCESS / mod_rewrite Solution I have not implemented this kind of solution personally (I have tended to use the PHP solution, like the one above, for it's simplicity), but the following may be, at least, a good start."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The usual approach is to uppercase the strings or lower case them for the lookups and comparisons. For example:",
        "output": "The usual approach is to uppercase the strings or lower case them for the lookups and comparisons.",
        "answer": "The usual approach is to uppercase the strings or lower case them for the lookups and comparisons. For example:",
        "summary": "The usual approach is to uppercase the strings or lower case them for the lookups and comparisons."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you install Big Cat Scripts (http://www.ranchero.com/bigcat/) you can add your own contextual menu (right click) items. I don't think it comes with an Open Terminal Here applescript but I use this script (which I don't honestly remember if I wrote myself, or lifted from someone else's example): Similar scripts can also get you the complete path to a file on right-click, which is even more useful, I find.",
        "output": "I don't think it comes with an Open Terminal Here applescript but I use this script (which I don't honestly remember if I wrote myself, or lifted from someone else's example):",
        "answer": "If you install Big Cat Scripts (http://www.ranchero.com/bigcat/) you can add your own contextual menu (right click) items. I don't think it comes with an Open Terminal Here applescript but I use this script (which I don't honestly remember if I wrote myself, or lifted from someone else's example): Similar scripts can also get you the complete path to a file on right-click, which is even more useful, I find.",
        "summary": "I don't think it comes with an Open Terminal Here applescript but I use this script (which I don't honestly remember if I wrote myself, or lifted from someone else's example):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Paraphrased from Brian Button: They are generally used as a global instance, why is that so bad? Because you hide the dependencies of your application in your code, instead of exposing them through the interfaces. Making something global to avoid passing it around is a code smell. They violate the single responsibility principle: by virtue of the fact that they control their own creation and lifecycle. They inherently cause code to be tightly coupled. This makes faking them out under test rather difficult in many cases. They carry state around for the lifetime of the application. Another hit to testing since you can end up with a situation where tests need to be ordered which is a big no no for unit tests. Why? Because each unit test should be independent from the other.",
        "output": "Because you hide the dependencies of your application in your code, instead of exposing them through the interfaces. They violate the single responsibility principle: by virtue of the fact that they control their own creation and lifecycle. They inherently cause code to be tightly coupled. They carry state around for the lifetime of the application.",
        "answer": "Paraphrased from Brian Button: They are generally used as a global instance, why is that so bad? Because you hide the dependencies of your application in your code, instead of exposing them through the interfaces. Making something global to avoid passing it around is a code smell. They violate the single responsibility principle: by virtue of the fact that they control their own creation and lifecycle. They inherently cause code to be tightly coupled. This makes faking them out under test rather difficult in many cases. They carry state around for the lifetime of the application. Another hit to testing since you can end up with a situation where tests need to be ordered which is a big no no for unit tests. Why? Because each unit test should be independent from the other.",
        "summary": "Because you hide the dependencies of your application in your code, instead of exposing them through the interfaces. They violate the single responsibility principle: by virtue of the fact that they control their own creation and lifecycle. They inherently cause code to be tightly coupled. They carry state around for the lifetime of the application."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The function you are looking for is often called the \"sideways sum\" or \"population count\" of a binary number. Knuth discusses it in pre-Fascicle 1A, pp11-12 (although there was a brief reference in Volume 2, 4.6.3-(7).) The locus classicus is Peter Wegner's article \"A Technique for Counting Ones in a Binary Computer\", from the Communications of the ACM, Volume 3 (1960) Number 5, page 322. He gives two different algorithms there, one optimized for numbers expected to be \"sparse\" (i.e., have a small number of ones) and one for the opposite case.",
        "output": "The function you are looking for is often called the \"sideways sum\" or \"population count\" of a binary number.",
        "answer": "The function you are looking for is often called the \"sideways sum\" or \"population count\" of a binary number. Knuth discusses it in pre-Fascicle 1A, pp11-12 (although there was a brief reference in Volume 2, 4.6.3-(7).) The locus classicus is Peter Wegner's article \"A Technique for Counting Ones in a Binary Computer\", from the Communications of the ACM, Volume 3 (1960) Number 5, page 322. He gives two different algorithms there, one optimized for numbers expected to be \"sparse\" (i.e., have a small number of ones) and one for the opposite case.",
        "summary": "The function you are looking for is often called the \"sideways sum\" or \"population count\" of a binary number."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use <code>cin.get();</code> or <code>cin.ignore();</code> just before your return statement to avoid the console window from closing.",
        "output": "You can use <code>cin.get();</code> or <code>cin.ignore();</code> just before your return statement to avoid the console window from closing.",
        "answer": "You can use <code>cin.get();</code> or <code>cin.ignore();</code> just before your return statement to avoid the console window from closing.",
        "summary": "You can use <code>cin.get();</code> or <code>cin.ignore();</code> just before your return statement to avoid the console window from closing."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Linux or UNIX: In Windows, see this Stackoverflow discussion: How to measure execution time of command in windows command line?",
        "output": "In Linux or UNIX: In Windows, see this Stackoverflow discussion: How to measure execution time of command in windows command line?",
        "answer": "In Linux or UNIX: In Windows, see this Stackoverflow discussion: How to measure execution time of command in windows command line?",
        "summary": "In Linux or UNIX: In Windows, see this Stackoverflow discussion: How to measure execution time of command in windows command line?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I do the following: Works every time. :)",
        "output": "I do the following:",
        "answer": "I do the following: Works every time. :)",
        "summary": "I do the following:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's producing enumerable sequence. What it does is actually creating local IEnumerable sequence and returning it as a method result",
        "output": "What it does is actually creating local IEnumerable sequence and returning it as a method result",
        "answer": "It's producing enumerable sequence. What it does is actually creating local IEnumerable sequence and returning it as a method result",
        "summary": "What it does is actually creating local IEnumerable sequence and returning it as a method result"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Microsoft's SSL Diagnostics Tool may be able to help identify the issue. <strong>UPDATE</strong> the link has been fixed now.",
        "output": "Microsoft's SSL Diagnostics Tool may be able to help identify the issue.",
        "answer": "Microsoft's SSL Diagnostics Tool may be able to help identify the issue. <strong>UPDATE</strong> the link has been fixed now.",
        "summary": "Microsoft's SSL Diagnostics Tool may be able to help identify the issue."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For textual output you can try: or: or: here's  a graphviz alias for drawing the DAG graph. I personally use <code>gitx</code>, <code>gitk --all</code> and <code>gitnub</code>.",
        "output": "For textual output you can try: or: or: here's",
        "answer": "For textual output you can try: or: or: here's  a graphviz alias for drawing the DAG graph. I personally use <code>gitx</code>, <code>gitk --all</code> and <code>gitnub</code>.",
        "summary": "For textual output you can try: or: or: here's"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n or shorthand for vim modeline:",
        "output": "or shorthand for vim modeline:",
        "answer": "or shorthand for vim modeline:",
        "summary": "or shorthand for vim modeline:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Add a second <code>});</code>. When properly indented, your code reads You never closed the outer <code>$(function() {</code>.",
        "output": "Add a second <code>});</code>. You never closed the outer <code>$(function() {</code>.",
        "answer": "Add a second <code>});</code>. When properly indented, your code reads You never closed the outer <code>$(function() {</code>.",
        "summary": "Add a second <code>});</code>. You never closed the outer <code>$(function() {</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is not possible to create an interface that defines constructors, but it <strong>is</strong> possible to define an interface that forces a type to have a paramerterless constructor, though be it a very ugly syntax that uses generics... I am actually not so sure that it is really a good coding pattern. BIGBLOCK On the other hand, if you want to test if a type has a paramerterless constructor, you can do that using reflection: BIGBLOCK Hope this helps.",
        "output": "It is not possible to create an interface that defines constructors, but it <strong>is</strong> possible to define an interface that forces a type to have a paramerterless constructor, though be it a very ugly syntax that uses generics... BIGBLOCK On the other hand, if you want to test if a type has a paramerterless constructor, you can do that using reflection: BIGBLOCK",
        "answer": "It is not possible to create an interface that defines constructors, but it <strong>is</strong> possible to define an interface that forces a type to have a paramerterless constructor, though be it a very ugly syntax that uses generics... I am actually not so sure that it is really a good coding pattern. BIGBLOCK On the other hand, if you want to test if a type has a paramerterless constructor, you can do that using reflection: BIGBLOCK Hope this helps.",
        "summary": "It is not possible to create an interface that defines constructors, but it <strong>is</strong> possible to define an interface that forces a type to have a paramerterless constructor, though be it a very ugly syntax that uses generics... BIGBLOCK On the other hand, if you want to test if a type has a paramerterless constructor, you can do that using reflection: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You declared them, but not initialized.",
        "output": "You declared them, but not initialized.",
        "answer": "You declared them, but not initialized.",
        "summary": "You declared them, but not initialized."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From what I've read, this error means that you're not referencing the table name correctly. One common reason is that the table is defined with a mixed-case spelling, and you're trying to query it with all lower-case. In other words, the following fails: Use double-quotes to delimit identifiers so you can use the specific mixed-case spelling as the table is defined. Re your comment, you can add a schema to the \"search_path\" so that when you reference a table name without qualifying its schema, the query will match that table name by checked each schema in order. Just like <code>PATH</code> in the shell or <code>include_path</code> in PHP, etc. You can check your current schema search path: You can change your schema search path: See also http://www.postgresql.org/docs/8.3/static/ddl-schemas.html",
        "output": "One common reason is that the table is defined with a mixed-case spelling, and you're trying to query it with all lower-case. Use double-quotes to delimit identifiers so you can use the specific mixed-case spelling as the table is defined. Re your comment, you can add a schema to the \"search_path\" so that when you reference a table name without qualifying its schema, the query will match that table name by checked each schema in order. You can check your current schema search path: You can change your schema search path:",
        "answer": "From what I've read, this error means that you're not referencing the table name correctly. One common reason is that the table is defined with a mixed-case spelling, and you're trying to query it with all lower-case. In other words, the following fails: Use double-quotes to delimit identifiers so you can use the specific mixed-case spelling as the table is defined. Re your comment, you can add a schema to the \"search_path\" so that when you reference a table name without qualifying its schema, the query will match that table name by checked each schema in order. Just like <code>PATH</code> in the shell or <code>include_path</code> in PHP, etc. You can check your current schema search path: You can change your schema search path: See also http://www.postgresql.org/docs/8.3/static/ddl-schemas.html",
        "summary": "One common reason is that the table is defined with a mixed-case spelling, and you're trying to query it with all lower-case. Use double-quotes to delimit identifiers so you can use the specific mixed-case spelling as the table is defined. Re your comment, you can add a schema to the \"search_path\" so that when you reference a table name without qualifying its schema, the query will match that table name by checked each schema in order. You can check your current schema search path: You can change your schema search path:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Hmm. See here:  Access Modifiers. In a nutshell: Public gives the method or type complete visibility from other types/classes. Private allows only the type containing the private method/variable access to the private method/variable (note that nested classes  also have access to the containing classes private methods/variables). Protected is similar to private except derived classes can also access protected methods. \"Nothing\" is VB.NET's equivalent to null. Although if you're referring to \"nothing\" meaning \"no access modifier\", then it depends, although a very rough rule of thumb (certainly in C#) is that if you don't explicitly specify an access modifier, the method/variable declaration is usually as <em>restricted</em> as it can be.i.e. is effectively the same as: The linked MSDN article will offer a fully description when there's no access modifier explicitly specified.",
        "output": "In a nutshell: Public gives the method or type complete visibility from other types/classes. Private allows only the type containing the private method/variable access to the private method/variable (note that nested classes  also have access to the containing classes private methods/variables). Protected is similar to private except derived classes can also access protected methods. \"Nothing\" is VB.NET's equivalent to null.",
        "answer": "Hmm. See here:  Access Modifiers. In a nutshell: Public gives the method or type complete visibility from other types/classes. Private allows only the type containing the private method/variable access to the private method/variable (note that nested classes  also have access to the containing classes private methods/variables). Protected is similar to private except derived classes can also access protected methods. \"Nothing\" is VB.NET's equivalent to null. Although if you're referring to \"nothing\" meaning \"no access modifier\", then it depends, although a very rough rule of thumb (certainly in C#) is that if you don't explicitly specify an access modifier, the method/variable declaration is usually as <em>restricted</em> as it can be.i.e. is effectively the same as: The linked MSDN article will offer a fully description when there's no access modifier explicitly specified.",
        "summary": "In a nutshell: Public gives the method or type complete visibility from other types/classes. Private allows only the type containing the private method/variable access to the private method/variable (note that nested classes  also have access to the containing classes private methods/variables). Protected is similar to private except derived classes can also access protected methods. \"Nothing\" is VB.NET's equivalent to null."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is an example without a parameter: http://en.csharp-online.net/CSharp_FAQ:_How_call_a_method_using_a_name_string with params: http://www.daniweb.com/forums/thread98148.html# you basically pass in an array of objects along with name of method. you then use both with the Invoke method. params Object[] parameters",
        "output": "you basically pass in an array of objects along with name of method. you then use both with the Invoke method.",
        "answer": "Here is an example without a parameter: http://en.csharp-online.net/CSharp_FAQ:_How_call_a_method_using_a_name_string with params: http://www.daniweb.com/forums/thread98148.html# you basically pass in an array of objects along with name of method. you then use both with the Invoke method. params Object[] parameters",
        "summary": "you basically pass in an array of objects along with name of method. you then use both with the Invoke method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An index is used to speed up the performance of queries. It does this by reducing the number of database data pages that have to be visited/scanned. In SQL Server, a clustered index determines the physical order of data in a table. There can be only one clustered index per table (the clustered index IS the table). All other indexes on a table are termed non-clustered. SQL Server Index Basics SQL Server Indexes: The Basics SQL Server Indexes Index Basics Index (wiki)",
        "output": "An index is used to speed up the performance of queries. It does this by reducing the number of database data pages that have to be visited/scanned.",
        "answer": "An index is used to speed up the performance of queries. It does this by reducing the number of database data pages that have to be visited/scanned. In SQL Server, a clustered index determines the physical order of data in a table. There can be only one clustered index per table (the clustered index IS the table). All other indexes on a table are termed non-clustered. SQL Server Index Basics SQL Server Indexes: The Basics SQL Server Indexes Index Basics Index (wiki)",
        "summary": "An index is used to speed up the performance of queries. It does this by reducing the number of database data pages that have to be visited/scanned."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try An undefined variable cannot be referred directly. However, all global variables are attributes of the same name of the global context (<code>window</code> in case of browsers), and accessing an undefined attribute is fine. Or use <code>if (typeof console === 'undefined') console = ...</code> if you want to avoid the magic variable <code>window</code>, see @Tim Down's answer.",
        "output": "An undefined variable cannot be referred directly. However, all global variables are attributes of the same name of the global context (<code>window</code> in case of browsers), and accessing an undefined attribute is fine. Or use <code>if (typeof console === 'undefined') console = ...</code> if you want to avoid the magic variable <code>window</code>, see @Tim Down's answer.",
        "answer": "Try An undefined variable cannot be referred directly. However, all global variables are attributes of the same name of the global context (<code>window</code> in case of browsers), and accessing an undefined attribute is fine. Or use <code>if (typeof console === 'undefined') console = ...</code> if you want to avoid the magic variable <code>window</code>, see @Tim Down's answer.",
        "summary": "An undefined variable cannot be referred directly. However, all global variables are attributes of the same name of the global context (<code>window</code> in case of browsers), and accessing an undefined attribute is fine. Or use <code>if (typeof console === 'undefined') console = ...</code> if you want to avoid the magic variable <code>window</code>, see @Tim Down's answer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>. this can be very useful if you need to check this on large number of elements.",
        "output": "some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>.",
        "answer": "some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>. this can be very useful if you need to check this on large number of elements.",
        "summary": "some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK There's also a shorthand: BIGBLOCK Note that Microsoft's style guidelines for .Net now specifically recommend against using hungarian type prefixes for variables. Instead of \"strDetail\", for example, you should just use \"Detail\".",
        "output": "BIGBLOCK There's also a shorthand: BIGBLOCK Note that Microsoft's style guidelines for .Net now specifically recommend against using hungarian type prefixes for variables.",
        "answer": "BIGBLOCK There's also a shorthand: BIGBLOCK Note that Microsoft's style guidelines for .Net now specifically recommend against using hungarian type prefixes for variables. Instead of \"strDetail\", for example, you should just use \"Detail\".",
        "summary": "BIGBLOCK There's also a shorthand: BIGBLOCK Note that Microsoft's style guidelines for .Net now specifically recommend against using hungarian type prefixes for variables."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you are into brackets - I picked up a book on Erlang :)",
        "output": "If you are into brackets - I picked up a book on Erlang :)",
        "answer": "If you are into brackets - I picked up a book on Erlang :)",
        "summary": "If you are into brackets - I picked up a book on Erlang :)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In 99% of the cases the answer is NOT to implement any timeout logic. Timeout logic is in nearly any situation a red warning sign that something <em>else</em> is wrong and should be fixed <em>instead</em>. Is your process hanging or breaking after n seconds sometimes? Then find out why and fix that instead. As an aside, to do strager's solution right, you need to use wait \"$SPID\" instead of fg 1, since in scripts you don't have job control (and trying to turn it on is stupid). Moreover, fg 1 relies on the fact that you didn't start any other jobs previously in the script which is a bad assumption to make.",
        "output": "In 99% of the cases the answer is NOT to implement any timeout logic. Timeout logic is in nearly any situation a red warning sign that something <em>else</em> is wrong and should be fixed <em>instead</em>.",
        "answer": "In 99% of the cases the answer is NOT to implement any timeout logic. Timeout logic is in nearly any situation a red warning sign that something <em>else</em> is wrong and should be fixed <em>instead</em>. Is your process hanging or breaking after n seconds sometimes? Then find out why and fix that instead. As an aside, to do strager's solution right, you need to use wait \"$SPID\" instead of fg 1, since in scripts you don't have job control (and trying to turn it on is stupid). Moreover, fg 1 relies on the fact that you didn't start any other jobs previously in the script which is a bad assumption to make.",
        "summary": "In 99% of the cases the answer is NOT to implement any timeout logic. Timeout logic is in nearly any situation a red warning sign that something <em>else</em> is wrong and should be fixed <em>instead</em>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I created a bundle with 3 apps for the finder toolbar. The other two apps do: open Textmate with the current selection open GitX with the current folder For more information see here: http://nslog.de/posts/71",
        "output": "I created a bundle with 3 apps for the finder toolbar.",
        "answer": "I created a bundle with 3 apps for the finder toolbar. The other two apps do: open Textmate with the current selection open GitX with the current folder For more information see here: http://nslog.de/posts/71",
        "summary": "I created a bundle with 3 apps for the finder toolbar."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You won't find an equivalent of LINQ unless you use the javacc to create your own equivalent. Until that day when someone finds a viable way to do so, there are some good alternatives, such as <li>jOOQ: http://www.jooq.org <li>JINQ: http://www.jinq.org <li>JaQue: http://github.com/TrigerSoft/jaque <li>JaQu: http://www.h2database.com/html/jaqu.html <li>Linq4j: https://github.com/julianhyde/linq4j <li>Quaere: http://quaere.codehaus.org/ <li>QueryDSL: http://www.querydsl.com <li>JSR-341: http://java.net/projects/el-spec/pages/CollectionOperations",
        "output": "You won't find an equivalent of LINQ unless you use the javacc to create your own equivalent. Until that day when someone finds a viable way to do so, there are some good alternatives, such as <li>jOOQ: http://www.jooq.org <li>JINQ: http://www.jinq.org <li>JaQue: http://github.com/TrigerSoft/jaque <li>JaQu: http://www.h2database.com/html/jaqu.html <li>Linq4j: https://github.com/julianhyde/linq4j <li>Quaere: http://quaere.codehaus.org/ <li>QueryDSL: http://www.querydsl.com <li>JSR-341: http://java.net/projects/el-spec/pages/CollectionOperations",
        "answer": "You won't find an equivalent of LINQ unless you use the javacc to create your own equivalent. Until that day when someone finds a viable way to do so, there are some good alternatives, such as <li>jOOQ: http://www.jooq.org <li>JINQ: http://www.jinq.org <li>JaQue: http://github.com/TrigerSoft/jaque <li>JaQu: http://www.h2database.com/html/jaqu.html <li>Linq4j: https://github.com/julianhyde/linq4j <li>Quaere: http://quaere.codehaus.org/ <li>QueryDSL: http://www.querydsl.com <li>JSR-341: http://java.net/projects/el-spec/pages/CollectionOperations",
        "summary": "You won't find an equivalent of LINQ unless you use the javacc to create your own equivalent. Until that day when someone finds a viable way to do so, there are some good alternatives, such as <li>jOOQ: http://www.jooq.org <li>JINQ: http://www.jinq.org <li>JaQue: http://github.com/TrigerSoft/jaque <li>JaQu: http://www.h2database.com/html/jaqu.html <li>Linq4j: https://github.com/julianhyde/linq4j <li>Quaere: http://quaere.codehaus.org/ <li>QueryDSL: http://www.querydsl.com <li>JSR-341: http://java.net/projects/el-spec/pages/CollectionOperations"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An index is used to speed up searching in the database. MySQL have some good documentation on the subject (which is relevant for other SQL servers as well): http://dev.mysql.com/doc/refman/5.0/en/mysql-indexes.html An index can be used to efficiently find all rows matching some column in your query and then walk through only that subset of the table to find exact matches. If you don't have indexes on any column in the <code>WHERE</code> clause, the <code>SQL</code> server have to walk through the whole table and check every row to see if it matches, which may be a slow operation on big tables. The index can also be a <code>UNIQUE</code> index, which means that you cannot have duplicate values in that column, or a <code>PRIMARY KEY</code> which in some storage engines defines where in the database file the value is stored. In MySQL you can use <code>EXPLAIN</code> in front of your <code>SELECT</code> statement to see if your query will make use of any index. This is a good start for troubleshooting performance problems. Read more here: http://dev.mysql.com/doc/refman/5.0/en/explain.html",
        "output": "An index is used to speed up searching in the database. An index can be used to efficiently find all rows matching some column in your query and then walk through only that subset of the table to find exact matches.",
        "answer": "An index is used to speed up searching in the database. MySQL have some good documentation on the subject (which is relevant for other SQL servers as well): http://dev.mysql.com/doc/refman/5.0/en/mysql-indexes.html An index can be used to efficiently find all rows matching some column in your query and then walk through only that subset of the table to find exact matches. If you don't have indexes on any column in the <code>WHERE</code> clause, the <code>SQL</code> server have to walk through the whole table and check every row to see if it matches, which may be a slow operation on big tables. The index can also be a <code>UNIQUE</code> index, which means that you cannot have duplicate values in that column, or a <code>PRIMARY KEY</code> which in some storage engines defines where in the database file the value is stored. In MySQL you can use <code>EXPLAIN</code> in front of your <code>SELECT</code> statement to see if your query will make use of any index. This is a good start for troubleshooting performance problems. Read more here: http://dev.mysql.com/doc/refman/5.0/en/explain.html",
        "summary": "An index is used to speed up searching in the database. An index can be used to efficiently find all rows matching some column in your query and then walk through only that subset of the table to find exact matches."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's not a jQuery feature but a feature for debugging purposes. You can for instance log something to the console when something happens. For instance: You'd then see <code>#someButton was clicked</code> in FirebugÃ©ÂÂ¥Ã¦ÂªÂ Ã©ÂÂ¥Ã¦Â·ÂonsoleÃ©Â?tab (or another toolÃ©ÂÂ¥Ã¦ÂªÂ console Ã©Â?e.g. ChromeÃ©ÂÂ¥Ã¦ÂªÂ Web Inspector) when you would click the button. For some reasons, the console object could be unavailable. Then you could check if it is - this is useful as you don't have to remove your debugging code when you deploy to production:",
        "output": "It's not a jQuery feature but a feature for debugging purposes.",
        "answer": "It's not a jQuery feature but a feature for debugging purposes. You can for instance log something to the console when something happens. For instance: You'd then see <code>#someButton was clicked</code> in FirebugÃ©ÂÂ¥Ã¦ÂªÂ Ã©ÂÂ¥Ã¦Â·ÂonsoleÃ©Â?tab (or another toolÃ©ÂÂ¥Ã¦ÂªÂ console Ã©Â?e.g. ChromeÃ©ÂÂ¥Ã¦ÂªÂ Web Inspector) when you would click the button. For some reasons, the console object could be unavailable. Then you could check if it is - this is useful as you don't have to remove your debugging code when you deploy to production:",
        "summary": "It's not a jQuery feature but a feature for debugging purposes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like adding functions to jQuery so this function would help: Now we can just write: Demo: Fiddle (with added parameter)",
        "output": "I like adding functions to jQuery so this function would help:",
        "answer": "I like adding functions to jQuery so this function would help: Now we can just write: Demo: Fiddle (with added parameter)",
        "summary": "I like adding functions to jQuery so this function would help:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Model-View-Presenter In MVP, the Presenter contains the UI business logic for the View. All invocations from the View delegate directly to Presenter. The Presenter is also decoupled directly from the View and talks to it through an interface. This is to allow mocking of the View in a unit test. One common attribute of MVP is that there has to be a lot of two-way dispatching. For example, when someone clicks the \"Save\" button, the event handler delegates to the Presenter's \"OnSave\" method. Once the save is completed, the Presenter will then call back the View through its interface so that the View can display that the save has completed. MVP tends to be a very natural pattern for achieving separated presentation in Web Forms. The reason is that the View is always created first by the ASP.NET runtime. You can find out more about both variants. Two primary variations Passive View: The View is as dumb as possible and contains almost zero logic. The Presenter is a middle man that talks to the View and the Model. The View and Model are completely shielded from one another. The Model may raise events, but the Presenter subscribes to them for updating the View. In Passive View there is no direct data binding, instead the View exposes setter properties which the Presenter uses to set the data. All state is managed in the Presenter and not the View. Pro: maximum testability surface; clean separation of the View and Model Con: more work (for example all the setter properties) as you are doing all the data binding yourself. Supervising Controller: The Presenter handles user gestures. The View binds to the Model directly through data binding. In this case it's the Presenter's job to pass off the Model to the View so that it can bind to it. The Presenter will also contain logic for gestures like pressing a button, navigation, etc. Pro: by leveraging databinding the amount of code is reduced. Con: there's less testable surface (because of data binding), and there's less encapsulation in the View since it talks directly to the Model. Model-View-Controller In the MVC, the Controller is responsible for determining which View to display in response to any action including when the application loads. This differs from MVP where actions route through the View to the Presenter. In MVC, every action in the View correlates with a call to a Controller along with an action. In the web each action involves a call to a URL on the other side of which there is a Controller who responds. Once that Controller has completed its processing, it will return the correct View. The sequence continues in that manner throughout the life of the application: One other big difference about MVC is that the View does not directly bind to the Model. The view simply renders, and is completely stateless. In implementations of MVC the View usually will not have any logic in the code behind. This is contrary to MVP where it is absolutely necessary because, if the View does not delegate to the Presenter, it will never get called. Presentation Model One other pattern to look at is the Presentation Model pattern. In this pattern there is no Presenter. Instead the View binds directly to a Presentation Model. The Presentation Model is a Model crafted specifically for the View. This means this Model can expose properties that one would never put on a domain model as it would be a violation of separation-of-concerns. In this case, the Presentation Model binds to the domain model, and may subscribe to events coming from that Model. The View then subscribes to events coming from the Presentation Model and updates itself accordingly. The Presentation Model can expose commands which the view uses for invoking actions. The advantage of this approach is that you can essentially remove the code-behind altogether as the PM completely encapsulates all of the behaviour for the view. This pattern is a very strong candidate for use in WPF applications and is also called Model-View-ViewModel. There is a MSDN article about the Presentation Model and a section in the Composite Application Guidance for WPF (former Prism) about Separated Presentation Patterns",
        "output": "In MVP, the Presenter contains the UI business logic for the View. In the MVC, the Controller is responsible for determining which View to display in response to any action including when the application loads.",
        "answer": "Model-View-Presenter In MVP, the Presenter contains the UI business logic for the View. All invocations from the View delegate directly to Presenter. The Presenter is also decoupled directly from the View and talks to it through an interface. This is to allow mocking of the View in a unit test. One common attribute of MVP is that there has to be a lot of two-way dispatching. For example, when someone clicks the \"Save\" button, the event handler delegates to the Presenter's \"OnSave\" method. Once the save is completed, the Presenter will then call back the View through its interface so that the View can display that the save has completed. MVP tends to be a very natural pattern for achieving separated presentation in Web Forms. The reason is that the View is always created first by the ASP.NET runtime. You can find out more about both variants. Two primary variations Passive View: The View is as dumb as possible and contains almost zero logic. The Presenter is a middle man that talks to the View and the Model. The View and Model are completely shielded from one another. The Model may raise events, but the Presenter subscribes to them for updating the View. In Passive View there is no direct data binding, instead the View exposes setter properties which the Presenter uses to set the data. All state is managed in the Presenter and not the View. Pro: maximum testability surface; clean separation of the View and Model Con: more work (for example all the setter properties) as you are doing all the data binding yourself. Supervising Controller: The Presenter handles user gestures. The View binds to the Model directly through data binding. In this case it's the Presenter's job to pass off the Model to the View so that it can bind to it. The Presenter will also contain logic for gestures like pressing a button, navigation, etc. Pro: by leveraging databinding the amount of code is reduced. Con: there's less testable surface (because of data binding), and there's less encapsulation in the View since it talks directly to the Model. Model-View-Controller In the MVC, the Controller is responsible for determining which View to display in response to any action including when the application loads. This differs from MVP where actions route through the View to the Presenter. In MVC, every action in the View correlates with a call to a Controller along with an action. In the web each action involves a call to a URL on the other side of which there is a Controller who responds. Once that Controller has completed its processing, it will return the correct View. The sequence continues in that manner throughout the life of the application: One other big difference about MVC is that the View does not directly bind to the Model. The view simply renders, and is completely stateless. In implementations of MVC the View usually will not have any logic in the code behind. This is contrary to MVP where it is absolutely necessary because, if the View does not delegate to the Presenter, it will never get called. Presentation Model One other pattern to look at is the Presentation Model pattern. In this pattern there is no Presenter. Instead the View binds directly to a Presentation Model. The Presentation Model is a Model crafted specifically for the View. This means this Model can expose properties that one would never put on a domain model as it would be a violation of separation-of-concerns. In this case, the Presentation Model binds to the domain model, and may subscribe to events coming from that Model. The View then subscribes to events coming from the Presentation Model and updates itself accordingly. The Presentation Model can expose commands which the view uses for invoking actions. The advantage of this approach is that you can essentially remove the code-behind altogether as the PM completely encapsulates all of the behaviour for the view. This pattern is a very strong candidate for use in WPF applications and is also called Model-View-ViewModel. There is a MSDN article about the Presentation Model and a section in the Composite Application Guidance for WPF (former Prism) about Separated Presentation Patterns",
        "summary": "In MVP, the Presenter contains the UI business logic for the View. In the MVC, the Controller is responsible for determining which View to display in response to any action including when the application loads."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I don't know about a direct tool, but maybe you can hack a script to export the data into dot format and render it with graphviz.",
        "output": "I don't know about a direct tool, but maybe you can hack a script to export the data into dot format and render it with graphviz.",
        "answer": "I don't know about a direct tool, but maybe you can hack a script to export the data into dot format and render it with graphviz.",
        "summary": "I don't know about a direct tool, but maybe you can hack a script to export the data into dot format and render it with graphviz."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>GET</code> and <code>POST</code> are two different types of HTTP requests. According to Wikipedia: GET requests a representation of the specified resource. Note that GET should not be used for operations that cause side-effects, such as using it for taking actions in web applications. One reason for this is that GET may be used arbitrarily by robots or crawlers, which should not need to consider the side effects that a request should cause. and POST submits data to be processed (e.g., from an HTML form) to the identified resource. The data is included in the body of the request. This may result in the creation of a new resource or the updates of existing resources or both. So essentially <code>GET</code> is used to retrieve remote data, and <code>POST</code> is used to insert/update remote data. HTTP/1.1 specification (RFC 2616) section 9 Method Definitions contains more information on <code>GET</code> and <code>POST</code> as well as the other HTTP methods, if you are interested. In addition to explaining the intended uses of each method, the spec also provides at least one practical reason for why <code>GET</code> should only be used to retrieve data: Authors of services which use the HTTP protocol SHOULD NOT use GET based forms for the submission of sensitive data, because this will cause this data to be encoded in the Request-URI. Many existing servers, proxies, and user agents will log the request URI in some place where it might be visible to third parties. Servers can use POST-based form submission instead Finally, an important consideration when using <code>GET</code> for AJAX requests is that some browsers - IE in particular - will cache the results of a <code>GET</code> request. So if you, for example, poll using the same <code>GET</code> request you will always get back the same results, even if the data you are querying is being updated server-side. One way to alleviate this problem is to make the URL unique for each request by appending a timestamp.",
        "output": "GET requests a representation of the specified resource. Note that GET should not be used for operations that cause side-effects, such as using it for taking actions in web applications. One reason for this is that GET may be used arbitrarily by robots or crawlers, which should not need to consider the side effects that a request should cause. POST submits data to be processed (e.g., from an HTML form) to the identified resource. The data is included in the body of the request. So essentially <code>GET</code> is used to retrieve remote data, and <code>POST</code> is used to insert/update remote data. Authors of services which use the HTTP protocol SHOULD NOT use GET based forms for the submission of sensitive data, because this will cause this data to be encoded in the Request-URI. Finally, an important consideration when using <code>GET</code> for AJAX requests is that some browsers - IE in particular - will cache the results of a <code>GET</code> request.",
        "answer": "<code>GET</code> and <code>POST</code> are two different types of HTTP requests. According to Wikipedia: GET requests a representation of the specified resource. Note that GET should not be used for operations that cause side-effects, such as using it for taking actions in web applications. One reason for this is that GET may be used arbitrarily by robots or crawlers, which should not need to consider the side effects that a request should cause. and POST submits data to be processed (e.g., from an HTML form) to the identified resource. The data is included in the body of the request. This may result in the creation of a new resource or the updates of existing resources or both. So essentially <code>GET</code> is used to retrieve remote data, and <code>POST</code> is used to insert/update remote data. HTTP/1.1 specification (RFC 2616) section 9 Method Definitions contains more information on <code>GET</code> and <code>POST</code> as well as the other HTTP methods, if you are interested. In addition to explaining the intended uses of each method, the spec also provides at least one practical reason for why <code>GET</code> should only be used to retrieve data: Authors of services which use the HTTP protocol SHOULD NOT use GET based forms for the submission of sensitive data, because this will cause this data to be encoded in the Request-URI. Many existing servers, proxies, and user agents will log the request URI in some place where it might be visible to third parties. Servers can use POST-based form submission instead Finally, an important consideration when using <code>GET</code> for AJAX requests is that some browsers - IE in particular - will cache the results of a <code>GET</code> request. So if you, for example, poll using the same <code>GET</code> request you will always get back the same results, even if the data you are querying is being updated server-side. One way to alleviate this problem is to make the URL unique for each request by appending a timestamp.",
        "summary": "GET requests a representation of the specified resource. Note that GET should not be used for operations that cause side-effects, such as using it for taking actions in web applications. One reason for this is that GET may be used arbitrarily by robots or crawlers, which should not need to consider the side effects that a request should cause. POST submits data to be processed (e.g., from an HTML form) to the identified resource. The data is included in the body of the request. So essentially <code>GET</code> is used to retrieve remote data, and <code>POST</code> is used to insert/update remote data. Authors of services which use the HTTP protocol SHOULD NOT use GET based forms for the submission of sensitive data, because this will cause this data to be encoded in the Request-URI. Finally, an important consideration when using <code>GET</code> for AJAX requests is that some browsers - IE in particular - will cache the results of a <code>GET</code> request."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like Cohens answer, but a more technical definition is: Your code calls a library. <strong>A framework calls your code</strong>. For example a GUI framework calls your code through event-handlers. A web framework calls your code through some request-response model. This is also called <em>inversion of control</em> - suddenly the framework decides when and how to execute you code rather than the other way around as with libraries. This means that a framework also have a much larger impact on how you have to structure your code.",
        "output": "I like Cohens answer, but a more technical definition is: Your code calls a library. <strong>A framework calls your code</strong>. This means that a framework also have a much larger impact on how you have to structure your code.",
        "answer": "I like Cohens answer, but a more technical definition is: Your code calls a library. <strong>A framework calls your code</strong>. For example a GUI framework calls your code through event-handlers. A web framework calls your code through some request-response model. This is also called <em>inversion of control</em> - suddenly the framework decides when and how to execute you code rather than the other way around as with libraries. This means that a framework also have a much larger impact on how you have to structure your code.",
        "summary": "I like Cohens answer, but a more technical definition is: Your code calls a library. <strong>A framework calls your code</strong>. This means that a framework also have a much larger impact on how you have to structure your code."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As stated above, the lambda operator in Python defines an anonymous function, and in Python functions are closures. It is important not to confuse the concept of closures with the operator lambda, which is merely syntactic methadone for them. When I started in Python a few years ago, I used lambdas a lot, thinking they were cool, along with list comprehensions. However, I wrote and have to maintain a big website written in Python, with on the order of several thousand function points. I've learnt from experience that lambdas might be OK to prototype things with, but offer nothing over inline functions (named closures) except for saving a few key-stokes, or sometimes not. Basically this boils down to several points: it is easier to read software that is explicitly written using meaningful names. Anonymous closures by definition cannot have a meaningful name, as they have no name. This brevity seems, for some reason, to also infect lambda parameters, hence we often see examples like lambda x: x+1 it is easier to reuse named closures, as they can be referred to by name more than once, when there is a name to refer to them by. it is easier to debug code that is using named closures instead of lambdas, because the name will appear in tracebacks, and around the error. That's enough reason to round them up and convert them to named closures. However, I hold two other grudges against anonymous closures. The first grudge is simply that they are just another unnecessary keyword cluttering up the language. The second grudge is deeper and on the paradigm level, i.e. I do not like that they promote a functional-programming style, because that style is less flexible than the message passing, object oriented or procedural styles, because the lambda calculus is not Turing-complete (luckily in Python, we can still break out of that restriction even inside a lambda). The reasons I feel lambdas promote this style are: There is an implicit return, i.e. they seem like they 'should' be functions. They are an alternative state-hiding mechanism to another, more explicit, more readable, more reusable and more general mechanism: methods. I try hard to write lambda-free Python, and remove lambdas on sight. I think Python would be a slightly better language without lambdas, but that's just my opinion.",
        "output": "I've learnt from experience that lambdas might be OK to prototype things with, but offer nothing over inline functions (named closures) except for saving a few key-stokes, or sometimes not.",
        "answer": "As stated above, the lambda operator in Python defines an anonymous function, and in Python functions are closures. It is important not to confuse the concept of closures with the operator lambda, which is merely syntactic methadone for them. When I started in Python a few years ago, I used lambdas a lot, thinking they were cool, along with list comprehensions. However, I wrote and have to maintain a big website written in Python, with on the order of several thousand function points. I've learnt from experience that lambdas might be OK to prototype things with, but offer nothing over inline functions (named closures) except for saving a few key-stokes, or sometimes not. Basically this boils down to several points: it is easier to read software that is explicitly written using meaningful names. Anonymous closures by definition cannot have a meaningful name, as they have no name. This brevity seems, for some reason, to also infect lambda parameters, hence we often see examples like lambda x: x+1 it is easier to reuse named closures, as they can be referred to by name more than once, when there is a name to refer to them by. it is easier to debug code that is using named closures instead of lambdas, because the name will appear in tracebacks, and around the error. That's enough reason to round them up and convert them to named closures. However, I hold two other grudges against anonymous closures. The first grudge is simply that they are just another unnecessary keyword cluttering up the language. The second grudge is deeper and on the paradigm level, i.e. I do not like that they promote a functional-programming style, because that style is less flexible than the message passing, object oriented or procedural styles, because the lambda calculus is not Turing-complete (luckily in Python, we can still break out of that restriction even inside a lambda). The reasons I feel lambdas promote this style are: There is an implicit return, i.e. they seem like they 'should' be functions. They are an alternative state-hiding mechanism to another, more explicit, more readable, more reusable and more general mechanism: methods. I try hard to write lambda-free Python, and remove lambdas on sight. I think Python would be a slightly better language without lambdas, but that's just my opinion.",
        "summary": "I've learnt from experience that lambdas might be OK to prototype things with, but offer nothing over inline functions (named closures) except for saving a few key-stokes, or sometimes not."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.",
        "output": "Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter.",
        "answer": "Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.",
        "summary": "Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n While there may be overlaps between the two (some web servers may even be used as application servers) the biggest difference IMHO is in the processing model and the session management: In Web server processing model, the focus is on handling requests; the notion of \"session\" is pretty much virtual. That  is to say that \"session\" is simulated by transferring the representation of state between client and server (hence REST) and/or serializing it to an external persistent storage (SQL Server, Memcached etc). In Application server the session is usually more explicit and often takes form of an object living in memory of the application server for the entire duration of the \"session\".",
        "output": "In Web server processing model, the focus is on handling requests; the notion of \"session\" is pretty much virtual. In Application server the session is usually more explicit and often takes form of an object living in memory of the application server for the entire duration of the \"session\".",
        "answer": "While there may be overlaps between the two (some web servers may even be used as application servers) the biggest difference IMHO is in the processing model and the session management: In Web server processing model, the focus is on handling requests; the notion of \"session\" is pretty much virtual. That  is to say that \"session\" is simulated by transferring the representation of state between client and server (hence REST) and/or serializing it to an external persistent storage (SQL Server, Memcached etc). In Application server the session is usually more explicit and often takes form of an object living in memory of the application server for the entire duration of the \"session\".",
        "summary": "In Web server processing model, the focus is on handling requests; the notion of \"session\" is pretty much virtual. In Application server the session is usually more explicit and often takes form of an object living in memory of the application server for the entire duration of the \"session\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Optimistic assumes that nothing's going to change while you're reading it. Pessimistic assumes that something will and so locks it. If it's not essential that the data is perfectly read use optimistic. You might get the odd 'dirty' read - but it's far less likely to result in deadlocks and the like. Most web applications are fine with dirty reads - on the rare occasion the data doesn't exactly tally the next reload does. For exact data operations (like in many financial transactions) use pessimistic. It's essential that the data is accurately read, with no un-shown changes - the extra locking overhead is worth it. Oh, and Microsoft SQL server defaults to page locking - basically the row you're reading and a few either side. Row locking is more accurate but much slower. It's often worth setting your transactions to read-committed or no-lock to avoid deadlocks while reading.",
        "output": "Optimistic assumes that nothing's going to change while you're reading it. Pessimistic assumes that something will and so locks it. Most web applications are fine with dirty reads - on the rare occasion the data doesn't exactly tally the next reload does. It's often worth setting your transactions to read-committed or no-lock to avoid deadlocks while reading.",
        "answer": "Optimistic assumes that nothing's going to change while you're reading it. Pessimistic assumes that something will and so locks it. If it's not essential that the data is perfectly read use optimistic. You might get the odd 'dirty' read - but it's far less likely to result in deadlocks and the like. Most web applications are fine with dirty reads - on the rare occasion the data doesn't exactly tally the next reload does. For exact data operations (like in many financial transactions) use pessimistic. It's essential that the data is accurately read, with no un-shown changes - the extra locking overhead is worth it. Oh, and Microsoft SQL server defaults to page locking - basically the row you're reading and a few either side. Row locking is more accurate but much slower. It's often worth setting your transactions to read-committed or no-lock to avoid deadlocks while reading.",
        "summary": "Optimistic assumes that nothing's going to change while you're reading it. Pessimistic assumes that something will and so locks it. Most web applications are fine with dirty reads - on the rare occasion the data doesn't exactly tally the next reload does. It's often worth setting your transactions to read-committed or no-lock to avoid deadlocks while reading."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n These articles may help: <li>Git vs. Mercurial: Please Relax (Git is MacGyver and Mercurial is James Bond) <li>The Differences Between Mercurial and Git <strong>Edit</strong>: Comparing Git and Mercurial to celebrities seems to be a trend. Here's one more: <li>Git is Wesley Snipes, Mercurial is Denzel Washington",
        "output": "These articles may help:",
        "answer": "These articles may help: <li>Git vs. Mercurial: Please Relax (Git is MacGyver and Mercurial is James Bond) <li>The Differences Between Mercurial and Git <strong>Edit</strong>: Comparing Git and Mercurial to celebrities seems to be a trend. Here's one more: <li>Git is Wesley Snipes, Mercurial is Denzel Washington",
        "summary": "These articles may help:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you check <code>Thrown</code> for <code>Common Language Runtime Exception</code> in the break when an exception window (Ctrl+Alt+E in Visual Studio), then the execution should break while you are debugging when the exception is thrown. This will probably give you some insight into what is going on.",
        "output": "If you check <code>Thrown</code> for <code>Common Language Runtime Exception</code> in the break when an exception window (Ctrl+Alt+E in Visual Studio), then the execution should break while you are debugging when the exception is thrown.",
        "answer": "If you check <code>Thrown</code> for <code>Common Language Runtime Exception</code> in the break when an exception window (Ctrl+Alt+E in Visual Studio), then the execution should break while you are debugging when the exception is thrown. This will probably give you some insight into what is going on.",
        "summary": "If you check <code>Thrown</code> for <code>Common Language Runtime Exception</code> in the break when an exception window (Ctrl+Alt+E in Visual Studio), then the execution should break while you are debugging when the exception is thrown."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here are three ways: Fake a real object: Convert the array into an object by casting it to an object: Manually convert the array into an object:",
        "output": "Fake a real object: Convert the array into an object by casting it to an object: Manually convert the array into an object:",
        "answer": "Here are three ways: Fake a real object: Convert the array into an object by casting it to an object: Manually convert the array into an object:",
        "summary": "Fake a real object: Convert the array into an object by casting it to an object: Manually convert the array into an object:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Switch to Header/Source File <li><strong>View</strong> > <strong>Switch to Header/Source File</strong> Switches between the <code>.m</code> and <code>.h</code> files.",
        "output": "Switch to Header/Source File <li><strong>View</strong> > <strong>Switch to Header/Source File</strong> Switches between the <code>.m</code> and <code>.h</code> files.",
        "answer": "Switch to Header/Source File <li><strong>View</strong> > <strong>Switch to Header/Source File</strong> Switches between the <code>.m</code> and <code>.h</code> files.",
        "summary": "Switch to Header/Source File <li><strong>View</strong> > <strong>Switch to Header/Source File</strong> Switches between the <code>.m</code> and <code>.h</code> files."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Vince Huston has these criteria, which seem reasonable to me: Singleton should be considered only if all three of the following criteria are satisfied:   Ownership of the single instance cannot be reasonably assigned   Lazy initialization is desirable   Global access is not otherwise provided for If ownership of the single instance, when and how initialization occurs, and global access are not issues, Singleton is not sufficiently interesting.",
        "output": "Singleton should be considered only if all three of the following criteria are satisfied:",
        "answer": "Vince Huston has these criteria, which seem reasonable to me: Singleton should be considered only if all three of the following criteria are satisfied:   Ownership of the single instance cannot be reasonably assigned   Lazy initialization is desirable   Global access is not otherwise provided for If ownership of the single instance, when and how initialization occurs, and global access are not issues, Singleton is not sufficiently interesting.",
        "summary": "Singleton should be considered only if all three of the following criteria are satisfied:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No need for ajax. You can create a new image element, set its source attribute and place it somewhere in the document once it has finished loading:",
        "output": "You can create a new image element, set its source attribute and place it somewhere in the document once it has finished loading:",
        "answer": "No need for ajax. You can create a new image element, set its source attribute and place it somewhere in the document once it has finished loading:",
        "summary": "You can create a new image element, set its source attribute and place it somewhere in the document once it has finished loading:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Using the join operator you can only perform equijoins. Other types of joins can be constructed using other operators. I'm not sure whether the exact join you are trying to do would be easier using these methods or by changing the where clause. Documentation on the join clause can be found here. MSDN has an article on join operations with multiple links to examples of other joins, as well.",
        "output": "Using the join operator you can only perform equijoins. Documentation on the join clause can be found here.",
        "answer": "Using the join operator you can only perform equijoins. Other types of joins can be constructed using other operators. I'm not sure whether the exact join you are trying to do would be easier using these methods or by changing the where clause. Documentation on the join clause can be found here. MSDN has an article on join operations with multiple links to examples of other joins, as well.",
        "summary": "Using the join operator you can only perform equijoins. Documentation on the join clause can be found here."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Do you need to thread this at all ? I'm wondering how big your matrices are, and whether there's any benefit in having one thread print whilst the other does the multiplication. Perhaps it would be worth measuring this time before doing the relatively complex threading work ? If you do need to thread it, I would create 'n' threads to perform the multiplication of the cells (perhaps 'n' is the number of cores available to you), and then use the ExecutorService and Future mechanism to dispatch multiple multiplications simultaneously. That way you can optimise the work based on the number of cores, and you're using the higher level Java threading tools (which should make life easier). Write the results back into a receiving matrix, and then simply print this once all your Future tasks have completed.",
        "output": "Do you need to thread this at all ? Perhaps it would be worth measuring this time before doing the relatively complex threading work ? If you do need to thread it, I would create 'n' threads to perform the multiplication of the cells (perhaps 'n' is the number of cores available to you), and then use the ExecutorService and Future mechanism to dispatch multiple multiplications simultaneously.",
        "answer": "Do you need to thread this at all ? I'm wondering how big your matrices are, and whether there's any benefit in having one thread print whilst the other does the multiplication. Perhaps it would be worth measuring this time before doing the relatively complex threading work ? If you do need to thread it, I would create 'n' threads to perform the multiplication of the cells (perhaps 'n' is the number of cores available to you), and then use the ExecutorService and Future mechanism to dispatch multiple multiplications simultaneously. That way you can optimise the work based on the number of cores, and you're using the higher level Java threading tools (which should make life easier). Write the results back into a receiving matrix, and then simply print this once all your Future tasks have completed.",
        "summary": "Do you need to thread this at all ? Perhaps it would be worth measuring this time before doing the relatively complex threading work ? If you do need to thread it, I would create 'n' threads to perform the multiplication of the cells (perhaps 'n' is the number of cores available to you), and then use the ExecutorService and Future mechanism to dispatch multiple multiplications simultaneously."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <li><code>FILL_PARENT</code> (renamed <code>MATCH_PARENT</code> inAPI Level 8 and higher), which meansthat the View wants to be as big asits parent (minus padding) <li><code>WRAP_CONTENT</code>, which means that theView wants to be just big enough toenclose its content (plus padding)",
        "output": "<li><code>FILL_PARENT</code> (renamed <code>MATCH_PARENT</code> inAPI Level 8 and higher), which meansthat the View wants to be as big asits parent (minus padding) <li><code>WRAP_CONTENT</code>, which means that theView wants to be just big enough toenclose its content (plus padding)",
        "answer": "<li><code>FILL_PARENT</code> (renamed <code>MATCH_PARENT</code> inAPI Level 8 and higher), which meansthat the View wants to be as big asits parent (minus padding) <li><code>WRAP_CONTENT</code>, which means that theView wants to be just big enough toenclose its content (plus padding)",
        "summary": "<li><code>FILL_PARENT</code> (renamed <code>MATCH_PARENT</code> inAPI Level 8 and higher), which meansthat the View wants to be as big asits parent (minus padding) <li><code>WRAP_CONTENT</code>, which means that theView wants to be just big enough toenclose its content (plus padding)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Change \"rw\" to \"w+\" Or use 'a+' for appending (not erasing existing content)",
        "output": "Change \"rw\" to \"w+\" Or use 'a+' for appending (not erasing existing content)",
        "answer": "Change \"rw\" to \"w+\" Or use 'a+' for appending (not erasing existing content)",
        "summary": "Change \"rw\" to \"w+\" Or use 'a+' for appending (not erasing existing content)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As others here have stated, you can just use full datetime objects throughout: BIGBLOCK However, I think it's worth explaining why full datetime objects are required. Consider what would happen if I added 2 hours to 11pm. What's the correct behavior? An exception, because you can't have a time larger than 11:59pm? Should it wrap back around? Different programmers will expect different things, so whichever result they picked would surprise a lot of people. Worse yet, programmers would write code that worked just fine when they tested it initially, and then have it break later by doing something unexpected. This is very bad, which is why you're not allowed to add timedelta objects to time objects.",
        "output": "As others here have stated, you can just use full datetime objects throughout: BIGBLOCK",
        "answer": "As others here have stated, you can just use full datetime objects throughout: BIGBLOCK However, I think it's worth explaining why full datetime objects are required. Consider what would happen if I added 2 hours to 11pm. What's the correct behavior? An exception, because you can't have a time larger than 11:59pm? Should it wrap back around? Different programmers will expect different things, so whichever result they picked would surprise a lot of people. Worse yet, programmers would write code that worked just fine when they tested it initially, and then have it break later by doing something unexpected. This is very bad, which is why you're not allowed to add timedelta objects to time objects.",
        "summary": "As others here have stated, you can just use full datetime objects throughout: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is implementation dependent, as the C standard does NOT define the signed-ness of <code>char</code>. Depending on the platform, char may be <code>signed</code> or <code>unsigned</code>, so you need to explicitly ask for <code>signed char</code> or <code>unsigned char</code> if your implementation depends on it. Just use <code>char</code> if you intend to represent characters from strings, as this will match what your platform puts in the string. The difference between <code>signed char</code> and <code>unsigned char</code> is as you'd expect. On most platforms, <code>signed char</code> will be an 8-bit two's complement number ranging from <code>-128</code> to <code>127</code>, and <code>unsigned char</code> will be an 8-bit unsigned integer (<code>0</code> to <code>255</code>). Note the standard does NOT require that <code>char</code> types have 8 bits, only that <code>sizeof(char)</code> return <code>1</code>. You can get at the number of bits in a char with <code>CHAR_BIT</code> in <code>limits.h</code>. There are few if any platforms today where this will be something other than <code>8</code>, though. There is a nice summary of this issue here. As others have mentioned since I posted this, you're better off using <code>int8_t</code> and <code>uint8_t</code> if you really want to represent small integers.",
        "output": "On most platforms, <code>signed char</code> will be an 8-bit two's complement number ranging from <code>-128</code> to <code>127</code>, and <code>unsigned char</code> will be an 8-bit unsigned integer (<code>0</code> to <code>255</code>).",
        "answer": "This is implementation dependent, as the C standard does NOT define the signed-ness of <code>char</code>. Depending on the platform, char may be <code>signed</code> or <code>unsigned</code>, so you need to explicitly ask for <code>signed char</code> or <code>unsigned char</code> if your implementation depends on it. Just use <code>char</code> if you intend to represent characters from strings, as this will match what your platform puts in the string. The difference between <code>signed char</code> and <code>unsigned char</code> is as you'd expect. On most platforms, <code>signed char</code> will be an 8-bit two's complement number ranging from <code>-128</code> to <code>127</code>, and <code>unsigned char</code> will be an 8-bit unsigned integer (<code>0</code> to <code>255</code>). Note the standard does NOT require that <code>char</code> types have 8 bits, only that <code>sizeof(char)</code> return <code>1</code>. You can get at the number of bits in a char with <code>CHAR_BIT</code> in <code>limits.h</code>. There are few if any platforms today where this will be something other than <code>8</code>, though. There is a nice summary of this issue here. As others have mentioned since I posted this, you're better off using <code>int8_t</code> and <code>uint8_t</code> if you really want to represent small integers.",
        "summary": "On most platforms, <code>signed char</code> will be an 8-bit two's complement number ranging from <code>-128</code> to <code>127</code>, and <code>unsigned char</code> will be an 8-bit unsigned integer (<code>0</code> to <code>255</code>)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Have you tried using to specify the location of thebase directory as well as the path to the MySQL libraries that are necessary to complete the gem installation? Sources:MySQL Gem Install ERROR: Failed to build gem native extensionMySQL Forums :: Ruby :: Help needed with installing MySQL binding for Ruby",
        "output": "Have you tried using to specify the location of thebase directory as well as the path to the MySQL libraries that are necessary to complete the gem installation?",
        "answer": "Have you tried using to specify the location of thebase directory as well as the path to the MySQL libraries that are necessary to complete the gem installation? Sources:MySQL Gem Install ERROR: Failed to build gem native extensionMySQL Forums :: Ruby :: Help needed with installing MySQL binding for Ruby",
        "summary": "Have you tried using to specify the location of thebase directory as well as the path to the MySQL libraries that are necessary to complete the gem installation?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The issue with your shallow copy is that all the objects aren't cloned. While the references to each object are unique in each array, once you ultimately grab onto it you're dealing with the same object as before. There is nothing wrong with the way you cloned it...  the same result would occur using Array.slice(). The reason your deep copy is having problems is because you're ending up with circular object references. Deep will go as deep as it can go, and if you've got a circle, it'll keep going infinitely until the browser faints. If the data structure cannot be represented as a directed acyclic graph, then I'm not sure you're going to be able to find an all-purpose method for deep cloning. Cyclic graphs provide many tricky corner cases, and since it's not a common operation I doubt anyone has written a full solution (if it's even possible - it might not be! But I have no time to try to write a rigorous proof now.). I found some good comments on the issue on this page. If you need a deep copy of an Array of Objects with circular references I believe you're going to have to code your own method to handle your specialized data structure, such that it is a multi-pass clone: <li>On round one, make a clone of all objects that don't reference other objects in the array. Keep a track of each object's origins. <li>On round two, link the objects together.",
        "output": "There is nothing wrong with the way you cloned it...  the same result would occur using Array.slice(). The reason your deep copy is having problems is because you're ending up with circular object references. If you need a deep copy of an Array of Objects with circular references I believe you're going to have to code your own method to handle your specialized data structure, such that it is a multi-pass clone: <li>On round one, make a clone of all objects that don't reference other objects in the array. <li>On round two, link the objects together.",
        "answer": "The issue with your shallow copy is that all the objects aren't cloned. While the references to each object are unique in each array, once you ultimately grab onto it you're dealing with the same object as before. There is nothing wrong with the way you cloned it...  the same result would occur using Array.slice(). The reason your deep copy is having problems is because you're ending up with circular object references. Deep will go as deep as it can go, and if you've got a circle, it'll keep going infinitely until the browser faints. If the data structure cannot be represented as a directed acyclic graph, then I'm not sure you're going to be able to find an all-purpose method for deep cloning. Cyclic graphs provide many tricky corner cases, and since it's not a common operation I doubt anyone has written a full solution (if it's even possible - it might not be! But I have no time to try to write a rigorous proof now.). I found some good comments on the issue on this page. If you need a deep copy of an Array of Objects with circular references I believe you're going to have to code your own method to handle your specialized data structure, such that it is a multi-pass clone: <li>On round one, make a clone of all objects that don't reference other objects in the array. Keep a track of each object's origins. <li>On round two, link the objects together.",
        "summary": "There is nothing wrong with the way you cloned it...  the same result would occur using Array.slice(). The reason your deep copy is having problems is because you're ending up with circular object references. If you need a deep copy of an Array of Objects with circular references I believe you're going to have to code your own method to handle your specialized data structure, such that it is a multi-pass clone: <li>On round one, make a clone of all objects that don't reference other objects in the array. <li>On round two, link the objects together."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the <code>-u</code> flag to include a username, and curl will prompt for a password: You can also include the password in the command, but then your password will be visible in bash history:",
        "output": "Use the <code>-u</code> flag to include a username, and curl will prompt for a password:",
        "answer": "Use the <code>-u</code> flag to include a username, and curl will prompt for a password: You can also include the password in the command, but then your password will be visible in bash history:",
        "summary": "Use the <code>-u</code> flag to include a username, and curl will prompt for a password:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also, try stopping \"SQL Server Reporting Services (MSSQLSERVER)\", that apparently defaults to 80. I did that and port 80 freed up. PID identified the culprit as \"System\", but apparently that System can mean multiple things.",
        "output": "Also, try stopping \"SQL Server Reporting Services (MSSQLSERVER)\", that apparently defaults to 80.",
        "answer": "Also, try stopping \"SQL Server Reporting Services (MSSQLSERVER)\", that apparently defaults to 80. I did that and port 80 freed up. PID identified the culprit as \"System\", but apparently that System can mean multiple things.",
        "summary": "Also, try stopping \"SQL Server Reporting Services (MSSQLSERVER)\", that apparently defaults to 80."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unfortunately the <code>opacity</code> element makes the whole element (including any text) semi-transparent. The best way to make the border semi-transparent is with the rgba color format. For example, this would give a red border with 50% opacity: The problem with this approach is that some browsers do not understand the <code>rgba</code> format and will not display any border at all if this is the entire declaration. The solution is to provide two border declarations. The first with a fake opacity, and the second with the actual. If a browser is capable, it will use the second, if not, it will use the first. The first border declaration will be the equivalent color to a 50% opaque red border over a white background (although any graphics under the border will not bleed through). UPDATE: I've added \"background-clip: padding-box;\" to this answer (per  SooDesuNe's suggestion in the comments) to ensure the border remains transparent even if a solid background color is applied.",
        "output": "The best way to make the border semi-transparent is with the rgba color format.",
        "answer": "Unfortunately the <code>opacity</code> element makes the whole element (including any text) semi-transparent. The best way to make the border semi-transparent is with the rgba color format. For example, this would give a red border with 50% opacity: The problem with this approach is that some browsers do not understand the <code>rgba</code> format and will not display any border at all if this is the entire declaration. The solution is to provide two border declarations. The first with a fake opacity, and the second with the actual. If a browser is capable, it will use the second, if not, it will use the first. The first border declaration will be the equivalent color to a 50% opaque red border over a white background (although any graphics under the border will not bleed through). UPDATE: I've added \"background-clip: padding-box;\" to this answer (per  SooDesuNe's suggestion in the comments) to ensure the border remains transparent even if a solid background color is applied.",
        "summary": "The best way to make the border semi-transparent is with the rgba color format."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've been using the following with great success: BIGBLOCK It supports nested quotes as well. For those who want a deeper explanation of how this works, here's an explanation from user ephemient: <code>([\"\"'])</code> match a quote; <code>((?=(\\\\?))\\2. )</code> if backslash exists, gobble it, and whether or not that happens, match a character; <code>*?</code> match many times (non-greedily, as to not eat the closing quote); <code>\\1</code> match the same quote that was use for opening.",
        "output": "BIGBLOCK <code>([\"\"'])</code> match a quote; <code>((?=(\\\\?))\\2. )</code> if backslash exists, gobble it, and whether or not that happens, match a character; <code>*?</code> match many times (non-greedily, as to not eat the closing quote); <code>\\1</code> match the same quote that was use for opening.",
        "answer": "I've been using the following with great success: BIGBLOCK It supports nested quotes as well. For those who want a deeper explanation of how this works, here's an explanation from user ephemient: <code>([\"\"'])</code> match a quote; <code>((?=(\\\\?))\\2. )</code> if backslash exists, gobble it, and whether or not that happens, match a character; <code>*?</code> match many times (non-greedily, as to not eat the closing quote); <code>\\1</code> match the same quote that was use for opening.",
        "summary": "BIGBLOCK <code>([\"\"'])</code> match a quote; <code>((?=(\\\\?))\\2. )</code> if backslash exists, gobble it, and whether or not that happens, match a character; <code>*?</code> match many times (non-greedily, as to not eat the closing quote); <code>\\1</code> match the same quote that was use for opening."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Query A is the same as: BIGBLOCK Since <code>3 = 3</code> is true, you get a result. Query B is the same as: BIGBLOCK When <code>ansi_nulls</code> is on, <code>3 &lt;&gt; null</code> is UNKNOWN, so the predicate evaluates to UNKNOWN, and you don't get any rows. When <code>ansi_nulls</code> is off, <code>3 &lt;&gt; null</code> is true, so the predicate evaluates to true, and you get a row.",
        "output": "When <code>ansi_nulls</code> is on, <code>3 &lt;&gt; null</code> is UNKNOWN, so the predicate evaluates to UNKNOWN, and you don't get any rows. When <code>ansi_nulls</code> is off, <code>3 &lt;&gt; null</code> is true, so the predicate evaluates to true, and you get a row.",
        "answer": "Query A is the same as: BIGBLOCK Since <code>3 = 3</code> is true, you get a result. Query B is the same as: BIGBLOCK When <code>ansi_nulls</code> is on, <code>3 &lt;&gt; null</code> is UNKNOWN, so the predicate evaluates to UNKNOWN, and you don't get any rows. When <code>ansi_nulls</code> is off, <code>3 &lt;&gt; null</code> is true, so the predicate evaluates to true, and you get a row.",
        "summary": "When <code>ansi_nulls</code> is on, <code>3 &lt;&gt; null</code> is UNKNOWN, so the predicate evaluates to UNKNOWN, and you don't get any rows. When <code>ansi_nulls</code> is off, <code>3 &lt;&gt; null</code> is true, so the predicate evaluates to true, and you get a row."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Nope, no destructors here. The reason is that all Java objects are heap allocated and garbage collected. Without explicit deallocation (i.e. C++'s delete operator) there is no sensible way to implement real destructors. Java does support finalizers, but they are meant to be used only as a safeguard for objects holding a handle to native resources like sockets, file handles, window handles, etc. When the garbage collector collects an object without a finalizer it simply marks the memory region as free and that's it. When the object has a finalizer, it's first copied into a temporary location (remember, we're garbage collecting here), then it's enqueued into a waiting-to-be-finalized queue and then a Finalizer thread polls the queue with very low priority and runs the finalizer. When the application exits, the JVM stops without waiting for the pending objects to be finalized, so there practically no guarantees that your finalizers will ever run.",
        "output": "Nope, no destructors here. The reason is that all Java objects are heap allocated and garbage collected.",
        "answer": "Nope, no destructors here. The reason is that all Java objects are heap allocated and garbage collected. Without explicit deallocation (i.e. C++'s delete operator) there is no sensible way to implement real destructors. Java does support finalizers, but they are meant to be used only as a safeguard for objects holding a handle to native resources like sockets, file handles, window handles, etc. When the garbage collector collects an object without a finalizer it simply marks the memory region as free and that's it. When the object has a finalizer, it's first copied into a temporary location (remember, we're garbage collecting here), then it's enqueued into a waiting-to-be-finalized queue and then a Finalizer thread polls the queue with very low priority and runs the finalizer. When the application exits, the JVM stops without waiting for the pending objects to be finalized, so there practically no guarantees that your finalizers will ever run.",
        "summary": "Nope, no destructors here. The reason is that all Java objects are heap allocated and garbage collected."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use the netifaces module. Just type: in your command shell and it will install itself on default Python installation. Then you can use it like this: On my computer it printed: Author of this module claims it should work on Windows, UNIX and Mac OS X.",
        "output": "You can use the netifaces module.",
        "answer": "You can use the netifaces module. Just type: in your command shell and it will install itself on default Python installation. Then you can use it like this: On my computer it printed: Author of this module claims it should work on Windows, UNIX and Mac OS X.",
        "summary": "You can use the netifaces module."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A set is an unordered group of distinct objects __xa0no duplicate objects are allowed. It is generally implemented using the hash code of the objects being inserted. (Specific implementations may add ordering, but the Set interface itself does not.) A list is an ordered group of objects which may contain duplicates. It could be implemented with an <code>ArrayList</code>, <code>LinkedList</code>, etc.",
        "output": "A set is an unordered group of distinct objects __xa0no duplicate objects are allowed. A list is an ordered group of objects which may contain duplicates.",
        "answer": "A set is an unordered group of distinct objects __xa0no duplicate objects are allowed. It is generally implemented using the hash code of the objects being inserted. (Specific implementations may add ordering, but the Set interface itself does not.) A list is an ordered group of objects which may contain duplicates. It could be implemented with an <code>ArrayList</code>, <code>LinkedList</code>, etc.",
        "summary": "A set is an unordered group of distinct objects __xa0no duplicate objects are allowed. A list is an ordered group of objects which may contain duplicates."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This can be the result of a .Net framework version incompatibility between two projects. It can happen in two ways: <li>a client profile project referencing a full framework project; or <li>an older framework version targeting a newer framework version For example it will happen when an application is set to target the .Net 4 Client Profile framework, and the project it references targets the full .Net 4 framework. So to make that clearer: <li>Project A targets the Client Profile framework <li>Project A references Project B <li>Project B targets the full framework The solution in this case is to either upgrade the framework target of the application (Project A), or downgrade the target of referenced assembly (Project B). It is okay for a full framework app to reference/consume a client profile framework assembly, but not the other way round (client profile cannot reference full framework targeted assembly). Note that you can also get this error when you create a new project in VS2012 or VS2013 (which uses .Net 4.5 as the default framework) and: <li>the referencing project(s) use .Net 4.0 (this is common when you have migrated from VS2010 to VS2012 or VS2013 and you then add a new project) <li>the referenced projects use a greater version i.e. 4.5.1 or 4.5.3 (you've re-targeted your existing projects to the latest version, but VS still creates new projects targeting v4.5, and you then reference those older projects from the new project)",
        "output": "This can be the result of a .Net framework version incompatibility between two projects. It can happen in two ways: <li>a client profile project referencing a full framework project; or <li>an older framework version targeting a newer framework version The solution in this case is to either upgrade the framework target of the application (Project A), or downgrade the target of referenced assembly (Project B). Note that you can also get this error when you create a new project in VS2012 or VS2013 (which uses .Net 4.5 as the default framework) and: <li>the referencing project(s) use .Net 4.0 (this is common when you have migrated from VS2010 to VS2012 or VS2013 and you then add a new project) <li>the referenced projects use a greater version i.e.",
        "answer": "This can be the result of a .Net framework version incompatibility between two projects. It can happen in two ways: <li>a client profile project referencing a full framework project; or <li>an older framework version targeting a newer framework version For example it will happen when an application is set to target the .Net 4 Client Profile framework, and the project it references targets the full .Net 4 framework. So to make that clearer: <li>Project A targets the Client Profile framework <li>Project A references Project B <li>Project B targets the full framework The solution in this case is to either upgrade the framework target of the application (Project A), or downgrade the target of referenced assembly (Project B). It is okay for a full framework app to reference/consume a client profile framework assembly, but not the other way round (client profile cannot reference full framework targeted assembly). Note that you can also get this error when you create a new project in VS2012 or VS2013 (which uses .Net 4.5 as the default framework) and: <li>the referencing project(s) use .Net 4.0 (this is common when you have migrated from VS2010 to VS2012 or VS2013 and you then add a new project) <li>the referenced projects use a greater version i.e. 4.5.1 or 4.5.3 (you've re-targeted your existing projects to the latest version, but VS still creates new projects targeting v4.5, and you then reference those older projects from the new project)",
        "summary": "This can be the result of a .Net framework version incompatibility between two projects. It can happen in two ways: <li>a client profile project referencing a full framework project; or <li>an older framework version targeting a newer framework version The solution in this case is to either upgrade the framework target of the application (Project A), or downgrade the target of referenced assembly (Project B). Note that you can also get this error when you create a new project in VS2012 or VS2013 (which uses .Net 4.5 as the default framework) and: <li>the referencing project(s) use .Net 4.0 (this is common when you have migrated from VS2010 to VS2012 or VS2013 and you then add a new project) <li>the referenced projects use a greater version i.e."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is caused by writing to a connection when the other end has already closed it. So you have a poorly defined or implemented application protocol.",
        "output": "This is caused by writing to a connection when the other end has already closed it.",
        "answer": "This is caused by writing to a connection when the other end has already closed it. So you have a poorly defined or implemented application protocol.",
        "summary": "This is caused by writing to a connection when the other end has already closed it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like this example, which for now, leaves out the check which you could add inside the while block: BIGBLOCK Not sure how safe it is...",
        "output": "I like this example, which for now, leaves out the check which you could add inside the while block: BIGBLOCK",
        "answer": "I like this example, which for now, leaves out the check which you could add inside the while block: BIGBLOCK Not sure how safe it is...",
        "summary": "I like this example, which for now, leaves out the check which you could add inside the while block: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to move the pointer to the first row, before asking for data:",
        "output": "You need to move the pointer to the first row, before asking for data:",
        "answer": "You need to move the pointer to the first row, before asking for data:",
        "summary": "You need to move the pointer to the first row, before asking for data:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to python documentation here is a statement: 8.15. types Ã©Â?Names for built-in types Starting in Python 2.2, built-in  factory functions such as <code>int()</code> and  <code>str()</code> are also names for the  corresponding types. So <code>isinstance()</code> should be preferred over <code>type()</code>.",
        "output": "Starting in Python 2.2, built-in  factory functions such as <code>int()</code> and  <code>str()</code> are also names for the  corresponding types. So <code>isinstance()</code> should be preferred over <code>type()</code>.",
        "answer": "According to python documentation here is a statement: 8.15. types Ã©Â?Names for built-in types Starting in Python 2.2, built-in  factory functions such as <code>int()</code> and  <code>str()</code> are also names for the  corresponding types. So <code>isinstance()</code> should be preferred over <code>type()</code>.",
        "summary": "Starting in Python 2.2, built-in  factory functions such as <code>int()</code> and  <code>str()</code> are also names for the  corresponding types. So <code>isinstance()</code> should be preferred over <code>type()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n My problem was due to a LOW MTU over a VPN connection. Fix:<strong>netsh interface ipv4 set interface \"Wireless Network Connection\" mtu=1400</strong> It may be an issue over a non-VPN connection also...",
        "output": "My problem was due to a LOW MTU over a VPN connection. Fix:<strong>netsh interface ipv4 set interface \"Wireless Network Connection\" mtu=1400</strong>",
        "answer": "My problem was due to a LOW MTU over a VPN connection. Fix:<strong>netsh interface ipv4 set interface \"Wireless Network Connection\" mtu=1400</strong> It may be an issue over a non-VPN connection also...",
        "summary": "My problem was due to a LOW MTU over a VPN connection. Fix:<strong>netsh interface ipv4 set interface \"Wireless Network Connection\" mtu=1400</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Then, as this blog post suggests, \"How to Cure Net::HTTPÃ©ÂÂ¥Ã¦ÂªÂ Risky Default HTTPS Behavior\" you might want to install the <code>always_verify_ssl_certificates</code> gem that allow you to set a default value for <code>ca_file</code>.",
        "output": "you might want to install the <code>always_verify_ssl_certificates</code> gem that allow you to set a default value for <code>ca_file</code>.",
        "answer": "Then, as this blog post suggests, \"How to Cure Net::HTTPÃ©ÂÂ¥Ã¦ÂªÂ Risky Default HTTPS Behavior\" you might want to install the <code>always_verify_ssl_certificates</code> gem that allow you to set a default value for <code>ca_file</code>.",
        "summary": "you might want to install the <code>always_verify_ssl_certificates</code> gem that allow you to set a default value for <code>ca_file</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Depending on your needs you might  go for the more feature-rich libraries. I tried most/all of the solutions suggested, but what stood out head &amp; shoulders was Html Agility Pack. It is a very forgiving and flexible parser.",
        "output": "I tried most/all of the solutions suggested, but what stood out head &amp; shoulders was Html Agility Pack.",
        "answer": "Depending on your needs you might  go for the more feature-rich libraries. I tried most/all of the solutions suggested, but what stood out head &amp; shoulders was Html Agility Pack. It is a very forgiving and flexible parser.",
        "summary": "I tried most/all of the solutions suggested, but what stood out head &amp; shoulders was Html Agility Pack."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n By implementing interfaces you are achieving composition (\"has-a\" relationships) instead of inheritance (\"is-a\" relationships). That is an important principle to remember when it comes to things like design patterns where you need to use interfaces to achieve a composition of behaviors instead of an inheritance.",
        "output": "By implementing interfaces you are achieving composition (\"has-a\" relationships) instead of inheritance (\"is-a\" relationships). That is an important principle to remember when it comes to things like design patterns where you need to use interfaces to achieve a composition of behaviors instead of an inheritance.",
        "answer": "By implementing interfaces you are achieving composition (\"has-a\" relationships) instead of inheritance (\"is-a\" relationships). That is an important principle to remember when it comes to things like design patterns where you need to use interfaces to achieve a composition of behaviors instead of an inheritance.",
        "summary": "By implementing interfaces you are achieving composition (\"has-a\" relationships) instead of inheritance (\"is-a\" relationships). That is an important principle to remember when it comes to things like design patterns where you need to use interfaces to achieve a composition of behaviors instead of an inheritance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's a generator that yields the chunks you want: If you're using Python 2, you should use <code>xrange()</code> instead of <code>range()</code>: Also you can simply use list comprehension instead of writing a function. Python 3: Python 2 version:",
        "output": "If you're using Python 2, you should use <code>xrange()</code> instead of <code>range()</code>: Python 3:",
        "answer": "Here's a generator that yields the chunks you want: If you're using Python 2, you should use <code>xrange()</code> instead of <code>range()</code>: Also you can simply use list comprehension instead of writing a function. Python 3: Python 2 version:",
        "summary": "If you're using Python 2, you should use <code>xrange()</code> instead of <code>range()</code>: Python 3:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This might not be the answer you're looking for, but the JavaDoc of the collections classes is actually pretty descriptive. Copy/pasted: An ordered collection (also known as a   sequence). The user of this interface   has precise control over where in the   list each element is inserted. The   user can access elements by their   integer index (position in the list),   and search for elements in the list. Unlike sets, lists typically allow   duplicate elements. More formally,   lists typically allow pairs of   elements e1 and e2 such that   e1.equals(e2), and they typically   allow multiple null elements if they   allow null elements at all. It is not   inconceivable that someone might wish   to implement a list that prohibits   duplicates, by throwing runtime   exceptions when the user attempts to   insert them, but we expect this usage   to be rare.",
        "output": "An ordered collection (also known as a   sequence). Unlike sets, lists typically allow   duplicate elements.",
        "answer": "This might not be the answer you're looking for, but the JavaDoc of the collections classes is actually pretty descriptive. Copy/pasted: An ordered collection (also known as a   sequence). The user of this interface   has precise control over where in the   list each element is inserted. The   user can access elements by their   integer index (position in the list),   and search for elements in the list. Unlike sets, lists typically allow   duplicate elements. More formally,   lists typically allow pairs of   elements e1 and e2 such that   e1.equals(e2), and they typically   allow multiple null elements if they   allow null elements at all. It is not   inconceivable that someone might wish   to implement a list that prohibits   duplicates, by throwing runtime   exceptions when the user attempts to   insert them, but we expect this usage   to be rare.",
        "summary": "An ordered collection (also known as a   sequence). Unlike sets, lists typically allow   duplicate elements."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The easy way to do it is to use background-image then just put an &lt;img&gt; in that element. The other way to do is using css layers. There is a ton a resources available to help you with this, just search for css layers.",
        "output": "The easy way to do it is to use background-image then just put an &lt;img&gt; in that element. The other way to do is using css layers.",
        "answer": "The easy way to do it is to use background-image then just put an &lt;img&gt; in that element. The other way to do is using css layers. There is a ton a resources available to help you with this, just search for css layers.",
        "summary": "The easy way to do it is to use background-image then just put an &lt;img&gt; in that element. The other way to do is using css layers."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use HTML entities: <li><code>&amp;#39;</code> for <code>'</code> <li><code>&amp;#34;</code> for <code>\"</code> <li>... For more, you can take a look at <em>Character entity references in HTML</em>.",
        "output": "You could use HTML entities: <li><code>&amp;#39;</code> for <code>'</code> <li><code>&amp;#34;</code> for <code>\"</code>",
        "answer": "You could use HTML entities: <li><code>&amp;#39;</code> for <code>'</code> <li><code>&amp;#34;</code> for <code>\"</code> <li>... For more, you can take a look at <em>Character entity references in HTML</em>.",
        "summary": "You could use HTML entities: <li><code>&amp;#39;</code> for <code>'</code> <li><code>&amp;#34;</code> for <code>\"</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It depends on the specific architecture. Some application servers may use web protocols natively (XML/RPC/SOAP over HTTP), so there is little technical difference. Typically a web server is user-facing, serving a variety of content over HTTP/HTTPS, while an application server is not user-facing and may use non-standard or non-routable protocols. Of course with RIA/AJAX, the difference could be further clouded, serving only non-HTML content (JSON/XML) to clients pumping particular remote access services.",
        "output": "Typically a web server is user-facing, serving a variety of content over HTTP/HTTPS, while an application server is not user-facing and may use non-standard or non-routable protocols.",
        "answer": "It depends on the specific architecture. Some application servers may use web protocols natively (XML/RPC/SOAP over HTTP), so there is little technical difference. Typically a web server is user-facing, serving a variety of content over HTTP/HTTPS, while an application server is not user-facing and may use non-standard or non-routable protocols. Of course with RIA/AJAX, the difference could be further clouded, serving only non-HTML content (JSON/XML) to clients pumping particular remote access services.",
        "summary": "Typically a web server is user-facing, serving a variety of content over HTTP/HTTPS, while an application server is not user-facing and may use non-standard or non-routable protocols."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As a colleague suggested, console.log > alert: BIGBLOCK",
        "output": "As a colleague suggested, console.log > alert: BIGBLOCK",
        "answer": "As a colleague suggested, console.log > alert: BIGBLOCK",
        "summary": "As a colleague suggested, console.log > alert: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can get this exception when the Edmx is in one project and you are using it from another. The reason is <code>Res://*/</code> is a uri which points to resources in the CURRENT assembly. If the Edm is defined in a different assembly from the code which is using it, res://*/ is not going to work because the resource cannot be found. Instead of specifying Ã¨ÂÂÃ©Â©Â´?Ã¨ÂÂÃ©Â©Â´? you need to provide the full name of the assembly instead (including public key token). Eg: A better way to construct connection strings is with EntityConnectionStringBuilder: If you still encounter the exception, open the assembly in reflector and check the filenames for your .csdl, .ssdl and .msl files. When the resources have different names to the ones specified in the metadata value, it__ not going to work.",
        "output": "You can get this exception when the Edmx is in one project and you are using it from another. The reason is <code>Res://*/</code> is a uri which points to resources in the CURRENT assembly. Instead of specifying Ã¨ÂÂÃ©Â©Â´?Ã¨ÂÂÃ©Â©Â´? you need to provide the full name of the assembly instead (including public key token).",
        "answer": "You can get this exception when the Edmx is in one project and you are using it from another. The reason is <code>Res://*/</code> is a uri which points to resources in the CURRENT assembly. If the Edm is defined in a different assembly from the code which is using it, res://*/ is not going to work because the resource cannot be found. Instead of specifying Ã¨ÂÂÃ©Â©Â´?Ã¨ÂÂÃ©Â©Â´? you need to provide the full name of the assembly instead (including public key token). Eg: A better way to construct connection strings is with EntityConnectionStringBuilder: If you still encounter the exception, open the assembly in reflector and check the filenames for your .csdl, .ssdl and .msl files. When the resources have different names to the ones specified in the metadata value, it__ not going to work.",
        "summary": "You can get this exception when the Edmx is in one project and you are using it from another. The reason is <code>Res://*/</code> is a uri which points to resources in the CURRENT assembly. Instead of specifying Ã¨ÂÂÃ©Â©Â´?Ã¨ÂÂÃ©Â©Â´? you need to provide the full name of the assembly instead (including public key token)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The easy way would be But that's not what you want. If you want objects you want to achieve something, but that's missing in this question. Using objects just for the reason of using objects makes no sense.",
        "output": "The easy way would be",
        "answer": "The easy way would be But that's not what you want. If you want objects you want to achieve something, but that's missing in this question. Using objects just for the reason of using objects makes no sense.",
        "summary": "The easy way would be"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Race conditions occur in multi-threaded applications or multi-process systems. A race condition, at its most basic, is anything that makes the assumption that two things not in the same thread or process will happen in a particular order, without taking steps to ensure that they do. This happens commonly when two threads are passing messages by setting and checking member variables of a class both can access. There's almost always a race condition when one thread calls sleep to give another thread time to finish a task (unless that sleep is in a loop, with some checking mechanism). Tools for preventing race conditions are dependent on the language and OS, but some comon ones are mutexes, critical sections, and signals. Mutexes are good when you want to make sure you're the only one doing something. Signals are good when you want to make sure someone else has finished doing something. Minimizing shared resources can also help prevent unexpected behaviors Detecting race conditions can be difficult, but there are a couple signs. Code which relies heavily on sleeps is prone to race conditions, so first check for calls to sleep in the affected code. Adding particularly long sleeps can also be used for debugging to try and force a particular order of events. This can be useful for reproducing the behavior, seeing if you can make it disappear by changing the timing of things, and for testing solutions put in place. The sleeps should be removed after debugging. The signature sign that one has a race condition though, is if there's an issue that only occurs intermittently on some machines. Common bugs would be crashes and deadlocks. With logging, you should be able to find the affected area and work back from there.",
        "output": "Race conditions occur in multi-threaded applications or multi-process systems. A race condition, at its most basic, is anything that makes the assumption that two things not in the same thread or process will happen in a particular order, without taking steps to ensure that they do. This happens commonly when two threads are passing messages by setting and checking member variables of a class both can access. Tools for preventing race conditions are dependent on the language and OS, but some comon ones are mutexes, critical sections, and signals. Detecting race conditions can be difficult, but there are a couple signs.",
        "answer": "Race conditions occur in multi-threaded applications or multi-process systems. A race condition, at its most basic, is anything that makes the assumption that two things not in the same thread or process will happen in a particular order, without taking steps to ensure that they do. This happens commonly when two threads are passing messages by setting and checking member variables of a class both can access. There's almost always a race condition when one thread calls sleep to give another thread time to finish a task (unless that sleep is in a loop, with some checking mechanism). Tools for preventing race conditions are dependent on the language and OS, but some comon ones are mutexes, critical sections, and signals. Mutexes are good when you want to make sure you're the only one doing something. Signals are good when you want to make sure someone else has finished doing something. Minimizing shared resources can also help prevent unexpected behaviors Detecting race conditions can be difficult, but there are a couple signs. Code which relies heavily on sleeps is prone to race conditions, so first check for calls to sleep in the affected code. Adding particularly long sleeps can also be used for debugging to try and force a particular order of events. This can be useful for reproducing the behavior, seeing if you can make it disappear by changing the timing of things, and for testing solutions put in place. The sleeps should be removed after debugging. The signature sign that one has a race condition though, is if there's an issue that only occurs intermittently on some machines. Common bugs would be crashes and deadlocks. With logging, you should be able to find the affected area and work back from there.",
        "summary": "Race conditions occur in multi-threaded applications or multi-process systems. A race condition, at its most basic, is anything that makes the assumption that two things not in the same thread or process will happen in a particular order, without taking steps to ensure that they do. This happens commonly when two threads are passing messages by setting and checking member variables of a class both can access. Tools for preventing race conditions are dependent on the language and OS, but some comon ones are mutexes, critical sections, and signals. Detecting race conditions can be difficult, but there are a couple signs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In C++ STL, and many other standard libraries in other languages, like Java and C#. Binary search trees are used to implement set and map.",
        "output": "Binary search trees are used to implement set and map.",
        "answer": "In C++ STL, and many other standard libraries in other languages, like Java and C#. Binary search trees are used to implement set and map.",
        "summary": "Binary search trees are used to implement set and map."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Bus errors are rare nowadays on x86 and occur when your processor cannot even attempt the memory access requested, typically: <li>using a processor instruction with an address that does not satisfy its alignment requirements. Segmentation faults occur when accessing memory which does not belong to your process, they are very common and are typically the result of: <li>using a pointer to something that was deallocated. <li>using an uninitialized hence bogus pointer. <li>using a null pointer. <li>overflowing a buffer. PS: To be more precise this is not manipulating the pointer itself that will cause issues, it's accessing the memory it points to (dereferencing).",
        "output": "Bus errors are rare nowadays on x86 and occur when your processor cannot even attempt the memory access requested, typically: <li>using a processor instruction with an address that does not satisfy its alignment requirements. Segmentation faults occur when accessing memory which does not belong to your process, they are very common and are typically the result of: <li>using a pointer to something that was deallocated. <li>using an uninitialized hence bogus pointer. <li>using a null pointer. <li>overflowing a buffer.",
        "answer": "Bus errors are rare nowadays on x86 and occur when your processor cannot even attempt the memory access requested, typically: <li>using a processor instruction with an address that does not satisfy its alignment requirements. Segmentation faults occur when accessing memory which does not belong to your process, they are very common and are typically the result of: <li>using a pointer to something that was deallocated. <li>using an uninitialized hence bogus pointer. <li>using a null pointer. <li>overflowing a buffer. PS: To be more precise this is not manipulating the pointer itself that will cause issues, it's accessing the memory it points to (dereferencing).",
        "summary": "Bus errors are rare nowadays on x86 and occur when your processor cannot even attempt the memory access requested, typically: <li>using a processor instruction with an address that does not satisfy its alignment requirements. Segmentation faults occur when accessing memory which does not belong to your process, they are very common and are typically the result of: <li>using a pointer to something that was deallocated. <li>using an uninitialized hence bogus pointer. <li>using a null pointer. <li>overflowing a buffer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can't run this particular piece of code in the interactive interpreter.You'll need to save it into a file first so that you can pass the argument to it like this",
        "output": "You can't run this particular piece of code in the interactive interpreter.You'll need to save it into a file first so that you can pass the argument to it like this",
        "answer": "You can't run this particular piece of code in the interactive interpreter.You'll need to save it into a file first so that you can pass the argument to it like this",
        "summary": "You can't run this particular piece of code in the interactive interpreter.You'll need to save it into a file first so that you can pass the argument to it like this"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use a <code>TYPE</code> command instead of <code>COPY</code>. Try this: Where <code>File1.txt</code> is empty.",
        "output": "You can use a <code>TYPE</code> command instead of <code>COPY</code>. Try this:",
        "answer": "You can use a <code>TYPE</code> command instead of <code>COPY</code>. Try this: Where <code>File1.txt</code> is empty.",
        "summary": "You can use a <code>TYPE</code> command instead of <code>COPY</code>. Try this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Python, <code>lambda</code> is just a way of defining functions inline, and.. ..are the exact same. There is nothing you can do with lambda which you cannot do with a regular function&mdash;in Python functions are an object just like anything else, and lambdas simply define a function: I honestly think the <code>lambda</code> keyword is redundant in Python&mdash;I have never had the need to use them (or seen one used where a regular function, a list-comprehension or one of the many builtin functions could have been better used instead) For a completely random example, from the article \"Python__________________________ÃÂ¢________________________________s lambda is broken! \": To see how lambda is broken, try generating a list of functions <code>fs=[f0,...,f9]</code> where <code>fi(n)=i+n</code>. First attempt: I would argue, even if that did work, it's horribly and \"unpythonic\", the same functionality could be written in countless other ways, for example: Yes, it's not the same, but I have never seen a cause where generating a group of lambda functions in a list has been required. It might make sense in other languages, but Python is not Haskell (or Lisp, or ...) Please note that we can use lambda and still achieve the desired   results in this way : Edit: There are a few cases where lambda is useful, for example it's often convenient when connecting up signals in PyQt applications, like this: Just doing <code>w.textChanged.connect(dothing)</code> would call the <code>dothing</code> method with an extra <code>event</code> argument and cause an error. Using the lambda means we can tidily drop the argument without having to define a wrapping function.",
        "output": "I honestly think the <code>lambda</code> keyword is redundant in Python&mdash;I have never had the need to use them (or seen one used where a regular function, a list-comprehension or one of the many builtin functions could have been better used instead)",
        "answer": "In Python, <code>lambda</code> is just a way of defining functions inline, and.. ..are the exact same. There is nothing you can do with lambda which you cannot do with a regular function&mdash;in Python functions are an object just like anything else, and lambdas simply define a function: I honestly think the <code>lambda</code> keyword is redundant in Python&mdash;I have never had the need to use them (or seen one used where a regular function, a list-comprehension or one of the many builtin functions could have been better used instead) For a completely random example, from the article \"Python__________________________ÃÂ¢________________________________s lambda is broken! \": To see how lambda is broken, try generating a list of functions <code>fs=[f0,...,f9]</code> where <code>fi(n)=i+n</code>. First attempt: I would argue, even if that did work, it's horribly and \"unpythonic\", the same functionality could be written in countless other ways, for example: Yes, it's not the same, but I have never seen a cause where generating a group of lambda functions in a list has been required. It might make sense in other languages, but Python is not Haskell (or Lisp, or ...) Please note that we can use lambda and still achieve the desired   results in this way : Edit: There are a few cases where lambda is useful, for example it's often convenient when connecting up signals in PyQt applications, like this: Just doing <code>w.textChanged.connect(dothing)</code> would call the <code>dothing</code> method with an extra <code>event</code> argument and cause an error. Using the lambda means we can tidily drop the argument without having to define a wrapping function.",
        "summary": "I honestly think the <code>lambda</code> keyword is redundant in Python&mdash;I have never had the need to use them (or seen one used where a regular function, a list-comprehension or one of the many builtin functions could have been better used instead)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For me this approach works: The dialog may be closed by clicking the X on the dialog or by clicking 'Bewaren'. I'm adding an (arbitrary) id because I need to be sure every bit of html added to the dom is removed afterwards. BIGBLOCK",
        "output": "The dialog may be closed by clicking the X on the dialog or by clicking 'Bewaren'. I'm adding an (arbitrary) id because I need to be sure every bit of html added to the dom is removed afterwards. BIGBLOCK",
        "answer": "For me this approach works: The dialog may be closed by clicking the X on the dialog or by clicking 'Bewaren'. I'm adding an (arbitrary) id because I need to be sure every bit of html added to the dom is removed afterwards. BIGBLOCK",
        "summary": "The dialog may be closed by clicking the X on the dialog or by clicking 'Bewaren'. I'm adding an (arbitrary) id because I need to be sure every bit of html added to the dom is removed afterwards. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The main application is binary search trees. These are a data structure in which searching, insertion, and removal are all very fast (about <code>log(n)</code> operations)",
        "output": "These are a data structure in which searching, insertion, and removal are all very fast (about <code>log(n)</code> operations)",
        "answer": "The main application is binary search trees. These are a data structure in which searching, insertion, and removal are all very fast (about <code>log(n)</code> operations)",
        "summary": "These are a data structure in which searching, insertion, and removal are all very fast (about <code>log(n)</code> operations)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This happened to me when I accidentally switched the Build Action of the edmx file (appears under Properties in the IDE) from 'EntityDeploy' to 'None'. EntityDeploy is what populates the metadata for you: see http://msdn.microsoft.com/en-us/library/cc982037.aspx",
        "output": "This happened to me when I accidentally switched the Build Action of the edmx file (appears under Properties in the IDE) from 'EntityDeploy' to 'None'.",
        "answer": "This happened to me when I accidentally switched the Build Action of the edmx file (appears under Properties in the IDE) from 'EntityDeploy' to 'None'. EntityDeploy is what populates the metadata for you: see http://msdn.microsoft.com/en-us/library/cc982037.aspx",
        "summary": "This happened to me when I accidentally switched the Build Action of the edmx file (appears under Properties in the IDE) from 'EntityDeploy' to 'None'."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n alt text http://www.netfxharmonics.com/Images/WindowsLiveWriter/ComicStrip2.NETandPHPSourceCode_14857/DotNetPhpCartoon02.png",
        "output": "alt text http://www.netfxharmonics.com/Images/WindowsLiveWriter/ComicStrip2.NETandPHPSourceCode_14857/DotNetPhpCartoon02.png",
        "answer": "alt text http://www.netfxharmonics.com/Images/WindowsLiveWriter/ComicStrip2.NETandPHPSourceCode_14857/DotNetPhpCartoon02.png",
        "summary": "alt text http://www.netfxharmonics.com/Images/WindowsLiveWriter/ComicStrip2.NETandPHPSourceCode_14857/DotNetPhpCartoon02.png"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>! !foo</code> applies the unary not operator twice and is used to cast to boolean type similar to the use of unary plus <code>+foo</code> to cast to number and concatenating an empty string <code>''+foo</code> to cast to string. Instead of these hacks, you can also use the constructor functions corresponding to the primitive types (without using <code>new</code>) to explicitly cast values, ie",
        "output": "<code>! !foo</code> applies the unary not operator twice and is used to cast to boolean type similar to the use of unary plus <code>+foo</code> to cast to number and concatenating an empty string <code>''+foo</code> to cast to string.",
        "answer": "<code>! !foo</code> applies the unary not operator twice and is used to cast to boolean type similar to the use of unary plus <code>+foo</code> to cast to number and concatenating an empty string <code>''+foo</code> to cast to string. Instead of these hacks, you can also use the constructor functions corresponding to the primitive types (without using <code>new</code>) to explicitly cast values, ie",
        "summary": "<code>! !foo</code> applies the unary not operator twice and is used to cast to boolean type similar to the use of unary plus <code>+foo</code> to cast to number and concatenating an empty string <code>''+foo</code> to cast to string."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you don't want to make a macro and as long as you don't mind an additional column, then just create a new column alongside your column of URLs. In the new column type in the formula <code>=HYPERLINK(A1)</code> (replacing A1 with whatever cell you are interested in). Then copy the formula down the rest of the 200 entries. NOTE: This solution does not work if the cell A1 contains a string longer than 255 characters. It results in a <code>#VALUE!</code> error",
        "output": "If you don't want to make a macro and as long as you don't mind an additional column, then just create a new column alongside your column of URLs. In the new column type in the formula <code>=HYPERLINK(A1)</code> (replacing A1 with whatever cell you are interested in). Then copy the formula down the rest of the 200 entries.",
        "answer": "If you don't want to make a macro and as long as you don't mind an additional column, then just create a new column alongside your column of URLs. In the new column type in the formula <code>=HYPERLINK(A1)</code> (replacing A1 with whatever cell you are interested in). Then copy the formula down the rest of the 200 entries. NOTE: This solution does not work if the cell A1 contains a string longer than 255 characters. It results in a <code>#VALUE!</code> error",
        "summary": "If you don't want to make a macro and as long as you don't mind an additional column, then just create a new column alongside your column of URLs. In the new column type in the formula <code>=HYPERLINK(A1)</code> (replacing A1 with whatever cell you are interested in). Then copy the formula down the rest of the 200 entries."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n @Christian Ullenboom' explanation is correct. I'm surmising that the <code>OBD2nerForm</code> code you posted is a static initializer block and that it is all generated. Based on that and on the stack trace, it seems likely that generated code is tripping up because it has found some component of your form that doesn't have the type that it is expecting. I'd do the following to try and diagnose this: Google for reports of similar problems with NetBeans generated forms. If you are running an old version of NetBeans, scan through the \"bugs fixed\" pages for more recent releases. Or just upgrade try a newer release anyway to see if that fixes the problem. Try cutting bits out of the form design until the problem \"goes away\" ... and try to figure out what the real cause is that way. Run the application under a debugger to figure out what is being (incorrectly) type cast as what. Just knowing the class names may help. And looking at the instance variables of the objects may reveal more; e.g. which specific form component is causing the problem. My suspicion is that the root cause is a combination of something a bit unusual (or incorrect) with your form design, and bugs in the NetBeans form generator that is not coping with your form. If you can figure it out, a workaround may reveal itself.",
        "output": "I'm surmising that the <code>OBD2nerForm</code> code you posted is a static initializer block and that it is all generated. Based on that and on the stack trace, it seems likely that generated code is tripping up because it has found some component of your form that doesn't have the type that it is expecting.",
        "answer": "@Christian Ullenboom' explanation is correct. I'm surmising that the <code>OBD2nerForm</code> code you posted is a static initializer block and that it is all generated. Based on that and on the stack trace, it seems likely that generated code is tripping up because it has found some component of your form that doesn't have the type that it is expecting. I'd do the following to try and diagnose this: Google for reports of similar problems with NetBeans generated forms. If you are running an old version of NetBeans, scan through the \"bugs fixed\" pages for more recent releases. Or just upgrade try a newer release anyway to see if that fixes the problem. Try cutting bits out of the form design until the problem \"goes away\" ... and try to figure out what the real cause is that way. Run the application under a debugger to figure out what is being (incorrectly) type cast as what. Just knowing the class names may help. And looking at the instance variables of the objects may reveal more; e.g. which specific form component is causing the problem. My suspicion is that the root cause is a combination of something a bit unusual (or incorrect) with your form design, and bugs in the NetBeans form generator that is not coping with your form. If you can figure it out, a workaround may reveal itself.",
        "summary": "I'm surmising that the <code>OBD2nerForm</code> code you posted is a static initializer block and that it is all generated. Based on that and on the stack trace, it seems likely that generated code is tripping up because it has found some component of your form that doesn't have the type that it is expecting."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Java terms there's one more: <strong>web container</strong> (or more strictly, servlet container). It's, say, in between web server and application server. An web container is in Java terms an application server which basically <em>only</em> implements the JSP/Servlet part of Java EE and lacks several core parts of Java EE, such as EJB support. An example is Apache Tomcat.",
        "output": "An web container is in Java terms an application server which basically <em>only</em> implements the JSP/Servlet part of Java EE and lacks several core parts of Java EE, such as EJB support.",
        "answer": "In Java terms there's one more: <strong>web container</strong> (or more strictly, servlet container). It's, say, in between web server and application server. An web container is in Java terms an application server which basically <em>only</em> implements the JSP/Servlet part of Java EE and lacks several core parts of Java EE, such as EJB support. An example is Apache Tomcat.",
        "summary": "An web container is in Java terms an application server which basically <em>only</em> implements the JSP/Servlet part of Java EE and lacks several core parts of Java EE, such as EJB support."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Linux it is <code>%llu</code> and in Windows it is <code>%I64u</code> Although I have found it doesn't work in Windows 2000, there seems to be a bug there!",
        "output": "In Linux it is <code>%llu</code> and in Windows it is <code>%I64u</code>",
        "answer": "In Linux it is <code>%llu</code> and in Windows it is <code>%I64u</code> Although I have found it doesn't work in Windows 2000, there seems to be a bug there!",
        "summary": "In Linux it is <code>%llu</code> and in Windows it is <code>%I64u</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>javax.naming</code> package comprises the JNDI API. Since it's just an API, rather than an implementation, you need to tell it which implementation of JNDI to use. The implementations are typically specific to the server you're trying to talk to. To specify an implementation, you pass in a <code>Properties</code> object when you construct the <code>InitialContext</code>. These properties specify the implementation to use, as well as the location of the server. The default <code>InitialContext</code> constructor is only useful when there are system properties present, but the properties are the same as if you passed them in manually. As to which properties you need to set, that depends on your server. You need to hunt those settings down and plug them in.",
        "output": "The <code>javax.naming</code> package comprises the JNDI API. Since it's just an API, rather than an implementation, you need to tell it which implementation of JNDI to use. To specify an implementation, you pass in a <code>Properties</code> object when you construct the <code>InitialContext</code>.",
        "answer": "The <code>javax.naming</code> package comprises the JNDI API. Since it's just an API, rather than an implementation, you need to tell it which implementation of JNDI to use. The implementations are typically specific to the server you're trying to talk to. To specify an implementation, you pass in a <code>Properties</code> object when you construct the <code>InitialContext</code>. These properties specify the implementation to use, as well as the location of the server. The default <code>InitialContext</code> constructor is only useful when there are system properties present, but the properties are the same as if you passed them in manually. As to which properties you need to set, that depends on your server. You need to hunt those settings down and plug them in.",
        "summary": "The <code>javax.naming</code> package comprises the JNDI API. Since it's just an API, rather than an implementation, you need to tell it which implementation of JNDI to use. To specify an implementation, you pass in a <code>Properties</code> object when you construct the <code>InitialContext</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I realize that I is kinda late, but still better late than never. I was having similar problem recently. I used <code>XMLWriter</code> to subsequently update XML file and was receiving the same errors. I found the clean solution for this: The <code>XMLWriter</code> uses underlying <code>FileStream</code> to access the modified file. Problem is that when you call <code>XMLWriter.Close()</code> method, the underlying stream doesn't get closed and is locking the file. What you need to do is to instantiate your <code>XMLWriter</code> with settings and specify that you need that underlying stream closed. Example: Hope it helps.",
        "output": "Problem is that when you call <code>XMLWriter.Close()</code> method, the underlying stream doesn't get closed and is locking the file. What you need to do is to instantiate your <code>XMLWriter</code> with settings and specify that you need that underlying stream closed.",
        "answer": "I realize that I is kinda late, but still better late than never. I was having similar problem recently. I used <code>XMLWriter</code> to subsequently update XML file and was receiving the same errors. I found the clean solution for this: The <code>XMLWriter</code> uses underlying <code>FileStream</code> to access the modified file. Problem is that when you call <code>XMLWriter.Close()</code> method, the underlying stream doesn't get closed and is locking the file. What you need to do is to instantiate your <code>XMLWriter</code> with settings and specify that you need that underlying stream closed. Example: Hope it helps.",
        "summary": "Problem is that when you call <code>XMLWriter.Close()</code> method, the underlying stream doesn't get closed and is locking the file. What you need to do is to instantiate your <code>XMLWriter</code> with settings and specify that you need that underlying stream closed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could make the variables public fields: BIGBLOCK You could then access the variables like so: BIGBLOCK A better solution, however, would be to make the variables private fields add two accessor methods to your class, keeping the data in the DrawFrame class encapsulated: BIGBLOCK Then you can get the width/height like so: BIGBLOCK I strongly suggest you use the latter method.",
        "output": "A better solution, however, would be to make the variables private fields add two accessor methods to your class, keeping the data in the DrawFrame class encapsulated: BIGBLOCK Then you can get the width/height like so: BIGBLOCK",
        "answer": "You could make the variables public fields: BIGBLOCK You could then access the variables like so: BIGBLOCK A better solution, however, would be to make the variables private fields add two accessor methods to your class, keeping the data in the DrawFrame class encapsulated: BIGBLOCK Then you can get the width/height like so: BIGBLOCK I strongly suggest you use the latter method.",
        "summary": "A better solution, however, would be to make the variables private fields add two accessor methods to your class, keeping the data in the DrawFrame class encapsulated: BIGBLOCK Then you can get the width/height like so: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A race condition occurs when two or more threads can access shared data and they try to change it at the same time. Because the thread scheduling algorithm can swap between threads at any time, you don't know the order in which the threads will attempt to access the shared data. Therefore, the result of the change in data is dependent on the thread scheduling algorithm, i.e. both threads are \"racing\" to access/change the data. Problems often occur when one thread does a \"check-then-act\" (e.g. \"check\" if the value is X, then \"act\" to do something that depends on the value being X) and another thread does something to the value in between the \"check\" and the \"act\". E.g: The point being, y could be 10, or it could be anything, depending on whether another thread changed x in between the check and act. You have no real way of knowing. In order to prevent race conditions from occurring, you would typically put a lock around the shared data to ensure only one thread can access the data at a time. This would mean something like this:",
        "output": "A race condition occurs when two or more threads can access shared data and they try to change it at the same time. In order to prevent race conditions from occurring, you would typically put a lock around the shared data to ensure only one thread can access the data at a time.",
        "answer": "A race condition occurs when two or more threads can access shared data and they try to change it at the same time. Because the thread scheduling algorithm can swap between threads at any time, you don't know the order in which the threads will attempt to access the shared data. Therefore, the result of the change in data is dependent on the thread scheduling algorithm, i.e. both threads are \"racing\" to access/change the data. Problems often occur when one thread does a \"check-then-act\" (e.g. \"check\" if the value is X, then \"act\" to do something that depends on the value being X) and another thread does something to the value in between the \"check\" and the \"act\". E.g: The point being, y could be 10, or it could be anything, depending on whether another thread changed x in between the check and act. You have no real way of knowing. In order to prevent race conditions from occurring, you would typically put a lock around the shared data to ensure only one thread can access the data at a time. This would mean something like this:",
        "summary": "A race condition occurs when two or more threads can access shared data and they try to change it at the same time. In order to prevent race conditions from occurring, you would typically put a lock around the shared data to ensure only one thread can access the data at a time."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In OO world, the two are commonly used to mean the same thing. From a pure Math and CS perspective, a function will always return the same result when called with the same arguments ( f(x,y) = (x + y) ). A method on the other hand, is typically associated with an instance of a class. Again though, most modern OO languages no longer use the term \"function\" for the most part. Many static methods can be quite like functions, as they typically have no state (not always true).",
        "output": "In OO world, the two are commonly used to mean the same thing. From a pure Math and CS perspective, a function will always return the same result when called with the same arguments ( f(x,y) = (x + y) ). A method on the other hand, is typically associated with an instance of a class.",
        "answer": "In OO world, the two are commonly used to mean the same thing. From a pure Math and CS perspective, a function will always return the same result when called with the same arguments ( f(x,y) = (x + y) ). A method on the other hand, is typically associated with an instance of a class. Again though, most modern OO languages no longer use the term \"function\" for the most part. Many static methods can be quite like functions, as they typically have no state (not always true).",
        "summary": "In OO world, the two are commonly used to mean the same thing. From a pure Math and CS perspective, a function will always return the same result when called with the same arguments ( f(x,y) = (x + y) ). A method on the other hand, is typically associated with an instance of a class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In MSVC there is a Microsoft specific keyword for that: __super MSDN: Allows you to explicitly state that you are calling a base-class implementation for a function that you are overriding.",
        "output": "In MSVC there is a Microsoft specific keyword for that: __super",
        "answer": "In MSVC there is a Microsoft specific keyword for that: __super MSDN: Allows you to explicitly state that you are calling a base-class implementation for a function that you are overriding.",
        "summary": "In MSVC there is a Microsoft specific keyword for that: __super"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have to ask a question in return: is your <code>GenSet</code> \"checked\" or \"unchecked\"?What does that mean? <li><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a <code>Class&lt;E&gt;</code> argument, and methods will throw an exception when they are passed arguments that are not of type <code>E</code>. See <code>Collections.checkedCollection</code>. -> in that case, you should write: <li><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument. -> in that case, you should write Note that the component type of the array should be the <em>erasure</em> of the type parameter: All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so \"generic\" classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.",
        "output": "I have to ask a question in return: is your <code>GenSet</code> \"checked\" or \"unchecked\"?What does that mean? <li><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. -> in that case, you should write: <li><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument. -> in that case, you should write",
        "answer": "I have to ask a question in return: is your <code>GenSet</code> \"checked\" or \"unchecked\"?What does that mean? <li><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a <code>Class&lt;E&gt;</code> argument, and methods will throw an exception when they are passed arguments that are not of type <code>E</code>. See <code>Collections.checkedCollection</code>. -> in that case, you should write: <li><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument. -> in that case, you should write Note that the component type of the array should be the <em>erasure</em> of the type parameter: All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so \"generic\" classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.",
        "summary": "I have to ask a question in return: is your <code>GenSet</code> \"checked\" or \"unchecked\"?What does that mean? <li><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. -> in that case, you should write: <li><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument. -> in that case, you should write"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have referenced the jQuery JS file haven't you? There's no reason why farzad's answer shouldn't work.",
        "output": "You have referenced the jQuery JS file haven't you?",
        "answer": "You have referenced the jQuery JS file haven't you? There's no reason why farzad's answer shouldn't work.",
        "summary": "You have referenced the jQuery JS file haven't you?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Runtime.getRuntime().exec</code> allocates the process with the same amount of memory as the main. If you had you heap set to 1GB and try to exec then it will allocate another 1GB for that process to run.",
        "output": "<code>Runtime.getRuntime().exec</code> allocates the process with the same amount of memory as the main.",
        "answer": "<code>Runtime.getRuntime().exec</code> allocates the process with the same amount of memory as the main. If you had you heap set to 1GB and try to exec then it will allocate another 1GB for that process to run.",
        "summary": "<code>Runtime.getRuntime().exec</code> allocates the process with the same amount of memory as the main."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Mainly two methods are there. 1. Use out/ref parameters 2. Return an Array of objects",
        "output": "Use out/ref parameters Return an Array of objects",
        "answer": "Mainly two methods are there. 1. Use out/ref parameters 2. Return an Array of objects",
        "summary": "Use out/ref parameters Return an Array of objects"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As Rutesh and jmservera pointed out, the distinction is a fuzzy one. Historically, they were different, but through the 90's these two previously distinct categories blended features and effectively merged. At this point is is probably best to imagine that the \"App Server\" product category is a strict superset of the \"web server\" category. Some history. In early days of the Mosaic browser and hyperlinked content, there evolved this thing called a \"web server\" that served web page content and images over HTTP. Most of the content was static, and the HTTP 1.0 protocol was just a way to ship files around. Quickly the \"web server\" category evolved to include CGI capability - effectively launching a process on each web request to generate dynamic content. HTTP also matured and the products became more sophisticated, with caching, security, and management features. As the technology matured, we got company-specific Java-based server-side technology from Kiva and NetDynamics, which eventually all merged into JSP. Microsoft added ASP, I think in 1996, to Windows NT 4.0. The static web server had learned some new tricks, so that it was an effective \"app server\" for many scenarios. In a parallel category, the app server had evolved and existed for a long time. companies delivered products for Unix like Tuxedo, TopEnd, Encina that were philosophically derived from Mainframe application management and monitoring environments like IMS and CICS. Microsoft's offering was Microsoft Transaction Server (MTS), which later evolved into COM+. Most of these products specified \"closed\" product-specific communications protocols to interconnect \"fat\" clients to servers. (For Encina, the comms protocol was DCE RPC; for MTS it was DCOM; etc.) In 1995/96, these traditional app server products began to embed basic HTTP communication capability, at first via gateways. And the lines began to blur. Web servers got more and more mature with respect to handling higher loads, more concurrency, and better features. App servers delivered more and more HTTP-based communication capability. At this point the line between \"app server\" and \"web server\" is a fuzzy one. But people continue to use the terms differently, as a matter of emphasis. When someone says \"web server\" you often think HTTP-centric, web UI, oriented apps. When someone says \"App server\" you may think \"heavier loads, enterprise features, transactions and queuing, multi-channel communication (HTTP + more). But often it is the same product that serves both sets of workload requirements. <li>WebSphere, IBM's \"app server\" has its own bundled web server. <li>WebLogic, another traditional app server, likewise. <li>Windows, which is Microsoft's App Server (in addition to being its File&amp;Print Server, Media Server, etc. ), bundles IIS.",
        "output": "Historically, they were different, but through the 90's these two previously distinct categories blended features and effectively merged. At this point is is probably best to imagine that the \"App Server\" product category is a strict superset of the \"web server\" category. Web servers got more and more mature with respect to handling higher loads, more concurrency, and better features. App servers delivered more and more HTTP-based communication capability. When someone says \"web server\" you often think HTTP-centric, web UI, oriented apps. When someone says \"App server\" you may think \"heavier loads, enterprise features, transactions and queuing, multi-channel communication (HTTP + more).",
        "answer": "As Rutesh and jmservera pointed out, the distinction is a fuzzy one. Historically, they were different, but through the 90's these two previously distinct categories blended features and effectively merged. At this point is is probably best to imagine that the \"App Server\" product category is a strict superset of the \"web server\" category. Some history. In early days of the Mosaic browser and hyperlinked content, there evolved this thing called a \"web server\" that served web page content and images over HTTP. Most of the content was static, and the HTTP 1.0 protocol was just a way to ship files around. Quickly the \"web server\" category evolved to include CGI capability - effectively launching a process on each web request to generate dynamic content. HTTP also matured and the products became more sophisticated, with caching, security, and management features. As the technology matured, we got company-specific Java-based server-side technology from Kiva and NetDynamics, which eventually all merged into JSP. Microsoft added ASP, I think in 1996, to Windows NT 4.0. The static web server had learned some new tricks, so that it was an effective \"app server\" for many scenarios. In a parallel category, the app server had evolved and existed for a long time. companies delivered products for Unix like Tuxedo, TopEnd, Encina that were philosophically derived from Mainframe application management and monitoring environments like IMS and CICS. Microsoft's offering was Microsoft Transaction Server (MTS), which later evolved into COM+. Most of these products specified \"closed\" product-specific communications protocols to interconnect \"fat\" clients to servers. (For Encina, the comms protocol was DCE RPC; for MTS it was DCOM; etc.) In 1995/96, these traditional app server products began to embed basic HTTP communication capability, at first via gateways. And the lines began to blur. Web servers got more and more mature with respect to handling higher loads, more concurrency, and better features. App servers delivered more and more HTTP-based communication capability. At this point the line between \"app server\" and \"web server\" is a fuzzy one. But people continue to use the terms differently, as a matter of emphasis. When someone says \"web server\" you often think HTTP-centric, web UI, oriented apps. When someone says \"App server\" you may think \"heavier loads, enterprise features, transactions and queuing, multi-channel communication (HTTP + more). But often it is the same product that serves both sets of workload requirements. <li>WebSphere, IBM's \"app server\" has its own bundled web server. <li>WebLogic, another traditional app server, likewise. <li>Windows, which is Microsoft's App Server (in addition to being its File&amp;Print Server, Media Server, etc. ), bundles IIS.",
        "summary": "Historically, they were different, but through the 90's these two previously distinct categories blended features and effectively merged. At this point is is probably best to imagine that the \"App Server\" product category is a strict superset of the \"web server\" category. Web servers got more and more mature with respect to handling higher loads, more concurrency, and better features. App servers delivered more and more HTTP-based communication capability. When someone says \"web server\" you often think HTTP-centric, web UI, oriented apps. When someone says \"App server\" you may think \"heavier loads, enterprise features, transactions and queuing, multi-channel communication (HTTP + more)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Initially I tried the Fusion log viewer, but that didn't help so I ended up using WinDbg with the SOS extension. !dumpheap -stat -type Exception /D Then I examined the FileNotFoundExceptions. The message in the exception contained the name of the DLL that wasn't loading. N.B., the /D give you hyperlinked results, so click on the link in the summary for FileNotFoundException. That will bring up a list of the exceptions. Then click on the link for one of the exceptions. That will !dumpobject that exceptions. Then you should just be able to click on the link for Message in the exception object, and you'll see the text.",
        "output": "Then I examined the FileNotFoundExceptions. The message in the exception contained the name of the DLL that wasn't loading.",
        "answer": "Initially I tried the Fusion log viewer, but that didn't help so I ended up using WinDbg with the SOS extension. !dumpheap -stat -type Exception /D Then I examined the FileNotFoundExceptions. The message in the exception contained the name of the DLL that wasn't loading. N.B., the /D give you hyperlinked results, so click on the link in the summary for FileNotFoundException. That will bring up a list of the exceptions. Then click on the link for one of the exceptions. That will !dumpobject that exceptions. Then you should just be able to click on the link for Message in the exception object, and you'll see the text.",
        "summary": "Then I examined the FileNotFoundExceptions. The message in the exception contained the name of the DLL that wasn't loading."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The solution to my problem which was similar: the libs were invalid. If you look in the .classpath file of the project, you'll see classpathentry tags with the key/value kind=\"lib\". Some of mine were incorrect. I didn't discover this until I turned off Validation settings. That is, there were so many errors in the JSP files, etc, that the classpath errors weren't evident (or possibly even showing up). As a result, nothing was being compiled into the destination output folders, but no helpful errors on why.",
        "output": "The solution to my problem which was similar: the libs were invalid.",
        "answer": "The solution to my problem which was similar: the libs were invalid. If you look in the .classpath file of the project, you'll see classpathentry tags with the key/value kind=\"lib\". Some of mine were incorrect. I didn't discover this until I turned off Validation settings. That is, there were so many errors in the JSP files, etc, that the classpath errors weren't evident (or possibly even showing up). As a result, nothing was being compiled into the destination output folders, but no helpful errors on why.",
        "summary": "The solution to my problem which was similar: the libs were invalid."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n First congrats that managed to figure out lambda. In my opinion this is really powerful construct to act with. The trend these days towards functional programming languages is surely an indicator that it neither should be avoided nor it will be redefined in the near future. You just have to think a little bit different. I'm sure soon you will love it. But be careful if you deal only with python. Because the lambda is not a real closure, it is \"broken\" somehow: pythons lambda is broken",
        "output": "The trend these days towards functional programming languages is surely an indicator that it neither should be avoided nor it will be redefined in the near future.",
        "answer": "First congrats that managed to figure out lambda. In my opinion this is really powerful construct to act with. The trend these days towards functional programming languages is surely an indicator that it neither should be avoided nor it will be redefined in the near future. You just have to think a little bit different. I'm sure soon you will love it. But be careful if you deal only with python. Because the lambda is not a real closure, it is \"broken\" somehow: pythons lambda is broken",
        "summary": "The trend these days towards functional programming languages is surely an indicator that it neither should be avoided nor it will be redefined in the near future."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n the IP adress is 0.0.0.0, state = LISTENING: means that port 80 is listening to all interfaces (not used) How to read NETSTAT -AN results: https://sites.google.com/site/xiangyangsite/home/technical-tips/linux-unix/networks-related-commands-on-linux/how-to-read-netstat--an-results",
        "output": "the IP adress is 0.0.0.0, state = LISTENING: means that port 80 is listening to all interfaces (not used)",
        "answer": "the IP adress is 0.0.0.0, state = LISTENING: means that port 80 is listening to all interfaces (not used) How to read NETSTAT -AN results: https://sites.google.com/site/xiangyangsite/home/technical-tips/linux-unix/networks-related-commands-on-linux/how-to-read-netstat--an-results",
        "summary": "the IP adress is 0.0.0.0, state = LISTENING: means that port 80 is listening to all interfaces (not used)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I prefer to use typename because I'm not a fan of overloaded keywords (jeez - how many different meanings does <code>static</code> have for various different contexts? ).",
        "output": "I prefer to use typename because I'm not a fan of overloaded keywords (jeez - how many different meanings does <code>static</code> have for various different contexts?",
        "answer": "I prefer to use typename because I'm not a fan of overloaded keywords (jeez - how many different meanings does <code>static</code> have for various different contexts? ).",
        "summary": "I prefer to use typename because I'm not a fan of overloaded keywords (jeez - how many different meanings does <code>static</code> have for various different contexts?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I may be wrong, but from what I understand, this is controlled by the user's browser preferences, and I do not believe that this can be overridden.",
        "output": "I may be wrong, but from what I understand, this is controlled by the user's browser preferences, and I do not believe that this can be overridden.",
        "answer": "I may be wrong, but from what I understand, this is controlled by the user's browser preferences, and I do not believe that this can be overridden.",
        "summary": "I may be wrong, but from what I understand, this is controlled by the user's browser preferences, and I do not believe that this can be overridden."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Intuitively, the keyword returns a value from the function without leaving it, i.e. in your code example it returns the current <code>item</code> value and then resumes the loop. More formally, it is used by the compiler to generate code for an <em>iterator</em>. Iterators are functions that return <code>IEnumerable</code> objects. The MSDN has several articles about them.",
        "output": "Iterators are functions that return <code>IEnumerable</code> objects.",
        "answer": "Intuitively, the keyword returns a value from the function without leaving it, i.e. in your code example it returns the current <code>item</code> value and then resumes the loop. More formally, it is used by the compiler to generate code for an <em>iterator</em>. Iterators are functions that return <code>IEnumerable</code> objects. The MSDN has several articles about them.",
        "summary": "Iterators are functions that return <code>IEnumerable</code> objects."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes. Set a reference to MS Scripting runtime ('Microsoft Scripting Runtime'). As per @regjo's comment, go to Tools->References and tick the box for 'Microsoft Scripting Runtime'. Create a dictionary instance using the code below: BIGBLOCK or BIGBLOCK Example of use: BIGBLOCK Don't forget to set the dictionary to <code>Nothing</code> when you have finished using it. BIGBLOCK",
        "output": "Create a dictionary instance using the code below: BIGBLOCK or BIGBLOCK Example of use: BIGBLOCK Don't forget to set the dictionary to <code>Nothing</code> when you have finished using it. BIGBLOCK",
        "answer": "Yes. Set a reference to MS Scripting runtime ('Microsoft Scripting Runtime'). As per @regjo's comment, go to Tools->References and tick the box for 'Microsoft Scripting Runtime'. Create a dictionary instance using the code below: BIGBLOCK or BIGBLOCK Example of use: BIGBLOCK Don't forget to set the dictionary to <code>Nothing</code> when you have finished using it. BIGBLOCK",
        "summary": "Create a dictionary instance using the code below: BIGBLOCK or BIGBLOCK Example of use: BIGBLOCK Don't forget to set the dictionary to <code>Nothing</code> when you have finished using it. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The MessageBox <strong><em>does</em></strong> produce a DialogResults You can also specify the buttons easily enough. More documentation can be found at http://msdn.microsoft.com/en-us/library/ba2a6d06.aspx",
        "output": "The MessageBox <strong><em>does</em></strong> produce a DialogResults You can also specify the buttons easily enough.",
        "answer": "The MessageBox <strong><em>does</em></strong> produce a DialogResults You can also specify the buttons easily enough. More documentation can be found at http://msdn.microsoft.com/en-us/library/ba2a6d06.aspx",
        "summary": "The MessageBox <strong><em>does</em></strong> produce a DialogResults You can also specify the buttons easily enough."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Make half of the image transparent so the background colour is seen through it. Else simply add another div taking up 50% up the container div and float it either left or right. Then apply either the image or the colour to it.",
        "output": "Make half of the image transparent so the background colour is seen through it. Else simply add another div taking up 50% up the container div and float it either left or right. Then apply either the image or the colour to it.",
        "answer": "Make half of the image transparent so the background colour is seen through it. Else simply add another div taking up 50% up the container div and float it either left or right. Then apply either the image or the colour to it.",
        "summary": "Make half of the image transparent so the background colour is seen through it. Else simply add another div taking up 50% up the container div and float it either left or right. Then apply either the image or the colour to it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Those access modifiers specify where your members are visible. You should probably read this up. Take the link given by IainMH as a starting point. Static members are one per class and not one per instance.",
        "output": "Those access modifiers specify where your members are visible. Static members are one per class and not one per instance.",
        "answer": "Those access modifiers specify where your members are visible. You should probably read this up. Take the link given by IainMH as a starting point. Static members are one per class and not one per instance.",
        "summary": "Those access modifiers specify where your members are visible. Static members are one per class and not one per instance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are you refering to the toggle outlining? You can do:Control + M then Control + L to toggle all outlining",
        "output": "You can do:Control + M then Control + L to toggle all outlining",
        "answer": "Are you refering to the toggle outlining? You can do:Control + M then Control + L to toggle all outlining",
        "summary": "You can do:Control + M then Control + L to toggle all outlining"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Regarding the question of <strong>Nothing</strong> <li>Namespace types are internal by default <li>Any type member, including nested types are private by default",
        "output": "<li>Namespace types are internal by default <li>Any type member, including nested types are private by default",
        "answer": "Regarding the question of <strong>Nothing</strong> <li>Namespace types are internal by default <li>Any type member, including nested types are private by default",
        "summary": "<li>Namespace types are internal by default <li>Any type member, including nested types are private by default"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>transient</code> is used to indicate that a class field doesn't need to be serialized.Probably the best example is a <code>Thread</code> field. There's usually no reason to serialize a <code>Thread</code>, as its state is very 'flow specific'.",
        "output": "<code>transient</code> is used to indicate that a class field doesn't need to be serialized.Probably the best example is a <code>Thread</code> field.",
        "answer": "<code>transient</code> is used to indicate that a class field doesn't need to be serialized.Probably the best example is a <code>Thread</code> field. There's usually no reason to serialize a <code>Thread</code>, as its state is very 'flow specific'.",
        "summary": "<code>transient</code> is used to indicate that a class field doesn't need to be serialized.Probably the best example is a <code>Thread</code> field."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Have you verified that there is in fact a row where Staff_Id = @PersonID? What you've posted works fine in a test script, assuming the row exists. If you comment out the insert statement, then the error is raised.",
        "output": "Have you verified that there is in fact a row where Staff_Id = @PersonID? If you comment out the insert statement, then the error is raised.",
        "answer": "Have you verified that there is in fact a row where Staff_Id = @PersonID? What you've posted works fine in a test script, assuming the row exists. If you comment out the insert statement, then the error is raised.",
        "summary": "Have you verified that there is in fact a row where Staff_Id = @PersonID? If you comment out the insert statement, then the error is raised."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Not as far as i know there isn't what i do normally in this kind of circumstances is create a block beneath with a bigger size((bordersize*2)+originalsize) and make it transparent using here is an example",
        "output": "Not as far as i know there isn't what i do normally in this kind of circumstances is create a block beneath with a bigger size((bordersize*2)+originalsize) and make it transparent using",
        "answer": "Not as far as i know there isn't what i do normally in this kind of circumstances is create a block beneath with a bigger size((bordersize*2)+originalsize) and make it transparent using here is an example",
        "summary": "Not as far as i know there isn't what i do normally in this kind of circumstances is create a block beneath with a bigger size((bordersize*2)+originalsize) and make it transparent using"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One classic instance of a bus error is on certain architecures, such as the SPARC (at least some SPARCs, maybe this has been changed), is when you do a mis-aligned access. For instance: This snippet tries to write the 32-bit integer value <code>0xdeadf00d</code> to an address that is (most likely) not properly aligned, and will generate a bus error on architectures that are \"picky\" in this regard. The Intel x86 is, by the way, <strong>not</strong> such an architecture, it would allow the access (albeit execute it more slowly).",
        "output": "One classic instance of a bus error is on certain architecures, such as the SPARC (at least some SPARCs, maybe this has been changed), is when you do a mis-aligned access.",
        "answer": "One classic instance of a bus error is on certain architecures, such as the SPARC (at least some SPARCs, maybe this has been changed), is when you do a mis-aligned access. For instance: This snippet tries to write the 32-bit integer value <code>0xdeadf00d</code> to an address that is (most likely) not properly aligned, and will generate a bus error on architectures that are \"picky\" in this regard. The Intel x86 is, by the way, <strong>not</strong> such an architecture, it would allow the access (albeit execute it more slowly).",
        "summary": "One classic instance of a bus error is on certain architecures, such as the SPARC (at least some SPARCs, maybe this has been changed), is when you do a mis-aligned access."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could also look with a It gives the ports with the corresponding application that keeps them open. Edit: or TCPView.",
        "output": "You could also look with a It gives the ports with the corresponding application that keeps them open.",
        "answer": "You could also look with a It gives the ports with the corresponding application that keeps them open. Edit: or TCPView.",
        "summary": "You could also look with a It gives the ports with the corresponding application that keeps them open."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Variables declared globally have a global scope. Variables declared within a function are scoped to that function, and shadow global variables of the same name. (I'm sure there are many subtleties that real JavaScript programmers will be able to point out in other answers. In particular I came across this page about what exactly <code>this</code> means at any time. Hopefully this more introductory link is enough to get you started though.)",
        "output": "Variables declared globally have a global scope. Variables declared within a function are scoped to that function, and shadow global variables of the same name.",
        "answer": "Variables declared globally have a global scope. Variables declared within a function are scoped to that function, and shadow global variables of the same name. (I'm sure there are many subtleties that real JavaScript programmers will be able to point out in other answers. In particular I came across this page about what exactly <code>this</code> means at any time. Hopefully this more introductory link is enough to get you started though.)",
        "summary": "Variables declared globally have a global scope. Variables declared within a function are scoped to that function, and shadow global variables of the same name."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think that biases are almost always helpful. In effect, <strong>a bias value allows you to shift the activation function to the left or right</strong>, which may be critical for successful learning. It might help to look at a simple example. Consider this 1-input, 1-output network that has no bias: The output of the network is computed by multiplying the input (x) by the weight (w0) and passing the result through some kind of activation function (e.g. a sigmoid function.) Here is the function that this network computes, for various values of w0: Changing the weight w0 essentially changes the \"steepness\" of the sigmoid. That's useful, but what if you wanted the network to output 0 when x is 2? Just changing the steepness of the sigmoid won't really work -- <strong>you want to be able to shift the entire curve to the right</strong>. That's exactly what the bias allows you to do. If we add a bias to that network, like so: ...then the output of the network becomes sig(w0*x + w1*1.0). Here is what the output of the network looks like for various values of w1: Having a weight of -5 for w1 shifts the curve to the right, which allows us to have a network that outputs 0 when x is 2.",
        "output": "In effect, <strong>a bias value allows you to shift the activation function to the left or right</strong>, which may be critical for successful learning.",
        "answer": "I think that biases are almost always helpful. In effect, <strong>a bias value allows you to shift the activation function to the left or right</strong>, which may be critical for successful learning. It might help to look at a simple example. Consider this 1-input, 1-output network that has no bias: The output of the network is computed by multiplying the input (x) by the weight (w0) and passing the result through some kind of activation function (e.g. a sigmoid function.) Here is the function that this network computes, for various values of w0: Changing the weight w0 essentially changes the \"steepness\" of the sigmoid. That's useful, but what if you wanted the network to output 0 when x is 2? Just changing the steepness of the sigmoid won't really work -- <strong>you want to be able to shift the entire curve to the right</strong>. That's exactly what the bias allows you to do. If we add a bias to that network, like so: ...then the output of the network becomes sig(w0*x + w1*1.0). Here is what the output of the network looks like for various values of w1: Having a weight of -5 for w1 shifts the curve to the right, which allows us to have a network that outputs 0 when x is 2.",
        "summary": "In effect, <strong>a bias value allows you to shift the activation function to the left or right</strong>, which may be critical for successful learning."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Using <code>new String(byOriginal)</code> and converting back to <code>byte[]</code> using <code>getBytes()</code> doesn't guarantee two <code>byte[]</code> with equal values. This is due to a call to <code>StringCoding.encode(..)</code> which will encode the <code>String</code> to <code>Charset.defaultCharset()</code>. During this encoding, the encoder might choose to replace unknown characters and do other changes. Hence, using <code>String.getBytes()</code> might not return an equal array as you've originally passed to the constructor.",
        "output": "Using <code>new String(byOriginal)</code> and converting back to <code>byte[]</code> using <code>getBytes()</code> doesn't guarantee two <code>byte[]</code> with equal values. This is due to a call to <code>StringCoding.encode(..)</code> which will encode the <code>String</code> to <code>Charset.defaultCharset()</code>.",
        "answer": "Using <code>new String(byOriginal)</code> and converting back to <code>byte[]</code> using <code>getBytes()</code> doesn't guarantee two <code>byte[]</code> with equal values. This is due to a call to <code>StringCoding.encode(..)</code> which will encode the <code>String</code> to <code>Charset.defaultCharset()</code>. During this encoding, the encoder might choose to replace unknown characters and do other changes. Hence, using <code>String.getBytes()</code> might not return an equal array as you've originally passed to the constructor.",
        "summary": "Using <code>new String(byOriginal)</code> and converting back to <code>byte[]</code> using <code>getBytes()</code> doesn't guarantee two <code>byte[]</code> with equal values. This is due to a call to <code>StringCoding.encode(..)</code> which will encode the <code>String</code> to <code>Charset.defaultCharset()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use JavaScript objects as associative arrays. Associative Array: In simple words associative arrays use Strings instead of Integer numbers as index. Create an object with Javascript allows you to add properties to objects by using the following syntax: An alternate syntax for the same is: If you can also create key to value object maps with the following syntax You can iterate through an associative array using the for..in loop construct as follows",
        "output": "Use JavaScript objects as associative arrays. Associative Array: In simple words associative arrays use Strings instead of Integer numbers as index.",
        "answer": "Use JavaScript objects as associative arrays. Associative Array: In simple words associative arrays use Strings instead of Integer numbers as index. Create an object with Javascript allows you to add properties to objects by using the following syntax: An alternate syntax for the same is: If you can also create key to value object maps with the following syntax You can iterate through an associative array using the for..in loop construct as follows",
        "summary": "Use JavaScript objects as associative arrays. Associative Array: In simple words associative arrays use Strings instead of Integer numbers as index."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Who needs trig when you have complex numbers: BIGBLOCK",
        "output": "Who needs trig when you have complex numbers: BIGBLOCK",
        "answer": "Who needs trig when you have complex numbers: BIGBLOCK",
        "summary": "Who needs trig when you have complex numbers: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Better to use keyword <code>continue</code> safe construction like this",
        "output": "Better to use keyword <code>continue</code> safe construction like this",
        "answer": "Better to use keyword <code>continue</code> safe construction like this",
        "summary": "Better to use keyword <code>continue</code> safe construction like this"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The most common cause of stack overflows is excessively deep or infinite recursion. If this is your problem, this tutorial about Java Recursion could help understand the problem.",
        "output": "The most common cause of stack overflows is excessively deep or infinite recursion.",
        "answer": "The most common cause of stack overflows is excessively deep or infinite recursion. If this is your problem, this tutorial about Java Recursion could help understand the problem.",
        "summary": "The most common cause of stack overflows is excessively deep or infinite recursion."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Biggest difference is a Web Server handles HTTP requests, while an Application server will execute business logic on any number of protocols.",
        "output": "Biggest difference is a Web Server handles HTTP requests, while an Application server will execute business logic on any number of protocols.",
        "answer": "Biggest difference is a Web Server handles HTTP requests, while an Application server will execute business logic on any number of protocols.",
        "summary": "Biggest difference is a Web Server handles HTTP requests, while an Application server will execute business logic on any number of protocols."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n use s1.equalsIgnoreCase(s2) http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#equalsIgnoreCase(java.lang.Object)",
        "output": "use s1.equalsIgnoreCase(s2)",
        "answer": "use s1.equalsIgnoreCase(s2) http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#equalsIgnoreCase(java.lang.Object)",
        "summary": "use s1.equalsIgnoreCase(s2)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n CTL + M + L expands all CTL + M + O collapses all In the MSDN article \"Default Keyboard Shortcuts in Visual Studio,\" see the section \"Text Editor\" if you're looking for other shortcuts - these 2 are just a few of the many that are available.",
        "output": "CTL + M + L expands all CTL + M + O collapses all",
        "answer": "CTL + M + L expands all CTL + M + O collapses all In the MSDN article \"Default Keyboard Shortcuts in Visual Studio,\" see the section \"Text Editor\" if you're looking for other shortcuts - these 2 are just a few of the many that are available.",
        "summary": "CTL + M + L expands all CTL + M + O collapses all"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As others have mentioned: CSS-3 says that you can use the <code>rgba(...)</code> syntax to specify a border color with an opacity (alpha) value. here's a quick example if you'd like to check it. It works in Safari and Chrome (probably works in all webkit browsers). It works in Firefox I doubt that it works at all in IE, but I suspect that there is some filter or behavior that will make it work. There's also this stackoverflow post, which suggests some other issues--namely, that the border renders on-top-of any background color (or background image) that you've specified; thus limiting the usefulness of border alpha in many cases.",
        "output": "As others have mentioned: CSS-3 says that you can use the <code>rgba(...)</code> syntax to specify a border color with an opacity (alpha) value.",
        "answer": "As others have mentioned: CSS-3 says that you can use the <code>rgba(...)</code> syntax to specify a border color with an opacity (alpha) value. here's a quick example if you'd like to check it. It works in Safari and Chrome (probably works in all webkit browsers). It works in Firefox I doubt that it works at all in IE, but I suspect that there is some filter or behavior that will make it work. There's also this stackoverflow post, which suggests some other issues--namely, that the border renders on-top-of any background color (or background image) that you've specified; thus limiting the usefulness of border alpha in many cases.",
        "summary": "As others have mentioned: CSS-3 says that you can use the <code>rgba(...)</code> syntax to specify a border color with an opacity (alpha) value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>prototype</code> allows you to make classes. if you do not use <code>prototype</code> then it becomes a static. Here is a short example. In the above case, you have static funcation call test. This function can be accessed only by obj.test where you can imagine obj to be a class. where as in the below code The obj has become a class which can now be instantiated. Multiple instances of obj can exist and they all have the <code>test</code> function. The above is my understanding. I am making it a community wiki, so people can correct me if I am wrong.",
        "output": "<code>prototype</code> allows you to make classes. if you do not use <code>prototype</code> then it becomes a static.",
        "answer": "<code>prototype</code> allows you to make classes. if you do not use <code>prototype</code> then it becomes a static. Here is a short example. In the above case, you have static funcation call test. This function can be accessed only by obj.test where you can imagine obj to be a class. where as in the below code The obj has become a class which can now be instantiated. Multiple instances of obj can exist and they all have the <code>test</code> function. The above is my understanding. I am making it a community wiki, so people can correct me if I am wrong.",
        "summary": "<code>prototype</code> allows you to make classes. if you do not use <code>prototype</code> then it becomes a static."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A clarification about the <code>obj.getClass() != getClass()</code>. This statement is the result of <code>equals()</code> being inheritance unfriendly. The JLS (Java language specification) specifies that if <code>A.equals(B) == true</code> then <code>B.equals(A)</code> must also return <code>true</code>. If you omit that statement inheriting classes that override <code>equals()</code> (and change its behavior) will break this specification. Consider the following example of what happens when the statement is omitted: Doing <code>new A(1).equals(new A(1))</code> Also, <code>new B(1,1).equals(new B(1,1))</code> result give out true, as it should. This looks all very good, but look what happens if we try to use both classes: Obviously, this is wrong. If you want to ensure the symmetric condition. a=b if b=a and the Liskov substitution principle call <code>super.equals(other)</code> not only in the case of <code>B</code> instance, but check after for <code>A</code> instance: Which will output: Where, if <code>a</code> is not a reference of <code>B</code>, then it might be a be a reference of class <code>A</code> (because you extend it), in this case you call <code>super.equals()</code> <strong>too</strong>.",
        "output": "The JLS (Java language specification) specifies that if <code>A.equals(B) == true</code> then <code>B.equals(A)</code> must also return <code>true</code>. If you want to ensure the symmetric condition. a=b if b=a and the Liskov substitution principle call <code>super.equals(other)</code> not only in the case of <code>B</code> instance, but check after for <code>A</code> instance:",
        "answer": "A clarification about the <code>obj.getClass() != getClass()</code>. This statement is the result of <code>equals()</code> being inheritance unfriendly. The JLS (Java language specification) specifies that if <code>A.equals(B) == true</code> then <code>B.equals(A)</code> must also return <code>true</code>. If you omit that statement inheriting classes that override <code>equals()</code> (and change its behavior) will break this specification. Consider the following example of what happens when the statement is omitted: Doing <code>new A(1).equals(new A(1))</code> Also, <code>new B(1,1).equals(new B(1,1))</code> result give out true, as it should. This looks all very good, but look what happens if we try to use both classes: Obviously, this is wrong. If you want to ensure the symmetric condition. a=b if b=a and the Liskov substitution principle call <code>super.equals(other)</code> not only in the case of <code>B</code> instance, but check after for <code>A</code> instance: Which will output: Where, if <code>a</code> is not a reference of <code>B</code>, then it might be a be a reference of class <code>A</code> (because you extend it), in this case you call <code>super.equals()</code> <strong>too</strong>.",
        "summary": "The JLS (Java language specification) specifies that if <code>A.equals(B) == true</code> then <code>B.equals(A)</code> must also return <code>true</code>. If you want to ensure the symmetric condition. a=b if b=a and the Liskov substitution principle call <code>super.equals(other)</code> not only in the case of <code>B</code> instance, but check after for <code>A</code> instance:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What I've done in the past is hash the key via something like SHA256, then extract the bytes from the hash into the key byte[]. After you have your byte[] you can simply do:",
        "output": "After you have your byte[] you can simply do:",
        "answer": "What I've done in the past is hash the key via something like SHA256, then extract the bytes from the hash into the key byte[]. After you have your byte[] you can simply do:",
        "summary": "After you have your byte[] you can simply do:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An application server is typically designed and deployed to facilitate longer running processes that will also be more resource intensive. A web server is used for short bursts that are not resource intensive, generally. This is mostly to facilitate serving up web based traffic.",
        "output": "An application server is typically designed and deployed to facilitate longer running processes that will also be more resource intensive. A web server is used for short bursts that are not resource intensive, generally.",
        "answer": "An application server is typically designed and deployed to facilitate longer running processes that will also be more resource intensive. A web server is used for short bursts that are not resource intensive, generally. This is mostly to facilitate serving up web based traffic.",
        "summary": "An application server is typically designed and deployed to facilitate longer running processes that will also be more resource intensive. A web server is used for short bursts that are not resource intensive, generally."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Margin is on the outside of block elements while padding is on the inside. <li>Use margin to separate the block from things outside it <li>Use padding to move the contents away from the edges of the block.",
        "output": "Margin is on the outside of block elements while padding is on the inside. <li>Use margin to separate the block from things outside it <li>Use padding to move the contents away from the edges of the block.",
        "answer": "Margin is on the outside of block elements while padding is on the inside. <li>Use margin to separate the block from things outside it <li>Use padding to move the contents away from the edges of the block.",
        "summary": "Margin is on the outside of block elements while padding is on the inside. <li>Use margin to separate the block from things outside it <li>Use padding to move the contents away from the edges of the block."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Along the same lines as Gareth's answer, check out DefaultMutableTreeNode. It's not generic, but otherwise seems to fit the bill. Even though it's in the javax.swing package, it doesn't depend on any AWT or Swing classes. In fact, the source code actually has the comment <code>// ISSUE: this class depends on nothing in AWT -- move to java.util?</code>",
        "output": "Along the same lines as Gareth's answer, check out DefaultMutableTreeNode. Even though it's in the javax.swing package, it doesn't depend on any AWT or Swing classes.",
        "answer": "Along the same lines as Gareth's answer, check out DefaultMutableTreeNode. It's not generic, but otherwise seems to fit the bill. Even though it's in the javax.swing package, it doesn't depend on any AWT or Swing classes. In fact, the source code actually has the comment <code>// ISSUE: this class depends on nothing in AWT -- move to java.util?</code>",
        "summary": "Along the same lines as Gareth's answer, check out DefaultMutableTreeNode. Even though it's in the javax.swing package, it doesn't depend on any AWT or Swing classes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I hear a lot of people complain the first one is too difficult to understand and that it is unclear. I don't see a problem with it, but after having that discussion, I use the second one even on INNER JOINS for clarity.",
        "output": "I don't see a problem with it, but after having that discussion, I use the second one even on INNER JOINS for clarity.",
        "answer": "I hear a lot of people complain the first one is too difficult to understand and that it is unclear. I don't see a problem with it, but after having that discussion, I use the second one even on INNER JOINS for clarity.",
        "summary": "I don't see a problem with it, but after having that discussion, I use the second one even on INNER JOINS for clarity."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n it's simple, all the problems can be solved like this, 1) have escape always take you out of fullscreen mode    (this doesn't apply to manually entering fullscreen through f11) 2) temporarily display a small banner saying fullscreen video mode is entered (by the browser) 3) block fullscreen action by default, just like has been done for pop-ups and local database in html5 and location api and etc, etc. i don't see any problems with this design. anyone think i missed anything?",
        "output": "1) have escape always take you out of fullscreen mode    (this doesn't apply to manually entering fullscreen through f11) 2) temporarily display a small banner saying fullscreen video mode is entered (by the browser) 3) block fullscreen action by default, just like has been done for pop-ups and local database in html5 and location api and etc, etc.",
        "answer": "it's simple, all the problems can be solved like this, 1) have escape always take you out of fullscreen mode    (this doesn't apply to manually entering fullscreen through f11) 2) temporarily display a small banner saying fullscreen video mode is entered (by the browser) 3) block fullscreen action by default, just like has been done for pop-ups and local database in html5 and location api and etc, etc. i don't see any problems with this design. anyone think i missed anything?",
        "summary": "1) have escape always take you out of fullscreen mode    (this doesn't apply to manually entering fullscreen through f11) 2) temporarily display a small banner saying fullscreen video mode is entered (by the browser) 3) block fullscreen action by default, just like has been done for pop-ups and local database in html5 and location api and etc, etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Classes are like categories. Many HTML elements can belong to a class, and an HTML element can have more than one class. Classes are used to apply general styles or styles that can be applied across multiple HTML elements. IDs are identifiers. They're unique; no one else is allowed to have that same ID. IDs are used to apply unique styles to an HTML element. I use IDs and classes in this fashion: In this example, the header and content sections can be styled via #header and #content. Each section of the content can be applied a common style through #content .section. Just for kicks, I added a \"special\" class for the middle section. Suppose you wanted a particular section to have a special styling. This can be achieved with the .special class, yet the section still inherits the common styles from #content .section. When I do JavaScript or CSS development, I typically use IDs to access/manipulate a very specific HTML element, and I use classes to access/apply styles to a broad range of elements.",
        "output": "Classes are like categories. Classes are used to apply general styles or styles that can be applied across multiple HTML elements. IDs are identifiers. They're unique; no one else is allowed to have that same ID. IDs are used to apply unique styles to an HTML element.",
        "answer": "Classes are like categories. Many HTML elements can belong to a class, and an HTML element can have more than one class. Classes are used to apply general styles or styles that can be applied across multiple HTML elements. IDs are identifiers. They're unique; no one else is allowed to have that same ID. IDs are used to apply unique styles to an HTML element. I use IDs and classes in this fashion: In this example, the header and content sections can be styled via #header and #content. Each section of the content can be applied a common style through #content .section. Just for kicks, I added a \"special\" class for the middle section. Suppose you wanted a particular section to have a special styling. This can be achieved with the .special class, yet the section still inherits the common styles from #content .section. When I do JavaScript or CSS development, I typically use IDs to access/manipulate a very specific HTML element, and I use classes to access/apply styles to a broad range of elements.",
        "summary": "Classes are like categories. Classes are used to apply general styles or styles that can be applied across multiple HTML elements. IDs are identifiers. They're unique; no one else is allowed to have that same ID. IDs are used to apply unique styles to an HTML element."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From what I can gather layout_gravity is the gravity of that view inside its parent, and gravity is the gravity of the children inside that view. I think this is right but the best way to find out is to play around.",
        "output": "From what I can gather layout_gravity is the gravity of that view inside its parent, and gravity is the gravity of the children inside that view.",
        "answer": "From what I can gather layout_gravity is the gravity of that view inside its parent, and gravity is the gravity of the children inside that view. I think this is right but the best way to find out is to play around.",
        "summary": "From what I can gather layout_gravity is the gravity of that view inside its parent, and gravity is the gravity of the children inside that view."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You get this error when a datasource attempts to bind to data but cannot because it cannot find the connection string. In my experience, this is not usually due to an error in the web.config (though I am not 100% sure of this). If you are programmatically assigning a datasource (such as a SqlDataSource) or creating a query (i.e. using a SqlConnection/SqlCommand combination), make sure you assigned it a ConnectionString. If you are hooking up a databound element to a datasource (i.e. a GridView or ComboBox to a SqlDataSource), make sure the datasource is assigned to one of your connection strings. Post your code (for the databound element and the web.config to be safe) and we can take a look at it. <strong>EDIT:</strong>  I think the problem is that you are trying to get the Connection String from the AppSettings area, and programmatically that is not where it exists. Try replacing that with <code>ConfigurationManager.ConnectionStrings[\"ConnectionString\"].ConnectionString</code> (if ConnectionString is the name of your connection string.)",
        "output": "You get this error when a datasource attempts to bind to data but cannot because it cannot find the connection string. If you are programmatically assigning a datasource (such as a SqlDataSource) or creating a query (i.e. using a SqlConnection/SqlCommand combination), make sure you assigned it a ConnectionString. If you are hooking up a databound element to a datasource (i.e. a GridView or ComboBox to a SqlDataSource), make sure the datasource is assigned to one of your connection strings. Try replacing that with <code>ConfigurationManager.ConnectionStrings[\"ConnectionString\"].ConnectionString</code> (if ConnectionString is the name of your connection string.)",
        "answer": "You get this error when a datasource attempts to bind to data but cannot because it cannot find the connection string. In my experience, this is not usually due to an error in the web.config (though I am not 100% sure of this). If you are programmatically assigning a datasource (such as a SqlDataSource) or creating a query (i.e. using a SqlConnection/SqlCommand combination), make sure you assigned it a ConnectionString. If you are hooking up a databound element to a datasource (i.e. a GridView or ComboBox to a SqlDataSource), make sure the datasource is assigned to one of your connection strings. Post your code (for the databound element and the web.config to be safe) and we can take a look at it. <strong>EDIT:</strong>  I think the problem is that you are trying to get the Connection String from the AppSettings area, and programmatically that is not where it exists. Try replacing that with <code>ConfigurationManager.ConnectionStrings[\"ConnectionString\"].ConnectionString</code> (if ConnectionString is the name of your connection string.)",
        "summary": "You get this error when a datasource attempts to bind to data but cannot because it cannot find the connection string. If you are programmatically assigning a datasource (such as a SqlDataSource) or creating a query (i.e. using a SqlConnection/SqlCommand combination), make sure you assigned it a ConnectionString. If you are hooking up a databound element to a datasource (i.e. a GridView or ComboBox to a SqlDataSource), make sure the datasource is assigned to one of your connection strings. Try replacing that with <code>ConfigurationManager.ConnectionStrings[\"ConnectionString\"].ConnectionString</code> (if ConnectionString is the name of your connection string.)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Methods are functions of classes. In normal jargon, people interchange method and function all over. Basically you can think of them as the same thing (not sure if global functions are called methods). http://en.wikipedia.org/wiki/Method_(computer_science)",
        "output": "Methods are functions of classes. In normal jargon, people interchange method and function all over.",
        "answer": "Methods are functions of classes. In normal jargon, people interchange method and function all over. Basically you can think of them as the same thing (not sure if global functions are called methods). http://en.wikipedia.org/wiki/Method_(computer_science)",
        "summary": "Methods are functions of classes. In normal jargon, people interchange method and function all over."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <em>Update</em>: newer versions should use <code>php-sqlite3</code> package instead of <code>php5-sqlite</code>. So use this, if you are using a recent ubuntu version: Original answer to question is here: If your phpinfo() is not showing the pdo_sqlite line (in my case, on my Ubuntu Server), you just need to run the lines above and then you'll be good to go.",
        "output": "<em>Update</em>: newer versions should use <code>php-sqlite3</code> package instead of <code>php5-sqlite</code>. If your phpinfo() is not showing the pdo_sqlite line (in my case, on my Ubuntu Server), you just need to run the lines above and then you'll be good to go.",
        "answer": "<em>Update</em>: newer versions should use <code>php-sqlite3</code> package instead of <code>php5-sqlite</code>. So use this, if you are using a recent ubuntu version: Original answer to question is here: If your phpinfo() is not showing the pdo_sqlite line (in my case, on my Ubuntu Server), you just need to run the lines above and then you'll be good to go.",
        "summary": "<em>Update</em>: newer versions should use <code>php-sqlite3</code> package instead of <code>php5-sqlite</code>. If your phpinfo() is not showing the pdo_sqlite line (in my case, on my Ubuntu Server), you just need to run the lines above and then you'll be good to go."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Generally, a stored procedure is a \"SQL Function.\" They have: This is a T-SQL focused example. Stored procedures can execute most SQL statements, return scalar and table-based values, and are considered to be more secure because they prevent SQL injection attacks.",
        "output": "Generally, a stored procedure is a \"SQL Function.\" Stored procedures can execute most SQL statements, return scalar and table-based values, and are considered to be more secure because they prevent SQL injection attacks.",
        "answer": "Generally, a stored procedure is a \"SQL Function.\" They have: This is a T-SQL focused example. Stored procedures can execute most SQL statements, return scalar and table-based values, and are considered to be more secure because they prevent SQL injection attacks.",
        "summary": "Generally, a stored procedure is a \"SQL Function.\" Stored procedures can execute most SQL statements, return scalar and table-based values, and are considered to be more secure because they prevent SQL injection attacks."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I put a jquery plugin here VERY SHORT VERSION SHORT VERSION Activated by this code : PLUGIN VERSION Activated by this code : is that right ? UPDATE : From CSS-Tricks",
        "output": "VERY SHORT VERSION SHORT VERSION PLUGIN VERSION",
        "answer": "I put a jquery plugin here VERY SHORT VERSION SHORT VERSION Activated by this code : PLUGIN VERSION Activated by this code : is that right ? UPDATE : From CSS-Tricks",
        "summary": "VERY SHORT VERSION SHORT VERSION PLUGIN VERSION"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to use the  android:background property , eg Also you need to add a value for white in the strings.xml Edit : 18th Nov 2012 The first two letters of an 8 letter color code provide the alpha value, if you are using the html 6 letter color notation the color is opaque. Eg :",
        "output": "You need to use the  android:background property , eg",
        "answer": "You need to use the  android:background property , eg Also you need to add a value for white in the strings.xml Edit : 18th Nov 2012 The first two letters of an 8 letter color code provide the alpha value, if you are using the html 6 letter color notation the color is opaque. Eg :",
        "summary": "You need to use the  android:background property , eg"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the <code>toInteger()</code> method to convert a <code>String</code> to an <code>Integer</code>, e.g. BIGBLOCK An alternative, which avoids using a deprecated method (see below) is BIGBLOCK If you need to check whether the <code>String</code> <em>can</em> be converted before performing the conversion, use BIGBLOCK Grails If you're converting a request parameter in a Grails controller, there's an even better way BIGBLOCK One of the nice features of this technique is that it's safe, i.e. if the parameter cannot be converted to an <code>Integer</code> it returns null rather than throwing an exception. Deprecation Update In recent versions of Groovy one of the  <code>toInteger()</code> methods has been deprecated. The following is taken from <code>org.codehaus.groovy.runtime.StringGroovyMethods</code> in Groovy 2.4.4 BIGBLOCK You can force the non-deprecated version of the method to be called using something awful like: BIGBLOCK Personally, I much prefer: BIGBLOCK",
        "output": "Use the <code>toInteger()</code> method to convert a <code>String</code> to an <code>Integer</code>, e.g. BIGBLOCK An alternative, which avoids using a deprecated method (see below) is BIGBLOCK If you need to check whether the <code>String</code> <em>can</em> be converted before performing the conversion, use BIGBLOCK Grails If you're converting a request parameter in a Grails controller, there's an even better way BIGBLOCK One of the nice features of this technique is that it's safe, i.e. if the parameter cannot be converted to an <code>Integer</code> it returns null rather than throwing an exception.",
        "answer": "Use the <code>toInteger()</code> method to convert a <code>String</code> to an <code>Integer</code>, e.g. BIGBLOCK An alternative, which avoids using a deprecated method (see below) is BIGBLOCK If you need to check whether the <code>String</code> <em>can</em> be converted before performing the conversion, use BIGBLOCK Grails If you're converting a request parameter in a Grails controller, there's an even better way BIGBLOCK One of the nice features of this technique is that it's safe, i.e. if the parameter cannot be converted to an <code>Integer</code> it returns null rather than throwing an exception. Deprecation Update In recent versions of Groovy one of the  <code>toInteger()</code> methods has been deprecated. The following is taken from <code>org.codehaus.groovy.runtime.StringGroovyMethods</code> in Groovy 2.4.4 BIGBLOCK You can force the non-deprecated version of the method to be called using something awful like: BIGBLOCK Personally, I much prefer: BIGBLOCK",
        "summary": "Use the <code>toInteger()</code> method to convert a <code>String</code> to an <code>Integer</code>, e.g. BIGBLOCK An alternative, which avoids using a deprecated method (see below) is BIGBLOCK If you need to check whether the <code>String</code> <em>can</em> be converted before performing the conversion, use BIGBLOCK Grails If you're converting a request parameter in a Grails controller, there's an even better way BIGBLOCK One of the nice features of this technique is that it's safe, i.e. if the parameter cannot be converted to an <code>Integer</code> it returns null rather than throwing an exception."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n On a 32-bit JVM, the largest heap size you can theoretically set is 4gb. To use a larger heap size, you need to use a 64-bit JVM. Try the following: java -Xmx6144M -d64 The -d64 flag is important as this tells the JVM to run in 64-bit mode.",
        "output": "To use a larger heap size, you need to use a 64-bit JVM. Try the following: java -Xmx6144M -d64",
        "answer": "On a 32-bit JVM, the largest heap size you can theoretically set is 4gb. To use a larger heap size, you need to use a 64-bit JVM. Try the following: java -Xmx6144M -d64 The -d64 flag is important as this tells the JVM to run in 64-bit mode.",
        "summary": "To use a larger heap size, you need to use a 64-bit JVM. Try the following: java -Xmx6144M -d64"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to wikipedia: A segmentation fault occurs when a   program attempts to access a memory   location that it is not allowed to   access, or attempts to access a memory   location in a way that is not allowed   (for example, attempting to write to a   read-only location, or to overwrite   part of the operating system).",
        "output": "A segmentation fault occurs when a   program attempts to access a memory   location that it is not allowed to   access, or attempts to access a memory   location in a way that is not allowed   (for example, attempting to write to a   read-only location, or to overwrite   part of the operating system).",
        "answer": "According to wikipedia: A segmentation fault occurs when a   program attempts to access a memory   location that it is not allowed to   access, or attempts to access a memory   location in a way that is not allowed   (for example, attempting to write to a   read-only location, or to overwrite   part of the operating system).",
        "summary": "A segmentation fault occurs when a   program attempts to access a memory   location that it is not allowed to   access, or attempts to access a memory   location in a way that is not allowed   (for example, attempting to write to a   read-only location, or to overwrite   part of the operating system)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n All your problems derive from this Which are enclosed in a try, catch block, the problem is that in case the program found an exception you are not returning anything. Put it like this (modify it as your program logic stands): For the second one you must catch the Exception from the encrypt method call, like this (also modify it as your program logic stands): The lessons you must learn from this: A method with a return-type must always return an object of that type, I mean in all possible scenarios All checked exceptions must always be handled",
        "output": "All your problems derive from this Which are enclosed in a try, catch block, the problem is that in case the program found an exception you are not returning anything. Put it like this (modify it as your program logic stands): For the second one you must catch the Exception from the encrypt method call, like this (also modify it as your program logic stands):",
        "answer": "All your problems derive from this Which are enclosed in a try, catch block, the problem is that in case the program found an exception you are not returning anything. Put it like this (modify it as your program logic stands): For the second one you must catch the Exception from the encrypt method call, like this (also modify it as your program logic stands): The lessons you must learn from this: A method with a return-type must always return an object of that type, I mean in all possible scenarios All checked exceptions must always be handled",
        "summary": "All your problems derive from this Which are enclosed in a try, catch block, the problem is that in case the program found an exception you are not returning anything. Put it like this (modify it as your program logic stands): For the second one you must catch the Exception from the encrypt method call, like this (also modify it as your program logic stands):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also extract the event code from the HTML, like this : BIGBLOCK",
        "output": "You can also extract the event code from the HTML, like this : BIGBLOCK",
        "answer": "You can also extract the event code from the HTML, like this : BIGBLOCK",
        "summary": "You can also extract the event code from the HTML, like this : BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Or instead of the ternary operator, you could use Math.min BIGBLOCK",
        "output": "Or instead of the ternary operator, you could use Math.min BIGBLOCK",
        "answer": "Or instead of the ternary operator, you could use Math.min BIGBLOCK",
        "summary": "Or instead of the ternary operator, you could use Math.min BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could create an Object array and cast it to E everywhere. Yeah, it's not very clean way to do it but it should at least work.",
        "output": "You could create an Object array and cast it to E everywhere.",
        "answer": "You could create an Object array and cast it to E everywhere. Yeah, it's not very clean way to do it but it should at least work.",
        "summary": "You could create an Object array and cast it to E everywhere."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The first one is the default object constructor call. You can use it's parameters if you want. The second one gives you the ability to create not empty array:",
        "output": "The first one is the default object constructor call. The second one gives you the ability to create not empty array:",
        "answer": "The first one is the default object constructor call. You can use it's parameters if you want. The second one gives you the ability to create not empty array:",
        "summary": "The first one is the default object constructor call. The second one gives you the ability to create not empty array:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use sqlite to do this. I find it very, very useful for creating scratch/test databases. <code>sqlite3 foo.sqlite .dump   &gt; foo_as_a_bunch_of_inserts.sql</code>",
        "output": "I use sqlite to do this.",
        "answer": "I use sqlite to do this. I find it very, very useful for creating scratch/test databases. <code>sqlite3 foo.sqlite .dump   &gt; foo_as_a_bunch_of_inserts.sql</code>",
        "summary": "I use sqlite to do this."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have been trying out the various suggestions on this page on iOS 3.1.2 and these are my conclusions: Simply using <code>[UIFont fontWithName:size:]</code> with the fonts in the Resources directory will not work, even if the FOND name is set using FontForge. <code>[UIFont fontWithName:size:]</code> will work if the fonts are loaded first using GSFontAddFromFile. But <code>GSFontAddFromFile</code> is not part of iOS 3.1.2 so it has to be dynamically loaded as described by @rpetrich.",
        "output": "Simply using <code>[UIFont fontWithName:size:]</code> with the fonts in the Resources directory will not work, even if the FOND name is set using FontForge. <code>[UIFont fontWithName:size:]</code> will work if the fonts are loaded first using GSFontAddFromFile. But <code>GSFontAddFromFile</code> is not part of iOS 3.1.2 so it has to be dynamically loaded as described by @rpetrich.",
        "answer": "I have been trying out the various suggestions on this page on iOS 3.1.2 and these are my conclusions: Simply using <code>[UIFont fontWithName:size:]</code> with the fonts in the Resources directory will not work, even if the FOND name is set using FontForge. <code>[UIFont fontWithName:size:]</code> will work if the fonts are loaded first using GSFontAddFromFile. But <code>GSFontAddFromFile</code> is not part of iOS 3.1.2 so it has to be dynamically loaded as described by @rpetrich.",
        "summary": "Simply using <code>[UIFont fontWithName:size:]</code> with the fonts in the Resources directory will not work, even if the FOND name is set using FontForge. <code>[UIFont fontWithName:size:]</code> will work if the fonts are loaded first using GSFontAddFromFile. But <code>GSFontAddFromFile</code> is not part of iOS 3.1.2 so it has to be dynamically loaded as described by @rpetrich."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Pair would be a good stuff, to be a basic construction unit for a complex generics, for instance, this is from my code: It is just the same as Haskell's Tuple",
        "output": "Pair would be a good stuff, to be a basic construction unit for a complex generics, for instance, this is from my code:",
        "answer": "Pair would be a good stuff, to be a basic construction unit for a complex generics, for instance, this is from my code: It is just the same as Haskell's Tuple",
        "summary": "Pair would be a good stuff, to be a basic construction unit for a complex generics, for instance, this is from my code:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are you allowed to use a framework? jQuery and Prototype make this sort of thing pretty easy. Here's a sample in Prototype: BIGBLOCK",
        "output": "jQuery and Prototype make this sort of thing pretty easy. Here's a sample in Prototype: BIGBLOCK",
        "answer": "Are you allowed to use a framework? jQuery and Prototype make this sort of thing pretty easy. Here's a sample in Prototype: BIGBLOCK",
        "summary": "jQuery and Prototype make this sort of thing pretty easy. Here's a sample in Prototype: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could try using: <code>&amp;#145;</code>",
        "output": "You could try using: <code>&amp;#145;</code>",
        "answer": "You could try using: <code>&amp;#145;</code>",
        "summary": "You could try using: <code>&amp;#145;</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A singleton gets implemented using a static method. Static methods are avoided by people who do unit testing because they cannot be mocked or stubbed. Most people on this site are big proponents of unit testing. The generally most accepted convention to avoid them is using the inversion of control pattern.",
        "output": "A singleton gets implemented using a static method. Static methods are avoided by people who do unit testing because they cannot be mocked or stubbed.",
        "answer": "A singleton gets implemented using a static method. Static methods are avoided by people who do unit testing because they cannot be mocked or stubbed. Most people on this site are big proponents of unit testing. The generally most accepted convention to avoid them is using the inversion of control pattern.",
        "summary": "A singleton gets implemented using a static method. Static methods are avoided by people who do unit testing because they cannot be mocked or stubbed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The problem is in this method: This is the method signature which pretty much says: what the method name is: encrypt what parameter it receives: a String named toEncrypt its access modifier: public static and if it may or not throw an exception when invoked. In this case the method signature says that when invoked this method \"could\" potentially throw an exception of type \"Exception\". So the compilers is saying: Either you surround that with a try/catch construct or you declare the method ( where is being used ) to throw \"Exception\" it self. The real problem is the \"encrypt\" method definition. No method should ever return \"Exception\", because it is too generic and may hide some other kinds of exception better is to have an specific exception. Try this: Basically in this particular case you should make sure the cryptography package is available in the system. Java needs an extension for the cryptography package, so, the exceptions are declared as \"checked\" exceptions. For you to handle when they are not present. In this small program you cannot do anything if the cryptography package is not available, so you check that at \"development\" time. If those exceptions are thrown when your program is running is because you did something wrong in \"development\" thus a RuntimeException subclass is more appropriate. The last line don't need a return statement anymore, in the first version you were catching the exception and doing nothing with it, that's wrong. If the code is to fail, it is better to Fail fast Here are some related answers: Catching Exceptions in Java When to choose checked and unchecked exceptions Why don__________________________ÃÂ¢________________________________t you have to explicitly declare that you might throw some built in exceptions in Java? Exception other than RuntimeException",
        "output": "The real problem is the \"encrypt\" method definition. No method should ever return \"Exception\", because it is too generic and may hide some other kinds of exception better is to have an specific exception. Try this:",
        "answer": "The problem is in this method: This is the method signature which pretty much says: what the method name is: encrypt what parameter it receives: a String named toEncrypt its access modifier: public static and if it may or not throw an exception when invoked. In this case the method signature says that when invoked this method \"could\" potentially throw an exception of type \"Exception\". So the compilers is saying: Either you surround that with a try/catch construct or you declare the method ( where is being used ) to throw \"Exception\" it self. The real problem is the \"encrypt\" method definition. No method should ever return \"Exception\", because it is too generic and may hide some other kinds of exception better is to have an specific exception. Try this: Basically in this particular case you should make sure the cryptography package is available in the system. Java needs an extension for the cryptography package, so, the exceptions are declared as \"checked\" exceptions. For you to handle when they are not present. In this small program you cannot do anything if the cryptography package is not available, so you check that at \"development\" time. If those exceptions are thrown when your program is running is because you did something wrong in \"development\" thus a RuntimeException subclass is more appropriate. The last line don't need a return statement anymore, in the first version you were catching the exception and doing nothing with it, that's wrong. If the code is to fail, it is better to Fail fast Here are some related answers: Catching Exceptions in Java When to choose checked and unchecked exceptions Why don__________________________ÃÂ¢________________________________t you have to explicitly declare that you might throw some built in exceptions in Java? Exception other than RuntimeException",
        "summary": "The real problem is the \"encrypt\" method definition. No method should ever return \"Exception\", because it is too generic and may hide some other kinds of exception better is to have an specific exception. Try this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I guess it should be readability ;) CROSS APPLY will be somewhat unique for people reading to tell them that a UDF is being used which will be applied to each row from the table on the left. Ofcourse, there are other limitations where a CROSS APPLY is better used than JOIN which other friends have posted above.",
        "output": "CROSS APPLY will be somewhat unique for people reading to tell them that a UDF is being used which will be applied to each row from the table on the left.",
        "answer": "I guess it should be readability ;) CROSS APPLY will be somewhat unique for people reading to tell them that a UDF is being used which will be applied to each row from the table on the left. Ofcourse, there are other limitations where a CROSS APPLY is better used than JOIN which other friends have posted above.",
        "summary": "CROSS APPLY will be somewhat unique for people reading to tell them that a UDF is being used which will be applied to each row from the table on the left."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Its very Old  Jul (which year) but I had the same problem . Actual issue found that eclipse was not able to generate class file for the java file , classpath was proper. See the problem tab and check if your project is missing something/file. you can create a new proj and add files one by one and build them until it stops compiling and creating classes ( check the workspace/proj/bin/package/  folder for classes ) its wierd but true , ecplise was failing in compliation because 4 of 20 java files were using a single image which was missing. and as result none of the java file was compiled . CLASSPATH is not a issue here.",
        "output": "See the problem tab and check if your project is missing something/file. you can create a new proj and add files one by one and build them until it stops compiling and creating classes ( check the workspace/proj/bin/package/  folder for classes )",
        "answer": "Its very Old  Jul (which year) but I had the same problem . Actual issue found that eclipse was not able to generate class file for the java file , classpath was proper. See the problem tab and check if your project is missing something/file. you can create a new proj and add files one by one and build them until it stops compiling and creating classes ( check the workspace/proj/bin/package/  folder for classes ) its wierd but true , ecplise was failing in compliation because 4 of 20 java files were using a single image which was missing. and as result none of the java file was compiled . CLASSPATH is not a issue here.",
        "summary": "See the problem tab and check if your project is missing something/file. you can create a new proj and add files one by one and build them until it stops compiling and creating classes ( check the workspace/proj/bin/package/  folder for classes )"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n try this function <code>$('div.total-title').text('test');</code>",
        "output": "try this function <code>$('div.total-title').text('test');</code>",
        "answer": "try this function <code>$('div.total-title').text('test');</code>",
        "summary": "try this function <code>$('div.total-title').text('test');</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n That's a fine solution. I just wanted to add BIGBLOCK as a rudimentary error mechanism. It will immediately stop your script if a simple command fails. I think this should have been the default behavior: since such errors almost always signify something unexpected, it is not really 'sane' to keep executing the following commands.",
        "output": "I just wanted to add BIGBLOCK It will immediately stop your script if a simple command fails.",
        "answer": "That's a fine solution. I just wanted to add BIGBLOCK as a rudimentary error mechanism. It will immediately stop your script if a simple command fails. I think this should have been the default behavior: since such errors almost always signify something unexpected, it is not really 'sane' to keep executing the following commands.",
        "summary": "I just wanted to add BIGBLOCK It will immediately stop your script if a simple command fails."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For Apache, you can use <code>mod_ssl</code> to force SSL with the <code>SSLRequireSSL Directive</code>: This directive forbids access unless HTTP over SSL (i.e. HTTPS) is enabled for the current connection. This is very handy inside the SSL-enabled virtual host or directories for defending against configuration errors that expose stuff that should be protected. When this directive is present all requests are denied which are not using SSL. This will not do a redirect to https though. To redirect, try the following with <code>mod_rewrite</code> in your .htaccess file BIGBLOCK or any of the various approaches given at <li>http://www.askapache.com/htaccess/http-https-rewriterule-redirect.html You can also solve this from within PHP in case your provider has disabled .htaccess (which is unlikely since you asked for it, but anyway) BIGBLOCK",
        "output": "For Apache, you can use <code>mod_ssl</code> to force SSL with the <code>SSLRequireSSL Directive</code>: To redirect, try the following with <code>mod_rewrite</code> in your .htaccess file BIGBLOCK You can also solve this from within PHP in case your provider has disabled .htaccess (which is unlikely since you asked for it, but anyway)",
        "answer": "For Apache, you can use <code>mod_ssl</code> to force SSL with the <code>SSLRequireSSL Directive</code>: This directive forbids access unless HTTP over SSL (i.e. HTTPS) is enabled for the current connection. This is very handy inside the SSL-enabled virtual host or directories for defending against configuration errors that expose stuff that should be protected. When this directive is present all requests are denied which are not using SSL. This will not do a redirect to https though. To redirect, try the following with <code>mod_rewrite</code> in your .htaccess file BIGBLOCK or any of the various approaches given at <li>http://www.askapache.com/htaccess/http-https-rewriterule-redirect.html You can also solve this from within PHP in case your provider has disabled .htaccess (which is unlikely since you asked for it, but anyway) BIGBLOCK",
        "summary": "For Apache, you can use <code>mod_ssl</code> to force SSL with the <code>SSLRequireSSL Directive</code>: To redirect, try the following with <code>mod_rewrite</code> in your .htaccess file BIGBLOCK You can also solve this from within PHP in case your provider has disabled .htaccess (which is unlikely since you asked for it, but anyway)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like to use Url.Action() and Url.Content() like this: Strictly speaking, the Url.Content is only needed for pathing is not really part of the answer to your question. Thanks to @BrianLegg for pointing out that this should use the new Razor view syntax. Example has been updated accordingly.",
        "output": "I like to use Url.Action() and Url.Content() like this:",
        "answer": "I like to use Url.Action() and Url.Content() like this: Strictly speaking, the Url.Content is only needed for pathing is not really part of the answer to your question. Thanks to @BrianLegg for pointing out that this should use the new Razor view syntax. Example has been updated accordingly.",
        "summary": "I like to use Url.Action() and Url.Content() like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A segfault is accessing memory that you're not allowed to access. It's read-only, you don't have permission, etc... A bus error is trying to access memory that can't possibly be there. You've used an address that's meaningless to the system, or the wrong kind of address for that operation.",
        "output": "A segfault is accessing memory that you're not allowed to access.",
        "answer": "A segfault is accessing memory that you're not allowed to access. It's read-only, you don't have permission, etc... A bus error is trying to access memory that can't possibly be there. You've used an address that's meaningless to the system, or the wrong kind of address for that operation.",
        "summary": "A segfault is accessing memory that you're not allowed to access."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n While you can use <code>rand(42-10) + 10</code> to get a random number between <code>10</code> and <code>42</code> (where 10 is inclusive and 42 exclusive), there's a better way since Ruby 1.9.3, where you are able to call: Available for all versions of Ruby by requiring my <code>backports</code> gem. Ruby 1.9.2 also introduced the <code>Random</code> class so you can create your own random number generator objects and has a nice API: The <code>Random</code> class itself acts as a random generator, so you call directly: Notes on <code>Random.new</code> In most cases, the simplest is to use <code>rand</code> or <code>Random.rand</code>. Creating a new random generator each time you want a random number is a really bad idea. If you do this, you will get the random properties of the initial seeding algorithm which are atrocious compared to the properties of the random generator itself. If you use <code>Random.new</code>, you should thus call it as rarely as possible, for example once as <code>MyApp::Random = Random.new</code> and use it everywhere else. The cases where <code>Random.new</code> is helpful are the following: you are writing a gem and don't want to interfere with the sequence of <code>rand</code>/<code>Random.rand</code> that the main programs might be relying on you want separate reproducible sequences of random numbers (say one per thread) you want to be able to save and resume a reproducible sequence of random numbers (easy as <code>Random</code> objects can marshalled)",
        "output": "In most cases, the simplest is to use <code>rand</code> or <code>Random.rand</code>.",
        "answer": "While you can use <code>rand(42-10) + 10</code> to get a random number between <code>10</code> and <code>42</code> (where 10 is inclusive and 42 exclusive), there's a better way since Ruby 1.9.3, where you are able to call: Available for all versions of Ruby by requiring my <code>backports</code> gem. Ruby 1.9.2 also introduced the <code>Random</code> class so you can create your own random number generator objects and has a nice API: The <code>Random</code> class itself acts as a random generator, so you call directly: Notes on <code>Random.new</code> In most cases, the simplest is to use <code>rand</code> or <code>Random.rand</code>. Creating a new random generator each time you want a random number is a really bad idea. If you do this, you will get the random properties of the initial seeding algorithm which are atrocious compared to the properties of the random generator itself. If you use <code>Random.new</code>, you should thus call it as rarely as possible, for example once as <code>MyApp::Random = Random.new</code> and use it everywhere else. The cases where <code>Random.new</code> is helpful are the following: you are writing a gem and don't want to interfere with the sequence of <code>rand</code>/<code>Random.rand</code> that the main programs might be relying on you want separate reproducible sequences of random numbers (say one per thread) you want to be able to save and resume a reproducible sequence of random numbers (easy as <code>Random</code> objects can marshalled)",
        "summary": "In most cases, the simplest is to use <code>rand</code> or <code>Random.rand</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n FYI: In .NET, <code>Hashtable</code> is thread safe for use by multiple reader threads and a single writing thread, while in <code>Dictionary</code> public static members are thread safe, but any instance members are not guaranteed to be thread safe. We had to change all our Dictionaries back to <code>Hashtable</code> because of this.",
        "output": "FYI: In .NET, <code>Hashtable</code> is thread safe for use by multiple reader threads and a single writing thread, while in <code>Dictionary</code> public static members are thread safe, but any instance members are not guaranteed to be thread safe.",
        "answer": "FYI: In .NET, <code>Hashtable</code> is thread safe for use by multiple reader threads and a single writing thread, while in <code>Dictionary</code> public static members are thread safe, but any instance members are not guaranteed to be thread safe. We had to change all our Dictionaries back to <code>Hashtable</code> because of this.",
        "summary": "FYI: In .NET, <code>Hashtable</code> is thread safe for use by multiple reader threads and a single writing thread, while in <code>Dictionary</code> public static members are thread safe, but any instance members are not guaranteed to be thread safe."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Thanks to @Pax Diablo, @bvmou and @Arachnid for the suggestion of using full datetimes throughout. If I have to accept datetime.time objects from an external source, then this seems to be an alternative <code>add_secs_to_time()</code> function: BIGBLOCK This verbose code can be compressed to this one-liner: BIGBLOCK but I think I'd want to wrap that up in a function for code clarity anyway.",
        "output": "This verbose code can be compressed to this one-liner: BIGBLOCK",
        "answer": "Thanks to @Pax Diablo, @bvmou and @Arachnid for the suggestion of using full datetimes throughout. If I have to accept datetime.time objects from an external source, then this seems to be an alternative <code>add_secs_to_time()</code> function: BIGBLOCK This verbose code can be compressed to this one-liner: BIGBLOCK but I think I'd want to wrap that up in a function for code clarity anyway.",
        "summary": "This verbose code can be compressed to this one-liner: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a possibility that your IP/host are blocked by the remote host, especially if it thinks you are hitting it too hard.",
        "output": "There is a possibility that your IP/host are blocked by the remote host, especially if it thinks you are hitting it too hard.",
        "answer": "There is a possibility that your IP/host are blocked by the remote host, especially if it thinks you are hitting it too hard.",
        "summary": "There is a possibility that your IP/host are blocked by the remote host, especially if it thinks you are hitting it too hard."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As youÃ©ÂÂ¥Ã¦ÂªÂe in the context of HTML, you need to use HTML to represent that character. And for HTML you need to use a numeric character reference <code>&amp;#39;</code> (<code>&amp;#x27;</code> hexadecimal): BIGBLOCK",
        "output": "As youÃ©ÂÂ¥Ã¦ÂªÂe in the context of HTML, you need to use HTML to represent that character.",
        "answer": "As youÃ©ÂÂ¥Ã¦ÂªÂe in the context of HTML, you need to use HTML to represent that character. And for HTML you need to use a numeric character reference <code>&amp;#39;</code> (<code>&amp;#x27;</code> hexadecimal): BIGBLOCK",
        "summary": "As youÃ©ÂÂ¥Ã¦ÂªÂe in the context of HTML, you need to use HTML to represent that character."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Wait a minute. As the question is stated, there are 100 numbers in the bag. No matter how big k is, the problem can be solved in constant time because you can use a set and remove numbers from the set in at most 100 - k iterations of a loop. 100 is constant. The set of remaining numbers is your answer. If we generalise the solution to the numbers from 1 to N, nothing changes except N is not a constant, so we are in O(N - k) = O(N) time. For instance, if we use a bit set, we set the bits to 1 in O(N) time, iterate through the numbers, setting the bits to 0 as we go (O(N-k) = O(N)) and then we have the answer. It seems to me that the interviewer was asking you how to <em>print out</em> the contents of the final set in O(k) time rather than O(N) time. Clearly, with a bit set, you have to iterate through all N bits to determine whether you should print the number or not. However, if you change the way the set is implemented you can print out the numbers in k iterations. This is done by putting the numbers into an object to be stored in both a hash set and a doubly linked list. When you remove an object from the hash set, you also remove it from the list. The answers will be left in the list which is now of length k.",
        "output": "No matter how big k is, the problem can be solved in constant time because you can use a set and remove numbers from the set in at most 100 - k iterations of a loop. If we generalise the solution to the numbers from 1 to N, nothing changes except N is not a constant, so we are in O(N - k) = O(N) time. It seems to me that the interviewer was asking you how to <em>print out</em> the contents of the final set in O(k) time rather than O(N) time. However, if you change the way the set is implemented you can print out the numbers in k iterations. This is done by putting the numbers into an object to be stored in both a hash set and a doubly linked list. When you remove an object from the hash set, you also remove it from the list.",
        "answer": "Wait a minute. As the question is stated, there are 100 numbers in the bag. No matter how big k is, the problem can be solved in constant time because you can use a set and remove numbers from the set in at most 100 - k iterations of a loop. 100 is constant. The set of remaining numbers is your answer. If we generalise the solution to the numbers from 1 to N, nothing changes except N is not a constant, so we are in O(N - k) = O(N) time. For instance, if we use a bit set, we set the bits to 1 in O(N) time, iterate through the numbers, setting the bits to 0 as we go (O(N-k) = O(N)) and then we have the answer. It seems to me that the interviewer was asking you how to <em>print out</em> the contents of the final set in O(k) time rather than O(N) time. Clearly, with a bit set, you have to iterate through all N bits to determine whether you should print the number or not. However, if you change the way the set is implemented you can print out the numbers in k iterations. This is done by putting the numbers into an object to be stored in both a hash set and a doubly linked list. When you remove an object from the hash set, you also remove it from the list. The answers will be left in the list which is now of length k.",
        "summary": "No matter how big k is, the problem can be solved in constant time because you can use a set and remove numbers from the set in at most 100 - k iterations of a loop. If we generalise the solution to the numbers from 1 to N, nothing changes except N is not a constant, so we are in O(N - k) = O(N) time. It seems to me that the interviewer was asking you how to <em>print out</em> the contents of the final set in O(k) time rather than O(N) time. However, if you change the way the set is implemented you can print out the numbers in k iterations. This is done by putting the numbers into an object to be stored in both a hash set and a doubly linked list. When you remove an object from the hash set, you also remove it from the list."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Perhaps you can try the SQL Server Publishing Wizard http://www.microsoft.com/downloads/details.aspx?FamilyId=56E5B1C5-BF17-42E0-A410-371A838E570A&amp;displaylang=en It has a wizard that helps you script insert statements.",
        "output": "Perhaps you can try the SQL Server Publishing Wizard",
        "answer": "Perhaps you can try the SQL Server Publishing Wizard http://www.microsoft.com/downloads/details.aspx?FamilyId=56E5B1C5-BF17-42E0-A410-371A838E570A&amp;displaylang=en It has a wizard that helps you script insert statements.",
        "summary": "Perhaps you can try the SQL Server Publishing Wizard"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only. So the best I can do is to guess usage scenarios. <strong>1) Fast and limited.</strong> Works when you have simple JSON-style objects without methods and DOM nodes inside: The ORDER of the properties IS IMPORTANT, so this method will return false for following objects: <strong>2) Slow and more generic.</strong> Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors. This is almost correct algorithm: Known issues (well, they have very low priority, probably you'll never notice them): <li>objects with different prototype structure but same projection <li>functions may have identical text but refer to different closures <strong>Tests:</strong> passes tests are from <em>How to determine equality for two JavaScript objects?</em>.",
        "output": "Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only. So the best I can do is to guess usage scenarios. <strong>1) Fast and limited.</strong> <strong>2) Slow and more generic.</strong>",
        "answer": "Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only. So the best I can do is to guess usage scenarios. <strong>1) Fast and limited.</strong> Works when you have simple JSON-style objects without methods and DOM nodes inside: The ORDER of the properties IS IMPORTANT, so this method will return false for following objects: <strong>2) Slow and more generic.</strong> Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors. This is almost correct algorithm: Known issues (well, they have very low priority, probably you'll never notice them): <li>objects with different prototype structure but same projection <li>functions may have identical text but refer to different closures <strong>Tests:</strong> passes tests are from <em>How to determine equality for two JavaScript objects?</em>.",
        "summary": "Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only. So the best I can do is to guess usage scenarios. <strong>1) Fast and limited.</strong> <strong>2) Slow and more generic.</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A C#-like solution is JaQue, which provides Expression Trees for Java Lambdas. On top of this can be implemented domain specific LINQ providers.",
        "output": "A C#-like solution is JaQue, which provides Expression Trees for Java Lambdas.",
        "answer": "A C#-like solution is JaQue, which provides Expression Trees for Java Lambdas. On top of this can be implemented domain specific LINQ providers.",
        "summary": "A C#-like solution is JaQue, which provides Expression Trees for Java Lambdas."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <code>transient</code> variable is a variable that may not be serialized. One example of when this might be useful that comes to mind is, variables that make only sense in the context of a specific object instance and which become invalid once you have serialized and deserialized the object. In that case it is useful to have those variables become <code>null</code> instead so that you can re-initialize them with useful data when needed.",
        "output": "A <code>transient</code> variable is a variable that may not be serialized.",
        "answer": "A <code>transient</code> variable is a variable that may not be serialized. One example of when this might be useful that comes to mind is, variables that make only sense in the context of a specific object instance and which become invalid once you have serialized and deserialized the object. In that case it is useful to have those variables become <code>null</code> instead so that you can re-initialize them with useful data when needed.",
        "summary": "A <code>transient</code> variable is a variable that may not be serialized."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Neither: Overloading is when you have the same function name that takes different parameters. Overriding is when a child class replaces a parent's method with one of its own (this in iteself does not constitute polymorphism). Polymorphism is late binding, e.g. the base class (parent) methods are being called but not until runtime does the application know what the actual object is - it may be a child class whose methods are different. This is because any child class can be used where a base class is defined. In Java you see polymorphism a lot with the collections library: BIGBLOCK List is the base class, the compiler has no clue if you're counting a linked list, vector, array, or a custom list implementation, as long as it acts like a List: BIGBLOCK If you were overloading you'd have: BIGBLOCK and the correct version of countStuff() would be picked by the compiler to match the parameters.",
        "output": "Overloading is when you have the same function name that takes different parameters. Overriding is when a child class replaces a parent's method with one of its own (this in iteself does not constitute polymorphism). Polymorphism is late binding, e.g.",
        "answer": "Neither: Overloading is when you have the same function name that takes different parameters. Overriding is when a child class replaces a parent's method with one of its own (this in iteself does not constitute polymorphism). Polymorphism is late binding, e.g. the base class (parent) methods are being called but not until runtime does the application know what the actual object is - it may be a child class whose methods are different. This is because any child class can be used where a base class is defined. In Java you see polymorphism a lot with the collections library: BIGBLOCK List is the base class, the compiler has no clue if you're counting a linked list, vector, array, or a custom list implementation, as long as it acts like a List: BIGBLOCK If you were overloading you'd have: BIGBLOCK and the correct version of countStuff() would be picked by the compiler to match the parameters.",
        "summary": "Overloading is when you have the same function name that takes different parameters. Overriding is when a child class replaces a parent's method with one of its own (this in iteself does not constitute polymorphism). Polymorphism is late binding, e.g."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you've opened a table and you want to clear an existing value to NULL, click on the value, and press <code>Ctrl</code>+<code>0</code>.",
        "output": "If you've opened a table and you want to clear an existing value to NULL, click on the value, and press <code>Ctrl</code>+<code>0</code>.",
        "answer": "If you've opened a table and you want to clear an existing value to NULL, click on the value, and press <code>Ctrl</code>+<code>0</code>.",
        "summary": "If you've opened a table and you want to clear an existing value to NULL, click on the value, and press <code>Ctrl</code>+<code>0</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ã©Â?Command + <code>Double-Click on a symbol</code>: Jump to Definition of a symbol. Ã©Â?Option + <code>Double-Click on a symbol</code>: Find Text in Documentation of a symbol. (Only works if you have they symbol's Doc Set installed.) Favorites Bar: Favorites bar is just like you have in Safari for storing - well - favorites. I often use it as a place to store shortcuts (which you can do by drag-dropping) to files I am using right now. Generally this is more useful when I'm working with a large or unfamiliar project. To show the Favorites Bar, select the following menu option: <li><code>View</code> > <code>Layout</code> > <code>Show Favorites Bar</code>",
        "output": "Ã©Â?Command + <code>Double-Click on a symbol</code>: Jump to Definition of a symbol. Ã©Â?Option + <code>Double-Click on a symbol</code>: Find Text in Documentation of a symbol. (Only works if you have they symbol's Doc Set installed.) Generally this is more useful when I'm working with a large or unfamiliar project.",
        "answer": "Ã©Â?Command + <code>Double-Click on a symbol</code>: Jump to Definition of a symbol. Ã©Â?Option + <code>Double-Click on a symbol</code>: Find Text in Documentation of a symbol. (Only works if you have they symbol's Doc Set installed.) Favorites Bar: Favorites bar is just like you have in Safari for storing - well - favorites. I often use it as a place to store shortcuts (which you can do by drag-dropping) to files I am using right now. Generally this is more useful when I'm working with a large or unfamiliar project. To show the Favorites Bar, select the following menu option: <li><code>View</code> > <code>Layout</code> > <code>Show Favorites Bar</code>",
        "summary": "Ã©Â?Command + <code>Double-Click on a symbol</code>: Jump to Definition of a symbol. Ã©Â?Option + <code>Double-Click on a symbol</code>: Find Text in Documentation of a symbol. (Only works if you have they symbol's Doc Set installed.) Generally this is more useful when I'm working with a large or unfamiliar project."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Two different kinds of parameters can  be adjusted during the training of an  ANN, the weights and the value in the  activation functions. This is  impractical and it would be easier if  only one of the parameters should be  adjusted. To cope with this problem a  bias neuron is invented. The bias  neuron lies in one layer, is connected  to all the neurons in the next layer,  but none in the previous layer and it  always emits 1. Since the bias neuron  emits 1 the weights, connected to the  bias neuron, are added directly to the  combined sum of the other weights  (equation 2.1), just like the t value  in the activation functions.1 The reason it's impractical is because you're simultaneously adjusting the weight and the value, so any change to the weight can neutralize the change to the value that was useful for a previous data instance... adding a bias neuron without a changing value allows you to control the behavior of the layer. Furthermore the bias allows you to use a single neural net to represent similar cases. Consider the AND boolean function represented by the following neural network: ANN http://www.aihorizon.com/images/essays/perceptron.gif <li><em>w0</em> corresponds to <em>b</em>. <li><em>w1</em> corresponds to <em>x1</em>. <li><em>w2</em> corresponds to <em>x2</em>. A single perceptron can be used to  represent many boolean functions. For example, if we assume boolean values  of 1 (true) and -1 (false), then one  way to use a two-input perceptron to  implement the AND function is to set  the weights w0 = -3, and w1 = w2 = .5. This perceptron can be made to  represent the OR function instead by  altering the threshold to w0 = -.3. In  fact, AND and OR can be viewed as  special cases of m-of-n functions:  that is, functions where at least m of  the n inputs to the perceptron must be  true. The OR function corresponds to  m = 1 and the AND function to m = n.  Any m-of-n function is easily  represented using a perceptron by  setting all input weights to the same  value (e.g., 0.5) and then setting the  threshold w0 accordingly. Perceptrons can represent all of the  primitive boolean functions AND, OR,  NAND ( 1 AND), and NOR ( 1 OR). Machine Learning- Tom Mitchell) The threshold is the bias and <em>w0</em> is the weight associated with the bias/threshold neuron.",
        "output": "The bias  neuron lies in one layer, is connected  to all the neurons in the next layer,  but none in the previous layer and it  always emits 1. Since the bias neuron  emits 1 the weights, connected to the  bias neuron, are added directly to the  combined sum of the other weights  (equation 2.1), just like the t value  in the activation functions.1 The reason it's impractical is because you're simultaneously adjusting the weight and the value, so any change to the weight can neutralize the change to the value that was useful for a previous data instance... adding a bias neuron without a changing value allows you to control the behavior of the layer. Furthermore the bias allows you to use a single neural net to represent similar cases. A single perceptron can be used to  represent many boolean functions. Perceptrons can represent all of the  primitive boolean functions AND, OR,  NAND ( 1 AND), and NOR ( 1 OR).",
        "answer": "Two different kinds of parameters can  be adjusted during the training of an  ANN, the weights and the value in the  activation functions. This is  impractical and it would be easier if  only one of the parameters should be  adjusted. To cope with this problem a  bias neuron is invented. The bias  neuron lies in one layer, is connected  to all the neurons in the next layer,  but none in the previous layer and it  always emits 1. Since the bias neuron  emits 1 the weights, connected to the  bias neuron, are added directly to the  combined sum of the other weights  (equation 2.1), just like the t value  in the activation functions.1 The reason it's impractical is because you're simultaneously adjusting the weight and the value, so any change to the weight can neutralize the change to the value that was useful for a previous data instance... adding a bias neuron without a changing value allows you to control the behavior of the layer. Furthermore the bias allows you to use a single neural net to represent similar cases. Consider the AND boolean function represented by the following neural network: ANN http://www.aihorizon.com/images/essays/perceptron.gif <li><em>w0</em> corresponds to <em>b</em>. <li><em>w1</em> corresponds to <em>x1</em>. <li><em>w2</em> corresponds to <em>x2</em>. A single perceptron can be used to  represent many boolean functions. For example, if we assume boolean values  of 1 (true) and -1 (false), then one  way to use a two-input perceptron to  implement the AND function is to set  the weights w0 = -3, and w1 = w2 = .5. This perceptron can be made to  represent the OR function instead by  altering the threshold to w0 = -.3. In  fact, AND and OR can be viewed as  special cases of m-of-n functions:  that is, functions where at least m of  the n inputs to the perceptron must be  true. The OR function corresponds to  m = 1 and the AND function to m = n.  Any m-of-n function is easily  represented using a perceptron by  setting all input weights to the same  value (e.g., 0.5) and then setting the  threshold w0 accordingly. Perceptrons can represent all of the  primitive boolean functions AND, OR,  NAND ( 1 AND), and NOR ( 1 OR). Machine Learning- Tom Mitchell) The threshold is the bias and <em>w0</em> is the weight associated with the bias/threshold neuron.",
        "summary": "The bias  neuron lies in one layer, is connected  to all the neurons in the next layer,  but none in the previous layer and it  always emits 1. Since the bias neuron  emits 1 the weights, connected to the  bias neuron, are added directly to the  combined sum of the other weights  (equation 2.1), just like the t value  in the activation functions.1 The reason it's impractical is because you're simultaneously adjusting the weight and the value, so any change to the weight can neutralize the change to the value that was useful for a previous data instance... adding a bias neuron without a changing value allows you to control the behavior of the layer. Furthermore the bias allows you to use a single neural net to represent similar cases. A single perceptron can be used to  represent many boolean functions. Perceptrons can represent all of the  primitive boolean functions AND, OR,  NAND ( 1 AND), and NOR ( 1 OR)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Depends on the exact question! Normally <code>pause</code> does the job within a .bat file. If you want cmd.exe not to close to be able to remain typing, use <code>cmd /k</code> command at the end of the file.",
        "output": "Normally <code>pause</code> does the job within a .bat file.",
        "answer": "Depends on the exact question! Normally <code>pause</code> does the job within a .bat file. If you want cmd.exe not to close to be able to remain typing, use <code>cmd /k</code> command at the end of the file.",
        "summary": "Normally <code>pause</code> does the job within a .bat file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Why not use Bash builtins if you can? ...",
        "output": "Why not use Bash builtins if you can?",
        "answer": "Why not use Bash builtins if you can? ...",
        "summary": "Why not use Bash builtins if you can?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is an updated version of the very nice and slim Open Terminal Here posted by vgm64 and d0k. The change was made by james david low. He published the new version on his site. Just download OpenTerminalHere.zip, extract it, move the bundle to your Library/Scripts folder and drag it from there to your Finder toolbar. What is special about it is that it always opens a new tab if a Terminal.app window is already open. Very useful! I also noted that the style of the button of the application better fits the Snow Leopard Finder.app style than cdto posted by redacted did.",
        "output": "There is an updated version of the very nice and slim Open Terminal Here posted by vgm64 and d0k.",
        "answer": "There is an updated version of the very nice and slim Open Terminal Here posted by vgm64 and d0k. The change was made by james david low. He published the new version on his site. Just download OpenTerminalHere.zip, extract it, move the bundle to your Library/Scripts folder and drag it from there to your Finder toolbar. What is special about it is that it always opens a new tab if a Terminal.app window is already open. Very useful! I also noted that the style of the button of the application better fits the Snow Leopard Finder.app style than cdto posted by redacted did.",
        "summary": "There is an updated version of the very nice and slim Open Terminal Here posted by vgm64 and d0k."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can't. It's occasionally a pain, but you wouldn't be able to call it using normal techniques anyway. In a blog post I've suggested static interfaces which would only be usable in generic type constraints - but could be really handy, IMO. One point about if you <em>could</em> define a constructor within an interface, you'd have trouble deriving classes: BIGBLOCK",
        "output": "You can't. In a blog post I've suggested static interfaces which would only be usable in generic type constraints - but could be really handy, IMO.",
        "answer": "You can't. It's occasionally a pain, but you wouldn't be able to call it using normal techniques anyway. In a blog post I've suggested static interfaces which would only be usable in generic type constraints - but could be really handy, IMO. One point about if you <em>could</em> define a constructor within an interface, you'd have trouble deriving classes: BIGBLOCK",
        "summary": "You can't. In a blog post I've suggested static interfaces which would only be usable in generic type constraints - but could be really handy, IMO."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A few principles: you have a std::exception base class, you should have your exceptions derive from it. That way general exception handler still have some information. Don't throw pointers but object, that way memory is handled for you. Example: And then use it in your code:",
        "output": "you have a std::exception base class, you should have your exceptions derive from it. Don't throw pointers but object, that way memory is handled for you.",
        "answer": "A few principles: you have a std::exception base class, you should have your exceptions derive from it. That way general exception handler still have some information. Don't throw pointers but object, that way memory is handled for you. Example: And then use it in your code:",
        "summary": "you have a std::exception base class, you should have your exceptions derive from it. Don't throw pointers but object, that way memory is handled for you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you mean returning multiple values, you can either return a class/struct containing the values you want to return, or use the \"out\" keyword on your parameters, like so:",
        "output": "If you mean returning multiple values, you can either return a class/struct containing the values you want to return, or use the \"out\" keyword on your parameters, like so:",
        "answer": "If you mean returning multiple values, you can either return a class/struct containing the values you want to return, or use the \"out\" keyword on your parameters, like so:",
        "summary": "If you mean returning multiple values, you can either return a class/struct containing the values you want to return, or use the \"out\" keyword on your parameters, like so:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You cannot decrypt this password again but there is another method named \"pwdcompare\". Here is a example how to use it with SQL syntax: BIGBLOCK",
        "output": "You cannot decrypt this password again but there is another method named \"pwdcompare\". BIGBLOCK",
        "answer": "You cannot decrypt this password again but there is another method named \"pwdcompare\". Here is a example how to use it with SQL syntax: BIGBLOCK",
        "summary": "You cannot decrypt this password again but there is another method named \"pwdcompare\". BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The Project Management Tree Swing Cartoon",
        "output": "The Project Management Tree Swing Cartoon",
        "answer": "The Project Management Tree Swing Cartoon",
        "summary": "The Project Management Tree Swing Cartoon"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Stuff like 'raises exception' and 'halts execution' might be true for most compilers, but not for all. (BTW, are there assert statements that really throw exceptions?) Here's an interesting, slightly different meaning of assert used by c6x and other TI compilers: upon seeing certain assert statements, these compilers use the information in that statement to perform certain optimizations. Wicked. Example in C: BIGBLOCK This tells de compiler the arrays are aligned on 32-bits boundaries, so the compiler can generate specific instructions made for that kind of alignment.",
        "output": "Here's an interesting, slightly different meaning of assert used by c6x and other TI compilers: upon seeing certain assert statements, these compilers use the information in that statement to perform certain optimizations.",
        "answer": "Stuff like 'raises exception' and 'halts execution' might be true for most compilers, but not for all. (BTW, are there assert statements that really throw exceptions?) Here's an interesting, slightly different meaning of assert used by c6x and other TI compilers: upon seeing certain assert statements, these compilers use the information in that statement to perform certain optimizations. Wicked. Example in C: BIGBLOCK This tells de compiler the arrays are aligned on 32-bits boundaries, so the compiler can generate specific instructions made for that kind of alignment.",
        "summary": "Here's an interesting, slightly different meaning of assert used by c6x and other TI compilers: upon seeing certain assert statements, these compilers use the information in that statement to perform certain optimizations."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n node-inspector could save the day! Use it from any browser supporting WebSocket. Breakpoints, profiler, livecoding, etc... It is really awesome. Install it with: Then run:",
        "output": "node-inspector could save the day!",
        "answer": "node-inspector could save the day! Use it from any browser supporting WebSocket. Breakpoints, profiler, livecoding, etc... It is really awesome. Install it with: Then run:",
        "summary": "node-inspector could save the day!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n POSIX is: POSIX (pronounced /Ã¨ÂÂpÃ¨ÂÂ²zÃ§ÂÂks/) or  \"Portable Operating System Interface  [for Unix]\"1 is the name of a family  of related standards specified by the  IEEE to define the application  programming interface (API), along  with shell and utilities interfaces  for software compatible with variants  of the Unix operating system, although  the standard can apply to any  operating system. Basically it was a set of measures to ease the pain of development and usage of different flavours of UNIX by having a (mostly) common API and utilities. Limited POSIX compliance also extended to various versions of Windows.",
        "output": "Basically it was a set of measures to ease the pain of development and usage of different flavours of UNIX by having a (mostly) common API and utilities.",
        "answer": "POSIX is: POSIX (pronounced /Ã¨ÂÂpÃ¨ÂÂ²zÃ§ÂÂks/) or  \"Portable Operating System Interface  [for Unix]\"1 is the name of a family  of related standards specified by the  IEEE to define the application  programming interface (API), along  with shell and utilities interfaces  for software compatible with variants  of the Unix operating system, although  the standard can apply to any  operating system. Basically it was a set of measures to ease the pain of development and usage of different flavours of UNIX by having a (mostly) common API and utilities. Limited POSIX compliance also extended to various versions of Windows.",
        "summary": "Basically it was a set of measures to ease the pain of development and usage of different flavours of UNIX by having a (mostly) common API and utilities."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This problem looked familiar so I thought I'd see if I could replicate from the limited amount of information. A quick search turned up an entry in James Bennett's blog here which mentions that when working with the UserProfile to extend the User model a common mistake in settings.py can cause Django to throw this error. To quote the blog entry: The value of the setting is not \"appname.models.modelname\", it's just \"appname.modelname\". The reason is that Django is not using this to do a direct import; instead, it's using an internal model-loading function which only wants the name of the app and the name of the model. Trying to do things like \"appname.models.modelname\" or \"projectname.appname.models.modelname\" in the AUTH_PROFILE_MODULE setting will cause Django to blow up with the dreaded \"too many values to unpack\" error, so make sure you've put \"appname.modelname\", and nothing else, in the value of AUTH_PROFILE_MODULE. If the OP had copied more of the traceback I would expect to see something like the one below which I was able to duplicate by adding \"models\" to my AUTH_PROFILE_MODULE setting. This I think is one of the few cases where Django still has a bit of import magic that tends to cause confusion when a small error doesn't throw the expected exception. You can see at the end of the traceback that I posted how using anything other than the form \"appname.modelname\" for the AUTH_PROFILE_MODULE would cause the line \"app_label, model_name = settings.AUTH_PROFILE_MODULE.split('.')\" to throw the \"too many values to unpack\" error. I'm 99% sure that this was the original problem encountered here.",
        "output": "A quick search turned up an entry in James Bennett's blog here which mentions that when working with the UserProfile to extend the User model a common mistake in settings.py can cause Django to throw this error.",
        "answer": "This problem looked familiar so I thought I'd see if I could replicate from the limited amount of information. A quick search turned up an entry in James Bennett's blog here which mentions that when working with the UserProfile to extend the User model a common mistake in settings.py can cause Django to throw this error. To quote the blog entry: The value of the setting is not \"appname.models.modelname\", it's just \"appname.modelname\". The reason is that Django is not using this to do a direct import; instead, it's using an internal model-loading function which only wants the name of the app and the name of the model. Trying to do things like \"appname.models.modelname\" or \"projectname.appname.models.modelname\" in the AUTH_PROFILE_MODULE setting will cause Django to blow up with the dreaded \"too many values to unpack\" error, so make sure you've put \"appname.modelname\", and nothing else, in the value of AUTH_PROFILE_MODULE. If the OP had copied more of the traceback I would expect to see something like the one below which I was able to duplicate by adding \"models\" to my AUTH_PROFILE_MODULE setting. This I think is one of the few cases where Django still has a bit of import magic that tends to cause confusion when a small error doesn't throw the expected exception. You can see at the end of the traceback that I posted how using anything other than the form \"appname.modelname\" for the AUTH_PROFILE_MODULE would cause the line \"app_label, model_name = settings.AUTH_PROFILE_MODULE.split('.')\" to throw the \"too many values to unpack\" error. I'm 99% sure that this was the original problem encountered here.",
        "summary": "A quick search turned up an entry in James Bennett's blog here which mentions that when working with the UserProfile to extend the User model a common mistake in settings.py can cause Django to throw this error."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It greatly reduces your level of confidence about security.",
        "output": "It greatly reduces your level of confidence about security.",
        "answer": "It greatly reduces your level of confidence about security.",
        "summary": "It greatly reduces your level of confidence about security."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If speed is a concern, why not partition off the most commonly used set of inputs and their values to a lookup table and then do whatever optimized magic algorithm you have come up with for the exceptional cases?",
        "output": "If speed is a concern, why not partition off the most commonly used set of inputs and their values to a lookup table and then do whatever optimized magic algorithm you have come up with for the exceptional cases?",
        "answer": "If speed is a concern, why not partition off the most commonly used set of inputs and their values to a lookup table and then do whatever optimized magic algorithm you have come up with for the exceptional cases?",
        "summary": "If speed is a concern, why not partition off the most commonly used set of inputs and their values to a lookup table and then do whatever optimized magic algorithm you have come up with for the exceptional cases?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Sessions would be the only good way, you could also use GET/POST but that would be potentially insecure.",
        "output": "Sessions would be the only good way, you could also use GET/POST but that would be potentially insecure.",
        "answer": "Sessions would be the only good way, you could also use GET/POST but that would be potentially insecure.",
        "summary": "Sessions would be the only good way, you could also use GET/POST but that would be potentially insecure."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n IE does not support for(i in obj) for native properties. Here is a list of all the props I could find. It seems stackoverflow does some stupid filtering. The list is available at the bottom of this google group post:-https://groups.google.com/group/hackvertor/browse_thread/thread/a9ba81ca642a63e0",
        "output": "IE does not support for(i in obj) for native properties.",
        "answer": "IE does not support for(i in obj) for native properties. Here is a list of all the props I could find. It seems stackoverflow does some stupid filtering. The list is available at the bottom of this google group post:-https://groups.google.com/group/hackvertor/browse_thread/thread/a9ba81ca642a63e0",
        "summary": "IE does not support for(i in obj) for native properties."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It depends whether you want to know whether it exists in one of the directories in the <code>$PATH</code> variable or whether you know the absolute location of it. If you want to know if it is in the <code>$PATH</code> variable, use otherwise use The redirection to <code>/dev/null/</code> in the first example suppresses the output of the <code>which</code> program.",
        "output": "If you want to know if it is in the <code>$PATH</code> variable, use otherwise use",
        "answer": "It depends whether you want to know whether it exists in one of the directories in the <code>$PATH</code> variable or whether you know the absolute location of it. If you want to know if it is in the <code>$PATH</code> variable, use otherwise use The redirection to <code>/dev/null/</code> in the first example suppresses the output of the <code>which</code> program.",
        "summary": "If you want to know if it is in the <code>$PATH</code> variable, use otherwise use"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use this function :",
        "output": "I use this function :",
        "answer": "I use this function :",
        "summary": "I use this function :"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Wikipedia Article. To me, inversion of control is turning your sequentially written code and turning it into an delegation structure. Instead of your program explicitly controlling everything, your program sets up a class or library with certain functions to be called when certain things happen. It solves code duplication. For example, in the old days you would manually write your own event loop, polling the system libraries for new events. Nowadays, most modern APIs you simply tell the system libraries what events you're interested in, and it will let you know when they happen. Inversion of control is a practical way to reduce code duplication, and if you find yourself copying an entire method and only changing a small piece of the code, you can consider tackling it with inversion of control. Inversion of control is made easy in many languages through the concept of delegates, interfaces, or even raw function pointers. It is not appropriate to use in all cases, because the flow of a program can be harder to follow when written this way. It's a useful way to design methods when writing a library that will be reused, but it should be used sparingly in the core of your own program unless it really solves a code duplication problem.",
        "output": "To me, inversion of control is turning your sequentially written code and turning it into an delegation structure. It solves code duplication. Inversion of control is a practical way to reduce code duplication, and if you find yourself copying an entire method and only changing a small piece of the code, you can consider tackling it with inversion of control.",
        "answer": "Wikipedia Article. To me, inversion of control is turning your sequentially written code and turning it into an delegation structure. Instead of your program explicitly controlling everything, your program sets up a class or library with certain functions to be called when certain things happen. It solves code duplication. For example, in the old days you would manually write your own event loop, polling the system libraries for new events. Nowadays, most modern APIs you simply tell the system libraries what events you're interested in, and it will let you know when they happen. Inversion of control is a practical way to reduce code duplication, and if you find yourself copying an entire method and only changing a small piece of the code, you can consider tackling it with inversion of control. Inversion of control is made easy in many languages through the concept of delegates, interfaces, or even raw function pointers. It is not appropriate to use in all cases, because the flow of a program can be harder to follow when written this way. It's a useful way to design methods when writing a library that will be reused, but it should be used sparingly in the core of your own program unless it really solves a code duplication problem.",
        "summary": "To me, inversion of control is turning your sequentially written code and turning it into an delegation structure. It solves code duplication. Inversion of control is a practical way to reduce code duplication, and if you find yourself copying an entire method and only changing a small piece of the code, you can consider tackling it with inversion of control."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is used to log (anything you pass it) to the Firebug console. The main usage would be to debug your JavaScript code.",
        "output": "It is used to log (anything you pass it) to the Firebug console.",
        "answer": "It is used to log (anything you pass it) to the Firebug console. The main usage would be to debug your JavaScript code.",
        "summary": "It is used to log (anything you pass it) to the Firebug console."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Basically <code>@classmethod</code> makes a method whose first argument is the class it's called from (rather than the class instance), <code>@staticmethod</code> does not have any implicit arguments.",
        "output": "Basically <code>@classmethod</code> makes a method whose first argument is the class it's called from (rather than the class instance), <code>@staticmethod</code> does not have any implicit arguments.",
        "answer": "Basically <code>@classmethod</code> makes a method whose first argument is the class it's called from (rather than the class instance), <code>@staticmethod</code> does not have any implicit arguments.",
        "summary": "Basically <code>@classmethod</code> makes a method whose first argument is the class it's called from (rather than the class instance), <code>@staticmethod</code> does not have any implicit arguments."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Going on the assumption you're using TNSNAMES naming, here's a couple of things to do: <li>Create/modify the tnsnames.ora file in the network/admin subdirectory associated with OraHome90 to include an entry for your oracle database: This is assuming you're using the standard Oracle port of 1521. Note that servicename_alias can be any name you want to use on the local system. You may also find that you need to specify (SID = SERVICENAME) instead of (SERVICENAME=SERVICENAME). <li>Execute tnsping servicename_alias to verify connectivity. Get this working before going any further. This will tell you if you're past the 12154 error. <li>Assuming a good connection, create an ODBC DSN using the control panel, specifying the ODBC driver for Oracle of your choice (generally there's a Microsoft ODBC driver at least, and it should work adequately as a proof of concept). I'll assume the name you gave of DATASOURCE. Use the servicename_alias as the Server name in the ODBC configuration. <li>At this point you should be able to connect to your database via Access. I am not a VB programmer, but I know you should be able to go to File->Get External Data->Link Tables and connect to your ODBC source. I would assume your code would work as well.",
        "output": "<li>Create/modify the tnsnames.ora file in the network/admin subdirectory associated with OraHome90 to include an entry for your oracle database: <li>Execute tnsping servicename_alias to verify connectivity. <li>Assuming a good connection, create an ODBC DSN using the control panel, specifying the ODBC driver for Oracle of your choice (generally there's a Microsoft ODBC driver at least, and it should work adequately as a proof of concept).",
        "answer": "Going on the assumption you're using TNSNAMES naming, here's a couple of things to do: <li>Create/modify the tnsnames.ora file in the network/admin subdirectory associated with OraHome90 to include an entry for your oracle database: This is assuming you're using the standard Oracle port of 1521. Note that servicename_alias can be any name you want to use on the local system. You may also find that you need to specify (SID = SERVICENAME) instead of (SERVICENAME=SERVICENAME). <li>Execute tnsping servicename_alias to verify connectivity. Get this working before going any further. This will tell you if you're past the 12154 error. <li>Assuming a good connection, create an ODBC DSN using the control panel, specifying the ODBC driver for Oracle of your choice (generally there's a Microsoft ODBC driver at least, and it should work adequately as a proof of concept). I'll assume the name you gave of DATASOURCE. Use the servicename_alias as the Server name in the ODBC configuration. <li>At this point you should be able to connect to your database via Access. I am not a VB programmer, but I know you should be able to go to File->Get External Data->Link Tables and connect to your ODBC source. I would assume your code would work as well.",
        "summary": "<li>Create/modify the tnsnames.ora file in the network/admin subdirectory associated with OraHome90 to include an entry for your oracle database: <li>Execute tnsping servicename_alias to verify connectivity. <li>Assuming a good connection, create an ODBC DSN using the control panel, specifying the ODBC driver for Oracle of your choice (generally there's a Microsoft ODBC driver at least, and it should work adequately as a proof of concept)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Do you understand the concept of casting? Casting is the process of type conversion, which is in Java very common because its a statically typed language. Some examples: Cast the String \"1\" to an int -> no problem Cast the String \"abc\" to an int -> raises a ClassCastException Or think of a class diagram with Animal.class, Dog.class and Cat.class",
        "output": "Cast the String \"abc\" to an int -> raises a ClassCastException",
        "answer": "Do you understand the concept of casting? Casting is the process of type conversion, which is in Java very common because its a statically typed language. Some examples: Cast the String \"1\" to an int -> no problem Cast the String \"abc\" to an int -> raises a ClassCastException Or think of a class diagram with Animal.class, Dog.class and Cat.class",
        "summary": "Cast the String \"abc\" to an int -> raises a ClassCastException"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A JavaBean is just a standard All properties private (use getters/setters) A public no-argument constructor Implements <code>Serializable</code>. That's it. It's just a convention. Lots of libraries depend on it though. With respect to <code>Serializable</code>, from the API documentation: Serializability of a class is enabled by the class implementing the   java.io.Serializable interface. Classes that do not implement this   interface will not have any of their state serialized or deserialized.   All subtypes of a serializable class are themselves serializable. The   serialization interface has no methods or fields and serves only to   identify the semantics of being serializable. In other words, serializable objects can be written to streams, and hence files, object databases, anything really. Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards. There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way. For example, if a library wants to stream any object you pass into it, it knows it can because your object is serializable (assuming the lib requires your objects be proper JavaBeans).",
        "output": "A JavaBean is just a standard All properties private (use getters/setters) A public no-argument constructor Implements <code>Serializable</code>. Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards. There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way.",
        "answer": "A JavaBean is just a standard All properties private (use getters/setters) A public no-argument constructor Implements <code>Serializable</code>. That's it. It's just a convention. Lots of libraries depend on it though. With respect to <code>Serializable</code>, from the API documentation: Serializability of a class is enabled by the class implementing the   java.io.Serializable interface. Classes that do not implement this   interface will not have any of their state serialized or deserialized.   All subtypes of a serializable class are themselves serializable. The   serialization interface has no methods or fields and serves only to   identify the semantics of being serializable. In other words, serializable objects can be written to streams, and hence files, object databases, anything really. Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards. There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way. For example, if a library wants to stream any object you pass into it, it knows it can because your object is serializable (assuming the lib requires your objects be proper JavaBeans).",
        "summary": "A JavaBean is just a standard All properties private (use getters/setters) A public no-argument constructor Implements <code>Serializable</code>. Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards. There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Referencing the connection string should be done as such: <code>ConfigurationManager.AppSettings[\"ConnectionString\"]</code> would be looking in the <code>AppSettings</code> for something named <code>ConnectionString</code>, which it would not find. This is why your error message indicated the <code>\"ConnectionString\" property has not been initialized</code>, because it is looking for an initialized property of <code>AppSettings</code> named <code>ConnectionString</code>. <code>ConfigurationManager.ConnectionStrings[\"MyDB\"].ConnectionString</code> instructs to look for the connection string named \"MyDB\". Here is someone talking about using web.config connection strings",
        "output": "<code>ConfigurationManager.AppSettings[\"ConnectionString\"]</code> would be looking in the <code>AppSettings</code> for something named <code>ConnectionString</code>, which it would not find. This is why your error message indicated the <code>\"ConnectionString\" property has not been initialized</code>, because it is looking for an initialized property of <code>AppSettings</code> named <code>ConnectionString</code>.",
        "answer": "Referencing the connection string should be done as such: <code>ConfigurationManager.AppSettings[\"ConnectionString\"]</code> would be looking in the <code>AppSettings</code> for something named <code>ConnectionString</code>, which it would not find. This is why your error message indicated the <code>\"ConnectionString\" property has not been initialized</code>, because it is looking for an initialized property of <code>AppSettings</code> named <code>ConnectionString</code>. <code>ConfigurationManager.ConnectionStrings[\"MyDB\"].ConnectionString</code> instructs to look for the connection string named \"MyDB\". Here is someone talking about using web.config connection strings",
        "summary": "<code>ConfigurationManager.AppSettings[\"ConnectionString\"]</code> would be looking in the <code>AppSettings</code> for something named <code>ConnectionString</code>, which it would not find. This is why your error message indicated the <code>\"ConnectionString\" property has not been initialized</code>, because it is looking for an initialized property of <code>AppSettings</code> named <code>ConnectionString</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I put this <code>timing.py</code> module into my own <code>site-packages</code> directory, and just insert <code>import timing</code> at the top of my module: I can also call <code>timing.log</code> from within my program if there are significant stages within the program I want to show. But just including <code>import timing</code> will print the start and end times, and overall elapsed time. (Forgive my obscure <code>secondsToStr</code> function, it just formats a floating point number of seconds to hh:mm:ss.sss form.) Note: A Python 3 version of the above code can be found here or here.",
        "output": "I put this <code>timing.py</code> module into my own <code>site-packages</code> directory, and just insert <code>import timing</code> at the top of my module: Note: A Python 3 version of the above code can be found here or here.",
        "answer": "I put this <code>timing.py</code> module into my own <code>site-packages</code> directory, and just insert <code>import timing</code> at the top of my module: I can also call <code>timing.log</code> from within my program if there are significant stages within the program I want to show. But just including <code>import timing</code> will print the start and end times, and overall elapsed time. (Forgive my obscure <code>secondsToStr</code> function, it just formats a floating point number of seconds to hh:mm:ss.sss form.) Note: A Python 3 version of the above code can be found here or here.",
        "summary": "I put this <code>timing.py</code> module into my own <code>site-packages</code> directory, and just insert <code>import timing</code> at the top of my module: Note: A Python 3 version of the above code can be found here or here."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The old contents of this answer is now deprecated. See the other answers based on <code>MutationObserver</code>.",
        "output": "The old contents of this answer is now deprecated.",
        "answer": "The old contents of this answer is now deprecated. See the other answers based on <code>MutationObserver</code>.",
        "summary": "The old contents of this answer is now deprecated."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n if you do not want to use <code>:set paste</code>, middle-click, <code>set nopaste</code>, you can also paste the content of the clipboard: BIGBLOCK That way you don't have to leave normal mode.if you have to paste <code>+</code> or <code>*</code> depends on how you selected the text, see <code>:help quoteplus</code>.",
        "output": "if you do not want to use <code>:set paste</code>, middle-click, <code>set nopaste</code>, you can also paste the content of the clipboard: That way you don't have to leave normal mode.if you have to paste <code>+</code> or <code>*</code> depends on how you selected the text, see <code>:help quoteplus</code>.",
        "answer": "if you do not want to use <code>:set paste</code>, middle-click, <code>set nopaste</code>, you can also paste the content of the clipboard: BIGBLOCK That way you don't have to leave normal mode.if you have to paste <code>+</code> or <code>*</code> depends on how you selected the text, see <code>:help quoteplus</code>.",
        "summary": "if you do not want to use <code>:set paste</code>, middle-click, <code>set nopaste</code>, you can also paste the content of the clipboard: That way you don't have to leave normal mode.if you have to paste <code>+</code> or <code>*</code> depends on how you selected the text, see <code>:help quoteplus</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Generally speaking, it's the ability to interface a number of different types of object using the same or a superficially similar API. There are various forms: Function overloading: defining multiple functions with the same name and different parameter types, such as sqrt(float), sqrt(double) and sqrt(complex). In most languages that allow this, the compiler will automatically select the correct one for the type of argument being passed into it, thus this is compile-time polymorphism. Virtual methods in OOP: a method of a class can have various implementations tailored to the specifics of its subclasses; each of these is said to override the implementation given in the base class. Given an object that may be of the base class or any of its subclasses, the correct implementation is selected on the fly, thus this is run-time polymorphism. Templates: a feature of some OO languages whereby a function, class, etc. can be parameterised by a type. For example, you can define a generic \"list\" template class, and then instantiate it as \"list of integers\", \"list of strings\", maybe even \"list of lists of strings\" or the like. Generally, you write the code once for a data structure of arbitrary element type, and the compiler generates versions of it for the various element types.",
        "output": "Generally speaking, it's the ability to interface a number of different types of object using the same or a superficially similar API.",
        "answer": "Generally speaking, it's the ability to interface a number of different types of object using the same or a superficially similar API. There are various forms: Function overloading: defining multiple functions with the same name and different parameter types, such as sqrt(float), sqrt(double) and sqrt(complex). In most languages that allow this, the compiler will automatically select the correct one for the type of argument being passed into it, thus this is compile-time polymorphism. Virtual methods in OOP: a method of a class can have various implementations tailored to the specifics of its subclasses; each of these is said to override the implementation given in the base class. Given an object that may be of the base class or any of its subclasses, the correct implementation is selected on the fly, thus this is run-time polymorphism. Templates: a feature of some OO languages whereby a function, class, etc. can be parameterised by a type. For example, you can define a generic \"list\" template class, and then instantiate it as \"list of integers\", \"list of strings\", maybe even \"list of lists of strings\" or the like. Generally, you write the code once for a data structure of arbitrary element type, and the compiler generates versions of it for the various element types.",
        "summary": "Generally speaking, it's the ability to interface a number of different types of object using the same or a superficially similar API."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the <code>pdfpages</code> package. To include all the pages in the PDF file: To include just the first page of a PDF: Run <code>texdoc pdfpages</code> in a shell to see the complete manual for <code>pdfpages</code>.",
        "output": "Use the <code>pdfpages</code> package.",
        "answer": "Use the <code>pdfpages</code> package. To include all the pages in the PDF file: To include just the first page of a PDF: Run <code>texdoc pdfpages</code> in a shell to see the complete manual for <code>pdfpages</code>.",
        "summary": "Use the <code>pdfpages</code> package."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.",
        "output": "Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.",
        "answer": "Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.",
        "summary": "Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Consider the second script. If you import it in another one, the instructions, as at \"global level\", will be executed.",
        "output": "If you import it in another one, the instructions, as at \"global level\", will be executed.",
        "answer": "Consider the second script. If you import it in another one, the instructions, as at \"global level\", will be executed.",
        "summary": "If you import it in another one, the instructions, as at \"global level\", will be executed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to upload the image aswell, then link to the image on the server.",
        "output": "You need to upload the image aswell, then link to the image on the server.",
        "answer": "You need to upload the image aswell, then link to the image on the server.",
        "summary": "You need to upload the image aswell, then link to the image on the server."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try a usort, If you are still on PHP 5.2 or earlier, you'll have to define a sorting function first: Starting in PHP 5.3, you can use an anonymous function: And finally with PHP 7 you can use the \"spaceship operator\": To extend this to multi-dimensional sorting, reference the second/third sorting elements if the first is zero - best explained below. You can also use this for sorting on sub-elements. If you need to retain key associations, use <code>uasort()</code> - see comparison of array sorting functions in the manual",
        "output": "Try a usort, If you are still on PHP 5.2 or earlier, you'll have to define a sorting function first: Starting in PHP 5.3, you can use an anonymous function: And finally with PHP 7 you can use the \"spaceship operator\":",
        "answer": "Try a usort, If you are still on PHP 5.2 or earlier, you'll have to define a sorting function first: Starting in PHP 5.3, you can use an anonymous function: And finally with PHP 7 you can use the \"spaceship operator\": To extend this to multi-dimensional sorting, reference the second/third sorting elements if the first is zero - best explained below. You can also use this for sorting on sub-elements. If you need to retain key associations, use <code>uasort()</code> - see comparison of array sorting functions in the manual",
        "summary": "Try a usort, If you are still on PHP 5.2 or earlier, you'll have to define a sorting function first: Starting in PHP 5.3, you can use an anonymous function: And finally with PHP 7 you can use the \"spaceship operator\":"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also say BIGBLOCK note that there are two spaces after the backslash.",
        "output": "You can also say BIGBLOCK",
        "answer": "You can also say BIGBLOCK note that there are two spaces after the backslash.",
        "summary": "You can also say BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to delimit each parameter name with a \":\" at the very least. Technically the name is optional, but it is recommended for readability. So you could write: BIGBLOCK or what you suggested: BIGBLOCK",
        "output": "You need to delimit each parameter name with a \":\" at the very least. So you could write: BIGBLOCK or what you suggested: BIGBLOCK",
        "answer": "You need to delimit each parameter name with a \":\" at the very least. Technically the name is optional, but it is recommended for readability. So you could write: BIGBLOCK or what you suggested: BIGBLOCK",
        "summary": "You need to delimit each parameter name with a \":\" at the very least. So you could write: BIGBLOCK or what you suggested: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A smart pointer is a class that wraps a 'raw' (or 'bare') C++ pointer, to manage the lifetime of the object being pointed to. There is no single smart pointer type, but all of them try to abstract a raw pointer in a practical way. Smart pointers should be preferred over raw pointers. If you feel you need to use pointers (first consider if you really do), you would normally want to use a smart pointer as this can alleviate many of the problems with raw pointers, mainly forgetting to delete the object and leaking memory. With raw pointers, the programmer has to explicitly destroy the object when it is no longer useful. A smart pointer by comparison defines a policy as to when the object is destroyed. You still have to create the object, but you no longer have to worry about destroying it. The simplest policy in use involves the scope of the smart pointer wrapper object, such as implemented by <code>boost::scoped_ptr</code> or <code>std::unique_ptr</code>. Note that <code>scoped_ptr</code> instances cannot be copied. This prevents the pointer from being deleted multiple times (incorrectly). You can, however, pass references to it around to other functions you call. Scoped pointers are useful when you want to tie the lifetime of the object to a particular block of code, or if you embedded it as member data inside another object, the lifetime of that other object. The object exists until the containing block of code is exited, or until the containing object is itself destroyed. A more complex smart pointer policy involves reference counting the pointer. This does allow the pointer to be copied. When the last \"reference\" to the object is destroyed, the object is deleted. This policy is implemented by <code>boost::shared_ptr</code> and <code>std::shared_ptr</code>. Reference counted pointers are very useful when the lifetime of your object is much more complicated, and is not tied directly to a particular section of code or to another object. There is one drawback to reference counted pointers Ã¨ÂÂÃ©Â©Â´?the possibility of creating a dangling reference: Another possibility is creating circular references: To work around this problem, both Boost and C++11 have defined a <code>weak_ptr</code> to define a weak (uncounted) reference to a <code>shared_ptr</code>. UPDATE This answer is rather old, and so describes what was 'good' at the time, which was smart pointers provided by the Boost library. Since C++11, the standard library has provided sufficient smart pointers types, and so you should favour the use of <code>std::unique_ptr</code>, <code>std::shared_ptr</code> and <code>std::weak_ptr</code>. There is also <code>std::auto_ptr</code>. It is very much like a scoped pointer, except that it also has the \"special\" dangerous ability to be copied Ã¨ÂÂÃ©Â©Â´?which also unexpectedly transfers ownership! It is deprecated in the newest standards, so you shouldn't use it. Use the <code>std::unique_ptr</code> instead.",
        "output": "A smart pointer is a class that wraps a 'raw' (or 'bare') C++ pointer, to manage the lifetime of the object being pointed to. If you feel you need to use pointers (first consider if you really do), you would normally want to use a smart pointer as this can alleviate many of the problems with raw pointers, mainly forgetting to delete the object and leaking memory.",
        "answer": "A smart pointer is a class that wraps a 'raw' (or 'bare') C++ pointer, to manage the lifetime of the object being pointed to. There is no single smart pointer type, but all of them try to abstract a raw pointer in a practical way. Smart pointers should be preferred over raw pointers. If you feel you need to use pointers (first consider if you really do), you would normally want to use a smart pointer as this can alleviate many of the problems with raw pointers, mainly forgetting to delete the object and leaking memory. With raw pointers, the programmer has to explicitly destroy the object when it is no longer useful. A smart pointer by comparison defines a policy as to when the object is destroyed. You still have to create the object, but you no longer have to worry about destroying it. The simplest policy in use involves the scope of the smart pointer wrapper object, such as implemented by <code>boost::scoped_ptr</code> or <code>std::unique_ptr</code>. Note that <code>scoped_ptr</code> instances cannot be copied. This prevents the pointer from being deleted multiple times (incorrectly). You can, however, pass references to it around to other functions you call. Scoped pointers are useful when you want to tie the lifetime of the object to a particular block of code, or if you embedded it as member data inside another object, the lifetime of that other object. The object exists until the containing block of code is exited, or until the containing object is itself destroyed. A more complex smart pointer policy involves reference counting the pointer. This does allow the pointer to be copied. When the last \"reference\" to the object is destroyed, the object is deleted. This policy is implemented by <code>boost::shared_ptr</code> and <code>std::shared_ptr</code>. Reference counted pointers are very useful when the lifetime of your object is much more complicated, and is not tied directly to a particular section of code or to another object. There is one drawback to reference counted pointers Ã¨ÂÂÃ©Â©Â´?the possibility of creating a dangling reference: Another possibility is creating circular references: To work around this problem, both Boost and C++11 have defined a <code>weak_ptr</code> to define a weak (uncounted) reference to a <code>shared_ptr</code>. UPDATE This answer is rather old, and so describes what was 'good' at the time, which was smart pointers provided by the Boost library. Since C++11, the standard library has provided sufficient smart pointers types, and so you should favour the use of <code>std::unique_ptr</code>, <code>std::shared_ptr</code> and <code>std::weak_ptr</code>. There is also <code>std::auto_ptr</code>. It is very much like a scoped pointer, except that it also has the \"special\" dangerous ability to be copied Ã¨ÂÂÃ©Â©Â´?which also unexpectedly transfers ownership! It is deprecated in the newest standards, so you shouldn't use it. Use the <code>std::unique_ptr</code> instead.",
        "summary": "A smart pointer is a class that wraps a 'raw' (or 'bare') C++ pointer, to manage the lifetime of the object being pointed to. If you feel you need to use pointers (first consider if you really do), you would normally want to use a smart pointer as this can alleviate many of the problems with raw pointers, mainly forgetting to delete the object and leaking memory."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n People from other scripting languages always think theirs is better because they have a built in function to do that and not PHP (I am looking at pythonistas right now :-)). In fact, it does exist, but few people know it. Meet <code>pathinfo()</code>: This is fast and built-in. <code>pathinfo()</code> can give you other information, such as canonical path, depending on the constant you pass to it. Remember that if you want to be able to deal with non ASCII characters, you need to set the locale first. E.G: Also note this doesn't take in consideration the file content or mimetype, you only get the extension. But it's what you asked for. Lastly, note that this works only for a file path, not a URL ressources path, which are covered using PARSE_URL. Enjoy",
        "output": "In fact, it does exist, but few people know it. Meet <code>pathinfo()</code>:",
        "answer": "People from other scripting languages always think theirs is better because they have a built in function to do that and not PHP (I am looking at pythonistas right now :-)). In fact, it does exist, but few people know it. Meet <code>pathinfo()</code>: This is fast and built-in. <code>pathinfo()</code> can give you other information, such as canonical path, depending on the constant you pass to it. Remember that if you want to be able to deal with non ASCII characters, you need to set the locale first. E.G: Also note this doesn't take in consideration the file content or mimetype, you only get the extension. But it's what you asked for. Lastly, note that this works only for a file path, not a URL ressources path, which are covered using PARSE_URL. Enjoy",
        "summary": "In fact, it does exist, but few people know it. Meet <code>pathinfo()</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's a horribly obscure way to do a type conversion. <code>!</code> is NOT. So <code>!true</code> is <code>false</code>, and <code>!false</code> is <code>true</code>. <code>!0</code> is <code>true</code>, and <code>!1</code> is <code>false</code>. So you're converting a value to a boolean, then inverting it, then inverting it again.",
        "output": "So you're converting a value to a boolean, then inverting it, then inverting it again.",
        "answer": "It's a horribly obscure way to do a type conversion. <code>!</code> is NOT. So <code>!true</code> is <code>false</code>, and <code>!false</code> is <code>true</code>. <code>!0</code> is <code>true</code>, and <code>!1</code> is <code>false</code>. So you're converting a value to a boolean, then inverting it, then inverting it again.",
        "summary": "So you're converting a value to a boolean, then inverting it, then inverting it again."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What finally worked was setting the <code>http_proxy</code> environment variable. I had set <code>HTTP_PROXY</code> correctly, but git apparently likes the lower-case version better.",
        "output": "What finally worked was setting the <code>http_proxy</code> environment variable.",
        "answer": "What finally worked was setting the <code>http_proxy</code> environment variable. I had set <code>HTTP_PROXY</code> correctly, but git apparently likes the lower-case version better.",
        "summary": "What finally worked was setting the <code>http_proxy</code> environment variable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Using Apache Commons IOUtils you can do this nicely via BIGBLOCK It's not doing anything clever, but it's nice and compact. It'll handle streams as well, and you can get a <code>LineIterator</code> too if you prefer.",
        "output": "Using Apache Commons IOUtils you can do this nicely via BIGBLOCK It'll handle streams as well, and you can get a <code>LineIterator</code> too if you prefer.",
        "answer": "Using Apache Commons IOUtils you can do this nicely via BIGBLOCK It's not doing anything clever, but it's nice and compact. It'll handle streams as well, and you can get a <code>LineIterator</code> too if you prefer.",
        "summary": "Using Apache Commons IOUtils you can do this nicely via BIGBLOCK It'll handle streams as well, and you can get a <code>LineIterator</code> too if you prefer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n you can also make it <code>overflow: auto</code> and give a maximum fixed height and width that way, when the text or whatever is in there, overflows it'll show only the required scrollbar",
        "output": "you can also make it <code>overflow: auto</code> and give a maximum fixed height and width that way, when the text or whatever is in there, overflows it'll show only the required scrollbar",
        "answer": "you can also make it <code>overflow: auto</code> and give a maximum fixed height and width that way, when the text or whatever is in there, overflows it'll show only the required scrollbar",
        "summary": "you can also make it <code>overflow: auto</code> and give a maximum fixed height and width that way, when the text or whatever is in there, overflows it'll show only the required scrollbar"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can do it like this: If you want to return just the records that can be deleted (leaving one of each), you can use: Edit: SQL Server 2000 doesn't have the ROW_NUMBER() function. Instead, you can use:",
        "output": "You can do it like this:",
        "answer": "You can do it like this: If you want to return just the records that can be deleted (leaving one of each), you can use: Edit: SQL Server 2000 doesn't have the ROW_NUMBER() function. Instead, you can use:",
        "summary": "You can do it like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use the <code>BIT</code> datatype to represent boolean data. A <code>BIT</code> field's value is either 1,0 or null.",
        "output": "You could use the <code>BIT</code> datatype to represent boolean data.",
        "answer": "You could use the <code>BIT</code> datatype to represent boolean data. A <code>BIT</code> field's value is either 1,0 or null.",
        "summary": "You could use the <code>BIT</code> datatype to represent boolean data."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Whenever you use <code>SingleOrDefault</code>, you clearly state that the query should result in at most a <em>single</em> result. On the other hand, when <code>FirstOrDefault</code> is used, the query can return any amount of results but you state that you only want the first one. I personally find the semantics very different and using the appropriate one, depending on the expected results, improves readability.",
        "output": "Whenever you use <code>SingleOrDefault</code>, you clearly state that the query should result in at most a <em>single</em> result. On the other hand, when <code>FirstOrDefault</code> is used, the query can return any amount of results but you state that you only want the first one.",
        "answer": "Whenever you use <code>SingleOrDefault</code>, you clearly state that the query should result in at most a <em>single</em> result. On the other hand, when <code>FirstOrDefault</code> is used, the query can return any amount of results but you state that you only want the first one. I personally find the semantics very different and using the appropriate one, depending on the expected results, improves readability.",
        "summary": "Whenever you use <code>SingleOrDefault</code>, you clearly state that the query should result in at most a <em>single</em> result. On the other hand, when <code>FirstOrDefault</code> is used, the query can return any amount of results but you state that you only want the first one."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use of finalize() methods should be avoided. They are not a reliable mechanism for resource clean up and it is possible to cause problems in the garbage collector by abusing them. If you require a deallocation call in your object, say to release resources, use an explicit method call. This convention can be seen in existing APIs (e.g. Closeable, Graphics.dispose(), Widget.dispose()) and is usually called via try/finally. Attempts to use a disposed object should throw a runtime exception (see IllegalStateException). EDIT: I was thinking, if all I did was just   to dereference the data and wait for   the garbage collector to collect them,   wouldn't there be a memory leak if my   user repeatedly entered data and   pressed the reset button? Generally, all you need to do is dereference the objects - at least, this is the way it is supposed to work. If you are worried about garbage collection, check out Java SE 6 HotSpot[tm] Virtual Machine Garbage Collection Tuning (or the equivalent document for your JVM version).",
        "output": "Generally, all you need to do is dereference the objects - at least, this is the way it is supposed to work.",
        "answer": "Use of finalize() methods should be avoided. They are not a reliable mechanism for resource clean up and it is possible to cause problems in the garbage collector by abusing them. If you require a deallocation call in your object, say to release resources, use an explicit method call. This convention can be seen in existing APIs (e.g. Closeable, Graphics.dispose(), Widget.dispose()) and is usually called via try/finally. Attempts to use a disposed object should throw a runtime exception (see IllegalStateException). EDIT: I was thinking, if all I did was just   to dereference the data and wait for   the garbage collector to collect them,   wouldn't there be a memory leak if my   user repeatedly entered data and   pressed the reset button? Generally, all you need to do is dereference the objects - at least, this is the way it is supposed to work. If you are worried about garbage collection, check out Java SE 6 HotSpot[tm] Virtual Machine Garbage Collection Tuning (or the equivalent document for your JVM version).",
        "summary": "Generally, all you need to do is dereference the objects - at least, this is the way it is supposed to work."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n How about an analogy: when I was in the Air Force, I went to pilot training and became a USAF (US Air Force) pilot. At that point I wasn't qualified to fly anything, and had to attend aircraft type training. Once I qualified, I was a pilot (Abstract class) and a C-141 pilot (concrete class). At one of my assignments, I was given an additional duty: Safety Officer. Now I was still a pilot and a C-141 pilot, but I also performed Safety Officer duties (I implemented ISafetyOfficer, so to speak). A pilot wasn't required to be a safety officer, other people could have done it as well. All USAF pilots have to follow certain Air Force-wide regulations, and all C-141 (or F-16, or T-38) pilots 'are' USAF pilots. Anyone can be a safety officer. So, to summarize: <li>Pilot:  abstract class <li>C-141 Pilot:  concrete class <li>ISafety Officer:  interface added note:  this was meant to be an analogy to help explain the concept, not a coding recommendation. See the various comments below, the discussion is interesting.",
        "output": "How about an analogy: when I was in the Air Force, I went to pilot training and became a USAF (US Air Force) pilot. <li>Pilot:  abstract class <li>C-141 Pilot:  concrete class <li>ISafety Officer:  interface",
        "answer": "How about an analogy: when I was in the Air Force, I went to pilot training and became a USAF (US Air Force) pilot. At that point I wasn't qualified to fly anything, and had to attend aircraft type training. Once I qualified, I was a pilot (Abstract class) and a C-141 pilot (concrete class). At one of my assignments, I was given an additional duty: Safety Officer. Now I was still a pilot and a C-141 pilot, but I also performed Safety Officer duties (I implemented ISafetyOfficer, so to speak). A pilot wasn't required to be a safety officer, other people could have done it as well. All USAF pilots have to follow certain Air Force-wide regulations, and all C-141 (or F-16, or T-38) pilots 'are' USAF pilots. Anyone can be a safety officer. So, to summarize: <li>Pilot:  abstract class <li>C-141 Pilot:  concrete class <li>ISafety Officer:  interface added note:  this was meant to be an analogy to help explain the concept, not a coding recommendation. See the various comments below, the discussion is interesting.",
        "summary": "How about an analogy: when I was in the Air Force, I went to pilot training and became a USAF (US Air Force) pilot. <li>Pilot:  abstract class <li>C-141 Pilot:  concrete class <li>ISafety Officer:  interface"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've written some code that provides \"LINQ to HTML\" functionality. I thought I would share it here. It is based on Majestic 12. It takes the Majestic-12 results and produces LINQ XML elements. At that point you can use all your LINQ to XML tools against the HTML. As an example: I wanted to use Majestic-12 because I know it has a lot of built-in knowledge with regards to HTML that is found in the wild. What I've found though is that to map the Majestic-12 results to something that LINQ will accept as XML requires additional work. The code I'm including does a lot of this cleansing, but as you use this you will find pages that are rejected. You'll need to fix up the code to address that. When an exception is thrown, check exception.Data[\"source\"] as it is likely set to the HTML tag that caused the exception. Handling the HTML in a nice manner is at times not trivial... So now that expectations are realistically low, here's the code :)",
        "output": "I've written some code that provides \"LINQ to HTML\" functionality.",
        "answer": "I've written some code that provides \"LINQ to HTML\" functionality. I thought I would share it here. It is based on Majestic 12. It takes the Majestic-12 results and produces LINQ XML elements. At that point you can use all your LINQ to XML tools against the HTML. As an example: I wanted to use Majestic-12 because I know it has a lot of built-in knowledge with regards to HTML that is found in the wild. What I've found though is that to map the Majestic-12 results to something that LINQ will accept as XML requires additional work. The code I'm including does a lot of this cleansing, but as you use this you will find pages that are rejected. You'll need to fix up the code to address that. When an exception is thrown, check exception.Data[\"source\"] as it is likely set to the HTML tag that caused the exception. Handling the HTML in a nice manner is at times not trivial... So now that expectations are realistically low, here's the code :)",
        "summary": "I've written some code that provides \"LINQ to HTML\" functionality."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can't call something that doesn't exist. Since you haven't created an object, the non-static method doesn't exist yet. A static method (by definition) always exists.",
        "output": "Since you haven't created an object, the non-static method doesn't exist yet. A static method (by definition) always exists.",
        "answer": "You can't call something that doesn't exist. Since you haven't created an object, the non-static method doesn't exist yet. A static method (by definition) always exists.",
        "summary": "Since you haven't created an object, the non-static method doesn't exist yet. A static method (by definition) always exists."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is covered in Chapter 5 (Generics) of Effective Java, 2nd Edition, item 25...<strong>Prefer lists to arrays</strong> Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation: However, it would probably be better to use a List instead of an Array. There's an interesting discussion of this bug/feature on the OpenJDK project site.",
        "output": "Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation: However, it would probably be better to use a List instead of an Array.",
        "answer": "This is covered in Chapter 5 (Generics) of Effective Java, 2nd Edition, item 25...<strong>Prefer lists to arrays</strong> Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation: However, it would probably be better to use a List instead of an Array. There's an interesting discussion of this bug/feature on the OpenJDK project site.",
        "summary": "Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation: However, it would probably be better to use a List instead of an Array."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also try pcregrep. There is also a <code>-w</code> option in grep, but in some cases it doesn't work as expected. From Wikipedia:",
        "output": "You can also try pcregrep.",
        "answer": "You can also try pcregrep. There is also a <code>-w</code> option in grep, but in some cases it doesn't work as expected. From Wikipedia:",
        "summary": "You can also try pcregrep."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Simple answer: <strong>Break</strong> exits the loop immediately. <strong>Continue</strong> starts processing the next item. (If there are any, by jumping to the evaluating line of the for/while)",
        "output": "<strong>Break</strong> exits the loop immediately. <strong>Continue</strong> starts processing the next item.",
        "answer": "Simple answer: <strong>Break</strong> exits the loop immediately. <strong>Continue</strong> starts processing the next item. (If there are any, by jumping to the evaluating line of the for/while)",
        "summary": "<strong>Break</strong> exits the loop immediately. <strong>Continue</strong> starts processing the next item."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think this is precisely what you are asking for: http://www.bashcookbook.com/bashinfo/source/bash-4.0/examples/scripts/timeout3 BIGBLOCK",
        "output": "I think this is precisely what you are asking for: http://www.bashcookbook.com/bashinfo/source/bash-4.0/examples/scripts/timeout3",
        "answer": "I think this is precisely what you are asking for: http://www.bashcookbook.com/bashinfo/source/bash-4.0/examples/scripts/timeout3 BIGBLOCK",
        "summary": "I think this is precisely what you are asking for: http://www.bashcookbook.com/bashinfo/source/bash-4.0/examples/scripts/timeout3"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n So number 1 above. What is Inversion of Control? Maintenance is the number one thing it solves for me. It guarantees I am using interfaces so that two classes are not intimate with each other. In using a container like Castle Windsor, it solves maintenance issues even better. Being able to swap out a component that goes to a database for one that uses file based persistence without changing a line of code is awesome (configuration change, you're done). And once you get into generics, it gets even better. Imagine having a message publisher that receives records and publishes messages. It doesn't care what it publishes, but it needs a mapper to take something from a record to a message. I wrote it once, but now I can inject many types into this set of code if I publish different types of messages. I can also write mappers that take a record of the same type and map them to different messages. Using DI with Generics has given me the ability to write very little code to accomplish many tasks. Oh yeah, there are testability concerns, but they are secondary to the benefits of IoC/DI. I am definitely loving IoC/DI. 3 . It becomes more appropriate the minute you have a medium sized project of somewhat more complexity. I would say it becomes appropriate the minute you start feeling pain.",
        "output": "Maintenance is the number one thing it solves for me. Oh yeah, there are testability concerns, but they are secondary to the benefits of IoC/DI. It becomes more appropriate the minute you have a medium sized project of somewhat more complexity.",
        "answer": "So number 1 above. What is Inversion of Control? Maintenance is the number one thing it solves for me. It guarantees I am using interfaces so that two classes are not intimate with each other. In using a container like Castle Windsor, it solves maintenance issues even better. Being able to swap out a component that goes to a database for one that uses file based persistence without changing a line of code is awesome (configuration change, you're done). And once you get into generics, it gets even better. Imagine having a message publisher that receives records and publishes messages. It doesn't care what it publishes, but it needs a mapper to take something from a record to a message. I wrote it once, but now I can inject many types into this set of code if I publish different types of messages. I can also write mappers that take a record of the same type and map them to different messages. Using DI with Generics has given me the ability to write very little code to accomplish many tasks. Oh yeah, there are testability concerns, but they are secondary to the benefits of IoC/DI. I am definitely loving IoC/DI. 3 . It becomes more appropriate the minute you have a medium sized project of somewhat more complexity. I would say it becomes appropriate the minute you start feeling pain.",
        "summary": "Maintenance is the number one thing it solves for me. Oh yeah, there are testability concerns, but they are secondary to the benefits of IoC/DI. It becomes more appropriate the minute you have a medium sized project of somewhat more complexity."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Jane Dallaway's stored procedure: http://docs.google.com/leaf?id=0B_AkC4ZdTI9tNWVmZWU3NzAtMWY1My00NjgwLWI3ZjQtMTY1NDMxYzBhYzgx&amp;hl=en_GB. Documentation is a series of blog posts: https://www.google.com/search?q=spu_generateinsert&amp;as_sitesearch=http%3A%2F%2Fjane.dallaway.com",
        "output": "Jane Dallaway's stored procedure: http://docs.google.com/leaf?id=0B_AkC4ZdTI9tNWVmZWU3NzAtMWY1My00NjgwLWI3ZjQtMTY1NDMxYzBhYzgx&amp;hl=en_GB.",
        "answer": "Jane Dallaway's stored procedure: http://docs.google.com/leaf?id=0B_AkC4ZdTI9tNWVmZWU3NzAtMWY1My00NjgwLWI3ZjQtMTY1NDMxYzBhYzgx&amp;hl=en_GB. Documentation is a series of blog posts: https://www.google.com/search?q=spu_generateinsert&amp;as_sitesearch=http%3A%2F%2Fjane.dallaway.com",
        "summary": "Jane Dallaway's stored procedure: http://docs.google.com/leaf?id=0B_AkC4ZdTI9tNWVmZWU3NzAtMWY1My00NjgwLWI3ZjQtMTY1NDMxYzBhYzgx&amp;hl=en_GB."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>public</strong> - can be access by anyone anywhere. <strong>private</strong> - can only be accessed from with in the class it is a part of. <strong>protected</strong> - can only be accessed from with in the class or any object that inherits off of the class. Nothing is like null but in VB. Static means you have one instance of that object, method for every instance of that class.",
        "output": "<strong>public</strong> - can be access by anyone anywhere. <strong>private</strong> - can only be accessed from with in the class it is a part of. <strong>protected</strong> - can only be accessed from with in the class or any object that inherits off of the class. Nothing is like null but in VB.",
        "answer": "<strong>public</strong> - can be access by anyone anywhere. <strong>private</strong> - can only be accessed from with in the class it is a part of. <strong>protected</strong> - can only be accessed from with in the class or any object that inherits off of the class. Nothing is like null but in VB. Static means you have one instance of that object, method for every instance of that class.",
        "summary": "<strong>public</strong> - can be access by anyone anywhere. <strong>private</strong> - can only be accessed from with in the class it is a part of. <strong>protected</strong> - can only be accessed from with in the class or any object that inherits off of the class. Nothing is like null but in VB."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are you getting this value from a database? If so, consider formatting it in the database (use <code>date_format</code> in mysql, for example). If not, exploding the value may be the best bet, since strtotime just doesn't seem to appreciate dd/mm/yyyy values.",
        "output": "Are you getting this value from a database? If not, exploding the value may be the best bet, since strtotime just doesn't seem to appreciate dd/mm/yyyy values.",
        "answer": "Are you getting this value from a database? If so, consider formatting it in the database (use <code>date_format</code> in mysql, for example). If not, exploding the value may be the best bet, since strtotime just doesn't seem to appreciate dd/mm/yyyy values.",
        "summary": "Are you getting this value from a database? If not, exploding the value may be the best bet, since strtotime just doesn't seem to appreciate dd/mm/yyyy values."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They are not synonyms. <code>display:none</code> removes the element from the normal flow of the page, allowing other elements to fill in. <code>visibility:hidden</code> leaves the element in the normal flow of the page such that is still occupies space. Imagine you are in line for a ride at an amusement park and someone in the line gets so rowdy that security plucks them from the line. Everyone in line will then move forward one position to fill the now empty slot. This is like <code>display:none</code>. Contrast this with the similar situation, but that someone in front of you puts on an invisibility cloak. While viewing the line, it will look like there is an empty space, but people can't really fill that empty looking space because someone is still there. This is like <code>visibility:hidden</code>.",
        "output": "<code>display:none</code> removes the element from the normal flow of the page, allowing other elements to fill in. <code>visibility:hidden</code> leaves the element in the normal flow of the page such that is still occupies space.",
        "answer": "They are not synonyms. <code>display:none</code> removes the element from the normal flow of the page, allowing other elements to fill in. <code>visibility:hidden</code> leaves the element in the normal flow of the page such that is still occupies space. Imagine you are in line for a ride at an amusement park and someone in the line gets so rowdy that security plucks them from the line. Everyone in line will then move forward one position to fill the now empty slot. This is like <code>display:none</code>. Contrast this with the similar situation, but that someone in front of you puts on an invisibility cloak. While viewing the line, it will look like there is an empty space, but people can't really fill that empty looking space because someone is still there. This is like <code>visibility:hidden</code>.",
        "summary": "<code>display:none</code> removes the element from the normal flow of the page, allowing other elements to fill in. <code>visibility:hidden</code> leaves the element in the normal flow of the page such that is still occupies space."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is a function that will halt program execution if the value it has evaluated is false. Usually it is surrounded by a macro so that it is not compiled into the resultant binary when compiled with release settings. It is designed to be used for testing the assumptions you have made. For example: BIGBLOCK The ideal you want is that you can make an error in your program, like calling a function with invalid arguments, and you hit an assert before it segfaults (or fails to work as expected)",
        "output": "It is a function that will halt program execution if the value it has evaluated is false. It is designed to be used for testing the assumptions you have made. The ideal you want is that you can make an error in your program, like calling a function with invalid arguments, and you hit an assert before it segfaults (or fails to work as expected)",
        "answer": "It is a function that will halt program execution if the value it has evaluated is false. Usually it is surrounded by a macro so that it is not compiled into the resultant binary when compiled with release settings. It is designed to be used for testing the assumptions you have made. For example: BIGBLOCK The ideal you want is that you can make an error in your program, like calling a function with invalid arguments, and you hit an assert before it segfaults (or fails to work as expected)",
        "summary": "It is a function that will halt program execution if the value it has evaluated is false. It is designed to be used for testing the assumptions you have made. The ideal you want is that you can make an error in your program, like calling a function with invalid arguments, and you hit an assert before it segfaults (or fails to work as expected)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n HTTP status code 500 usually means that the webserver code has crashed. You need to determine the status code beforehand using <code>HttpURLConnection#getResponseCode()</code> and in case of errors, read the <code>HttpURLConnection#getErrorStream()</code> instead. It may namely contain information about the problem. If the host has blocked you, you would rather have gotten a 4nn status code like 401 or 403. See also: How to use URLConnection to fire and handle HTTP requests?",
        "output": "HTTP status code 500 usually means that the webserver code has crashed. You need to determine the status code beforehand using <code>HttpURLConnection#getResponseCode()</code> and in case of errors, read the <code>HttpURLConnection#getErrorStream()</code> instead.",
        "answer": "HTTP status code 500 usually means that the webserver code has crashed. You need to determine the status code beforehand using <code>HttpURLConnection#getResponseCode()</code> and in case of errors, read the <code>HttpURLConnection#getErrorStream()</code> instead. It may namely contain information about the problem. If the host has blocked you, you would rather have gotten a 4nn status code like 401 or 403. See also: How to use URLConnection to fire and handle HTTP requests?",
        "summary": "HTTP status code 500 usually means that the webserver code has crashed. You need to determine the status code beforehand using <code>HttpURLConnection#getResponseCode()</code> and in case of errors, read the <code>HttpURLConnection#getErrorStream()</code> instead."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just pure history. Quote from Stan Lippman: The reason for the two keywords is historical. In the original template specification, Stroustrup reused the existing class keyword to specify a type parameter rather than introduce a new keyword that might of course break existing programs. It wasn't that a new keyword wasn't considered -- just that it wasn't considered necessary given its potential disruption. And up until the ISO-C++ standard, this was the only way to declare a type parameter. But one should use <strong>typename</strong> rather than <strong>class</strong>! See the link for more info, but think about the following code: BIGBLOCK",
        "output": "But one should use <strong>typename</strong> rather than <strong>class</strong>!",
        "answer": "Just pure history. Quote from Stan Lippman: The reason for the two keywords is historical. In the original template specification, Stroustrup reused the existing class keyword to specify a type parameter rather than introduce a new keyword that might of course break existing programs. It wasn't that a new keyword wasn't considered -- just that it wasn't considered necessary given its potential disruption. And up until the ISO-C++ standard, this was the only way to declare a type parameter. But one should use <strong>typename</strong> rather than <strong>class</strong>! See the link for more info, but think about the following code: BIGBLOCK",
        "summary": "But one should use <strong>typename</strong> rather than <strong>class</strong>!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I started reading David Mertz's book today 'Text Processing in Python.' While he has a fairly terse description of Lambda's the examples in the first chapter combined with the explanation in Appendix A made them jump off the page for me (finally) and all of a sudden I understood their value. That is not to say his explanation will work for you and I am still at the discovery stage so I will not attempt to add to these responses other than the following: I am new to Python I am new to OOP Lambdas were a struggle for me Now that I read Mertz, I think I get them and I see them as very useful as I think they allow a cleaner approach to programming. He reproduces the Zen of Python, one line of which is Simple is better than complex. As a non-OOP programmer reading code with lambdas (and until last week list comprehensions) I have thought-This is simple?. I finally realized today that actually these features make the code much more readable, and understandable than the alternative-which is invariably a loop of some sort. I also realized that like financial statements-Python was not designed for the novice user, rather it is designed for the user that wants to get educated. I can't believe how powerful this language is. When it dawned on me (finally) the purpose and value of lambdas I wanted to rip up about 30 programs and start over putting in lambdas where appropriate.",
        "output": "I finally realized today that actually these features make the code much more readable, and understandable than the alternative-which is invariably a loop of some sort.",
        "answer": "I started reading David Mertz's book today 'Text Processing in Python.' While he has a fairly terse description of Lambda's the examples in the first chapter combined with the explanation in Appendix A made them jump off the page for me (finally) and all of a sudden I understood their value. That is not to say his explanation will work for you and I am still at the discovery stage so I will not attempt to add to these responses other than the following: I am new to Python I am new to OOP Lambdas were a struggle for me Now that I read Mertz, I think I get them and I see them as very useful as I think they allow a cleaner approach to programming. He reproduces the Zen of Python, one line of which is Simple is better than complex. As a non-OOP programmer reading code with lambdas (and until last week list comprehensions) I have thought-This is simple?. I finally realized today that actually these features make the code much more readable, and understandable than the alternative-which is invariably a loop of some sort. I also realized that like financial statements-Python was not designed for the novice user, rather it is designed for the user that wants to get educated. I can't believe how powerful this language is. When it dawned on me (finally) the purpose and value of lambdas I wanted to rip up about 30 programs and start over putting in lambdas where appropriate.",
        "summary": "I finally realized today that actually these features make the code much more readable, and understandable than the alternative-which is invariably a loop of some sort."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I was thinking about the horrible times I've spent in Numerical Analysis course. And then I remember, there was this function circling around the 'net from the Quake Source code: BIGBLOCK Which basically calculates a square root, using Newton's approximation function (cant remember the exact name). It should be usable and might even be faster, it's from one of the phenomenal id software's game! It's written in C++ but it should not be too hard to reuse the same technique in Java once you get the idea: I originally found it at: http://www.codemaestro.com/reviews/9 Newton's method explained at wikipedia: http://en.wikipedia.org/wiki/Newton%27s_method You can follow the link for more explanation of how it works, but if you don't care much, then this is roughly what I remember from reading the blog and from taking the Numerical Analysis course: <li>the <code>* (long*) &amp;y</code> is basically a fast convert-to-long function so integer operations can be applied on the raw bytes. <li>the <code>0x5f3759df - (i &gt;&gt; 1);</code> line is a pre-calculated seed value for the approximation function. <li>the <code>* (float*) &amp;i</code> converts the value back to floating point. <li>the <code>y  = y * ( threehalfs - ( x2 * y * y ) )</code> line bascially iterates the value over the function again. The approximation function gives more precise values the more you iterate the function over the result. In Quake's case, one iteration is \"good enough\", but if it wasn't for you... then you could add as much iteration as you need. This should be faster because it reduces the number of division operations done in naive square rooting down to a simple divide by 2 (actually a <code>* 0.5F</code> multiply operation) and replace it with a few fixed number of multiplication operations instead.",
        "output": "And then I remember, there was this function circling around the 'net from the Quake Source code: BIGBLOCK Which basically calculates a square root, using Newton's approximation function (cant remember the exact name). It should be usable and might even be faster, it's from one of the phenomenal id software's game! This should be faster because it reduces the number of division operations done in naive square rooting down to a simple divide by 2 (actually a <code>* 0.5F</code> multiply operation) and replace it with a few fixed number of multiplication operations instead.",
        "answer": "I was thinking about the horrible times I've spent in Numerical Analysis course. And then I remember, there was this function circling around the 'net from the Quake Source code: BIGBLOCK Which basically calculates a square root, using Newton's approximation function (cant remember the exact name). It should be usable and might even be faster, it's from one of the phenomenal id software's game! It's written in C++ but it should not be too hard to reuse the same technique in Java once you get the idea: I originally found it at: http://www.codemaestro.com/reviews/9 Newton's method explained at wikipedia: http://en.wikipedia.org/wiki/Newton%27s_method You can follow the link for more explanation of how it works, but if you don't care much, then this is roughly what I remember from reading the blog and from taking the Numerical Analysis course: <li>the <code>* (long*) &amp;y</code> is basically a fast convert-to-long function so integer operations can be applied on the raw bytes. <li>the <code>0x5f3759df - (i &gt;&gt; 1);</code> line is a pre-calculated seed value for the approximation function. <li>the <code>* (float*) &amp;i</code> converts the value back to floating point. <li>the <code>y  = y * ( threehalfs - ( x2 * y * y ) )</code> line bascially iterates the value over the function again. The approximation function gives more precise values the more you iterate the function over the result. In Quake's case, one iteration is \"good enough\", but if it wasn't for you... then you could add as much iteration as you need. This should be faster because it reduces the number of division operations done in naive square rooting down to a simple divide by 2 (actually a <code>* 0.5F</code> multiply operation) and replace it with a few fixed number of multiplication operations instead.",
        "summary": "And then I remember, there was this function circling around the 'net from the Quake Source code: BIGBLOCK Which basically calculates a square root, using Newton's approximation function (cant remember the exact name). It should be usable and might even be faster, it's from one of the phenomenal id software's game! This should be faster because it reduces the number of division operations done in naive square rooting down to a simple divide by 2 (actually a <code>* 0.5F</code> multiply operation) and replace it with a few fixed number of multiplication operations instead."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Off the top of my head: They enforce tight-coupling. If your singleton resides on a different assembly than its user, the using assembly cannot ever function without the assembly containing the singleton. They allow for circular dependencies, e.g., Assembly A can have a singleton with a dependency on Assembly B, and Assembly B can use Assembly A's singleton. All without breaking the compiler.",
        "output": "They enforce tight-coupling. They allow for circular dependencies, e.g., Assembly A can have a singleton with a dependency on Assembly B, and Assembly B can use Assembly A's singleton.",
        "answer": "Off the top of my head: They enforce tight-coupling. If your singleton resides on a different assembly than its user, the using assembly cannot ever function without the assembly containing the singleton. They allow for circular dependencies, e.g., Assembly A can have a singleton with a dependency on Assembly B, and Assembly B can use Assembly A's singleton. All without breaking the compiler.",
        "summary": "They enforce tight-coupling. They allow for circular dependencies, e.g., Assembly A can have a singleton with a dependency on Assembly B, and Assembly B can use Assembly A's singleton."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To add what all the others said: All these equations work kinda well in practice, but if you need to be very precise you have to first convert the color to linear color space (apply inverse image-gamma), do the weight average of the primary colors and - if you want to display the color - take the luminance back into the monitor gamma. The luminance difference between ingnoring gamma and doing proper gamma is up to 20% in the dark grays.",
        "output": "The luminance difference between ingnoring gamma and doing proper gamma is up to 20% in the dark grays.",
        "answer": "To add what all the others said: All these equations work kinda well in practice, but if you need to be very precise you have to first convert the color to linear color space (apply inverse image-gamma), do the weight average of the primary colors and - if you want to display the color - take the luminance back into the monitor gamma. The luminance difference between ingnoring gamma and doing proper gamma is up to 20% in the dark grays.",
        "summary": "The luminance difference between ingnoring gamma and doing proper gamma is up to 20% in the dark grays."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism is the ability for an object to appear in multiple forms. This involves using inheritance and virtual functions to build a family of objects which can be interchanged. The base class contains the prototypes of the virtual functions, possibly unimplemented or with default implementations as the application dictates, and the various derived classes each implements them differently to affect different behaviors.",
        "output": "Polymorphism is the ability for an object to appear in multiple forms.",
        "answer": "Polymorphism is the ability for an object to appear in multiple forms. This involves using inheritance and virtual functions to build a family of objects which can be interchanged. The base class contains the prototypes of the virtual functions, possibly unimplemented or with default implementations as the application dictates, and the various derived classes each implements them differently to affect different behaviors.",
        "summary": "Polymorphism is the ability for an object to appear in multiple forms."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You might try using my mailer module. BIGBLOCK",
        "output": "You might try using my mailer module. BIGBLOCK",
        "answer": "You might try using my mailer module. BIGBLOCK",
        "summary": "You might try using my mailer module. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This question shows precisely why I like to do things the way I mentioned in my question is const after type id acceptable? In short, I find the easiest way to remember the rule is that the \"const\" goes after the thing it applies to. So in your question, \"int const *\" means that the int is constant, while \"int * const\" would mean that the pointer is constant. If someone decides to put it at the very front (eg: \"const int *\"), as a special exception in that case it applies to the thing after it. Many people like to use that special exception because they think it looks nicer. I dislike it, because it is an exception, and thus confuses things.",
        "output": "In short, I find the easiest way to remember the rule is that the \"const\" goes after the thing it applies to. So in your question, \"int const *\" means that the int is constant, while \"int * const\" would mean that the pointer is constant.",
        "answer": "This question shows precisely why I like to do things the way I mentioned in my question is const after type id acceptable? In short, I find the easiest way to remember the rule is that the \"const\" goes after the thing it applies to. So in your question, \"int const *\" means that the int is constant, while \"int * const\" would mean that the pointer is constant. If someone decides to put it at the very front (eg: \"const int *\"), as a special exception in that case it applies to the thing after it. Many people like to use that special exception because they think it looks nicer. I dislike it, because it is an exception, and thus confuses things.",
        "summary": "In short, I find the easiest way to remember the rule is that the \"const\" goes after the thing it applies to. So in your question, \"int const *\" means that the int is constant, while \"int * const\" would mean that the pointer is constant."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This works: I assumed that since a foreach loop is syntactic sugar for iterating, using an iterator wouldn't help... but it gives you this <code>.remove()</code> functionality.",
        "output": "This works:",
        "answer": "This works: I assumed that since a foreach loop is syntactic sugar for iterating, using an iterator wouldn't help... but it gives you this <code>.remove()</code> functionality.",
        "summary": "This works:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Strictly, method <code>a</code> is the least resource intensive: Proven less CPU intensive for same total duration a million rows by some one with way too much time on their hands: Most efficient way in SQL Server to get date from date+time? I saw a similar test elsewhere with similar results too. I prefer the DATEADD/DATEDIFF because: <li>varchar is subject to language/dateformat issues Example: Why is my CASE expression non-deterministic? <li>float relies on internal storage <li>it extends to work out first day of month, tomorrow etc by changing \"0\" base <strong>Edit, Oct 2011</strong> For SQL Server 2008+, you can CAST to <code>date</code>. Or just use <code>date</code> so no time to remove. <strong>Edit, Jan 2012</strong> A worked example of how flexible this is: Need to calculate by rounded time or date figure in sql server <strong>Edit, May 2012</strong> Do not use this in WHERE clauses and the like without thinking: adding a function or CAST to a column invalidates index usage. See number 2 here: http://www.simple-talk.com/sql/t-sql-programming/ten-common-sql-programming-mistakes/ Now, this does have an example of later SQL Server optimiser versions managing CAST to date correctly, but <em>generally</em> it will be a bad idea ...",
        "output": "Strictly, method <code>a</code> is the least resource intensive: Proven less CPU intensive for same total duration a million rows by some one with way too much time on their hands: Most efficient way in SQL Server to get date from date+time? I prefer the DATEADD/DATEDIFF because: <li>varchar is subject to language/dateformat issues <li>float relies on internal storage <li>it extends to work out first day of month, tomorrow etc by changing \"0\" base For SQL Server 2008+, you can CAST to <code>date</code>. Or just use <code>date</code> so no time to remove.",
        "answer": "Strictly, method <code>a</code> is the least resource intensive: Proven less CPU intensive for same total duration a million rows by some one with way too much time on their hands: Most efficient way in SQL Server to get date from date+time? I saw a similar test elsewhere with similar results too. I prefer the DATEADD/DATEDIFF because: <li>varchar is subject to language/dateformat issues Example: Why is my CASE expression non-deterministic? <li>float relies on internal storage <li>it extends to work out first day of month, tomorrow etc by changing \"0\" base <strong>Edit, Oct 2011</strong> For SQL Server 2008+, you can CAST to <code>date</code>. Or just use <code>date</code> so no time to remove. <strong>Edit, Jan 2012</strong> A worked example of how flexible this is: Need to calculate by rounded time or date figure in sql server <strong>Edit, May 2012</strong> Do not use this in WHERE clauses and the like without thinking: adding a function or CAST to a column invalidates index usage. See number 2 here: http://www.simple-talk.com/sql/t-sql-programming/ten-common-sql-programming-mistakes/ Now, this does have an example of later SQL Server optimiser versions managing CAST to date correctly, but <em>generally</em> it will be a bad idea ...",
        "summary": "Strictly, method <code>a</code> is the least resource intensive: Proven less CPU intensive for same total duration a million rows by some one with way too much time on their hands: Most efficient way in SQL Server to get date from date+time? I prefer the DATEADD/DATEDIFF because: <li>varchar is subject to language/dateformat issues <li>float relies on internal storage <li>it extends to work out first day of month, tomorrow etc by changing \"0\" base For SQL Server 2008+, you can CAST to <code>date</code>. Or just use <code>date</code> so no time to remove."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's entirely dependent upon the actual function and the meaning of the multiple values, and their sizes: <li>If they're related as in your fraction example, then I'd go with a struct or class instance. <li>If they're not really related and can't be grouped into a class/struct then perhaps you should refactor your method into two. <li>Depending upon the in-memory size of the values you're returning, you may want to return a pointer to a class instance or struct, or use reference parameters.",
        "output": "It's entirely dependent upon the actual function and the meaning of the multiple values, and their sizes: <li>If they're related as in your fraction example, then I'd go with a struct or class instance. <li>If they're not really related and can't be grouped into a class/struct then perhaps you should refactor your method into two. <li>Depending upon the in-memory size of the values you're returning, you may want to return a pointer to a class instance or struct, or use reference parameters.",
        "answer": "It's entirely dependent upon the actual function and the meaning of the multiple values, and their sizes: <li>If they're related as in your fraction example, then I'd go with a struct or class instance. <li>If they're not really related and can't be grouped into a class/struct then perhaps you should refactor your method into two. <li>Depending upon the in-memory size of the values you're returning, you may want to return a pointer to a class instance or struct, or use reference parameters.",
        "summary": "It's entirely dependent upon the actual function and the meaning of the multiple values, and their sizes: <li>If they're related as in your fraction example, then I'd go with a struct or class instance. <li>If they're not really related and can't be grouped into a class/struct then perhaps you should refactor your method into two. <li>Depending upon the in-memory size of the values you're returning, you may want to return a pointer to a class instance or struct, or use reference parameters."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I work on Mercurial, but fundamentally I believe both systems are equivalent. They both work with the same abstractions: a series of snapshots (changesets) which make up the history. Each changeset knows where it came from (the parent changeset) and can have many child changesets. The recent hg-git extension provides a two-way bridge between Mercurial and Git and sort of shows this point. Git has a strong focus on mutating this history graph (with all the consequences that entails) whereas Mercurial does not encourage history rewriting, but it's easy to do anyway and the consequences of doing so are exactly what you should expect them to be (that is, if I modify a changeset you already have, your client will see it as new if you pull from me). So Mercurial has a <em>bias</em> towards non-destructive commands. As for light-weight branches, then Mercurial has supported repositories with <em>multiple branches</em> since..., always I think. Git repositories with multiple branches are exactly that: multiple diverged strands of development in a single repository. Git then adds names to these strands and allow you to query these names remotely. The Bookmarks extension for Mercurial adds local names, and with Mercurial 1.6, you can move these bookmarks around when you push/pull.. I use Linux, but apparently TortoiseHg is faster and better than the Git equivalent on Windows (due to better usage of the poor Windows filesystem). Both http://github.com and http://bitbucket.org provide online hosting, the service at Bitbucket is great and responsive (I haven't tried github). I chose Mercurial since it feels clean and elegant -- I was put off by the shell/Perl/Ruby scripts I got with Git. Try taking a peek at the <code>git-instaweb.sh</code> file if you want to know what I mean: it is a <strong>shell</strong> script which generates a <strong>Ruby</strong> script, which I think runs a webserver. The shell script generates another shell script to launch the first Ruby script. There is also a bit of <strong>Perl</strong>, for good measure. I like the blog post that compares Mercurial and Git with James Bond and MacGyver -- Mercurial is somehow more low-key than Git. It seems to me, that people using Mercurial are not so easily impressed. This is reflected in how each system do what Linus described as \"the coolest merge EVER!\". In Git you can merge with an unrelated repository by doing: Those commands look quite arcane to my eye. In Mercurial we do: Notice how the Mercurial commands are plain and not special at all -- the only unusual thing is the <code>--force</code> flag to <code>hg pull</code>, which is needed since Mercurial will abort otherwise when you pull from an unrelated repository. It is differences like this that makes Mercurial seem more elegant to me.",
        "output": "I work on Mercurial, but fundamentally I believe both systems are equivalent. Git has a strong focus on mutating this history graph (with all the consequences that entails) whereas Mercurial does not encourage history rewriting, but it's easy to do anyway and the consequences of doing so are exactly what you should expect them to be (that is, if I modify a changeset you already have, your client will see it as new if you pull from me). I chose Mercurial since it feels clean and elegant -- I was put off by the shell/Perl/Ruby scripts I got with Git. I like the blog post that compares Mercurial and Git with James Bond and MacGyver -- Mercurial is somehow more low-key than Git.",
        "answer": "I work on Mercurial, but fundamentally I believe both systems are equivalent. They both work with the same abstractions: a series of snapshots (changesets) which make up the history. Each changeset knows where it came from (the parent changeset) and can have many child changesets. The recent hg-git extension provides a two-way bridge between Mercurial and Git and sort of shows this point. Git has a strong focus on mutating this history graph (with all the consequences that entails) whereas Mercurial does not encourage history rewriting, but it's easy to do anyway and the consequences of doing so are exactly what you should expect them to be (that is, if I modify a changeset you already have, your client will see it as new if you pull from me). So Mercurial has a <em>bias</em> towards non-destructive commands. As for light-weight branches, then Mercurial has supported repositories with <em>multiple branches</em> since..., always I think. Git repositories with multiple branches are exactly that: multiple diverged strands of development in a single repository. Git then adds names to these strands and allow you to query these names remotely. The Bookmarks extension for Mercurial adds local names, and with Mercurial 1.6, you can move these bookmarks around when you push/pull.. I use Linux, but apparently TortoiseHg is faster and better than the Git equivalent on Windows (due to better usage of the poor Windows filesystem). Both http://github.com and http://bitbucket.org provide online hosting, the service at Bitbucket is great and responsive (I haven't tried github). I chose Mercurial since it feels clean and elegant -- I was put off by the shell/Perl/Ruby scripts I got with Git. Try taking a peek at the <code>git-instaweb.sh</code> file if you want to know what I mean: it is a <strong>shell</strong> script which generates a <strong>Ruby</strong> script, which I think runs a webserver. The shell script generates another shell script to launch the first Ruby script. There is also a bit of <strong>Perl</strong>, for good measure. I like the blog post that compares Mercurial and Git with James Bond and MacGyver -- Mercurial is somehow more low-key than Git. It seems to me, that people using Mercurial are not so easily impressed. This is reflected in how each system do what Linus described as \"the coolest merge EVER!\". In Git you can merge with an unrelated repository by doing: Those commands look quite arcane to my eye. In Mercurial we do: Notice how the Mercurial commands are plain and not special at all -- the only unusual thing is the <code>--force</code> flag to <code>hg pull</code>, which is needed since Mercurial will abort otherwise when you pull from an unrelated repository. It is differences like this that makes Mercurial seem more elegant to me.",
        "summary": "I work on Mercurial, but fundamentally I believe both systems are equivalent. Git has a strong focus on mutating this history graph (with all the consequences that entails) whereas Mercurial does not encourage history rewriting, but it's easy to do anyway and the consequences of doing so are exactly what you should expect them to be (that is, if I modify a changeset you already have, your client will see it as new if you pull from me). I chose Mercurial since it feels clean and elegant -- I was put off by the shell/Perl/Ruby scripts I got with Git. I like the blog post that compares Mercurial and Git with James Bond and MacGyver -- Mercurial is somehow more low-key than Git."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can do following: EDIT: This could be 'dotted' as well, to prevent creation of subsequent shells. Example:",
        "output": "You can do following:",
        "answer": "You can do following: EDIT: This could be 'dotted' as well, to prevent creation of subsequent shells. Example:",
        "summary": "You can do following:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It should be much faster to use Newton's method to calculate the Integer Square Root, then square this number and check, as you do in your current solution. Newton's method is the basis for the Carmack solution mentioned in some other answers. You should be able to get a faster answer since you're only interested in the integer part of the root, allowing you to stop the approximation algorithm sooner. Another optimization that you can try:  If the Digital Root of a number doesn't end in 1, 4, 7, or 9 the number is <strong>not</strong> a perfect square. This can be used as a quick way to eliminate 60% of your inputs before applying the slower square root algorithm.",
        "output": "It should be much faster to use Newton's method to calculate the Integer Square Root, then square this number and check, as you do in your current solution. Another optimization that you can try:  If the Digital Root of a number doesn't end in 1, 4, 7, or 9 the number is <strong>not</strong> a perfect square.",
        "answer": "It should be much faster to use Newton's method to calculate the Integer Square Root, then square this number and check, as you do in your current solution. Newton's method is the basis for the Carmack solution mentioned in some other answers. You should be able to get a faster answer since you're only interested in the integer part of the root, allowing you to stop the approximation algorithm sooner. Another optimization that you can try:  If the Digital Root of a number doesn't end in 1, 4, 7, or 9 the number is <strong>not</strong> a perfect square. This can be used as a quick way to eliminate 60% of your inputs before applying the slower square root algorithm.",
        "summary": "It should be much faster to use Newton's method to calculate the Integer Square Root, then square this number and check, as you do in your current solution. Another optimization that you can try:  If the Digital Root of a number doesn't end in 1, 4, 7, or 9 the number is <strong>not</strong> a perfect square."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try this: BIGBLOCK See also <li><code>String.trim()</code><li>Returns a copy of the string, with leading and trailing whitespace omitted. <li>regular-expressions.info/Repetition No <code>trim()</code> regex It's also possible to do this with just one <code>replaceAll</code>, but this is much less readable than the <code>trim()</code> solution. Nonetheless, it's provided here just to show what regex can do: BIGBLOCK There are 3 alternates: <li><code>^_+</code> : any sequence of spaces at the beginning of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>_+$</code> : any sequence of spaces at the end of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>(_)+</code> : any sequence of spaces that matches none of the above, meaning it's in the middle<li>Match and replace with <code>$1</code>, which captures a single space See also <li>regular-expressions.info/Anchors",
        "output": "Try this: BIGBLOCK There are 3 alternates: <li><code>^_+</code> : any sequence of spaces at the beginning of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>_+$</code> : any sequence of spaces at the end of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>(_)+</code> : any sequence of spaces that matches none of the above, meaning it's in the middle<li>Match and replace with <code>$1</code>, which captures a single space",
        "answer": "Try this: BIGBLOCK See also <li><code>String.trim()</code><li>Returns a copy of the string, with leading and trailing whitespace omitted. <li>regular-expressions.info/Repetition No <code>trim()</code> regex It's also possible to do this with just one <code>replaceAll</code>, but this is much less readable than the <code>trim()</code> solution. Nonetheless, it's provided here just to show what regex can do: BIGBLOCK There are 3 alternates: <li><code>^_+</code> : any sequence of spaces at the beginning of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>_+$</code> : any sequence of spaces at the end of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>(_)+</code> : any sequence of spaces that matches none of the above, meaning it's in the middle<li>Match and replace with <code>$1</code>, which captures a single space See also <li>regular-expressions.info/Anchors",
        "summary": "Try this: BIGBLOCK There are 3 alternates: <li><code>^_+</code> : any sequence of spaces at the beginning of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>_+$</code> : any sequence of spaces at the end of the string<li>Match and replace with <code>$1</code>, which captures the empty string <li><code>(_)+</code> : any sequence of spaces that matches none of the above, meaning it's in the middle<li>Match and replace with <code>$1</code>, which captures a single space"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is another way to do it: BIGBLOCK The <code>read -s</code> will turn off echo for you. Just replace the <code>echo</code> on the last line with the command you want to run.",
        "output": "BIGBLOCK Just replace the <code>echo</code> on the last line with the command you want to run.",
        "answer": "Here is another way to do it: BIGBLOCK The <code>read -s</code> will turn off echo for you. Just replace the <code>echo</code> on the last line with the command you want to run.",
        "summary": "BIGBLOCK Just replace the <code>echo</code> on the last line with the command you want to run."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <li>Fold/Unfold the current code block Ã©Â?Ctrl+M, Ctrl+M <li>Unfold all Ã©Â?Ctrl+M, Ctrl+L <li>Stop outlining Ã©Â?Ctrl+M, Ctrl+P <li>Fold all Ã©Â?Ctrl+M, Ctrl+O",
        "output": "<li>Fold/Unfold the current code block Ã©Â?Ctrl+M, Ctrl+M <li>Unfold all Ã©Â?Ctrl+M, Ctrl+L <li>Stop outlining Ã©Â?Ctrl+M, Ctrl+P <li>Fold all Ã©Â?Ctrl+M, Ctrl+O",
        "answer": "<li>Fold/Unfold the current code block Ã©Â?Ctrl+M, Ctrl+M <li>Unfold all Ã©Â?Ctrl+M, Ctrl+L <li>Stop outlining Ã©Â?Ctrl+M, Ctrl+P <li>Fold all Ã©Â?Ctrl+M, Ctrl+O",
        "summary": "<li>Fold/Unfold the current code block Ã©Â?Ctrl+M, Ctrl+M <li>Unfold all Ã©Â?Ctrl+M, Ctrl+L <li>Stop outlining Ã©Â?Ctrl+M, Ctrl+P <li>Fold all Ã©Â?Ctrl+M, Ctrl+O"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I don't believe there is a way to get the value of the current iteration of a foreach loop. Counting yourself, seems to be the best way. May I ask, why you would want to know? It seems that you would most likley be doing one of three things: 1)  Getting the object from the collection, but in this case you already have it. 2)  Counting the objects for later post processing...the collections have a Count property that you could make use of. 3)  Setting a property on the object based on its order in the loop...although you could easily be setting that when you added the object to the collection.",
        "output": "I don't believe there is a way to get the value of the current iteration of a foreach loop.",
        "answer": "I don't believe there is a way to get the value of the current iteration of a foreach loop. Counting yourself, seems to be the best way. May I ask, why you would want to know? It seems that you would most likley be doing one of three things: 1)  Getting the object from the collection, but in this case you already have it. 2)  Counting the objects for later post processing...the collections have a Count property that you could make use of. 3)  Setting a property on the object based on its order in the loop...although you could easily be setting that when you added the object to the collection.",
        "summary": "I don't believe there is a way to get the value of the current iteration of a foreach loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I wrote some classes for parsing HTML tags in C#. They are nice and simple if they meet your particular needs. You can read an article about them and download the source code at http://www.blackbeltcoder.com/Articles/strings/parsing-html-tags-in-c. There's also an article about a generic parsing helper class at http://www.blackbeltcoder.com/Articles/strings/a-text-parsing-helper-class.",
        "output": "I wrote some classes for parsing HTML tags in C#.",
        "answer": "I wrote some classes for parsing HTML tags in C#. They are nice and simple if they meet your particular needs. You can read an article about them and download the source code at http://www.blackbeltcoder.com/Articles/strings/parsing-html-tags-in-c. There's also an article about a generic parsing helper class at http://www.blackbeltcoder.com/Articles/strings/a-text-parsing-helper-class.",
        "summary": "I wrote some classes for parsing HTML tags in C#."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I met the same problem. I found the answer in the website:http://www.17ext.com. First,delete the JRE System Libraries. Then,import JRE System Libraries again. I don't know why.However it fixed my problem,hope it can help you.",
        "output": "I found the answer in the website:http://www.17ext.com. First,delete the JRE System Libraries. Then,import JRE System Libraries again.",
        "answer": "I met the same problem. I found the answer in the website:http://www.17ext.com. First,delete the JRE System Libraries. Then,import JRE System Libraries again. I don't know why.However it fixed my problem,hope it can help you.",
        "summary": "I found the answer in the website:http://www.17ext.com. First,delete the JRE System Libraries. Then,import JRE System Libraries again."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To my knowledge, the surefire plugin doesn't provide any way to do this. But feel free to open an issue :)",
        "output": "To my knowledge, the surefire plugin doesn't provide any way to do this.",
        "answer": "To my knowledge, the surefire plugin doesn't provide any way to do this. But feel free to open an issue :)",
        "summary": "To my knowledge, the surefire plugin doesn't provide any way to do this."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Java is almost the same:",
        "output": "In Java is almost the same:",
        "answer": "In Java is almost the same:",
        "summary": "In Java is almost the same:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The V8 debugger released as part of the Google Chrome Developer Tools can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the Node.js GitHub wiki.",
        "output": "The V8 debugger released as part of the Google Chrome Developer Tools can be used to debug Node.js scripts.",
        "answer": "The V8 debugger released as part of the Google Chrome Developer Tools can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the Node.js GitHub wiki.",
        "summary": "The V8 debugger released as part of the Google Chrome Developer Tools can be used to debug Node.js scripts."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Java class final and method final -> sealed.Java member variable final -> readonly for runtime constant, const for compile time constant. No equivalent for Local Variable final and method argument final",
        "output": "Java class final and method final -> sealed.Java member variable final -> readonly for runtime constant, const for compile time constant. No equivalent for Local Variable final and method argument final",
        "answer": "Java class final and method final -> sealed.Java member variable final -> readonly for runtime constant, const for compile time constant. No equivalent for Local Variable final and method argument final",
        "summary": "Java class final and method final -> sealed.Java member variable final -> readonly for runtime constant, const for compile time constant. No equivalent for Local Variable final and method argument final"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could try to detach the database, copy the files to new names at a command prompt, then attach both DBs. In SQL: BIGBLOCK At Command prompt (I've simplified the file paths for the sake of this example): BIGBLOCK In SQL again: BIGBLOCK",
        "output": "You could try to detach the database, copy the files to new names at a command prompt, then attach both DBs.",
        "answer": "You could try to detach the database, copy the files to new names at a command prompt, then attach both DBs. In SQL: BIGBLOCK At Command prompt (I've simplified the file paths for the sake of this example): BIGBLOCK In SQL again: BIGBLOCK",
        "summary": "You could try to detach the database, copy the files to new names at a command prompt, then attach both DBs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are your Id mappings correct? If the database is responsible for creating the Id through an identifier, you need to map your userobject to that ..",
        "output": "If the database is responsible for creating the Id through an identifier, you need to map your userobject to that ..",
        "answer": "Are your Id mappings correct? If the database is responsible for creating the Id through an identifier, you need to map your userobject to that ..",
        "summary": "If the database is responsible for creating the Id through an identifier, you need to map your userobject to that .."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Warning you get is done by compiler, not by library (or utility method). Simplest way using Jackson directly would be: BIGBLOCK Utility method you call probably just does something similar to this.",
        "output": "Simplest way using Jackson directly would be: BIGBLOCK",
        "answer": "Warning you get is done by compiler, not by library (or utility method). Simplest way using Jackson directly would be: BIGBLOCK Utility method you call probably just does something similar to this.",
        "summary": "Simplest way using Jackson directly would be: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is the fastest Java implementation I could come up with, using a combination of techniques suggested by others in this thread. <li>Mod-256 test <li>Inexact mod-3465 test (avoids integer division at the cost of some false positives) <li>Floating-point square root, round and compare with input value I also experimented with these modifications but they did not help performance: <li>Additional mod-255 test <li>Dividing the input value by powers of 4 <li>Fast Inverse Square Root (to work for high values of N it needs 3 iterations, enough to make it slower than the hardware square root function.) BIGBLOCK",
        "output": "This is the fastest Java implementation I could come up with, using a combination of techniques suggested by others in this thread. <li>Mod-256 test <li>Inexact mod-3465 test (avoids integer division at the cost of some false positives) <li>Floating-point square root, round and compare with input value",
        "answer": "This is the fastest Java implementation I could come up with, using a combination of techniques suggested by others in this thread. <li>Mod-256 test <li>Inexact mod-3465 test (avoids integer division at the cost of some false positives) <li>Floating-point square root, round and compare with input value I also experimented with these modifications but they did not help performance: <li>Additional mod-255 test <li>Dividing the input value by powers of 4 <li>Fast Inverse Square Root (to work for high values of N it needs 3 iterations, enough to make it slower than the hardware square root function.) BIGBLOCK",
        "summary": "This is the fastest Java implementation I could come up with, using a combination of techniques suggested by others in this thread. <li>Mod-256 test <li>Inexact mod-3465 test (avoids integer division at the cost of some false positives) <li>Floating-point square root, round and compare with input value"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could pipe your grep output into Perl like this:",
        "output": "You could pipe your grep output into Perl like this:",
        "answer": "You could pipe your grep output into Perl like this:",
        "summary": "You could pipe your grep output into Perl like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ruby unfortunately is a bit different. PS: My memory is a bit hazy on this so apologies if I'm wrong instead of break/continue, it has break/next, which behave the same in terms of loops Loops (like everything else) are expressions, and \"return\" the last thing that they did. Most of the time, getting the return value from a loop is pointless, so everyone just does this You can however do this HOWEVER, a lot of ruby code 'emulates' a loop by using a block.The canonical example is As it is much more common for people to want to do things with the result of a block, this is where it gets messy.break/next mean different things in the context of a block. break will jump out of the code that called the block next will skip the rest of the code in the block, and 'return' what you specify to the caller of the block. This doesn't make any sense without examples. So yeah. Ruby is awesome, but it has some awful corner-cases. This is the second worst one I've seen in my years of using it :-)",
        "output": "Ruby unfortunately is a bit different. break will jump out of the code that called the block next will skip the rest of the code in the block, and 'return' what you specify to the caller of the block.",
        "answer": "Ruby unfortunately is a bit different. PS: My memory is a bit hazy on this so apologies if I'm wrong instead of break/continue, it has break/next, which behave the same in terms of loops Loops (like everything else) are expressions, and \"return\" the last thing that they did. Most of the time, getting the return value from a loop is pointless, so everyone just does this You can however do this HOWEVER, a lot of ruby code 'emulates' a loop by using a block.The canonical example is As it is much more common for people to want to do things with the result of a block, this is where it gets messy.break/next mean different things in the context of a block. break will jump out of the code that called the block next will skip the rest of the code in the block, and 'return' what you specify to the caller of the block. This doesn't make any sense without examples. So yeah. Ruby is awesome, but it has some awful corner-cases. This is the second worst one I've seen in my years of using it :-)",
        "summary": "Ruby unfortunately is a bit different. break will jump out of the code that called the block next will skip the rest of the code in the block, and 'return' what you specify to the caller of the block."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Some versions of the .NET framework do not support <code>Enum.GetValues</code>. Here's a good workaround from Ideas 2.0: Enum.GetValues in Compact Framework: As with any code that involves reflection, you should take steps to ensure it runs only once and results are cached.",
        "output": "Here's a good workaround from Ideas 2.0: Enum.GetValues in Compact Framework:",
        "answer": "Some versions of the .NET framework do not support <code>Enum.GetValues</code>. Here's a good workaround from Ideas 2.0: Enum.GetValues in Compact Framework: As with any code that involves reflection, you should take steps to ensure it runs only once and results are cached.",
        "summary": "Here's a good workaround from Ideas 2.0: Enum.GetValues in Compact Framework:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For my case, it is solved by changing the properties of edmx file. Open the edmx file Right click on any place of the EDMX designer choose properties update Property called \"Metadata Artifact Processing\" to \"Embed in Output Assembly\" this solved the problem for me. The problem is, when the container try to find the meta data, it cant find it. so simply make it in the same assembly. this solution will not work if you have your edmx files in another assembly",
        "output": "For my case, it is solved by changing the properties of edmx file.",
        "answer": "For my case, it is solved by changing the properties of edmx file. Open the edmx file Right click on any place of the EDMX designer choose properties update Property called \"Metadata Artifact Processing\" to \"Embed in Output Assembly\" this solved the problem for me. The problem is, when the container try to find the meta data, it cant find it. so simply make it in the same assembly. this solution will not work if you have your edmx files in another assembly",
        "summary": "For my case, it is solved by changing the properties of edmx file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Both overriding and overloading are used to achieve polymorphism. You could have a method in a class    that is <strong>overridden</strong> in one or    more subclasses. The method does    different things depending on which    class was used to instantiate an object. BIGBLOCK You could also have a method that is    <strong>overloaded</strong> with two or more sets of arguments. The method does    different things based on the    type(s) of argument(s) passed. BIGBLOCK",
        "output": "You could have a method in a class    that is <strong>overridden</strong> in one or    more subclasses. The method does    different things depending on which    class was used to instantiate an object. BIGBLOCK You could also have a method that is    <strong>overloaded</strong> with two or more sets of arguments. The method does    different things based on the    type(s) of argument(s) passed. BIGBLOCK",
        "answer": "Both overriding and overloading are used to achieve polymorphism. You could have a method in a class    that is <strong>overridden</strong> in one or    more subclasses. The method does    different things depending on which    class was used to instantiate an object. BIGBLOCK You could also have a method that is    <strong>overloaded</strong> with two or more sets of arguments. The method does    different things based on the    type(s) of argument(s) passed. BIGBLOCK",
        "summary": "You could have a method in a class    that is <strong>overridden</strong> in one or    more subclasses. The method does    different things depending on which    class was used to instantiate an object. BIGBLOCK You could also have a method that is    <strong>overloaded</strong> with two or more sets of arguments. The method does    different things based on the    type(s) of argument(s) passed. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In my scripts, I either use the shorthand: or, if it's not possible or feasible  to edit every console.log line, I create a fake console:",
        "output": "In my scripts, I either use the shorthand: or, if it's not possible or feasible  to edit every console.log line, I create a fake console:",
        "answer": "In my scripts, I either use the shorthand: or, if it's not possible or feasible  to edit every console.log line, I create a fake console:",
        "summary": "In my scripts, I either use the shorthand: or, if it's not possible or feasible  to edit every console.log line, I create a fake console:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVVM Model-View ViewModel is similar to MVC, Model-View Controller The controller is replaced with a ViewModel. The ViewModel sits below the UI layer. The ViewModel exposes the data and command objects that the view needs. You could think of this as a container object that view goes to get its data and actions from. The ViewModel pulls its data from the model. Russel East does a blog discussing more in detail  Why is MVVM is different from MVC",
        "output": "MVVM Model-View ViewModel is similar to MVC, Model-View Controller The controller is replaced with a ViewModel. Russel East does a blog discussing more in detail  Why is MVVM is different from MVC",
        "answer": "MVVM Model-View ViewModel is similar to MVC, Model-View Controller The controller is replaced with a ViewModel. The ViewModel sits below the UI layer. The ViewModel exposes the data and command objects that the view needs. You could think of this as a container object that view goes to get its data and actions from. The ViewModel pulls its data from the model. Russel East does a blog discussing more in detail  Why is MVVM is different from MVC",
        "summary": "MVVM Model-View ViewModel is similar to MVC, Model-View Controller The controller is replaced with a ViewModel. Russel East does a blog discussing more in detail  Why is MVVM is different from MVC"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Paul Hudak's book, The Haskell School of Expression, is not only a fine introduction to Haskell, but it also spends a fair amount of time on FRP. If you're a beginner with FRP, I highly recommend it to give you a sense of how FRP works. There is also what looks like a new rewrite of this book (released 2011, updated 2014), The Haskell School of Music.",
        "output": "Paul Hudak's book, The Haskell School of Expression, is not only a fine introduction to Haskell, but it also spends a fair amount of time on FRP.",
        "answer": "Paul Hudak's book, The Haskell School of Expression, is not only a fine introduction to Haskell, but it also spends a fair amount of time on FRP. If you're a beginner with FRP, I highly recommend it to give you a sense of how FRP works. There is also what looks like a new rewrite of this book (released 2011, updated 2014), The Haskell School of Music.",
        "summary": "Paul Hudak's book, The Haskell School of Expression, is not only a fine introduction to Haskell, but it also spends a fair amount of time on FRP."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can override symbols in the stock libraries by creating a library with the same symbols and specifying the library in <code>LD_PRELOAD</code>. Some people use it to specify libraries in nonstandard locations, but <code>LD_LIBRARY_PATH</code> is better for that purpose.",
        "output": "You can override symbols in the stock libraries by creating a library with the same symbols and specifying the library in <code>LD_PRELOAD</code>. Some people use it to specify libraries in nonstandard locations, but <code>LD_LIBRARY_PATH</code> is better for that purpose.",
        "answer": "You can override symbols in the stock libraries by creating a library with the same symbols and specifying the library in <code>LD_PRELOAD</code>. Some people use it to specify libraries in nonstandard locations, but <code>LD_LIBRARY_PATH</code> is better for that purpose.",
        "summary": "You can override symbols in the stock libraries by creating a library with the same symbols and specifying the library in <code>LD_PRELOAD</code>. Some people use it to specify libraries in nonstandard locations, but <code>LD_LIBRARY_PATH</code> is better for that purpose."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Where does it fail? I agree that your issue is probably that your dataset of 600,000 rows is probably just too large. I see that you are then adding it to Session. If you are using Sql session state, it will have to serialize that data as well. Even if you dispose of your objects properly, you will always have at least 2 copies of this dataset in memory if you run it twice, once in session, once in procedural code. This will never scale in a web application. Do the math, 600,000 rows, at even 1-128 bit guid per row would yield 9.6 megabytes (600k * 128 / 8) of just data, not to mention the dataset overhead. Trim down your results.",
        "output": "I agree that your issue is probably that your dataset of 600,000 rows is probably just too large.",
        "answer": "Where does it fail? I agree that your issue is probably that your dataset of 600,000 rows is probably just too large. I see that you are then adding it to Session. If you are using Sql session state, it will have to serialize that data as well. Even if you dispose of your objects properly, you will always have at least 2 copies of this dataset in memory if you run it twice, once in session, once in procedural code. This will never scale in a web application. Do the math, 600,000 rows, at even 1-128 bit guid per row would yield 9.6 megabytes (600k * 128 / 8) of just data, not to mention the dataset overhead. Trim down your results.",
        "summary": "I agree that your issue is probably that your dataset of 600,000 rows is probably just too large."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to CAST your numeric data to strings before you do string concatenation, so for example use <code>CAST(@Actual_Dims_Lenght AS VARCHAR)</code> instead of just <code>@Actual_Dims_Lenght</code>, &amp;c.",
        "output": "You need to CAST your numeric data to strings before you do string concatenation, so for example use <code>CAST(@Actual_Dims_Lenght AS VARCHAR)</code> instead of just <code>@Actual_Dims_Lenght</code>, &amp;c.",
        "answer": "You need to CAST your numeric data to strings before you do string concatenation, so for example use <code>CAST(@Actual_Dims_Lenght AS VARCHAR)</code> instead of just <code>@Actual_Dims_Lenght</code>, &amp;c.",
        "summary": "You need to CAST your numeric data to strings before you do string concatenation, so for example use <code>CAST(@Actual_Dims_Lenght AS VARCHAR)</code> instead of just <code>@Actual_Dims_Lenght</code>, &amp;c."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Found this solution on another site. You can wrap the forEach in a try / catch scenario. More details here: http://dean.edwards.name/weblog/2006/07/enum/",
        "output": "Found this solution on another site.",
        "answer": "Found this solution on another site. You can wrap the forEach in a try / catch scenario. More details here: http://dean.edwards.name/weblog/2006/07/enum/",
        "summary": "Found this solution on another site."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Actually these terms can mean a lot of different things depending the context they are used. For example, on Mac OS X frameworks are just libraries, packed into a bundle. Within the bundle you will find an actual dynamic library (libWhatever.dylib). The difference between a bare library and the framework on Mac is that a framework can contain multiple different versions of the library. It can contain extra resources (images, localized strings, XML data files, UI objects, etc.) and unless the framework is released to public, it usually contains the necessary .h files you need to use the library. Thus you have everything within a single package you need to use the library in your application (a C/C++/Objective-C library without .h files is pretty useless, unless you write them yourself according to some library documentation), instead of a bunch of files to move around (a Mac bundle is just a directory on the Unix level, but the UI treats it like a single file, pretty much like you have JAR files in Java and when you click it, you usually don't see what's inside, unless you explicitly select to show the content). Wikipedia calls framework a \"buzzword\". It defines a software framework as A software framework is a re-usable  design for a software system (or  subsystem). A software framework may  include support programs, code  libraries, a scripting language, or  other software to help develop and  glue together the different components  of a software project. Various parts  of the framework may be exposed  through an API.. So I'd say a library is just that, \"a library\". It is a collection of objects/functions/methods (depending on your language) and your application \"links\" against it and thus can use the objects/functions/methods. It is basically a file containing re-usable code that can usually be shared among multiple applications (you don't have to write the same code over and over again). A framework can be everything you use in application development. It can be a library, a collection of many libraries, a collection of scripts, or any piece of software you need to create your application. Framework is just a very vague term. Here's an article about some guy regarding the topic \"Library vs. Framework\". I personally think this article is highly arguable. It's not wrong what he's saying there, however, he's just picking out one of the multiple definitions of framework and compares that to the classic definition of library. E.g. he says you need a framework for sub-classing. Really? I can have an object defined in a library, I can link against it, and sub-class it in my code. I don't see how I need a \"framework\" for that. In some way he rather explains how the term framework is used nowadays. It's just a hyped word, as I said before. Some companies release just a normal library (in any sense of a classical library) and call it a \"framework\" because it sounds more fancy.",
        "output": "The difference between a bare library and the framework on Mac is that a framework can contain multiple different versions of the library. A software framework is a re-usable  design for a software system (or  subsystem). A software framework may  include support programs, code  libraries, a scripting language, or  other software to help develop and  glue together the different components  of a software project. So I'd say a library is just that, \"a library\". It is basically a file containing re-usable code that can usually be shared among multiple applications (you don't have to write the same code over and over again).",
        "answer": "Actually these terms can mean a lot of different things depending the context they are used. For example, on Mac OS X frameworks are just libraries, packed into a bundle. Within the bundle you will find an actual dynamic library (libWhatever.dylib). The difference between a bare library and the framework on Mac is that a framework can contain multiple different versions of the library. It can contain extra resources (images, localized strings, XML data files, UI objects, etc.) and unless the framework is released to public, it usually contains the necessary .h files you need to use the library. Thus you have everything within a single package you need to use the library in your application (a C/C++/Objective-C library without .h files is pretty useless, unless you write them yourself according to some library documentation), instead of a bunch of files to move around (a Mac bundle is just a directory on the Unix level, but the UI treats it like a single file, pretty much like you have JAR files in Java and when you click it, you usually don't see what's inside, unless you explicitly select to show the content). Wikipedia calls framework a \"buzzword\". It defines a software framework as A software framework is a re-usable  design for a software system (or  subsystem). A software framework may  include support programs, code  libraries, a scripting language, or  other software to help develop and  glue together the different components  of a software project. Various parts  of the framework may be exposed  through an API.. So I'd say a library is just that, \"a library\". It is a collection of objects/functions/methods (depending on your language) and your application \"links\" against it and thus can use the objects/functions/methods. It is basically a file containing re-usable code that can usually be shared among multiple applications (you don't have to write the same code over and over again). A framework can be everything you use in application development. It can be a library, a collection of many libraries, a collection of scripts, or any piece of software you need to create your application. Framework is just a very vague term. Here's an article about some guy regarding the topic \"Library vs. Framework\". I personally think this article is highly arguable. It's not wrong what he's saying there, however, he's just picking out one of the multiple definitions of framework and compares that to the classic definition of library. E.g. he says you need a framework for sub-classing. Really? I can have an object defined in a library, I can link against it, and sub-class it in my code. I don't see how I need a \"framework\" for that. In some way he rather explains how the term framework is used nowadays. It's just a hyped word, as I said before. Some companies release just a normal library (in any sense of a classical library) and call it a \"framework\" because it sounds more fancy.",
        "summary": "The difference between a bare library and the framework on Mac is that a framework can contain multiple different versions of the library. A software framework is a re-usable  design for a software system (or  subsystem). A software framework may  include support programs, code  libraries, a scripting language, or  other software to help develop and  glue together the different components  of a software project. So I'd say a library is just that, \"a library\". It is basically a file containing re-usable code that can usually be shared among multiple applications (you don't have to write the same code over and over again)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is a solution.",
        "output": "Here is a solution.",
        "answer": "Here is a solution.",
        "summary": "Here is a solution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's no such thing as cross domain cookies. You could share a cookie between <code>foo.example.com</code> and <code>bar.example.com</code> but never between <code>example.com</code> and <code>example2.com</code> and that's for security reasons.",
        "output": "You could share a cookie between <code>foo.example.com</code> and <code>bar.example.com</code> but never between <code>example.com</code> and <code>example2.com</code> and that's for security reasons.",
        "answer": "There's no such thing as cross domain cookies. You could share a cookie between <code>foo.example.com</code> and <code>bar.example.com</code> but never between <code>example.com</code> and <code>example2.com</code> and that's for security reasons.",
        "summary": "You could share a cookie between <code>foo.example.com</code> and <code>bar.example.com</code> but never between <code>example.com</code> and <code>example2.com</code> and that's for security reasons."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Asking for the difference /between/ two commits without including the commits in-between makes little sense. Commits are just snapshots of the contents of the repository; asking for the difference between two necessarily includes them. So the question then is, what are you really looking for? As William suggested, cherry-picking can give you the delta of a single commit rebased on top of another. That is: This takes commit 'abcdef', compares it to its immediate ancestor, then applies that difference on top of '012345'. This new difference is then shown - the only change is the context comes from '012345' rather than 'abcdef's immediate ancestor. Of course, you may get conflicts and etc, so it's not a very useful process in most cases. If you're just interested in abcdef itself, you can do: This compares abcdef to its immediate ancestor, alone, and is usually what you want. And of course gives you all differences between those two commits. It would help to get a better idea of what you're trying to achieve - as I mentioned, asking for the difference between two commits without what's in between doesn't actually make sense.",
        "output": "As William suggested, cherry-picking can give you the delta of a single commit rebased on top of another. That is: If you're just interested in abcdef itself, you can do: And of course gives you all differences between those two commits.",
        "answer": "Asking for the difference /between/ two commits without including the commits in-between makes little sense. Commits are just snapshots of the contents of the repository; asking for the difference between two necessarily includes them. So the question then is, what are you really looking for? As William suggested, cherry-picking can give you the delta of a single commit rebased on top of another. That is: This takes commit 'abcdef', compares it to its immediate ancestor, then applies that difference on top of '012345'. This new difference is then shown - the only change is the context comes from '012345' rather than 'abcdef's immediate ancestor. Of course, you may get conflicts and etc, so it's not a very useful process in most cases. If you're just interested in abcdef itself, you can do: This compares abcdef to its immediate ancestor, alone, and is usually what you want. And of course gives you all differences between those two commits. It would help to get a better idea of what you're trying to achieve - as I mentioned, asking for the difference between two commits without what's in between doesn't actually make sense.",
        "summary": "As William suggested, cherry-picking can give you the delta of a single commit rebased on top of another. That is: If you're just interested in abcdef itself, you can do: And of course gives you all differences between those two commits."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As other people say, you cannot share cookies, but you could do something like this: <li>centralize all cookies in a single domain, let's say cookiemaker.com <li>when the user makes a request to example.com you redirect him to cookiemaker.com <li>cookiemaker.com redirects him back to example.com with the information you need Of course, it's not completely secure, and you have to create some kind of internal protocol between your apps to do that. Lastly, it would be very annoying for the user if you do something like that in every request, but not if it's just the first. But I think there is no other way...",
        "output": "As other people say, you cannot share cookies, but you could do something like this: <li>centralize all cookies in a single domain, let's say cookiemaker.com <li>when the user makes a request to example.com you redirect him to cookiemaker.com <li>cookiemaker.com redirects him back to example.com with the information you need Of course, it's not completely secure, and you have to create some kind of internal protocol between your apps to do that.",
        "answer": "As other people say, you cannot share cookies, but you could do something like this: <li>centralize all cookies in a single domain, let's say cookiemaker.com <li>when the user makes a request to example.com you redirect him to cookiemaker.com <li>cookiemaker.com redirects him back to example.com with the information you need Of course, it's not completely secure, and you have to create some kind of internal protocol between your apps to do that. Lastly, it would be very annoying for the user if you do something like that in every request, but not if it's just the first. But I think there is no other way...",
        "summary": "As other people say, you cannot share cookies, but you could do something like this: <li>centralize all cookies in a single domain, let's say cookiemaker.com <li>when the user makes a request to example.com you redirect him to cookiemaker.com <li>cookiemaker.com redirects him back to example.com with the information you need Of course, it's not completely secure, and you have to create some kind of internal protocol between your apps to do that."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Is this a bug or feature? Looks like undefined behaviour. I know that, in practice, you can change the default encoding using a command-line property, but I don't think what happens when you do this is defined. Bug ID: 4153515 on problems setting this property: This is not a bug. The \"file.encoding\" property is not required by the J2SE  platform specification; it's an internal detail of Sun's implementations and  should not be examined or modified by user code. It's also intended to be  read-only; it's technically impossible to support the setting of this property  to arbitrary values on the command line or at any other time during program  execution. The preferred way to change the default encoding used by the VM and the runtime  system is to change the locale of the underlying platform before starting your  Java program. I cringe when I see people setting the encoding on the command line - you don't know what code that is going to affect. If you do not want to use the default encoding, set the encoding you do want explicitly via the appropriate method/constructor.",
        "output": "Looks like undefined behaviour. The \"file.encoding\" property is not required by the J2SE  platform specification; it's an internal detail of Sun's implementations and  should not be examined or modified by user code. The preferred way to change the default encoding used by the VM and the runtime  system is to change the locale of the underlying platform before starting your  Java program.",
        "answer": "Is this a bug or feature? Looks like undefined behaviour. I know that, in practice, you can change the default encoding using a command-line property, but I don't think what happens when you do this is defined. Bug ID: 4153515 on problems setting this property: This is not a bug. The \"file.encoding\" property is not required by the J2SE  platform specification; it's an internal detail of Sun's implementations and  should not be examined or modified by user code. It's also intended to be  read-only; it's technically impossible to support the setting of this property  to arbitrary values on the command line or at any other time during program  execution. The preferred way to change the default encoding used by the VM and the runtime  system is to change the locale of the underlying platform before starting your  Java program. I cringe when I see people setting the encoding on the command line - you don't know what code that is going to affect. If you do not want to use the default encoding, set the encoding you do want explicitly via the appropriate method/constructor.",
        "summary": "Looks like undefined behaviour. The \"file.encoding\" property is not required by the J2SE  platform specification; it's an internal detail of Sun's implementations and  should not be examined or modified by user code. The preferred way to change the default encoding used by the VM and the runtime  system is to change the locale of the underlying platform before starting your  Java program."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Answer to the second question : <code>public</code> variable defined in <code>interface</code> is <code>static final</code> by default while the <code>public</code> variable in <code>abstract</code> class is an instance variable.",
        "output": "Answer to the second question : <code>public</code> variable defined in <code>interface</code> is <code>static final</code> by default while the <code>public</code> variable in <code>abstract</code> class is an instance variable.",
        "answer": "Answer to the second question : <code>public</code> variable defined in <code>interface</code> is <code>static final</code> by default while the <code>public</code> variable in <code>abstract</code> class is an instance variable.",
        "summary": "Answer to the second question : <code>public</code> variable defined in <code>interface</code> is <code>static final</code> by default while the <code>public</code> variable in <code>abstract</code> class is an instance variable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The InputMethodManager has information about the soft keyboard. You get it from an activity via: BIGBLOCK You might play around with that to see what it can tell you. You can use it to show or hide the soft input...",
        "output": "The InputMethodManager has information about the soft keyboard. You can use it to show or hide the soft input...",
        "answer": "The InputMethodManager has information about the soft keyboard. You get it from an activity via: BIGBLOCK You might play around with that to see what it can tell you. You can use it to show or hide the soft input...",
        "summary": "The InputMethodManager has information about the soft keyboard. You can use it to show or hide the soft input..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For .Net, Your answer to The second interviewer is also the answer to the first one... Abstract classes can have implementation, AND state, interfaces cannot... EDIT:   On another note, I wouldn't even use the phrase 'subclass' (or the 'inheritance' phrase) to describe classes that are 'defined to implement' an interface. To me, an interface is a definition of a contract that a class must conform to if it has been defined to 'implement' that interface. It does not inherit anything... You have to add everything yourself, explicitly.",
        "output": "Your answer to The second interviewer is also the answer to the first one... Abstract classes can have implementation, AND state, interfaces cannot...",
        "answer": "For .Net, Your answer to The second interviewer is also the answer to the first one... Abstract classes can have implementation, AND state, interfaces cannot... EDIT:   On another note, I wouldn't even use the phrase 'subclass' (or the 'inheritance' phrase) to describe classes that are 'defined to implement' an interface. To me, an interface is a definition of a contract that a class must conform to if it has been defined to 'implement' that interface. It does not inherit anything... You have to add everything yourself, explicitly.",
        "summary": "Your answer to The second interviewer is also the answer to the first one... Abstract classes can have implementation, AND state, interfaces cannot..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n the column prefix does not match with a table name or alias name used in the query. I was also working to solve this error Nw i found why it is comming just needs to make small changes in query http://sqlerrormessages.blogspot.com/2009/08/sql-server-error-messages-msg-107.html",
        "output": "the column prefix does not match with a table name or alias name used in the query. Nw i found why it is comming just needs to make small changes in query",
        "answer": "the column prefix does not match with a table name or alias name used in the query. I was also working to solve this error Nw i found why it is comming just needs to make small changes in query http://sqlerrormessages.blogspot.com/2009/08/sql-server-error-messages-msg-107.html",
        "summary": "the column prefix does not match with a table name or alias name used in the query. Nw i found why it is comming just needs to make small changes in query"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Alternatively, you could do the following: BIGBLOCK And get the description with the following: BIGBLOCK In my opinion this is a more efficient way of doing what you want to accomplish, as no reflection is needed..",
        "output": "Alternatively, you could do the following: BIGBLOCK In my opinion this is a more efficient way of doing what you want to accomplish, as no reflection is needed..",
        "answer": "Alternatively, you could do the following: BIGBLOCK And get the description with the following: BIGBLOCK In my opinion this is a more efficient way of doing what you want to accomplish, as no reflection is needed..",
        "summary": "Alternatively, you could do the following: BIGBLOCK In my opinion this is a more efficient way of doing what you want to accomplish, as no reflection is needed.."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want to extract only numbers from a string the pattern \"\\d+\" should help.",
        "output": "If you want to extract only numbers from a string the pattern \"\\d+\" should help.",
        "answer": "If you want to extract only numbers from a string the pattern \"\\d+\" should help.",
        "summary": "If you want to extract only numbers from a string the pattern \"\\d+\" should help."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What do you want to do with file? Only writing to it or both read and write? 'w', 'a' will allow write and will create the file if it doesn't exist. If you need to read from a file, the file has to be exist before open it. You can test its existence before opening it or use a try/except.",
        "output": "'w', 'a' will allow write and will create the file if it doesn't exist. If you need to read from a file, the file has to be exist before open it.",
        "answer": "What do you want to do with file? Only writing to it or both read and write? 'w', 'a' will allow write and will create the file if it doesn't exist. If you need to read from a file, the file has to be exist before open it. You can test its existence before opening it or use a try/except.",
        "summary": "'w', 'a' will allow write and will create the file if it doesn't exist. If you need to read from a file, the file has to be exist before open it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A Set cannot contain duplicate elements while a List can. A List (in Java) also implies order.",
        "output": "A Set cannot contain duplicate elements while a List can. A List (in Java) also implies order.",
        "answer": "A Set cannot contain duplicate elements while a List can. A List (in Java) also implies order.",
        "summary": "A Set cannot contain duplicate elements while a List can. A List (in Java) also implies order."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could wrap the original enumerator with another that does contain the index information. Here is the code for the <code>ForEachHelper</code> class.",
        "output": "You could wrap the original enumerator with another that does contain the index information.",
        "answer": "You could wrap the original enumerator with another that does contain the index information. Here is the code for the <code>ForEachHelper</code> class.",
        "summary": "You could wrap the original enumerator with another that does contain the index information."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You're right: This works fine if your row has an <code>id</code>, such as: If you don't have an <code>id</code>, you can use any of jQuery's plethora of selectors.",
        "output": "This works fine if your row has an <code>id</code>, such as:",
        "answer": "You're right: This works fine if your row has an <code>id</code>, such as: If you don't have an <code>id</code>, you can use any of jQuery's plethora of selectors.",
        "summary": "This works fine if your row has an <code>id</code>, such as:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also, it`s interesting to set your PATH to reflect the JDK. After adding JAVA_HOME (which can be done with the example cited by 'mipadi'): Add also in ~/.profile: <strong>P.S. :</strong> For OSX, I generally use .profile in the HOME dir instead of .bashrc",
        "output": "After adding JAVA_HOME (which can be done with the example cited by 'mipadi'): Add also in ~/.profile: :</strong> For OSX, I generally use .profile in the HOME dir instead of .bashrc",
        "answer": "Also, it`s interesting to set your PATH to reflect the JDK. After adding JAVA_HOME (which can be done with the example cited by 'mipadi'): Add also in ~/.profile: <strong>P.S. :</strong> For OSX, I generally use .profile in the HOME dir instead of .bashrc",
        "summary": "After adding JAVA_HOME (which can be done with the example cited by 'mipadi'): Add also in ~/.profile: :</strong> For OSX, I generally use .profile in the HOME dir instead of .bashrc"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Json.NET does this... More examples: Serializing Collections with Json.NET",
        "output": "Json.NET does this...",
        "answer": "Json.NET does this... More examples: Serializing Collections with Json.NET",
        "summary": "Json.NET does this..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In python 2 only (not python 3): Is actually what you want, otherwise you'll miss out on a lot of things which act like lists, but aren't subclasses of <code>list</code> or <code>tuple</code>.",
        "output": "In python 2 only (not python 3):",
        "answer": "In python 2 only (not python 3): Is actually what you want, otherwise you'll miss out on a lot of things which act like lists, but aren't subclasses of <code>list</code> or <code>tuple</code>.",
        "summary": "In python 2 only (not python 3):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use the dialog as an dialog file browser and uploader then I rewrite the code like this BIGBLOCK everything seems to work great.",
        "output": "I use the dialog as an dialog file browser and uploader then I rewrite the code like this BIGBLOCK",
        "answer": "I use the dialog as an dialog file browser and uploader then I rewrite the code like this BIGBLOCK everything seems to work great.",
        "summary": "I use the dialog as an dialog file browser and uploader then I rewrite the code like this BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's a plugin which can list all event handlers for any given element/event: BIGBLOCK Use it like this: BIGBLOCK Src: (my blog) -> http://james.padolsey.com/javascript/debug-jquery-events-with-listhandlers/",
        "output": "Here's a plugin which can list all event handlers for any given element/event: BIGBLOCK",
        "answer": "Here's a plugin which can list all event handlers for any given element/event: BIGBLOCK Use it like this: BIGBLOCK Src: (my blog) -> http://james.padolsey.com/javascript/debug-jquery-events-with-listhandlers/",
        "summary": "Here's a plugin which can list all event handlers for any given element/event: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is about configuring ssh, not git. If you haven't already, you should use <code>ssh-keygen</code> (with a blank passphrase) to create a key pair. Then, you copy the public key to the remote destination with <code>ssh-copy-id</code>. Unless you have need of multiple keys (e.g. a more secure one with a passphrase for other purposes) or you have some really weird multiple-identity stuff going on, it's this simple: BIGBLOCK Edit:You should really just read DigitalRoss's answer, but: if you use keys with passphrases, you'll need to use <code>ssh-add &lt;key-file&gt;</code> to add them to <code>ssh-agent</code> (and obviously start up an <code>ssh-agent</code> if your distribution doesn't already have one running for you).",
        "output": "Unless you have need of multiple keys (e.g. a more secure one with a passphrase for other purposes) or you have some really weird multiple-identity stuff going on, it's this simple:",
        "answer": "This is about configuring ssh, not git. If you haven't already, you should use <code>ssh-keygen</code> (with a blank passphrase) to create a key pair. Then, you copy the public key to the remote destination with <code>ssh-copy-id</code>. Unless you have need of multiple keys (e.g. a more secure one with a passphrase for other purposes) or you have some really weird multiple-identity stuff going on, it's this simple: BIGBLOCK Edit:You should really just read DigitalRoss's answer, but: if you use keys with passphrases, you'll need to use <code>ssh-add &lt;key-file&gt;</code> to add them to <code>ssh-agent</code> (and obviously start up an <code>ssh-agent</code> if your distribution doesn't already have one running for you).",
        "summary": "Unless you have need of multiple keys (e.g. a more secure one with a passphrase for other purposes) or you have some really weird multiple-identity stuff going on, it's this simple:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Put an <code>l</code> (lowercased letter L) directly before the specifier.",
        "output": "Put an <code>l</code> (lowercased letter L) directly before the specifier.",
        "answer": "Put an <code>l</code> (lowercased letter L) directly before the specifier.",
        "summary": "Put an <code>l</code> (lowercased letter L) directly before the specifier."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also set the HTTP proxy that Git uses in global configuration property <code>http.proxy</code>:",
        "output": "You can also set the HTTP proxy that Git uses in global configuration property <code>http.proxy</code>:",
        "answer": "You can also set the HTTP proxy that Git uses in global configuration property <code>http.proxy</code>:",
        "summary": "You can also set the HTTP proxy that Git uses in global configuration property <code>http.proxy</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I dont think there is any use for \"pure\" binary trees. (except for educational purposes)Balanced binary trees, such as Red-Black trees or AVL trees are much more useful, because they guarantee O(logn) operations. Normal binary trees may end up being a list (or almost list) and are not really useful in applications using much data. Balanced trees are often used for implementing maps or sets.They can also be used for sorting in O(nlogn), even tho there exist better ways to do it. Also for searching/inserting/deleting Hash tables can be used, which usually have better performance than binary search trees (balanced or not). An application where (balanced) binary search trees would be useful would be if searching/inserting/deleting and sorting would be needed. Sort could be in-place (almost, ignoring the stack space needed for the recursion), given a ready build balanced tree. It still would be O(nlogn) but with a smaller constant factor and no extra space needed (except for the new array, assuming the data has to be put into an array). Hash tables on the other hand can not be sorted (at least not directly). Maybe they are also useful in some sophisticated algorithms for doing something, but tbh nothing comes to my mind. If i find more i will edit my post. Other trees like f.e. B+trees are widely used in databases",
        "output": "Normal binary trees may end up being a list (or almost list) and are not really useful in applications using much data. Balanced trees are often used for implementing maps or sets.They can also be used for sorting in O(nlogn), even tho there exist better ways to do it. Also for searching/inserting/deleting Hash tables can be used, which usually have better performance than binary search trees (balanced or not). An application where (balanced) binary search trees would be useful would be if searching/inserting/deleting and sorting would be needed. It still would be O(nlogn) but with a smaller constant factor and no extra space needed (except for the new array, assuming the data has to be put into an array).",
        "answer": "I dont think there is any use for \"pure\" binary trees. (except for educational purposes)Balanced binary trees, such as Red-Black trees or AVL trees are much more useful, because they guarantee O(logn) operations. Normal binary trees may end up being a list (or almost list) and are not really useful in applications using much data. Balanced trees are often used for implementing maps or sets.They can also be used for sorting in O(nlogn), even tho there exist better ways to do it. Also for searching/inserting/deleting Hash tables can be used, which usually have better performance than binary search trees (balanced or not). An application where (balanced) binary search trees would be useful would be if searching/inserting/deleting and sorting would be needed. Sort could be in-place (almost, ignoring the stack space needed for the recursion), given a ready build balanced tree. It still would be O(nlogn) but with a smaller constant factor and no extra space needed (except for the new array, assuming the data has to be put into an array). Hash tables on the other hand can not be sorted (at least not directly). Maybe they are also useful in some sophisticated algorithms for doing something, but tbh nothing comes to my mind. If i find more i will edit my post. Other trees like f.e. B+trees are widely used in databases",
        "summary": "Normal binary trees may end up being a list (or almost list) and are not really useful in applications using much data. Balanced trees are often used for implementing maps or sets.They can also be used for sorting in O(nlogn), even tho there exist better ways to do it. Also for searching/inserting/deleting Hash tables can be used, which usually have better performance than binary search trees (balanced or not). An application where (balanced) binary search trees would be useful would be if searching/inserting/deleting and sorting would be needed. It still would be O(nlogn) but with a smaller constant factor and no extra space needed (except for the new array, assuming the data has to be put into an array)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Generating your own key from a byte array is easy: But creating a 256-bit key isn't enough. If the key generator cannot generate 256-bit keys for you, then the <code>Cipher</code> class probably doesn't support AES 256-bit either. You say you have the unlimited jurisdiction patch installed, so the AES-256 cipher should be supported (but then 256-bit keys should be too, so this might be a configuration problem). A workaround for lack of AES-256 support is to take some freely available implementation of AES-256, and use it as a custom provider. This involves creating your own <code>Provider</code> subclass and using it with <code>Cipher.getInstance(String, Provider)</code>. But this can be an involved process.",
        "output": "Generating your own key from a byte array is easy:",
        "answer": "Generating your own key from a byte array is easy: But creating a 256-bit key isn't enough. If the key generator cannot generate 256-bit keys for you, then the <code>Cipher</code> class probably doesn't support AES 256-bit either. You say you have the unlimited jurisdiction patch installed, so the AES-256 cipher should be supported (but then 256-bit keys should be too, so this might be a configuration problem). A workaround for lack of AES-256 support is to take some freely available implementation of AES-256, and use it as a custom provider. This involves creating your own <code>Provider</code> subclass and using it with <code>Cipher.getInstance(String, Provider)</code>. But this can be an involved process.",
        "summary": "Generating your own key from a byte array is easy:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For more information, the following page describes why you never need to use <code>new Array()</code> You never need to use <code>new Object()</code> in  JavaScript. Use the object literal <code>{}</code>  instead. Similarly, donÃ©ÂÂ¥Ã¦ÂªÂ use <code>new Array()</code>,  use the array literal <code>[]</code>  instead. Arrays in JavaScript work  nothing like the arrays in Java, and  use of the Java-like syntax will  confuse you. Do not use <code>new Number</code>, <code>new String</code>, or  <code>new Boolean</code>. These forms produce  unnecessary object wrappers. Just use  simple literals instead. Also check out the comments - the <code>new Array(length)</code> form does not serve any useful purpose (at least in today's implementations of JavaScript).",
        "output": "You never need to use <code>new Object()</code> in  JavaScript. Use the object literal <code>{}</code>  instead. Similarly, donÃ©ÂÂ¥Ã¦ÂªÂ use <code>new Array()</code>,  use the array literal <code>[]</code>  instead.",
        "answer": "For more information, the following page describes why you never need to use <code>new Array()</code> You never need to use <code>new Object()</code> in  JavaScript. Use the object literal <code>{}</code>  instead. Similarly, donÃ©ÂÂ¥Ã¦ÂªÂ use <code>new Array()</code>,  use the array literal <code>[]</code>  instead. Arrays in JavaScript work  nothing like the arrays in Java, and  use of the Java-like syntax will  confuse you. Do not use <code>new Number</code>, <code>new String</code>, or  <code>new Boolean</code>. These forms produce  unnecessary object wrappers. Just use  simple literals instead. Also check out the comments - the <code>new Array(length)</code> form does not serve any useful purpose (at least in today's implementations of JavaScript).",
        "summary": "You never need to use <code>new Object()</code> in  JavaScript. Use the object literal <code>{}</code>  instead. Similarly, donÃ©ÂÂ¥Ã¦ÂªÂ use <code>new Array()</code>,  use the array literal <code>[]</code>  instead."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For returning two values I use a <code>std::pair</code> (usually typedef'd). You should look at <code>boost::tuple</code> (in C++11 and newer, there's <code>std::tuple</code>) for more than two return results. With introduction of structured binding in C++ 17, returning <code>std::tuple</code> should probably become accepted standard.",
        "output": "For returning two values I use a <code>std::pair</code> (usually typedef'd).",
        "answer": "For returning two values I use a <code>std::pair</code> (usually typedef'd). You should look at <code>boost::tuple</code> (in C++11 and newer, there's <code>std::tuple</code>) for more than two return results. With introduction of structured binding in C++ 17, returning <code>std::tuple</code> should probably become accepted standard.",
        "summary": "For returning two values I use a <code>std::pair</code> (usually typedef'd)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It depends on your OS, CPU, Compiler, and possibly other factors. In general it means the CPU bus could not complete a command, or suffered a conflict, but that could mean a whole range of things depending on the environment and code being run. -Adam",
        "output": "In general it means the CPU bus could not complete a command, or suffered a conflict, but that could mean a whole range of things depending on the environment and code being run.",
        "answer": "It depends on your OS, CPU, Compiler, and possibly other factors. In general it means the CPU bus could not complete a command, or suffered a conflict, but that could mean a whole range of things depending on the environment and code being run. -Adam",
        "summary": "In general it means the CPU bus could not complete a command, or suffered a conflict, but that could mean a whole range of things depending on the environment and code being run."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The previous answers were accurate, but perhaps too terse. I will try to add some examples. First of all, the word \"proxy\" describes someone or something acting on behalf of someone else. In the computer realm, we are talking about one server acting on the behalf of another computer. For the purposes of accessibility, I will limit my discussion to web proxies - however, the idea of a proxy is not limited to websites. FORWARD proxy Most discussion of web proxies refers to the type of proxy known as a \"forward proxy.\" The proxy event, in this case, is that the \"forward proxy\" retrieves data from another web site on behalf of the original requestee. A tale of 3 computers (part I) For an example, I will list three computers connected to the internet. X = your computer, or \"client\" computer on the internet Y = the proxy web site, proxy.example.org Z = the web site you want to visit, www.example.net Normally, one would connect directly from <code>X --&gt; Z.</code> However, in some scenarios, it is better for <code>Y --&gt; Z</code> on behalf of <code>X</code>, which chains as follows: <code>X --&gt; Y --&gt; Z</code>. Reasons why X would want to use a forward proxy server: Here is a (very) partial list of uses of a forward proxy server. 1) X is unable to access Z directly because a) Someone with administrative authority over <code>X</code>'s internet connection has decided to block all access to site <code>Z</code>. Examples: The Storm Worm virus is spreading by tricking people into visiting <code>familypostcards2008.com</code>, so the system administrator has blocked access to the site to prevent users from inadvertently infecting themselves. Employees at a large company have been wasting too much time on <code>facebook.com</code>, so management wants access blocked during business hours. A local elementary school disallows internet access to the <code>playboy.com</code> website. A government is unable to control the publishing of news, so it controls access to news instead, by blocking sites such as <code>wikipedia.org</code>. See TOR or FreeNet. b) The administrator of <code>Z</code> has blocked <code>X</code>. Examples: The administrator of Z has noticed hacking attempts coming from X, so the administrator has decided to block X's IP address (and/or netrange). Z is a forum website. <code>X</code> is spamming the forum. Z blocks X. REVERSE proxy A tale of 3 computers (part II) For this example, I will list three computers connected to the internet. X = your computer, or \"client\" computer on the internet Y = the reverse proxy web site, proxy.example.com Z = the web site you want to visit, www.example.net Normally, one would connect directly from <code>X --&gt; Z.</code> However, in some scenarios, it is better for the administrator of <code>Z</code> to restrict or disallow direct access and force visitors to go through Y first. So, as before, we have data being retrieved by <code>Y --&gt; Z</code> on behalf of <code>X</code>, which chains as follows: <code>X --&gt; Y --&gt; Z</code>. What is different this time compared to a \"forward proxy,\" is that this time the user <code>X</code> does not know he is accessing <code>Z</code>, because the user <code>X</code> only sees he is communicating with <code>Y</code>. The server <code>Z</code> is invisible to clients and only the reverse proxy <code>Y</code> is visible externally. A reverse proxy requires no (proxy) configuration on the client side. The client <code>X</code> thinks he is only communicating with <code>Y</code> (<code>X --&gt; Y</code>), but the reality is that <code>Y</code> forwarding all communication (<code>X --&gt; Y --&gt; Z</code> again). Reasons why Z would want to set up a reverse proxy server: 1) Z wants to force all traffic to its web site to pass through Y first. a) Z has a large web site that millions of people want to see, but a single web server cannot handle all the traffic. So Z sets up many servers and puts a reverse proxy on the internet that will send users to the server closest to them when they try to visit Z. This is part of how the Content Distribution Network (CDN) concept works. Examples: Apple Trailers uses Akamai Jquery.com hosts its javascript files using CloudFront CDN (sample). etc. 2) The administrator of Z is worried about retaliation for content hosted on the server and does not want to expose the main server directly to the public. a) Owners of Spam brands such as \"Canadian Pharmacy\" appear to have thousands of servers, while in reality having most websites hosted on far fewer servers. Additionally, abuse complaints about the spam will only shut down the public servers, not the main server. In the above scenarios, <code>Z</code> has the ability to choose <code>Y</code>. Links to topics from the post: Content Delivery Network Lists of CDNs http://www.mytestbox.com/miscellaneous/content-delivery-networks-cdn-list/ http://blog.streamingmedia.com/the_business_of_online_vi/2008/01/updated-list-of.html forward proxy software (server side) PHP-Proxy cgi-proxy phproxy  (discontinued) glype Internet censorship wiki: List of Web Proxies squid  (apparently, can also work as a reverse proxy) reverse proxy software for HTTP (server side) apache mod_proxy (can also work as a forward proxy for HTTP) nginx  (used on hulu.com, spam sites, etc.) HAProxy lighthttpd perlbal (written for livejournal) portfusion pound varnish cache (written by a freebsd kernel guru) repose reverse proxy software for TCP (server side) balance delegate pen portfusion pure load balancer (web site defunct) python director see also: Wikipedia - Content Delivery Network Wikipedia - Category:Reverse_proxy Wikipedia - Load Balancing Wikipedia - Scalability",
        "output": "What is different this time compared to a \"forward proxy,\" is that this time the user <code>X</code> does not know he is accessing <code>Z</code>, because the user <code>X</code> only sees he is communicating with <code>Y</code>. The server <code>Z</code> is invisible to clients and only the reverse proxy <code>Y</code> is visible externally. A reverse proxy requires no (proxy) configuration on the client side.",
        "answer": "The previous answers were accurate, but perhaps too terse. I will try to add some examples. First of all, the word \"proxy\" describes someone or something acting on behalf of someone else. In the computer realm, we are talking about one server acting on the behalf of another computer. For the purposes of accessibility, I will limit my discussion to web proxies - however, the idea of a proxy is not limited to websites. FORWARD proxy Most discussion of web proxies refers to the type of proxy known as a \"forward proxy.\" The proxy event, in this case, is that the \"forward proxy\" retrieves data from another web site on behalf of the original requestee. A tale of 3 computers (part I) For an example, I will list three computers connected to the internet. X = your computer, or \"client\" computer on the internet Y = the proxy web site, proxy.example.org Z = the web site you want to visit, www.example.net Normally, one would connect directly from <code>X --&gt; Z.</code> However, in some scenarios, it is better for <code>Y --&gt; Z</code> on behalf of <code>X</code>, which chains as follows: <code>X --&gt; Y --&gt; Z</code>. Reasons why X would want to use a forward proxy server: Here is a (very) partial list of uses of a forward proxy server. 1) X is unable to access Z directly because a) Someone with administrative authority over <code>X</code>'s internet connection has decided to block all access to site <code>Z</code>. Examples: The Storm Worm virus is spreading by tricking people into visiting <code>familypostcards2008.com</code>, so the system administrator has blocked access to the site to prevent users from inadvertently infecting themselves. Employees at a large company have been wasting too much time on <code>facebook.com</code>, so management wants access blocked during business hours. A local elementary school disallows internet access to the <code>playboy.com</code> website. A government is unable to control the publishing of news, so it controls access to news instead, by blocking sites such as <code>wikipedia.org</code>. See TOR or FreeNet. b) The administrator of <code>Z</code> has blocked <code>X</code>. Examples: The administrator of Z has noticed hacking attempts coming from X, so the administrator has decided to block X's IP address (and/or netrange). Z is a forum website. <code>X</code> is spamming the forum. Z blocks X. REVERSE proxy A tale of 3 computers (part II) For this example, I will list three computers connected to the internet. X = your computer, or \"client\" computer on the internet Y = the reverse proxy web site, proxy.example.com Z = the web site you want to visit, www.example.net Normally, one would connect directly from <code>X --&gt; Z.</code> However, in some scenarios, it is better for the administrator of <code>Z</code> to restrict or disallow direct access and force visitors to go through Y first. So, as before, we have data being retrieved by <code>Y --&gt; Z</code> on behalf of <code>X</code>, which chains as follows: <code>X --&gt; Y --&gt; Z</code>. What is different this time compared to a \"forward proxy,\" is that this time the user <code>X</code> does not know he is accessing <code>Z</code>, because the user <code>X</code> only sees he is communicating with <code>Y</code>. The server <code>Z</code> is invisible to clients and only the reverse proxy <code>Y</code> is visible externally. A reverse proxy requires no (proxy) configuration on the client side. The client <code>X</code> thinks he is only communicating with <code>Y</code> (<code>X --&gt; Y</code>), but the reality is that <code>Y</code> forwarding all communication (<code>X --&gt; Y --&gt; Z</code> again). Reasons why Z would want to set up a reverse proxy server: 1) Z wants to force all traffic to its web site to pass through Y first. a) Z has a large web site that millions of people want to see, but a single web server cannot handle all the traffic. So Z sets up many servers and puts a reverse proxy on the internet that will send users to the server closest to them when they try to visit Z. This is part of how the Content Distribution Network (CDN) concept works. Examples: Apple Trailers uses Akamai Jquery.com hosts its javascript files using CloudFront CDN (sample). etc. 2) The administrator of Z is worried about retaliation for content hosted on the server and does not want to expose the main server directly to the public. a) Owners of Spam brands such as \"Canadian Pharmacy\" appear to have thousands of servers, while in reality having most websites hosted on far fewer servers. Additionally, abuse complaints about the spam will only shut down the public servers, not the main server. In the above scenarios, <code>Z</code> has the ability to choose <code>Y</code>. Links to topics from the post: Content Delivery Network Lists of CDNs http://www.mytestbox.com/miscellaneous/content-delivery-networks-cdn-list/ http://blog.streamingmedia.com/the_business_of_online_vi/2008/01/updated-list-of.html forward proxy software (server side) PHP-Proxy cgi-proxy phproxy  (discontinued) glype Internet censorship wiki: List of Web Proxies squid  (apparently, can also work as a reverse proxy) reverse proxy software for HTTP (server side) apache mod_proxy (can also work as a forward proxy for HTTP) nginx  (used on hulu.com, spam sites, etc.) HAProxy lighthttpd perlbal (written for livejournal) portfusion pound varnish cache (written by a freebsd kernel guru) repose reverse proxy software for TCP (server side) balance delegate pen portfusion pure load balancer (web site defunct) python director see also: Wikipedia - Content Delivery Network Wikipedia - Category:Reverse_proxy Wikipedia - Load Balancing Wikipedia - Scalability",
        "summary": "What is different this time compared to a \"forward proxy,\" is that this time the user <code>X</code> does not know he is accessing <code>Z</code>, because the user <code>X</code> only sees he is communicating with <code>Y</code>. The server <code>Z</code> is invisible to clients and only the reverse proxy <code>Y</code> is visible externally. A reverse proxy requires no (proxy) configuration on the client side."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to have a module called pdo_mysql. Looking for following in phpinfo(),",
        "output": "You need to have a module called pdo_mysql.",
        "answer": "You need to have a module called pdo_mysql. Looking for following in phpinfo(),",
        "summary": "You need to have a module called pdo_mysql."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ctrl+M expands region. Ctrl+L collapses region.",
        "output": "Ctrl+M expands region. Ctrl+L collapses region.",
        "answer": "Ctrl+M expands region. Ctrl+L collapses region.",
        "summary": "Ctrl+M expands region. Ctrl+L collapses region."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The only time I've seen something like this happen is when I have a bad connection, or when somebody is closing the socket that I am using from a different thread context.",
        "output": "The only time I've seen something like this happen is when I have a bad connection, or when somebody is closing the socket that I am using from a different thread context.",
        "answer": "The only time I've seen something like this happen is when I have a bad connection, or when somebody is closing the socket that I am using from a different thread context.",
        "summary": "The only time I've seen something like this happen is when I have a bad connection, or when somebody is closing the socket that I am using from a different thread context."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One rather bad thing about singletons is that you can't extend them very easily. You basically have to build in some kind of decorator pattern or some such thing if you want to change their behavior. Also, if one day you want to have multiple ways of doing that one thing, it can be rather painful to change, depending on how you lay out your code. One thing to note, if you DO use singletons, try to pass them in to whoever needs them rather than have them access it directly... Otherwise if you ever choose to have multiple ways of doing the thing that singleton does, it will be rather difficult to change as each class embeds a dependency if it accesses the singleton directly. So basically: rather than: I believe this sort of pattern is called dependency injection and is generally considered a good thing. Like any pattern though... Think about it and consider if its use in the given situation is inappropriate or not... Rules are made to be broken usually, and patterns should not be applied willy nilly without thought.",
        "output": "One rather bad thing about singletons is that you can't extend them very easily.",
        "answer": "One rather bad thing about singletons is that you can't extend them very easily. You basically have to build in some kind of decorator pattern or some such thing if you want to change their behavior. Also, if one day you want to have multiple ways of doing that one thing, it can be rather painful to change, depending on how you lay out your code. One thing to note, if you DO use singletons, try to pass them in to whoever needs them rather than have them access it directly... Otherwise if you ever choose to have multiple ways of doing the thing that singleton does, it will be rather difficult to change as each class embeds a dependency if it accesses the singleton directly. So basically: rather than: I believe this sort of pattern is called dependency injection and is generally considered a good thing. Like any pattern though... Think about it and consider if its use in the given situation is inappropriate or not... Rules are made to be broken usually, and patterns should not be applied willy nilly without thought.",
        "summary": "One rather bad thing about singletons is that you can't extend them very easily."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use full <code>datetime</code> variables with <code>timedelta</code>, and by providing a dummy date then using <code>time</code> to just get the time value. For example: BIGBLOCK results in the two values, three seconds apart: BIGBLOCK You could also opt for the more readable BIGBLOCK if you're so inclined. If you're after a function that can do this, you can look into using <code>addSecs</code> below: BIGBLOCK This outputs: BIGBLOCK",
        "output": "You can use full <code>datetime</code> variables with <code>timedelta</code>, and by providing a dummy date then using <code>time</code> to just get the time value. For example: BIGBLOCK You could also opt for the more readable BIGBLOCK",
        "answer": "You can use full <code>datetime</code> variables with <code>timedelta</code>, and by providing a dummy date then using <code>time</code> to just get the time value. For example: BIGBLOCK results in the two values, three seconds apart: BIGBLOCK You could also opt for the more readable BIGBLOCK if you're so inclined. If you're after a function that can do this, you can look into using <code>addSecs</code> below: BIGBLOCK This outputs: BIGBLOCK",
        "summary": "You can use full <code>datetime</code> variables with <code>timedelta</code>, and by providing a dummy date then using <code>time</code> to just get the time value. For example: BIGBLOCK You could also opt for the more readable BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are plenty of good answers here about reading it in chunks, I'm just gonna show you a little trick that reads all the content at once to a buffer and prints it. I'm not saying it's better. It's not, and as Ricardo sometimes it can be bad, but I find it's a nice solution for the simple cases. I sprinkled it with comments because there's a lot going on. Let me know if it's useful or you could learn something from it :)",
        "output": "There are plenty of good answers here about reading it in chunks, I'm just gonna show you a little trick that reads all the content at once to a buffer and prints it.",
        "answer": "There are plenty of good answers here about reading it in chunks, I'm just gonna show you a little trick that reads all the content at once to a buffer and prints it. I'm not saying it's better. It's not, and as Ricardo sometimes it can be bad, but I find it's a nice solution for the simple cases. I sprinkled it with comments because there's a lot going on. Let me know if it's useful or you could learn something from it :)",
        "summary": "There are plenty of good answers here about reading it in chunks, I'm just gonna show you a little trick that reads all the content at once to a buffer and prints it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From my understanding a method is any operation which can be performed on a class. It is a general term used in programming. In many languages methods are represented by functions and subroutines. The main distinction that most languages use for these is that functions may return a value back to the caller and a subroutine may not. However many modern languages only have functions, but these can optionally not return any value. For example, lets say you want to describe a cat and you would like that to be able to yawn. You would create a Cat class, with a Yawn method, which would most likely be a function without any return value.",
        "output": "From my understanding a method is any operation which can be performed on a class. In many languages methods are represented by functions and subroutines. The main distinction that most languages use for these is that functions may return a value back to the caller and a subroutine may not.",
        "answer": "From my understanding a method is any operation which can be performed on a class. It is a general term used in programming. In many languages methods are represented by functions and subroutines. The main distinction that most languages use for these is that functions may return a value back to the caller and a subroutine may not. However many modern languages only have functions, but these can optionally not return any value. For example, lets say you want to describe a cat and you would like that to be able to yawn. You would create a Cat class, with a Yawn method, which would most likely be a function without any return value.",
        "summary": "From my understanding a method is any operation which can be performed on a class. In many languages methods are represented by functions and subroutines. The main distinction that most languages use for these is that functions may return a value back to the caller and a subroutine may not."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The reason for this is that I am printing these out to a document and I want to use the key name and the value in doing this Based on the above requirement this is what I would suggest:",
        "output": "Based on the above requirement this is what I would suggest:",
        "answer": "The reason for this is that I am printing these out to a document and I want to use the key name and the value in doing this Based on the above requirement this is what I would suggest:",
        "summary": "Based on the above requirement this is what I would suggest:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The term polymorphism comes from: poly = many morphism = the ability to change In programming, polymorphism is a \"technique\" that lets you \"look\" at an object as being more than one type of thing. For instance: A student object is also a person object. If you \"look\" (ie cast) at the student, you can probably ask for the student ID. You can't always do that with a person, right? (a person is not necessarily a student, thus might not have a student ID). However, a person probably has a name. A student does too. Bottom line, \"looking\" at the same object from different \"angles\" can give you different \"perspectives\" (ie different properties or methods) So this technique lets you build stuff that can be \"looked\" at from different angles. Why do we use polymorphism? For starters ... abstraction. At this point it should be enough info :)",
        "output": "In programming, polymorphism is a \"technique\" that lets you \"look\" at an object as being more than one type of thing.",
        "answer": "The term polymorphism comes from: poly = many morphism = the ability to change In programming, polymorphism is a \"technique\" that lets you \"look\" at an object as being more than one type of thing. For instance: A student object is also a person object. If you \"look\" (ie cast) at the student, you can probably ask for the student ID. You can't always do that with a person, right? (a person is not necessarily a student, thus might not have a student ID). However, a person probably has a name. A student does too. Bottom line, \"looking\" at the same object from different \"angles\" can give you different \"perspectives\" (ie different properties or methods) So this technique lets you build stuff that can be \"looked\" at from different angles. Why do we use polymorphism? For starters ... abstraction. At this point it should be enough info :)",
        "summary": "In programming, polymorphism is a \"technique\" that lets you \"look\" at an object as being more than one type of thing."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm a huge fan of the dump function. http://ajaxian.com/archives/javascript-variable-dump-in-coldfusion",
        "output": "I'm a huge fan of the dump function.",
        "answer": "I'm a huge fan of the dump function. http://ajaxian.com/archives/javascript-variable-dump-in-coldfusion",
        "summary": "I'm a huge fan of the dump function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use semicolons to separate statements:",
        "output": "You can use semicolons to separate statements:",
        "answer": "You can use semicolons to separate statements:",
        "summary": "You can use semicolons to separate statements:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've just spent a happy 30 minutes with this. I'd renamed the entities object, renamed the entry in the config file, but there's more  ... you have to change the reference to the csdl as well very easy to miss - if you're renaming, make sure you get everything ....",
        "output": "I'd renamed the entities object, renamed the entry in the config file, but there's more  ... you have to change the reference to the csdl as well",
        "answer": "I've just spent a happy 30 minutes with this. I'd renamed the entities object, renamed the entry in the config file, but there's more  ... you have to change the reference to the csdl as well very easy to miss - if you're renaming, make sure you get everything ....",
        "summary": "I'd renamed the entities object, renamed the entry in the config file, but there's more  ... you have to change the reference to the csdl as well"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A very simple, non-technical rule-of-thumb would be that clustered indexes are usually used for your primary key (or, at least, a unique column) and that non-clustered are used for other situations (maybe a foreign key). Indeed, SQL Server will by default create a clustered index on your primary key column(s). As you will have learnt, the clustered index relates to the way data is physically sorted on disk, which means it's a good all-round choice for most situations.",
        "output": "A very simple, non-technical rule-of-thumb would be that clustered indexes are usually used for your primary key (or, at least, a unique column) and that non-clustered are used for other situations (maybe a foreign key).",
        "answer": "A very simple, non-technical rule-of-thumb would be that clustered indexes are usually used for your primary key (or, at least, a unique column) and that non-clustered are used for other situations (maybe a foreign key). Indeed, SQL Server will by default create a clustered index on your primary key column(s). As you will have learnt, the clustered index relates to the way data is physically sorted on disk, which means it's a good all-round choice for most situations.",
        "summary": "A very simple, non-technical rule-of-thumb would be that clustered indexes are usually used for your primary key (or, at least, a unique column) and that non-clustered are used for other situations (maybe a foreign key)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This one worked for me usage : returns : like usual you can loop it like:",
        "output": "This one worked for me",
        "answer": "This one worked for me usage : returns : like usual you can loop it like:",
        "summary": "This one worked for me"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are a number of tools specifically designed for the purpose of manipulating JSON from the command line, and will be a lot easier and more reliable than doing it with Awk, such as <code>jq</code>: You can also do this with tools that are likely already installed on your system, like Python using the <code>json</code> module, and so avoid any extra dependencies, while still having the benefit of a proper JSON parser. The following assume you want to use UTF-8, which the original JSON should be encoded in and is what most modern terminals use as well: Python 2: Python 3: Historical notes This answer originally recommended jsawk, which should still work, but is a little more cumbersome to use than <code>jq</code>, and depends on a standalone JavaScript interpreter being installed which is less common than a Python interpreter, so the above answers are probably preferable: This answer also originally used the Twitter API from the question, but that API no longer works, making it hard to copy the examples to test out, and the new Twitter API requires API keys, so I've switched to using the GitHub API which can be used easily without API keys. The first answer for the original question would be:",
        "output": "There are a number of tools specifically designed for the purpose of manipulating JSON from the command line, and will be a lot easier and more reliable than doing it with Awk, such as <code>jq</code>: Python 2: Python 3:",
        "answer": "There are a number of tools specifically designed for the purpose of manipulating JSON from the command line, and will be a lot easier and more reliable than doing it with Awk, such as <code>jq</code>: You can also do this with tools that are likely already installed on your system, like Python using the <code>json</code> module, and so avoid any extra dependencies, while still having the benefit of a proper JSON parser. The following assume you want to use UTF-8, which the original JSON should be encoded in and is what most modern terminals use as well: Python 2: Python 3: Historical notes This answer originally recommended jsawk, which should still work, but is a little more cumbersome to use than <code>jq</code>, and depends on a standalone JavaScript interpreter being installed which is less common than a Python interpreter, so the above answers are probably preferable: This answer also originally used the Twitter API from the question, but that API no longer works, making it hard to copy the examples to test out, and the new Twitter API requires API keys, so I've switched to using the GitHub API which can be used easily without API keys. The first answer for the original question would be:",
        "summary": "There are a number of tools specifically designed for the purpose of manipulating JSON from the command line, and will be a lot easier and more reliable than doing it with Awk, such as <code>jq</code>: Python 2: Python 3:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is also <code>Scanner</code>. You can use it just like the <code>BufferedReader</code>: BIGBLOCK I think that this is a bit cleaner approach that both of the suggested ones.",
        "output": "There is also <code>Scanner</code>. You can use it just like the <code>BufferedReader</code>: BIGBLOCK",
        "answer": "There is also <code>Scanner</code>. You can use it just like the <code>BufferedReader</code>: BIGBLOCK I think that this is a bit cleaner approach that both of the suggested ones.",
        "summary": "There is also <code>Scanner</code>. You can use it just like the <code>BufferedReader</code>: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The WebKit Developer Console (found in Chrome, Safari, etc.) lets you view attached events for elements. More detail in this Stack Overflow question",
        "output": "The WebKit Developer Console (found in Chrome, Safari, etc.) lets you view attached events for elements.",
        "answer": "The WebKit Developer Console (found in Chrome, Safari, etc.) lets you view attached events for elements. More detail in this Stack Overflow question",
        "summary": "The WebKit Developer Console (found in Chrome, Safari, etc.) lets you view attached events for elements."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>notify()</code> needs to be synchronized as well",
        "output": "<code>notify()</code> needs to be synchronized as well",
        "answer": "<code>notify()</code> needs to be synchronized as well",
        "summary": "<code>notify()</code> needs to be synchronized as well"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have also researched lot on this, but I could not get the concrete solution for this. Currently the approach I follow is copy the contents in excel from SQL Server Managment studio and then import the data into Oracle-TOAD and then generate the insert statements",
        "output": "Currently the approach I follow is copy the contents in excel from SQL Server Managment studio and then import the data into Oracle-TOAD and then generate the insert statements",
        "answer": "I have also researched lot on this, but I could not get the concrete solution for this. Currently the approach I follow is copy the contents in excel from SQL Server Managment studio and then import the data into Oracle-TOAD and then generate the insert statements",
        "summary": "Currently the approach I follow is copy the contents in excel from SQL Server Managment studio and then import the data into Oracle-TOAD and then generate the insert statements"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Shallow copy:&nbsp;Copies the member values from one object into another. Deep Copy:&nbsp;&nbsp;&nbsp;&nbsp;Copies the member values from one object into another. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any pointer objects are duplicated and Deep Copied. Example:",
        "output": "Shallow copy:&nbsp;Copies the member values from one object into another. Deep Copy:&nbsp;&nbsp;&nbsp;&nbsp;Copies the member values from one object into another. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any pointer objects are duplicated and Deep Copied.",
        "answer": "Shallow copy:&nbsp;Copies the member values from one object into another. Deep Copy:&nbsp;&nbsp;&nbsp;&nbsp;Copies the member values from one object into another. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any pointer objects are duplicated and Deep Copied. Example:",
        "summary": "Shallow copy:&nbsp;Copies the member values from one object into another. Deep Copy:&nbsp;&nbsp;&nbsp;&nbsp;Copies the member values from one object into another. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any pointer objects are duplicated and Deep Copied."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This error is probably related to a byte order mark (BOM) prior to the actual XML content. You need to parse the returned String and discard the BOM, so SAXParser can process the document correctly. You will find a possible solution here.",
        "output": "This error is probably related to a byte order mark (BOM) prior to the actual XML content. You need to parse the returned String and discard the BOM, so SAXParser can process the document correctly.",
        "answer": "This error is probably related to a byte order mark (BOM) prior to the actual XML content. You need to parse the returned String and discard the BOM, so SAXParser can process the document correctly. You will find a possible solution here.",
        "summary": "This error is probably related to a byte order mark (BOM) prior to the actual XML content. You need to parse the returned String and discard the BOM, so SAXParser can process the document correctly."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Posix governs interoperability, portability, and in other areas such as the usage and mechanism of fork, permissions and filesystem standards such as /etc, /var, /usr and so on . Hence, when developers write a program under a Posix compliant system such as for example Linux, it is generally, not always, guaranteed to run on another posix compliant system such as IBM's AIX system or other commercial variants of Unix. Posix is a good thing to have as such it eases the software development for maximum portability which it strives for. Hope this answer makes sense. Thanks to Jed Smith &amp; Tinkertim for pointing out my error - my bad!!! :(",
        "output": "Posix governs interoperability, portability, and in other areas such as the usage and mechanism of fork, permissions and filesystem standards such as /etc, /var, /usr and so on . Posix is a good thing to have as such it eases the software development for maximum portability which it strives for.",
        "answer": "Posix governs interoperability, portability, and in other areas such as the usage and mechanism of fork, permissions and filesystem standards such as /etc, /var, /usr and so on . Hence, when developers write a program under a Posix compliant system such as for example Linux, it is generally, not always, guaranteed to run on another posix compliant system such as IBM's AIX system or other commercial variants of Unix. Posix is a good thing to have as such it eases the software development for maximum portability which it strives for. Hope this answer makes sense. Thanks to Jed Smith &amp; Tinkertim for pointing out my error - my bad!!! :(",
        "summary": "Posix governs interoperability, portability, and in other areas such as the usage and mechanism of fork, permissions and filesystem standards such as /etc, /var, /usr and so on . Posix is a good thing to have as such it eases the software development for maximum portability which it strives for."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Hi Guys I managed to solve it. I used destroy instead close function (It doesn't make any sense) but it worked! BIGBLOCK",
        "output": "I used destroy instead close function (It doesn't make any sense) but it worked!",
        "answer": "Hi Guys I managed to solve it. I used destroy instead close function (It doesn't make any sense) but it worked! BIGBLOCK",
        "summary": "I used destroy instead close function (It doesn't make any sense) but it worked!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like the <code>urllib.urlencode</code> function, and it doesn't appear to exist in <code>urllib2</code>. BIGBLOCK",
        "output": "I like the <code>urllib.urlencode</code> function, and it doesn't appear to exist in <code>urllib2</code>.",
        "answer": "I like the <code>urllib.urlencode</code> function, and it doesn't appear to exist in <code>urllib2</code>. BIGBLOCK",
        "summary": "I like the <code>urllib.urlencode</code> function, and it doesn't appear to exist in <code>urllib2</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want to rule out any problems with the <code>else</code> part, try removing the <code>else</code> and place the command on a new line. Like this:",
        "output": "If you want to rule out any problems with the <code>else</code> part, try removing the <code>else</code> and place the command on a new line.",
        "answer": "If you want to rule out any problems with the <code>else</code> part, try removing the <code>else</code> and place the command on a new line. Like this:",
        "summary": "If you want to rule out any problems with the <code>else</code> part, try removing the <code>else</code> and place the command on a new line."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The result is probably not in JSON format, so when jQuery tries to parse it as such, it fails. You can catch the error with <code>error:</code> callback function. You don't seem to need JSON in that function anyways, so you can also take out the <code>dataType: 'json'</code> row.",
        "output": "You can catch the error with <code>error:</code> callback function.",
        "answer": "The result is probably not in JSON format, so when jQuery tries to parse it as such, it fails. You can catch the error with <code>error:</code> callback function. You don't seem to need JSON in that function anyways, so you can also take out the <code>dataType: 'json'</code> row.",
        "summary": "You can catch the error with <code>error:</code> callback function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You shouldn't be doing tuple dereferencing on values that can change like your line below. The line above will fail if you pass less than one argument or more than one argument. A better way of doing this is to do something like this: Of cause you will do something other than print the args. Maybe put a series of 'if' statement in the 'for' loop that set variables depending on the arguments passed. An even better way is to use the getopt or optparse packages.",
        "output": "You shouldn't be doing tuple dereferencing on values that can change like your line below. A better way of doing this is to do something like this: An even better way is to use the getopt or optparse packages.",
        "answer": "You shouldn't be doing tuple dereferencing on values that can change like your line below. The line above will fail if you pass less than one argument or more than one argument. A better way of doing this is to do something like this: Of cause you will do something other than print the args. Maybe put a series of 'if' statement in the 'for' loop that set variables depending on the arguments passed. An even better way is to use the getopt or optparse packages.",
        "summary": "You shouldn't be doing tuple dereferencing on values that can change like your line below. A better way of doing this is to do something like this: An even better way is to use the getopt or optparse packages."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Very informally: A POD is a type (including classes) where the C++ compiler guarantees that there will be no \"magic\" going on in the structure: for example hidden pointers to vtables, offsets that get applied to the address when it is cast to other types (at least if the target's POD too), constructors, or destructors. Roughly speaking, a type is a POD when the only things in it are built-in types and combinations of them. The result is something that \"acts like\" a C type. Less informally: <li><code>int</code>, <code>char</code>, <code>wchar_t</code>, <code>bool</code>, <code>float</code>, <code>double</code> are PODs, as are <code>long/short</code> and <code>signed/unsigned</code> versions of them. <li>pointers (including pointer-to-function and pointer-to-member) are PODs, <li><code>enums</code> are PODs <li>a <code>const</code> or <code>volatile</code> POD is a POD. <li>a <code>class</code>, <code>struct</code> or <code>union</code> of PODs is a POD provided that all non-static data members are <code>public</code>, and it has no base class and no constructors, destructors, or virtual methods. Static members don't stop something being a POD under this rule. <li>Wikipedia is wrong to say that a POD cannot have members of type pointer-to-member. Or rather, it's correct for the C++98 wording, but TC1 made explicit that pointers-to-member are POD. Formally (C++03 Standard): <strong>3.9(10):</strong> \"Arithmetic types (3.9.1), enumeration types, pointer types, and pointer to member types (3.9.2) and cv-qualified versions of these types (3.9.3) are collectively caller scalar types. Scalar types, POD-struct types, POD-union types (clause 9), arrays of such types and cv-qualified versions of these types (3.9.3) are collectively called POD types\" <strong>9(4):</strong> \"A POD-struct is an aggregate class that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. Similarly a POD-union is an aggregate union that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. <strong>8.5.1(1):</strong> \"An aggregate is an array or class (clause 9) with no user-declared constructors (12.1), no private or protected non-static data members (clause 11), no base classes (clause 10) and no virtual functions (10.3).\"",
        "output": "A POD is a type (including classes) where the C++ compiler guarantees that there will be no \"magic\" going on in the structure: for example hidden pointers to vtables, offsets that get applied to the address when it is cast to other types (at least if the target's POD too), constructors, or destructors. <li>Wikipedia is wrong to say that a POD cannot have members of type pointer-to-member. <strong>3.9(10):</strong> \"Arithmetic types (3.9.1), enumeration types, pointer types, and pointer to member types (3.9.2) and cv-qualified versions of these types (3.9.3) are collectively caller scalar types. <strong>9(4):</strong> \"A POD-struct is an aggregate class that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. <strong>8.5.1(1):</strong> \"An aggregate is an array or class (clause 9) with no user-declared constructors (12.1), no private or protected non-static data members (clause 11), no base classes (clause 10) and no virtual functions (10.3).\"",
        "answer": "Very informally: A POD is a type (including classes) where the C++ compiler guarantees that there will be no \"magic\" going on in the structure: for example hidden pointers to vtables, offsets that get applied to the address when it is cast to other types (at least if the target's POD too), constructors, or destructors. Roughly speaking, a type is a POD when the only things in it are built-in types and combinations of them. The result is something that \"acts like\" a C type. Less informally: <li><code>int</code>, <code>char</code>, <code>wchar_t</code>, <code>bool</code>, <code>float</code>, <code>double</code> are PODs, as are <code>long/short</code> and <code>signed/unsigned</code> versions of them. <li>pointers (including pointer-to-function and pointer-to-member) are PODs, <li><code>enums</code> are PODs <li>a <code>const</code> or <code>volatile</code> POD is a POD. <li>a <code>class</code>, <code>struct</code> or <code>union</code> of PODs is a POD provided that all non-static data members are <code>public</code>, and it has no base class and no constructors, destructors, or virtual methods. Static members don't stop something being a POD under this rule. <li>Wikipedia is wrong to say that a POD cannot have members of type pointer-to-member. Or rather, it's correct for the C++98 wording, but TC1 made explicit that pointers-to-member are POD. Formally (C++03 Standard): <strong>3.9(10):</strong> \"Arithmetic types (3.9.1), enumeration types, pointer types, and pointer to member types (3.9.2) and cv-qualified versions of these types (3.9.3) are collectively caller scalar types. Scalar types, POD-struct types, POD-union types (clause 9), arrays of such types and cv-qualified versions of these types (3.9.3) are collectively called POD types\" <strong>9(4):</strong> \"A POD-struct is an aggregate class that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. Similarly a POD-union is an aggregate union that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. <strong>8.5.1(1):</strong> \"An aggregate is an array or class (clause 9) with no user-declared constructors (12.1), no private or protected non-static data members (clause 11), no base classes (clause 10) and no virtual functions (10.3).\"",
        "summary": "A POD is a type (including classes) where the C++ compiler guarantees that there will be no \"magic\" going on in the structure: for example hidden pointers to vtables, offsets that get applied to the address when it is cast to other types (at least if the target's POD too), constructors, or destructors. <li>Wikipedia is wrong to say that a POD cannot have members of type pointer-to-member. <strong>3.9(10):</strong> \"Arithmetic types (3.9.1), enumeration types, pointer types, and pointer to member types (3.9.2) and cv-qualified versions of these types (3.9.3) are collectively caller scalar types. <strong>9(4):</strong> \"A POD-struct is an aggregate class that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-define copy operator and no user-defined destructor. <strong>8.5.1(1):</strong> \"An aggregate is an array or class (clause 9) with no user-declared constructors (12.1), no private or protected non-static data members (clause 11), no base classes (clause 10) and no virtual functions (10.3).\""
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also set a global ignore pattern in SVN's configuration file.",
        "output": "You can also set a global ignore pattern in SVN's configuration file.",
        "answer": "You can also set a global ignore pattern in SVN's configuration file.",
        "summary": "You can also set a global ignore pattern in SVN's configuration file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See Mastering the VI editor",
        "output": "See Mastering the VI editor",
        "answer": "See Mastering the VI editor",
        "summary": "See Mastering the VI editor"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Warning! Your SQL isn't a good idea, because it will select all rows (no WHERE clause assumes \"WHERE 1\"!) and clog your application if you have a large number of rows. (What's the point of selecting 1,000 rows when 1 will do?) So instead, when selecting only one row, make sure you specify the LIMIT clause: BIGBLOCK This difference requires MySQL to select <em>only</em> the first matching record, so ordering the table is important or you ought to use a WHERE clause. However, it's a whole lot less memory and time to find that one record, than to get every record and output row number one.",
        "output": "Your SQL isn't a good idea, because it will select all rows (no WHERE clause assumes \"WHERE 1\"!) and clog your application if you have a large number of rows. So instead, when selecting only one row, make sure you specify the LIMIT clause: BIGBLOCK",
        "answer": "Warning! Your SQL isn't a good idea, because it will select all rows (no WHERE clause assumes \"WHERE 1\"!) and clog your application if you have a large number of rows. (What's the point of selecting 1,000 rows when 1 will do?) So instead, when selecting only one row, make sure you specify the LIMIT clause: BIGBLOCK This difference requires MySQL to select <em>only</em> the first matching record, so ordering the table is important or you ought to use a WHERE clause. However, it's a whole lot less memory and time to find that one record, than to get every record and output row number one.",
        "summary": "Your SQL isn't a good idea, because it will select all rows (no WHERE clause assumes \"WHERE 1\"!) and clog your application if you have a large number of rows. So instead, when selecting only one row, make sure you specify the LIMIT clause: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When most people talk about binary trees, they're more often than not thinking about binary <em>search</em> trees, so I'll cover that first. A non-balanced binary search tree is actually useful for little more than educating students about data structures. That's because, unless the data is coming in in a relatively random order, the tree can easily degenerate into its worst-case form, which is a linked list, since simple binary trees are <em>not</em> balanced. A good case in point: I once had to fix some software which loaded its data into a binary tree for manipulation and searching. It wrote the data out in sorted form: BIGBLOCK so that, when reading it back in, ended up with the following tree: BIGBLOCK which is the degenerate form. If you go looking for Frank in that tree, you'll have to search all six nodes before you find him. Binary trees become truly useful when you balance them. This involves rotating sub-trees through their root node so that the height difference between any two sub-trees is less than or equal to 1. Adding those names above one at a time into a balanced tree would give you the following sequence: BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK You can actually see whole sub-trees rotating to the left as the entries are added and this gives you a balanced binary tree in which the worst case lookup is O(log N) rather than O(N) as the degenerate form gives. At no point does the highest NULL (<code>=</code>) differ from the lowest by more than one level. And, in the final tree above, you can find Frank by only looking at three nodes (<code>Chloe</code>, <code>Edwina</code> and, finally, <code>Frank</code>). Of course, they become even more useful when you make them balanced <em>multi-way</em> trees rather than binary tress. That means that each node holds more than one item (technically, they hold N items and N+1 pointers, a binary tree being a special case of a 1-way multi-way tree  with 1 item and 2 pointers). With a three-way tree, you end up with: BIGBLOCK This is typically used in maintaining keys for an index of items. I've written database software optimised for the hardware where a node is exactly the size of a disk block (say, 512 bytes) and you put as many keys as you can into a single node. The <em>pointers</em> in this case were actually record numbers into a fixed-length-record direct-access file separate from the index file (so record number <code>X</code> could be found by just seeking to <code>X * record_length</code>). For example, if the pointers are 4 bytes and the key size is 10, the number of keys in a 512-byte node is 36. That's 36 keys (360 bytes) and 37 pointers (148 bytes) for a total of 508 bytes with 4 bytes wasted per node. The use of multi-way keys introduces the complexity of a two-phase search (multi-way search to find the correct node combined with a small sequential search to find the correct key in the node) but the advantage in doing less disk I/O more than makes up for this. I see no reason to do this for an in-memory structure, you'd be better off sticking with a balanced binary tree and keeping your code simple. Also keep in mind that the advantages of O(log N) over O(N) don't really appear when your data sets are small. If you're using a multi-way tree to store the fifteen people in your address book, it's probably overkill. The advantages come when you're storing something like every order from your hundred thousand customers over the last ten years. The whole point of big-O notation is to indicate what happens as the N approaches infinity. Some people may disagree but it's even okay to use bubble sort if you're sure the data sets will stay below a certain size, as long as nothing else is readily available :-) As to other uses for binary trees, there are a great many, such as: <li>Binary heaps where higher keys are <em>above or equal to</em> lower ones rather than to the left of (or below or equal to and right); <li>Hash trees, similar to hash tables; <li>Abstract syntax trees for compilation of computer languages; <li>Huffman trees for compression of data; <li>Routing trees for network traffic. Given how much explanation I generated for the search trees, I'm reticent to go into a lot of detail on the others, but that should be enough to research them, should you desire.",
        "output": "A non-balanced binary search tree is actually useful for little more than educating students about data structures. That's because, unless the data is coming in in a relatively random order, the tree can easily degenerate into its worst-case form, which is a linked list, since simple binary trees are <em>not</em> balanced. Binary trees become truly useful when you balance them. This involves rotating sub-trees through their root node so that the height difference between any two sub-trees is less than or equal to 1. Of course, they become even more useful when you make them balanced <em>multi-way</em> trees rather than binary tress. That means that each node holds more than one item (technically, they hold N items and N+1 pointers, a binary tree being a special case of a 1-way multi-way tree  with 1 item and 2 pointers). I've written database software optimised for the hardware where a node is exactly the size of a disk block (say, 512 bytes) and you put as many keys as you can into a single node. The <em>pointers</em> in this case were actually record numbers into a fixed-length-record direct-access file separate from the index file (so record number <code>X</code> could be found by just seeking to <code>X * record_length</code>). As to other uses for binary trees, there are a great many, such as: <li>Binary heaps where higher keys are <em>above or equal to</em> lower ones rather than to the left of (or below or equal to and right); <li>Hash trees, similar to hash tables; <li>Abstract syntax trees for compilation of computer languages; <li>Huffman trees for compression of data; <li>Routing trees for network traffic.",
        "answer": "When most people talk about binary trees, they're more often than not thinking about binary <em>search</em> trees, so I'll cover that first. A non-balanced binary search tree is actually useful for little more than educating students about data structures. That's because, unless the data is coming in in a relatively random order, the tree can easily degenerate into its worst-case form, which is a linked list, since simple binary trees are <em>not</em> balanced. A good case in point: I once had to fix some software which loaded its data into a binary tree for manipulation and searching. It wrote the data out in sorted form: BIGBLOCK so that, when reading it back in, ended up with the following tree: BIGBLOCK which is the degenerate form. If you go looking for Frank in that tree, you'll have to search all six nodes before you find him. Binary trees become truly useful when you balance them. This involves rotating sub-trees through their root node so that the height difference between any two sub-trees is less than or equal to 1. Adding those names above one at a time into a balanced tree would give you the following sequence: BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK &nbsp; BIGBLOCK You can actually see whole sub-trees rotating to the left as the entries are added and this gives you a balanced binary tree in which the worst case lookup is O(log N) rather than O(N) as the degenerate form gives. At no point does the highest NULL (<code>=</code>) differ from the lowest by more than one level. And, in the final tree above, you can find Frank by only looking at three nodes (<code>Chloe</code>, <code>Edwina</code> and, finally, <code>Frank</code>). Of course, they become even more useful when you make them balanced <em>multi-way</em> trees rather than binary tress. That means that each node holds more than one item (technically, they hold N items and N+1 pointers, a binary tree being a special case of a 1-way multi-way tree  with 1 item and 2 pointers). With a three-way tree, you end up with: BIGBLOCK This is typically used in maintaining keys for an index of items. I've written database software optimised for the hardware where a node is exactly the size of a disk block (say, 512 bytes) and you put as many keys as you can into a single node. The <em>pointers</em> in this case were actually record numbers into a fixed-length-record direct-access file separate from the index file (so record number <code>X</code> could be found by just seeking to <code>X * record_length</code>). For example, if the pointers are 4 bytes and the key size is 10, the number of keys in a 512-byte node is 36. That's 36 keys (360 bytes) and 37 pointers (148 bytes) for a total of 508 bytes with 4 bytes wasted per node. The use of multi-way keys introduces the complexity of a two-phase search (multi-way search to find the correct node combined with a small sequential search to find the correct key in the node) but the advantage in doing less disk I/O more than makes up for this. I see no reason to do this for an in-memory structure, you'd be better off sticking with a balanced binary tree and keeping your code simple. Also keep in mind that the advantages of O(log N) over O(N) don't really appear when your data sets are small. If you're using a multi-way tree to store the fifteen people in your address book, it's probably overkill. The advantages come when you're storing something like every order from your hundred thousand customers over the last ten years. The whole point of big-O notation is to indicate what happens as the N approaches infinity. Some people may disagree but it's even okay to use bubble sort if you're sure the data sets will stay below a certain size, as long as nothing else is readily available :-) As to other uses for binary trees, there are a great many, such as: <li>Binary heaps where higher keys are <em>above or equal to</em> lower ones rather than to the left of (or below or equal to and right); <li>Hash trees, similar to hash tables; <li>Abstract syntax trees for compilation of computer languages; <li>Huffman trees for compression of data; <li>Routing trees for network traffic. Given how much explanation I generated for the search trees, I'm reticent to go into a lot of detail on the others, but that should be enough to research them, should you desire.",
        "summary": "A non-balanced binary search tree is actually useful for little more than educating students about data structures. That's because, unless the data is coming in in a relatively random order, the tree can easily degenerate into its worst-case form, which is a linked list, since simple binary trees are <em>not</em> balanced. Binary trees become truly useful when you balance them. This involves rotating sub-trees through their root node so that the height difference between any two sub-trees is less than or equal to 1. Of course, they become even more useful when you make them balanced <em>multi-way</em> trees rather than binary tress. That means that each node holds more than one item (technically, they hold N items and N+1 pointers, a binary tree being a special case of a 1-way multi-way tree  with 1 item and 2 pointers). I've written database software optimised for the hardware where a node is exactly the size of a disk block (say, 512 bytes) and you put as many keys as you can into a single node. The <em>pointers</em> in this case were actually record numbers into a fixed-length-record direct-access file separate from the index file (so record number <code>X</code> could be found by just seeking to <code>X * record_length</code>). As to other uses for binary trees, there are a great many, such as: <li>Binary heaps where higher keys are <em>above or equal to</em> lower ones rather than to the left of (or below or equal to and right); <li>Hash trees, similar to hash tables; <li>Abstract syntax trees for compilation of computer languages; <li>Huffman trees for compression of data; <li>Routing trees for network traffic."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ask the user for the exact URL they're using in their browser. If they're entering https://your.site:80, they may receive the ssl_error_rx_record_too_long error.",
        "output": "Ask the user for the exact URL they're using in their browser. If they're entering https://your.site:80, they may receive the ssl_error_rx_record_too_long error.",
        "answer": "Ask the user for the exact URL they're using in their browser. If they're entering https://your.site:80, they may receive the ssl_error_rx_record_too_long error.",
        "summary": "Ask the user for the exact URL they're using in their browser. If they're entering https://your.site:80, they may receive the ssl_error_rx_record_too_long error."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The solution for me was that <code>default-ssl</code> was not enabled in apache 2.... just putting <code>SSLEngine On</code> I had to execute <code>a2ensite default-ssl</code> and everything worked.",
        "output": "The solution for me was that <code>default-ssl</code> was not enabled in apache 2.... just putting <code>SSLEngine On</code> I had to execute <code>a2ensite default-ssl</code> and everything worked.",
        "answer": "The solution for me was that <code>default-ssl</code> was not enabled in apache 2.... just putting <code>SSLEngine On</code> I had to execute <code>a2ensite default-ssl</code> and everything worked.",
        "summary": "The solution for me was that <code>default-ssl</code> was not enabled in apache 2.... just putting <code>SSLEngine On</code> I had to execute <code>a2ensite default-ssl</code> and everything worked."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An infinite loop is the idea I also had. A freaky-looking one is: BIGBLOCK (<code>:</code> is the same as <code>true</code>, does nothing and exits with zero) You can call that in a subshell and run in the background. Doing that <code>$num_cores</code> times should be enough. After sleeping the desired time you can kill them all, you get the PIDs with <code>jobs -p</code> (hint: <code>xargs</code>)",
        "output": "An infinite loop is the idea I also had.",
        "answer": "An infinite loop is the idea I also had. A freaky-looking one is: BIGBLOCK (<code>:</code> is the same as <code>true</code>, does nothing and exits with zero) You can call that in a subshell and run in the background. Doing that <code>$num_cores</code> times should be enough. After sleeping the desired time you can kill them all, you get the PIDs with <code>jobs -p</code> (hint: <code>xargs</code>)",
        "summary": "An infinite loop is the idea I also had."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use this <code>bitmap.recycle();</code> This helps without any image quality issue.",
        "output": "Use this <code>bitmap.recycle();</code> This helps without any image quality issue.",
        "answer": "Use this <code>bitmap.recycle();</code> This helps without any image quality issue.",
        "summary": "Use this <code>bitmap.recycle();</code> This helps without any image quality issue."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yet another interesting comparison of mercurial and git: Mercurial vs Git.Main focus is on internals and their influence on branching process.",
        "output": "Yet another interesting comparison of mercurial and git: Mercurial vs Git.Main focus is on internals and their influence on branching process.",
        "answer": "Yet another interesting comparison of mercurial and git: Mercurial vs Git.Main focus is on internals and their influence on branching process.",
        "summary": "Yet another interesting comparison of mercurial and git: Mercurial vs Git.Main focus is on internals and their influence on branching process."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Note that Object.keys and other ECMAScript 5 methods are supported by Firefox 4, Chrome 6, Safari 5, IE 9 and above. For example: ECMAScript 5 compatibility table: http://kangax.github.com/es5-compat-table/ Description of new methods: http://markcaudill.com/index.php/2009/04/javascript-new-features-ecma5/",
        "output": "Note that Object.keys and other ECMAScript 5 methods are supported by Firefox 4, Chrome 6, Safari 5, IE 9 and above.",
        "answer": "Note that Object.keys and other ECMAScript 5 methods are supported by Firefox 4, Chrome 6, Safari 5, IE 9 and above. For example: ECMAScript 5 compatibility table: http://kangax.github.com/es5-compat-table/ Description of new methods: http://markcaudill.com/index.php/2009/04/javascript-new-features-ecma5/",
        "summary": "Note that Object.keys and other ECMAScript 5 methods are supported by Firefox 4, Chrome 6, Safari 5, IE 9 and above."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This can happen when the system time changes while debugging or between debug sessions, be it programmatically, manually or by an external program.",
        "output": "This can happen when the system time changes while debugging or between debug sessions, be it programmatically, manually or by an external program.",
        "answer": "This can happen when the system time changes while debugging or between debug sessions, be it programmatically, manually or by an external program.",
        "summary": "This can happen when the system time changes while debugging or between debug sessions, be it programmatically, manually or by an external program."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n you need to put the following name/value pairs into a Hashtable and call this contructor: the exact values depend on your application server, this example is for jboss",
        "output": "you need to put the following name/value pairs into a Hashtable and call this contructor:",
        "answer": "you need to put the following name/value pairs into a Hashtable and call this contructor: the exact values depend on your application server, this example is for jboss",
        "summary": "you need to put the following name/value pairs into a Hashtable and call this contructor:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The parameterless form of the change() method triggers a <code>change</code> event. You can write something like: BIGBLOCK",
        "output": "The parameterless form of the change() method triggers a <code>change</code> event. You can write something like: BIGBLOCK",
        "answer": "The parameterless form of the change() method triggers a <code>change</code> event. You can write something like: BIGBLOCK",
        "summary": "The parameterless form of the change() method triggers a <code>change</code> event. You can write something like: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your regex will match anything that contains a number, you want to use anchors to match the whole string and then match one or more numbers: The <code>^</code> will anchor the beginning of the string, the <code>$</code> will anchor the end of the string, and the <code>+</code> will match one or more of what precedes it (a number in this case).",
        "output": "Your regex will match anything that contains a number, you want to use anchors to match the whole string and then match one or more numbers:",
        "answer": "Your regex will match anything that contains a number, you want to use anchors to match the whole string and then match one or more numbers: The <code>^</code> will anchor the beginning of the string, the <code>$</code> will anchor the end of the string, and the <code>+</code> will match one or more of what precedes it (a number in this case).",
        "summary": "Your regex will match anything that contains a number, you want to use anchors to match the whole string and then match one or more numbers:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's just the logical NOT operator, twice - it's used to convert something to boolean, e.g. :",
        "output": "It's just the logical NOT operator, twice - it's used to convert something to boolean, e.g.",
        "answer": "It's just the logical NOT operator, twice - it's used to convert something to boolean, e.g. :",
        "summary": "It's just the logical NOT operator, twice - it's used to convert something to boolean, e.g."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, you can't return multiple values from a function in C# (for versions lower than C# 7), at least not in the way you can do it in Python. However, there are a couple alternatives: You can return an array of type object with the multiple values you want in it. You can use <code>out</code> parameters.",
        "output": "You can return an array of type object with the multiple values you want in it. You can use <code>out</code> parameters.",
        "answer": "No, you can't return multiple values from a function in C# (for versions lower than C# 7), at least not in the way you can do it in Python. However, there are a couple alternatives: You can return an array of type object with the multiple values you want in it. You can use <code>out</code> parameters.",
        "summary": "You can return an array of type object with the multiple values you want in it. You can use <code>out</code> parameters."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Adding to Mike McAllister's pretty-thorough answer... Materialized views can only be set to refresh <em>automatically</em> through the database detecting changes when the view query is considered <strong>simple</strong> by the compiler. If it's considered too complex, it won't be able to set up what are essentially internal triggers to track changes in the source tables to only update the changed rows in the mview table. When you create a materialized view, you'll find that Oracle creates both the mview <strong>and as a table with the same name</strong>, which can make things confusing.",
        "output": "Materialized views can only be set to refresh <em>automatically</em> through the database detecting changes when the view query is considered <strong>simple</strong> by the compiler.",
        "answer": "Adding to Mike McAllister's pretty-thorough answer... Materialized views can only be set to refresh <em>automatically</em> through the database detecting changes when the view query is considered <strong>simple</strong> by the compiler. If it's considered too complex, it won't be able to set up what are essentially internal triggers to track changes in the source tables to only update the changed rows in the mview table. When you create a materialized view, you'll find that Oracle creates both the mview <strong>and as a table with the same name</strong>, which can make things confusing.",
        "summary": "Materialized views can only be set to refresh <em>automatically</em> through the database detecting changes when the view query is considered <strong>simple</strong> by the compiler."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <li>Enter the multiplier in a cell <li>Copy that cell to the clipboard <li>Select the range you want to multiply by the multiplier <li>(Excel 2003 or earlier) Choose <strong>Edit</strong> | <strong>Paste Special</strong> | <strong>Multiply</strong> (Excel 2007 or later) Click on the Paste down arrow | <strong>Paste Special</strong> | <strong>Multiply</strong>",
        "output": "<li>Enter the multiplier in a cell <li>Copy that cell to the clipboard <li>Select the range you want to multiply by the multiplier <li>(Excel 2003 or earlier) Choose <strong>Edit</strong> | <strong>Paste Special</strong> | <strong>Multiply</strong> (Excel 2007 or later) Click on the Paste down arrow | <strong>Paste Special</strong> | <strong>Multiply</strong>",
        "answer": "<li>Enter the multiplier in a cell <li>Copy that cell to the clipboard <li>Select the range you want to multiply by the multiplier <li>(Excel 2003 or earlier) Choose <strong>Edit</strong> | <strong>Paste Special</strong> | <strong>Multiply</strong> (Excel 2007 or later) Click on the Paste down arrow | <strong>Paste Special</strong> | <strong>Multiply</strong>",
        "summary": "<li>Enter the multiplier in a cell <li>Copy that cell to the clipboard <li>Select the range you want to multiply by the multiplier <li>(Excel 2003 or earlier) Choose <strong>Edit</strong> | <strong>Paste Special</strong> | <strong>Multiply</strong> (Excel 2007 or later) Click on the Paste down arrow | <strong>Paste Special</strong> | <strong>Multiply</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>\\r</code> instead of <code>\\n</code>. Substituting by <code>\\n</code> inserts a null character into the text. To get a newline, use <code>\\r</code>. When <em>searching</em> for a newline, youÃ©ÂÂ¥Ã¦ÂªÂ still use <code>\\n</code>, however. This asymmetry is due to the fact that <code>\\n</code> and <code>\\r</code> do slightly different things: <code>\\n</code> matches an end of line (newline), whereas <code>\\r</code> matches a carriage return. On the other hand, in substitutions <code>\\n</code> inserts a null character whereas <code>\\r</code> inserts a newline (more precisely, itÃ©ÂÂ¥Ã¦ÂªÂ treated as the input &lt;CR&gt;). HereÃ©ÂÂ¥Ã¦ÂªÂ a small, non-interactive example to illustrate this, using the Vim command line feature (in other words, you can copy and paste the following into a terminal to run it). <code>xxd</code> shows a hexdump of the resulting file. In other words, <code>\\n</code> has inserted the byte 0x00 into the text; <code>\\r</code> has inserted the byte 0x0a.",
        "output": "Use <code>\\r</code> instead of <code>\\n</code>. Substituting by <code>\\n</code> inserts a null character into the text. To get a newline, use <code>\\r</code>. When <em>searching</em> for a newline, youÃ©ÂÂ¥Ã¦ÂªÂ still use <code>\\n</code>, however.",
        "answer": "Use <code>\\r</code> instead of <code>\\n</code>. Substituting by <code>\\n</code> inserts a null character into the text. To get a newline, use <code>\\r</code>. When <em>searching</em> for a newline, youÃ©ÂÂ¥Ã¦ÂªÂ still use <code>\\n</code>, however. This asymmetry is due to the fact that <code>\\n</code> and <code>\\r</code> do slightly different things: <code>\\n</code> matches an end of line (newline), whereas <code>\\r</code> matches a carriage return. On the other hand, in substitutions <code>\\n</code> inserts a null character whereas <code>\\r</code> inserts a newline (more precisely, itÃ©ÂÂ¥Ã¦ÂªÂ treated as the input &lt;CR&gt;). HereÃ©ÂÂ¥Ã¦ÂªÂ a small, non-interactive example to illustrate this, using the Vim command line feature (in other words, you can copy and paste the following into a terminal to run it). <code>xxd</code> shows a hexdump of the resulting file. In other words, <code>\\n</code> has inserted the byte 0x00 into the text; <code>\\r</code> has inserted the byte 0x0a.",
        "summary": "Use <code>\\r</code> instead of <code>\\n</code>. Substituting by <code>\\n</code> inserts a null character into the text. To get a newline, use <code>\\r</code>. When <em>searching</em> for a newline, youÃ©ÂÂ¥Ã¦ÂªÂ still use <code>\\n</code>, however."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I didn't have control over the security configuration for the service I was calling into, but got the same error. I was able to fix my client as follows. <li>In the config, set up the security mode: BIGBLOCK <li>In the code, set the proxy class to allow impersonation (I added a reference to a service called customer): BIGBLOCK",
        "output": "<li>In the config, set up the security mode: BIGBLOCK <li>In the code, set the proxy class to allow impersonation (I added a reference to a service called customer): BIGBLOCK",
        "answer": "I didn't have control over the security configuration for the service I was calling into, but got the same error. I was able to fix my client as follows. <li>In the config, set up the security mode: BIGBLOCK <li>In the code, set the proxy class to allow impersonation (I added a reference to a service called customer): BIGBLOCK",
        "summary": "<li>In the config, set up the security mode: BIGBLOCK <li>In the code, set the proxy class to allow impersonation (I added a reference to a service called customer): BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>dict.has_key()</code> if (and only if) your code is required to be runnable by Python versions earlier than 2.3 (when <code>key in dict</code> was introduced).",
        "output": "Use <code>dict.has_key()</code> if (and only if) your code is required to be runnable by Python versions earlier than 2.3 (when <code>key in dict</code> was introduced).",
        "answer": "Use <code>dict.has_key()</code> if (and only if) your code is required to be runnable by Python versions earlier than 2.3 (when <code>key in dict</code> was introduced).",
        "summary": "Use <code>dict.has_key()</code> if (and only if) your code is required to be runnable by Python versions earlier than 2.3 (when <code>key in dict</code> was introduced)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One of the most common application is to efficiently store data in sorted form in order to access and search stored elements quickly. For instance, <code>std::map</code> or <code>std::set</code> in C++ Standard Library. Binary tree as data structure is useful for various implementations of expression parsers and expression solvers. It may also be used to solve some of database problems, for example, indexing. Generally, binary tree is a general concept of particular tree-based data structure and various specific types of binary trees can be constructed with different properties.",
        "output": "One of the most common application is to efficiently store data in sorted form in order to access and search stored elements quickly. Binary tree as data structure is useful for various implementations of expression parsers and expression solvers. Generally, binary tree is a general concept of particular tree-based data structure and various specific types of binary trees can be constructed with different properties.",
        "answer": "One of the most common application is to efficiently store data in sorted form in order to access and search stored elements quickly. For instance, <code>std::map</code> or <code>std::set</code> in C++ Standard Library. Binary tree as data structure is useful for various implementations of expression parsers and expression solvers. It may also be used to solve some of database problems, for example, indexing. Generally, binary tree is a general concept of particular tree-based data structure and various specific types of binary trees can be constructed with different properties.",
        "summary": "One of the most common application is to efficiently store data in sorted form in order to access and search stored elements quickly. Binary tree as data structure is useful for various implementations of expression parsers and expression solvers. Generally, binary tree is a general concept of particular tree-based data structure and various specific types of binary trees can be constructed with different properties."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You cannot display an application window/dialog through a Context that is not an Activity. Try passing a valid activity reference",
        "output": "You cannot display an application window/dialog through a Context that is not an Activity.",
        "answer": "You cannot display an application window/dialog through a Context that is not an Activity. Try passing a valid activity reference",
        "summary": "You cannot display an application window/dialog through a Context that is not an Activity."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Specifying a default value would also work, assuming a default value is appropriate.",
        "output": "Specifying a default value would also work, assuming a default value is appropriate.",
        "answer": "Specifying a default value would also work, assuming a default value is appropriate.",
        "summary": "Specifying a default value would also work, assuming a default value is appropriate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It informs the C++ compiler to look up the names of those functions in a C-style when linking, because the names of functions compiled in C and C++ are different during the linking stage.",
        "output": "It informs the C++ compiler to look up the names of those functions in a C-style when linking, because the names of functions compiled in C and C++ are different during the linking stage.",
        "answer": "It informs the C++ compiler to look up the names of those functions in a C-style when linking, because the names of functions compiled in C and C++ are different during the linking stage.",
        "summary": "It informs the C++ compiler to look up the names of those functions in a C-style when linking, because the names of functions compiled in C and C++ are different during the linking stage."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's an ELSE in the DOS batch language? Back in the days when I did more of this kinda thing, there wasn't. If my theory is correct and your ELSE is being ignored, you may be better off doing ...which will also save you a line of code (the one right after your IF). Second, I vaguely remember some kind of bug with testing for the existence of directories. Life would be easier if you could test for the existence of a file in that directory. If there's no file you can be sure of, something to try (this used to work up to Win95, IIRC) would be to append the device file name <code>NUL</code> to your directory name, e.g.",
        "output": "If my theory is correct and your ELSE is being ignored, you may be better off doing ...which will also save you a line of code (the one right after your IF). Second, I vaguely remember some kind of bug with testing for the existence of directories.",
        "answer": "There's an ELSE in the DOS batch language? Back in the days when I did more of this kinda thing, there wasn't. If my theory is correct and your ELSE is being ignored, you may be better off doing ...which will also save you a line of code (the one right after your IF). Second, I vaguely remember some kind of bug with testing for the existence of directories. Life would be easier if you could test for the existence of a file in that directory. If there's no file you can be sure of, something to try (this used to work up to Win95, IIRC) would be to append the device file name <code>NUL</code> to your directory name, e.g.",
        "summary": "If my theory is correct and your ELSE is being ignored, you may be better off doing ...which will also save you a line of code (the one right after your IF). Second, I vaguely remember some kind of bug with testing for the existence of directories."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try adding a <code>datetime.datetime</code> to a <code>datetime.timedelta</code>. If you only want the time portion, you can call the <code>time()</code> method on the resultant <code>datetime.datetime</code> object to get it.",
        "output": "Try adding a <code>datetime.datetime</code> to a <code>datetime.timedelta</code>.",
        "answer": "Try adding a <code>datetime.datetime</code> to a <code>datetime.timedelta</code>. If you only want the time portion, you can call the <code>time()</code> method on the resultant <code>datetime.datetime</code> object to get it.",
        "summary": "Try adding a <code>datetime.datetime</code> to a <code>datetime.timedelta</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n for inserts it is always better to specify the column names see the following works fine, changing the table def to causes the error Msg 213, Level 16, State 1, Line 6  Insert Error: Column name or number of  supplied values does not match table  definition. But changing the above to works. You need to be more specific with the columns specified supply the structures and we can have a look",
        "output": "for inserts it is always better to specify the column names see the following works fine, changing the table def to causes the error You need to be more specific with the columns specified supply the structures and we can have a look",
        "answer": "for inserts it is always better to specify the column names see the following works fine, changing the table def to causes the error Msg 213, Level 16, State 1, Line 6  Insert Error: Column name or number of  supplied values does not match table  definition. But changing the above to works. You need to be more specific with the columns specified supply the structures and we can have a look",
        "summary": "for inserts it is always better to specify the column names see the following works fine, changing the table def to causes the error You need to be more specific with the columns specified supply the structures and we can have a look"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It converts the suffix to a Boolean value.",
        "output": "It converts the suffix to a Boolean value.",
        "answer": "It converts the suffix to a Boolean value.",
        "summary": "It converts the suffix to a Boolean value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is a method for converting from a GregorianCalendar to XMLGregorianCalendar; I'll leave the part of converting from a java.util.Date to GregorianCalendar as an exercise for you: EDIT: Slooow  :-)",
        "output": "Here is a method for converting from a GregorianCalendar to XMLGregorianCalendar; I'll leave the part of converting from a java.util.Date to GregorianCalendar as an exercise for you:",
        "answer": "Here is a method for converting from a GregorianCalendar to XMLGregorianCalendar; I'll leave the part of converting from a java.util.Date to GregorianCalendar as an exercise for you: EDIT: Slooow  :-)",
        "summary": "Here is a method for converting from a GregorianCalendar to XMLGregorianCalendar; I'll leave the part of converting from a java.util.Date to GregorianCalendar as an exercise for you:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a simple way to use custom fonts in <strong>iOS 4</strong>. <li>Add your font file (for example, <code>Chalkduster.ttf</code>) to <em>Resources</em> folder of the project in XCode. <li>Open <code>info.plist</code> and add a new key called <code>UIAppFonts</code>. The type of this key should be array. <li>Add your custom font name to this array including extension (<code>Chalkduster.ttf</code>). <li>Now you can use <code>[UIFont fontWithName:@\"Chalkduster\" size:16]</code> in your application. Unfortunately, IB doesn't allow to initialize labels with custom fonts. See this question to solve this problem. My favorite solution is to use custom <code>UILabel</code> subclass: BIGBLOCK",
        "output": "There is a simple way to use custom fonts in <strong>iOS 4</strong>. <li>Add your font file (for example, <code>Chalkduster.ttf</code>) to <em>Resources</em> folder of the project in XCode. <li>Open <code>info.plist</code> and add a new key called <code>UIAppFonts</code>. The type of this key should be array. <li>Add your custom font name to this array including extension (<code>Chalkduster.ttf</code>). <li>Now you can use <code>[UIFont fontWithName:@\"Chalkduster\" size:16]</code> in your application.",
        "answer": "There is a simple way to use custom fonts in <strong>iOS 4</strong>. <li>Add your font file (for example, <code>Chalkduster.ttf</code>) to <em>Resources</em> folder of the project in XCode. <li>Open <code>info.plist</code> and add a new key called <code>UIAppFonts</code>. The type of this key should be array. <li>Add your custom font name to this array including extension (<code>Chalkduster.ttf</code>). <li>Now you can use <code>[UIFont fontWithName:@\"Chalkduster\" size:16]</code> in your application. Unfortunately, IB doesn't allow to initialize labels with custom fonts. See this question to solve this problem. My favorite solution is to use custom <code>UILabel</code> subclass: BIGBLOCK",
        "summary": "There is a simple way to use custom fonts in <strong>iOS 4</strong>. <li>Add your font file (for example, <code>Chalkduster.ttf</code>) to <em>Resources</em> folder of the project in XCode. <li>Open <code>info.plist</code> and add a new key called <code>UIAppFonts</code>. The type of this key should be array. <li>Add your custom font name to this array including extension (<code>Chalkduster.ttf</code>). <li>Now you can use <code>[UIFont fontWithName:@\"Chalkduster\" size:16]</code> in your application."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Access modifiers <strong>public</strong> The type or member can be accessed by any other code in the same assembly or another assembly that references it. <strong>private</strong> The type or member can only be accessed by code in the same class or struct. <strong>protected</strong> The type or member can only be accessed by code in the same class or struct, or in a derived class. <strong>internal</strong> The type or member can be accessed by any code in the same assembly, but not from another assembly. <strong>protected internal</strong> The type or member can be accessed by any code in the same assembly, or by any derived class in another assembly. When <strong>no access modifier</strong> is set, a default access modifier is used. So there is always some form of access modifier even if it's not set. <strong>Static</strong> The static modifier on a class means that the class cannot be instantiated, and that all of its members are static. A static member has one version regardless of how many instances of its enclosing type are created. A static class is basically the same as a non-static class, but there is one difference: a static class cannot be externally instantiated. In other words, you cannot use the new keyword to create a variable of the class type. Because there is no instance variable, you access the members of a static class by using the class name itself. However, there is a such thing as a static constructor. Any class can have one of these, including static classes. They cannot be called directly &amp; cannot have parameters (other than any type parameters on the class itself). A static constructor is called automatically to initialize the class before the first instance is created or any static members are referenced. Looks like this: Static classes are often used as services, you can use them like so:",
        "output": "<strong>public</strong> The type or member can be accessed by any other code in the same assembly or another assembly that references it. <strong>private</strong> The type or member can only be accessed by code in the same class or struct. <strong>protected</strong> The type or member can only be accessed by code in the same class or struct, or in a derived class. <strong>internal</strong> The type or member can be accessed by any code in the same assembly, but not from another assembly. <strong>protected internal</strong> The type or member can be accessed by any code in the same assembly, or by any derived class in another assembly. When <strong>no access modifier</strong> is set, a default access modifier is used.",
        "answer": "Access modifiers <strong>public</strong> The type or member can be accessed by any other code in the same assembly or another assembly that references it. <strong>private</strong> The type or member can only be accessed by code in the same class or struct. <strong>protected</strong> The type or member can only be accessed by code in the same class or struct, or in a derived class. <strong>internal</strong> The type or member can be accessed by any code in the same assembly, but not from another assembly. <strong>protected internal</strong> The type or member can be accessed by any code in the same assembly, or by any derived class in another assembly. When <strong>no access modifier</strong> is set, a default access modifier is used. So there is always some form of access modifier even if it's not set. <strong>Static</strong> The static modifier on a class means that the class cannot be instantiated, and that all of its members are static. A static member has one version regardless of how many instances of its enclosing type are created. A static class is basically the same as a non-static class, but there is one difference: a static class cannot be externally instantiated. In other words, you cannot use the new keyword to create a variable of the class type. Because there is no instance variable, you access the members of a static class by using the class name itself. However, there is a such thing as a static constructor. Any class can have one of these, including static classes. They cannot be called directly &amp; cannot have parameters (other than any type parameters on the class itself). A static constructor is called automatically to initialize the class before the first instance is created or any static members are referenced. Looks like this: Static classes are often used as services, you can use them like so:",
        "summary": "<strong>public</strong> The type or member can be accessed by any other code in the same assembly or another assembly that references it. <strong>private</strong> The type or member can only be accessed by code in the same class or struct. <strong>protected</strong> The type or member can only be accessed by code in the same class or struct, or in a derived class. <strong>internal</strong> The type or member can be accessed by any code in the same assembly, but not from another assembly. <strong>protected internal</strong> The type or member can be accessed by any code in the same assembly, or by any derived class in another assembly. When <strong>no access modifier</strong> is set, a default access modifier is used."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Type it in one cell, copy that cell, select all the cells you want to fill, paste. Alternatively, type it in one cell, select the black square in the bottom-right of that cell, drag down.",
        "output": "Type it in one cell, copy that cell, select all the cells you want to fill, paste. Alternatively, type it in one cell, select the black square in the bottom-right of that cell, drag down.",
        "answer": "Type it in one cell, copy that cell, select all the cells you want to fill, paste. Alternatively, type it in one cell, select the black square in the bottom-right of that cell, drag down.",
        "summary": "Type it in one cell, copy that cell, select all the cells you want to fill, paste. Alternatively, type it in one cell, select the black square in the bottom-right of that cell, drag down."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can't. Interfaces define contracts that other objects implement and therefore have no state that needs to be initialized. If you have some state that needs to be initialized, you should consider using an abstract base class instead.",
        "output": "You can't. If you have some state that needs to be initialized, you should consider using an abstract base class instead.",
        "answer": "You can't. Interfaces define contracts that other objects implement and therefore have no state that needs to be initialized. If you have some state that needs to be initialized, you should consider using an abstract base class instead.",
        "summary": "You can't. If you have some state that needs to be initialized, you should consider using an abstract base class instead."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n should check out this option i suppose",
        "output": "should check out this option i suppose",
        "answer": "should check out this option i suppose",
        "summary": "should check out this option i suppose"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Slightly off-topic to your question, but it's probably worth mentioning anyway: Commons Lang has got some excellent methods you can use in overriding equals and hashcode. Check out EqualsBuilder.reflectionEquals(...) and HashCodeBuilder.reflectionHashCode(...). Saved me plenty of headache in the past - although of course if you just want to do \"equals\" on ID it may not fit your circumstances. I also agree that you should use the <code>@Override</code> annotation whenever you're overriding equals (or any other method).",
        "output": "Commons Lang has got some excellent methods you can use in overriding equals and hashcode. Check out EqualsBuilder.reflectionEquals(...) and HashCodeBuilder.reflectionHashCode(...). I also agree that you should use the <code>@Override</code> annotation whenever you're overriding equals (or any other method).",
        "answer": "Slightly off-topic to your question, but it's probably worth mentioning anyway: Commons Lang has got some excellent methods you can use in overriding equals and hashcode. Check out EqualsBuilder.reflectionEquals(...) and HashCodeBuilder.reflectionHashCode(...). Saved me plenty of headache in the past - although of course if you just want to do \"equals\" on ID it may not fit your circumstances. I also agree that you should use the <code>@Override</code> annotation whenever you're overriding equals (or any other method).",
        "summary": "Commons Lang has got some excellent methods you can use in overriding equals and hashcode. Check out EqualsBuilder.reflectionEquals(...) and HashCodeBuilder.reflectionHashCode(...). I also agree that you should use the <code>@Override</code> annotation whenever you're overriding equals (or any other method)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's essentially the access protection of the public and protected members of the base class in the derived class. With public inheritance, the derived class can see public and protected members of the base. With private inheritance, it can't. With protected, the derived class and any classes derived from that can see them.",
        "output": "With public inheritance, the derived class can see public and protected members of the base. With private inheritance, it can't. With protected, the derived class and any classes derived from that can see them.",
        "answer": "It's essentially the access protection of the public and protected members of the base class in the derived class. With public inheritance, the derived class can see public and protected members of the base. With private inheritance, it can't. With protected, the derived class and any classes derived from that can see them.",
        "summary": "With public inheritance, the derived class can see public and protected members of the base. With private inheritance, it can't. With protected, the derived class and any classes derived from that can see them."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>assert</code> will terminate the program (usually with a message quoting the assert statement) if its argument turns out to be false. It's commonly used during debugging to make the program fail more obviously if an unexpected condition occurs. For example: BIGBLOCK You can also add a more informative message to be displayed if it fails like so: BIGBLOCK Or else like this: BIGBLOCK When you're doing a release (non-debug) build, you can also remove the overhead of evaluating <code>assert</code> statements by defining the <code>NDEBUG</code> macro, usually with a compiler switch. The corollary of this is that your program should <em>never</em> rely on the assert macro running. BIGBLOCK From the combination of the program calling abort() and not being guaranteed to do anything, asserts should only be used to test things that the developer has assumed rather than, for example, the user entering a number rather than a letter (which should be handled by other means).",
        "output": "<code>assert</code> will terminate the program (usually with a message quoting the assert statement) if its argument turns out to be false. It's commonly used during debugging to make the program fail more obviously if an unexpected condition occurs. The corollary of this is that your program should <em>never</em> rely on the assert macro running. From the combination of the program calling abort() and not being guaranteed to do anything, asserts should only be used to test things that the developer has assumed rather than, for example, the user entering a number rather than a letter (which should be handled by other means).",
        "answer": "<code>assert</code> will terminate the program (usually with a message quoting the assert statement) if its argument turns out to be false. It's commonly used during debugging to make the program fail more obviously if an unexpected condition occurs. For example: BIGBLOCK You can also add a more informative message to be displayed if it fails like so: BIGBLOCK Or else like this: BIGBLOCK When you're doing a release (non-debug) build, you can also remove the overhead of evaluating <code>assert</code> statements by defining the <code>NDEBUG</code> macro, usually with a compiler switch. The corollary of this is that your program should <em>never</em> rely on the assert macro running. BIGBLOCK From the combination of the program calling abort() and not being guaranteed to do anything, asserts should only be used to test things that the developer has assumed rather than, for example, the user entering a number rather than a letter (which should be handled by other means).",
        "summary": "<code>assert</code> will terminate the program (usually with a message quoting the assert statement) if its argument turns out to be false. It's commonly used during debugging to make the program fail more obviously if an unexpected condition occurs. The corollary of this is that your program should <em>never</em> rely on the assert macro running. From the combination of the program calling abort() and not being guaranteed to do anything, asserts should only be used to test things that the developer has assumed rather than, for example, the user entering a number rather than a letter (which should be handled by other means)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>grep -v</code> is your friend: -v, --invert-match        select non-matching lines Also check out the related <code>-L</code> (the complement of <code>-l</code>). -L, --files-without-match only print FILE names containing no match",
        "output": "<code>grep -v</code> is your friend: Also check out the related <code>-L</code> (the complement of <code>-l</code>).",
        "answer": "<code>grep -v</code> is your friend: -v, --invert-match        select non-matching lines Also check out the related <code>-L</code> (the complement of <code>-l</code>). -L, --files-without-match only print FILE names containing no match",
        "summary": "<code>grep -v</code> is your friend: Also check out the related <code>-L</code> (the complement of <code>-l</code>)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Iteration. It creates a state machine \"under the covers\" that remembers where you were on each additional cycle of the function and picks up from there.",
        "output": "Iteration. It creates a state machine \"under the covers\" that remembers where you were on each additional cycle of the function and picks up from there.",
        "answer": "Iteration. It creates a state machine \"under the covers\" that remembers where you were on each additional cycle of the function and picks up from there.",
        "summary": "Iteration. It creates a state machine \"under the covers\" that remembers where you were on each additional cycle of the function and picks up from there."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>&lt;file&gt;</code> include tells the preprocessor to search in <code>-I</code> directories and in predefined directories first, then in the .c file's directory. The <code>\"file\"</code> include tells the preprocessor to search the source file's directory first, and then revert to <code>-I</code> and predefined. All destinations are searched anyway, only the order of search is different. The 2011 standard mostly discusses the include files in \"16.2 Source file inclusion\". 2 A preprocessing directive of the form <code># include &lt;h-char-sequence&gt; new-line</code> searches a sequence of implementation-defined places for a header identified uniquely by the   specified sequence between the &lt; and > delimiters, and causes the   replacement of that directive by the entire contents of the header.   How the places are specified or the header identified is   implementation-defined. 3 A preprocessing directive of the form <code># include \"q-char-sequence\" new-line</code> causes the replacement of that directive by the entire contents of the source file identified by the   specified sequence between the \" delimiters. The named source file is   searched for in an implementation-defined manner. If this search is   not supported, or if the search fails, the directive is reprocessed as   if it read <code># include &lt;h-char-sequence&gt; new-line</code> with the identical contained sequence (including > characters, if any) from the original directive. Note that <code>\"xxx\"</code> form degrades to <code>&lt;xxx&gt;</code> form if the file is not found. The rest is implementation-defined.",
        "output": "The <code>&lt;file&gt;</code> include tells the preprocessor to search in <code>-I</code> directories and in predefined directories first, then in the .c file's directory. The <code>\"file\"</code> include tells the preprocessor to search the source file's directory first, and then revert to <code>-I</code> and predefined. All destinations are searched anyway, only the order of search is different.",
        "answer": "The <code>&lt;file&gt;</code> include tells the preprocessor to search in <code>-I</code> directories and in predefined directories first, then in the .c file's directory. The <code>\"file\"</code> include tells the preprocessor to search the source file's directory first, and then revert to <code>-I</code> and predefined. All destinations are searched anyway, only the order of search is different. The 2011 standard mostly discusses the include files in \"16.2 Source file inclusion\". 2 A preprocessing directive of the form <code># include &lt;h-char-sequence&gt; new-line</code> searches a sequence of implementation-defined places for a header identified uniquely by the   specified sequence between the &lt; and > delimiters, and causes the   replacement of that directive by the entire contents of the header.   How the places are specified or the header identified is   implementation-defined. 3 A preprocessing directive of the form <code># include \"q-char-sequence\" new-line</code> causes the replacement of that directive by the entire contents of the source file identified by the   specified sequence between the \" delimiters. The named source file is   searched for in an implementation-defined manner. If this search is   not supported, or if the search fails, the directive is reprocessed as   if it read <code># include &lt;h-char-sequence&gt; new-line</code> with the identical contained sequence (including > characters, if any) from the original directive. Note that <code>\"xxx\"</code> form degrades to <code>&lt;xxx&gt;</code> form if the file is not found. The rest is implementation-defined.",
        "summary": "The <code>&lt;file&gt;</code> include tells the preprocessor to search in <code>-I</code> directories and in predefined directories first, then in the .c file's directory. The <code>\"file\"</code> include tells the preprocessor to search the source file's directory first, and then revert to <code>-I</code> and predefined. All destinations are searched anyway, only the order of search is different."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Because you can ask the server to append a prefix to the returned JSON object. E.g <code>function_prefix(json_object);</code> in order for the browser to <code>eval</code> \"inline\" the JSON string as an expression. This trick makes it possible for the server to \"inject\" javascript code directly in the Client browser and this with bypassing the \"same origin\" restrictions. In other words, you can have cross-domain data exchange. Normally, <code>XMLHttpRequest</code> doesn't permit cross-domain data-exchange directly (one needs to go through a server in the same domain) whereas: <code>&lt;script src=\"some_other_domain/some_data.js&amp;prefix=function_prefix</code>>` one can access data from a domain different than from the origin. Also worth noting: even though the server should be considered as \"trusted\" before attempting that sort of \"trick\", the side-effects of possible change in object format etc. can be contained. If a <code>function_prefix</code> (i.e. a proper js function) is used to receive the JSON object, the said function can perform checks before accepting/further processing the returned data.",
        "output": "In other words, you can have cross-domain data exchange.",
        "answer": "Because you can ask the server to append a prefix to the returned JSON object. E.g <code>function_prefix(json_object);</code> in order for the browser to <code>eval</code> \"inline\" the JSON string as an expression. This trick makes it possible for the server to \"inject\" javascript code directly in the Client browser and this with bypassing the \"same origin\" restrictions. In other words, you can have cross-domain data exchange. Normally, <code>XMLHttpRequest</code> doesn't permit cross-domain data-exchange directly (one needs to go through a server in the same domain) whereas: <code>&lt;script src=\"some_other_domain/some_data.js&amp;prefix=function_prefix</code>>` one can access data from a domain different than from the origin. Also worth noting: even though the server should be considered as \"trusted\" before attempting that sort of \"trick\", the side-effects of possible change in object format etc. can be contained. If a <code>function_prefix</code> (i.e. a proper js function) is used to receive the JSON object, the said function can perform checks before accepting/further processing the returned data.",
        "summary": "In other words, you can have cross-domain data exchange."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Two methods: Convert to PNG and make the original image 0.2 opacity (Better method) have a <code>&lt;div&gt;</code> that is <code>position: absolute;</code> before <code>#main</code> and the same height as <code>#main</code>, then apply the background-image and <code>opacity: 0.2; filter: alpha(opacity=20);</code>.",
        "output": "Convert to PNG and make the original image 0.2 opacity (Better method) have a <code>&lt;div&gt;</code> that is <code>position: absolute;</code> before <code>#main</code> and the same height as <code>#main</code>, then apply the background-image and <code>opacity: 0.2; filter: alpha(opacity=20);</code>.",
        "answer": "Two methods: Convert to PNG and make the original image 0.2 opacity (Better method) have a <code>&lt;div&gt;</code> that is <code>position: absolute;</code> before <code>#main</code> and the same height as <code>#main</code>, then apply the background-image and <code>opacity: 0.2; filter: alpha(opacity=20);</code>.",
        "summary": "Convert to PNG and make the original image 0.2 opacity (Better method) have a <code>&lt;div&gt;</code> that is <code>position: absolute;</code> before <code>#main</code> and the same height as <code>#main</code>, then apply the background-image and <code>opacity: 0.2; filter: alpha(opacity=20);</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Answer POSIX compatible: For <code>bash</code> specific environments: Explanation Avoid <code>which</code>. Not only is it an external process you're launching for doing very little (meaning builtins like <code>hash</code>, <code>type</code> or <code>command</code> are way cheaper), you can also rely on the builtins to actually do what you want, while the effects of external commands can easily vary from system to system. Why care? Many operating systems have a <code>which</code> that doesn't even set an exit status, meaning the <code>if which foo</code> won't even work there and will always report that <code>foo</code> exists, even if it doesn't (note that some POSIX shells appear to do this for <code>hash</code> too). Many operating systems make <code>which</code> do custom and evil stuff like change the output or even hook into the package manager. So, don't use <code>which</code>. Instead use one of these: (Minor side-note: some will suggest <code>2&gt;&amp;-</code> is the same <code>2&gt;/dev/null</code> but shorter Ã¨ÂÂÃ©Â©Â´?this is untrue. <code>2&gt;&amp;-</code> closes FD 2 which causes an error in the program when it tries to write to stderr, which is very different from successfully writing to it and discarding the output (and dangerous!)) If your hash bang is <code>/bin/sh</code> then you should care about what POSIX says. <code>type</code> and <code>hash</code>'s exit codes aren't terribly well defined by POSIX, and <code>hash</code> is seen to exit successfully when the command doesn't exist (haven't seen this with <code>type</code> yet). <code>command</code>'s exit status is well defined by POSIX, so that one is probably the safest to use. If your script uses <code>bash</code> though, POSIX rules don't really matter anymore and both <code>type</code> and <code>hash</code> become perfectly safe to use. <code>type</code> now has a <code>-P</code> to search just the <code>PATH</code> and <code>hash</code> has the side-effect that the command's location will be hashed (for faster lookup next time you use it), which is usually a good thing since you probably check for its existence in order to actually use it. As a simple example, here's a function that runs <code>gdate</code> if it exists, otherwise <code>date</code>:",
        "output": "POSIX compatible: For <code>bash</code> specific environments:",
        "answer": "Answer POSIX compatible: For <code>bash</code> specific environments: Explanation Avoid <code>which</code>. Not only is it an external process you're launching for doing very little (meaning builtins like <code>hash</code>, <code>type</code> or <code>command</code> are way cheaper), you can also rely on the builtins to actually do what you want, while the effects of external commands can easily vary from system to system. Why care? Many operating systems have a <code>which</code> that doesn't even set an exit status, meaning the <code>if which foo</code> won't even work there and will always report that <code>foo</code> exists, even if it doesn't (note that some POSIX shells appear to do this for <code>hash</code> too). Many operating systems make <code>which</code> do custom and evil stuff like change the output or even hook into the package manager. So, don't use <code>which</code>. Instead use one of these: (Minor side-note: some will suggest <code>2&gt;&amp;-</code> is the same <code>2&gt;/dev/null</code> but shorter Ã¨ÂÂÃ©Â©Â´?this is untrue. <code>2&gt;&amp;-</code> closes FD 2 which causes an error in the program when it tries to write to stderr, which is very different from successfully writing to it and discarding the output (and dangerous!)) If your hash bang is <code>/bin/sh</code> then you should care about what POSIX says. <code>type</code> and <code>hash</code>'s exit codes aren't terribly well defined by POSIX, and <code>hash</code> is seen to exit successfully when the command doesn't exist (haven't seen this with <code>type</code> yet). <code>command</code>'s exit status is well defined by POSIX, so that one is probably the safest to use. If your script uses <code>bash</code> though, POSIX rules don't really matter anymore and both <code>type</code> and <code>hash</code> become perfectly safe to use. <code>type</code> now has a <code>-P</code> to search just the <code>PATH</code> and <code>hash</code> has the side-effect that the command's location will be hashed (for faster lookup next time you use it), which is usually a good thing since you probably check for its existence in order to actually use it. As a simple example, here's a function that runs <code>gdate</code> if it exists, otherwise <code>date</code>:",
        "summary": "POSIX compatible: For <code>bash</code> specific environments:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Since every object in JS behaves like - and is generally implemented as - a hashtable, i just go with that...",
        "output": "Since every object in JS behaves like - and is generally implemented as - a hashtable, i just go with that...",
        "answer": "Since every object in JS behaves like - and is generally implemented as - a hashtable, i just go with that...",
        "summary": "Since every object in JS behaves like - and is generally implemented as - a hashtable, i just go with that..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is a very simple and easy way to create an enumerable for your object. The compiler creates a class that wraps your method and that implements, in this case, IEnumerable&lt;object>. Without the yield keyword, you'd have to create an object that implements IEnumerable&lt;object>.",
        "output": "It is a very simple and easy way to create an enumerable for your object. Without the yield keyword, you'd have to create an object that implements IEnumerable&lt;object>.",
        "answer": "It is a very simple and easy way to create an enumerable for your object. The compiler creates a class that wraps your method and that implements, in this case, IEnumerable&lt;object>. Without the yield keyword, you'd have to create an object that implements IEnumerable&lt;object>.",
        "summary": "It is a very simple and easy way to create an enumerable for your object. Without the yield keyword, you'd have to create an object that implements IEnumerable&lt;object>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n My suggestion That seems to have the year changing on the right date. (I spot tested up to age 107)",
        "output": "My suggestion",
        "answer": "My suggestion That seems to have the year changing on the right date. (I spot tested up to age 107)",
        "summary": "My suggestion"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is how I do it: <li>Go to first character on the first line you want to comment out. <li>Hit Ctrl+q in GVIM or Ctrl+v in VIM, then go down to select first character on the lines to comment out. <li>Then press c, and add the comment character. Uncommenting works the same way, just type a space instead of the comment character.",
        "output": "<li>Go to first character on the first line you want to comment out. <li>Hit Ctrl+q in GVIM or Ctrl+v in VIM, then go down to select first character on the lines to comment out. <li>Then press c, and add the comment character.",
        "answer": "Here is how I do it: <li>Go to first character on the first line you want to comment out. <li>Hit Ctrl+q in GVIM or Ctrl+v in VIM, then go down to select first character on the lines to comment out. <li>Then press c, and add the comment character. Uncommenting works the same way, just type a space instead of the comment character.",
        "summary": "<li>Go to first character on the first line you want to comment out. <li>Hit Ctrl+q in GVIM or Ctrl+v in VIM, then go down to select first character on the lines to comment out. <li>Then press c, and add the comment character."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Simply cleaning the project has worked for me every time this error has come up.",
        "output": "Simply cleaning the project has worked for me every time this error has come up.",
        "answer": "Simply cleaning the project has worked for me every time this error has come up.",
        "summary": "Simply cleaning the project has worked for me every time this error has come up."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n http://www.digizol.com/2008/09/eclipse-access-restriction-on-library.html worked best for me. <strong>On Windows:</strong> Windows -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning <strong>On Mac OS X/Linux:</strong> Eclipse -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning",
        "output": "<strong>On Windows:</strong> Windows -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning <strong>On Mac OS X/Linux:</strong> Eclipse -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning",
        "answer": "http://www.digizol.com/2008/09/eclipse-access-restriction-on-library.html worked best for me. <strong>On Windows:</strong> Windows -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning <strong>On Mac OS X/Linux:</strong> Eclipse -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning",
        "summary": "<strong>On Windows:</strong> Windows -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning <strong>On Mac OS X/Linux:</strong> Eclipse -> Preferences -> Java -> Compiler -> Errors/Warnings-> Deprecated and restricted API -> Forbidden reference (access rules): -> change to warning"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Client-side validation was not being executed at all on my web form and I had no idea why. It turns out the problem was the name of the javascript function was the same as the server control ID. So you can't do this... But this works: I'm guessing it conflicts with internal .NET Javascript?",
        "output": "It turns out the problem was the name of the javascript function was the same as the server control ID. So you can't do this... But this works:",
        "answer": "Client-side validation was not being executed at all on my web form and I had no idea why. It turns out the problem was the name of the javascript function was the same as the server control ID. So you can't do this... But this works: I'm guessing it conflicts with internal .NET Javascript?",
        "summary": "It turns out the problem was the name of the javascript function was the same as the server control ID. So you can't do this... But this works:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 'Best way' aside some usual ways of retrieving a single record from the database with PHP go like that: with mysqli BIGBLOCK with Zend Framework //Inside the table class BIGBLOCK",
        "output": "with mysqli BIGBLOCK with Zend Framework BIGBLOCK",
        "answer": "'Best way' aside some usual ways of retrieving a single record from the database with PHP go like that: with mysqli BIGBLOCK with Zend Framework //Inside the table class BIGBLOCK",
        "summary": "with mysqli BIGBLOCK with Zend Framework BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just return an object literal",
        "output": "Just return an object literal",
        "answer": "Just return an object literal",
        "summary": "Just return an object literal"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Regex if you want to ensure URL starts with HTTP/HTTPS: If you do not require HTTP protocol: To try this out see http://regexr.com?37i6s, or for a version which is less restrictive http://regexr.com/3e6m0. Example JavaScript implementation:",
        "output": "Regex if you want to ensure URL starts with HTTP/HTTPS: If you do not require HTTP protocol:",
        "answer": "Regex if you want to ensure URL starts with HTTP/HTTPS: If you do not require HTTP protocol: To try this out see http://regexr.com?37i6s, or for a version which is less restrictive http://regexr.com/3e6m0. Example JavaScript implementation:",
        "summary": "Regex if you want to ensure URL starts with HTTP/HTTPS: If you do not require HTTP protocol:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want to print key and value, use the following:",
        "output": "If you want to print key and value, use the following:",
        "answer": "If you want to print key and value, use the following:",
        "summary": "If you want to print key and value, use the following:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Creating generators objects</strong> If you write you can get out the generator and assign it to x. Now it means you can do The advantage of this is that you don't need intermediate storage, which you would need if you did In some cases this can lead to significant speed up. You can append many if statements to the end of the generator, basically replicating nested for loops:",
        "output": "<strong>Creating generators objects</strong>",
        "answer": "<strong>Creating generators objects</strong> If you write you can get out the generator and assign it to x. Now it means you can do The advantage of this is that you don't need intermediate storage, which you would need if you did In some cases this can lead to significant speed up. You can append many if statements to the end of the generator, basically replicating nested for loops:",
        "summary": "<strong>Creating generators objects</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The  <code>which</code> command might be useful. man which It returns 0 if the executable is found, 1 if it's not found or not executable: Nice thing about which is that it figures out if the executable is available in the environment that which is run in - saves a few problems... -Adam",
        "output": "The  <code>which</code> command might be useful.",
        "answer": "The  <code>which</code> command might be useful. man which It returns 0 if the executable is found, 1 if it's not found or not executable: Nice thing about which is that it figures out if the executable is available in the environment that which is run in - saves a few problems... -Adam",
        "summary": "The  <code>which</code> command might be useful."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use a HTML DTD, and the generic XML parsing libraries.",
        "output": "You could use a HTML DTD, and the generic XML parsing libraries.",
        "answer": "You could use a HTML DTD, and the generic XML parsing libraries.",
        "summary": "You could use a HTML DTD, and the generic XML parsing libraries."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Public inheritance models an IS-A relationship. With every <code>D</code> <em>is a</em> <code>B</code>. Private inheritance models an IS-IMPLEMENTED-USING relationship (or whatever that's called). With a <code>D</code> is <em>not</em> a <code>B</code>, but every <code>D</code> uses its <code>B</code> in its implementation. Private inheritance can always be eliminated by using containment instead: This <code>D</code>, too, can be implemented using <code>B</code>, in this case using its <code>b_</code>. Containment is a less tight coupling between types than inheritance, so in general it should be preferred. Sometimes using containment instead of private inheritance is not as convenient as private inheritance. Often that's a lame excuse for being lazy. I don't think anyone knows what <code>protected</code> inheritance models. At least I haven't seen any convincing explanation yet.",
        "output": "Public inheritance models an IS-A relationship. Private inheritance models an IS-IMPLEMENTED-USING relationship (or whatever that's called). Private inheritance can always be eliminated by using containment instead:",
        "answer": "Public inheritance models an IS-A relationship. With every <code>D</code> <em>is a</em> <code>B</code>. Private inheritance models an IS-IMPLEMENTED-USING relationship (or whatever that's called). With a <code>D</code> is <em>not</em> a <code>B</code>, but every <code>D</code> uses its <code>B</code> in its implementation. Private inheritance can always be eliminated by using containment instead: This <code>D</code>, too, can be implemented using <code>B</code>, in this case using its <code>b_</code>. Containment is a less tight coupling between types than inheritance, so in general it should be preferred. Sometimes using containment instead of private inheritance is not as convenient as private inheritance. Often that's a lame excuse for being lazy. I don't think anyone knows what <code>protected</code> inheritance models. At least I haven't seen any convincing explanation yet.",
        "summary": "Public inheritance models an IS-A relationship. Private inheritance models an IS-IMPLEMENTED-USING relationship (or whatever that's called). Private inheritance can always be eliminated by using containment instead:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In addition to the others mentioned, one of the string constructors take a char and the number of repetitions for that char. So you can use that to append a single char.",
        "output": "In addition to the others mentioned, one of the string constructors take a char and the number of repetitions for that char.",
        "answer": "In addition to the others mentioned, one of the string constructors take a char and the number of repetitions for that char. So you can use that to append a single char.",
        "summary": "In addition to the others mentioned, one of the string constructors take a char and the number of repetitions for that char."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For windows, unix, or Mac? On the Mac or *nix you can use command line or GUI versions of emacs or vim. For the Mac: TextWrangler to handle big files well. I'm not versed enough on the Windows landscape to help out there.",
        "output": "On the Mac or *nix you can use command line or GUI versions of emacs or vim. For the Mac: TextWrangler to handle big files well.",
        "answer": "For windows, unix, or Mac? On the Mac or *nix you can use command line or GUI versions of emacs or vim. For the Mac: TextWrangler to handle big files well. I'm not versed enough on the Windows landscape to help out there.",
        "summary": "On the Mac or *nix you can use command line or GUI versions of emacs or vim. For the Mac: TextWrangler to handle big files well."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes. I recommend you check out Kimberly Tripp's articles on indexing. If an index is \"covering\", then there is no need to use anything but the index. In SQL Server 2005, you can also add additional columns to the index that are not part of the key which can eliminate trips to the rest of the row. Having multiple indexes, each on a single column may mean that only one index gets used at all - you will have to refer to the execution plan to see what effects different indexing schemes offer. You can also use the tuning wizard to help determine what indexes would make a given query or workload perform the best.",
        "output": "If an index is \"covering\", then there is no need to use anything but the index. Having multiple indexes, each on a single column may mean that only one index gets used at all - you will have to refer to the execution plan to see what effects different indexing schemes offer. You can also use the tuning wizard to help determine what indexes would make a given query or workload perform the best.",
        "answer": "Yes. I recommend you check out Kimberly Tripp's articles on indexing. If an index is \"covering\", then there is no need to use anything but the index. In SQL Server 2005, you can also add additional columns to the index that are not part of the key which can eliminate trips to the rest of the row. Having multiple indexes, each on a single column may mean that only one index gets used at all - you will have to refer to the execution plan to see what effects different indexing schemes offer. You can also use the tuning wizard to help determine what indexes would make a given query or workload perform the best.",
        "summary": "If an index is \"covering\", then there is no need to use anything but the index. Having multiple indexes, each on a single column may mean that only one index gets used at all - you will have to refer to the execution plan to see what effects different indexing schemes offer. You can also use the tuning wizard to help determine what indexes would make a given query or workload perform the best."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The simplest way I've ever found is this. It works correctly for the US and western europe locales. Can't speak to other locales, especially places like China. 4 extra compares, at most, following the initial computation of age. I was looking over the answers to this and noticed that nobody has made reference to regulatory/legal implications of leap day births. For instance, per Wikipedia, if you're born on February 29th in various jurisdictions, you're non-leap year birthday varies: In the United Kingdom and Hong Kong: it's the ordinal day of the year, so the next day, March 1st is your birthday. In New Zealand: it's the previous day, February 28th for the purposes of driver licencing, and March 1st for other purposes. Taiwan: it's February 28th. And as near as I can tell, in the US, the statutes are silent on the matter, leaving it up to the common law and to how various regulatory bodies define things in their regulations. To that end, an improvement: It should be noted that this code assumes: A western (European) reckoning of age, and A calendar, like the Gregorian calendar that inserts a single leap day at the end of a month.",
        "output": "The simplest way I've ever found is this.",
        "answer": "The simplest way I've ever found is this. It works correctly for the US and western europe locales. Can't speak to other locales, especially places like China. 4 extra compares, at most, following the initial computation of age. I was looking over the answers to this and noticed that nobody has made reference to regulatory/legal implications of leap day births. For instance, per Wikipedia, if you're born on February 29th in various jurisdictions, you're non-leap year birthday varies: In the United Kingdom and Hong Kong: it's the ordinal day of the year, so the next day, March 1st is your birthday. In New Zealand: it's the previous day, February 28th for the purposes of driver licencing, and March 1st for other purposes. Taiwan: it's February 28th. And as near as I can tell, in the US, the statutes are silent on the matter, leaving it up to the common law and to how various regulatory bodies define things in their regulations. To that end, an improvement: It should be noted that this code assumes: A western (European) reckoning of age, and A calendar, like the Gregorian calendar that inserts a single leap day at the end of a month.",
        "summary": "The simplest way I've ever found is this."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The interviewers are barking up an odd tree. For languages like C# and Java, there is a difference, but in other languages like C++ there is not. OO theory doesn't differentiate the two, merely the syntax of language. An abstract class is a class with both implementation and interface (pure virtual methods) that will be inherited. Interfaces generally do not have any implementation but only pure virtual functions. In C# or Java an abstract class without any implementation differs from an interface only in the syntax used to inherit from it and the fact you can only inherit from one.",
        "output": "For languages like C# and Java, there is a difference, but in other languages like C++ there is not. OO theory doesn't differentiate the two, merely the syntax of language. An abstract class is a class with both implementation and interface (pure virtual methods) that will be inherited. Interfaces generally do not have any implementation but only pure virtual functions.",
        "answer": "The interviewers are barking up an odd tree. For languages like C# and Java, there is a difference, but in other languages like C++ there is not. OO theory doesn't differentiate the two, merely the syntax of language. An abstract class is a class with both implementation and interface (pure virtual methods) that will be inherited. Interfaces generally do not have any implementation but only pure virtual functions. In C# or Java an abstract class without any implementation differs from an interface only in the syntax used to inherit from it and the fact you can only inherit from one.",
        "summary": "For languages like C# and Java, there is a difference, but in other languages like C++ there is not. OO theory doesn't differentiate the two, merely the syntax of language. An abstract class is a class with both implementation and interface (pure virtual methods) that will be inherited. Interfaces generally do not have any implementation but only pure virtual functions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have found that sometimes I get a NoClassDefFound error when code is compiled with an incompatible version of the class found at runtime. The specific instance I recall is with the apache axis library. There were actually 2 versions on my runtime classpath and it was picking up the out of date and incompatible version and not the correct one, causing a NoClassDefFound error. This was in a command line app where I was using a command similar to this. I was able to get it to pick up the proper version by using:",
        "output": "The specific instance I recall is with the apache axis library. There were actually 2 versions on my runtime classpath and it was picking up the out of date and incompatible version and not the correct one, causing a NoClassDefFound error. I was able to get it to pick up the proper version by using:",
        "answer": "I have found that sometimes I get a NoClassDefFound error when code is compiled with an incompatible version of the class found at runtime. The specific instance I recall is with the apache axis library. There were actually 2 versions on my runtime classpath and it was picking up the out of date and incompatible version and not the correct one, causing a NoClassDefFound error. This was in a command line app where I was using a command similar to this. I was able to get it to pick up the proper version by using:",
        "summary": "The specific instance I recall is with the apache axis library. There were actually 2 versions on my runtime classpath and it was picking up the out of date and incompatible version and not the correct one, causing a NoClassDefFound error. I was able to get it to pick up the proper version by using:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The only \"big\" difference between POST &amp; GET (when using them with AJAX) is since GET is URL provided, they are limited in ther length (since URL arent infinite in length).",
        "output": "The only \"big\" difference between POST &amp; GET (when using them with AJAX) is since GET is URL provided, they are limited in ther length (since URL arent infinite in length).",
        "answer": "The only \"big\" difference between POST &amp; GET (when using them with AJAX) is since GET is URL provided, they are limited in ther length (since URL arent infinite in length).",
        "summary": "The only \"big\" difference between POST &amp; GET (when using them with AJAX) is since GET is URL provided, they are limited in ther length (since URL arent infinite in length)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVVM is a refinement (debatable) of the Presentation Model pattern. I say debatable, because the only difference is in how WPF provides the ability to do data binding and command handling.",
        "output": "MVVM is a refinement (debatable) of the Presentation Model pattern. I say debatable, because the only difference is in how WPF provides the ability to do data binding and command handling.",
        "answer": "MVVM is a refinement (debatable) of the Presentation Model pattern. I say debatable, because the only difference is in how WPF provides the ability to do data binding and command handling.",
        "summary": "MVVM is a refinement (debatable) of the Presentation Model pattern. I say debatable, because the only difference is in how WPF provides the ability to do data binding and command handling."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's one <strong>huge</strong> difference between <em>git</em> and <em>mercurial</em>; the way the represent each commit. <em>git</em> represents commits as snapshots, while <em>mercurial</em> represents them as diffs. What does this means in practice? Well, many operations are faster in git, such as switching to another commit, comparing commits, etc. Specially if these commits are far away. AFAIK there's no advantage of mercurial's approach.",
        "output": "There's one <strong>huge</strong> difference between <em>git</em> and <em>mercurial</em>; the way the represent each commit. <em>git</em> represents commits as snapshots, while <em>mercurial</em> represents them as diffs.",
        "answer": "There's one <strong>huge</strong> difference between <em>git</em> and <em>mercurial</em>; the way the represent each commit. <em>git</em> represents commits as snapshots, while <em>mercurial</em> represents them as diffs. What does this means in practice? Well, many operations are faster in git, such as switching to another commit, comparing commits, etc. Specially if these commits are far away. AFAIK there's no advantage of mercurial's approach.",
        "summary": "There's one <strong>huge</strong> difference between <em>git</em> and <em>mercurial</em>; the way the represent each commit. <em>git</em> represents commits as snapshots, while <em>mercurial</em> represents them as diffs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I, personally, almost always use User Defined functions for this if dealing with SQL Server 2005 (or lower version), however, it should be noted that there are specific drawbacks to using UDF's, especially if applying them to WHERE clauses (see below and the comments on this answer for further details). If using SQL Server 2008 (or higher) - see below. In fact, for most databases that I create, I add these UDF's in right near the start since I know there's a 99% chance I'm going to need them sooner or later. I create one for \"date only\" &amp; \"time only\" (although the \"date only\" one is by far the most used of the two). Here's some links to a variety of date-related UDF's: Essential SQL Server Date, Time and DateTime Functions Get Date Only Function That last link shows no less than 3 different ways to getting the date only part of a datetime field and mentions some pros and cons of each approach. If using a UDF, it should be noted that you should try to avoid using the UDF as part of a WHERE clause in a query as this will greatly hinder performance of the query. The main reason for this is that using a UDF in a WHERE clause renders that clause as non-sargable, which means that SQL Server can no longer use an index with that clause in order to improve the speed of query execution. With reference to my own usage of UDF's, I'll frequently use the \"raw\" date column within the WHERE clause, but apply the UDF to the SELECTed column. In this way, the UDF is only applied to the filtered result-set and not every row of the table as part of the filter. Of course, the absolute <em>best</em> approach for this is to use SQL Server 2008 (or higher) and separate out your dates and times, as the SQL Server database engine is then natively providing the individual date and time components, and can efficiently query these independently without the need for a UDF or other mechanism to extract either the date or time part from a composite datetime type.",
        "output": "I, personally, almost always use User Defined functions for this if dealing with SQL Server 2005 (or lower version), however, it should be noted that there are specific drawbacks to using UDF's, especially if applying them to WHERE clauses (see below and the comments on this answer for further details). If using SQL Server 2008 (or higher) - see below. If using a UDF, it should be noted that you should try to avoid using the UDF as part of a WHERE clause in a query as this will greatly hinder performance of the query. The main reason for this is that using a UDF in a WHERE clause renders that clause as non-sargable, which means that SQL Server can no longer use an index with that clause in order to improve the speed of query execution. Of course, the absolute <em>best</em> approach for this is to use SQL Server 2008 (or higher) and separate out your dates and times, as the SQL Server database engine is then natively providing the individual date and time components, and can efficiently query these independently without the need for a UDF or other mechanism to extract either the date or time part from a composite datetime type.",
        "answer": "I, personally, almost always use User Defined functions for this if dealing with SQL Server 2005 (or lower version), however, it should be noted that there are specific drawbacks to using UDF's, especially if applying them to WHERE clauses (see below and the comments on this answer for further details). If using SQL Server 2008 (or higher) - see below. In fact, for most databases that I create, I add these UDF's in right near the start since I know there's a 99% chance I'm going to need them sooner or later. I create one for \"date only\" &amp; \"time only\" (although the \"date only\" one is by far the most used of the two). Here's some links to a variety of date-related UDF's: Essential SQL Server Date, Time and DateTime Functions Get Date Only Function That last link shows no less than 3 different ways to getting the date only part of a datetime field and mentions some pros and cons of each approach. If using a UDF, it should be noted that you should try to avoid using the UDF as part of a WHERE clause in a query as this will greatly hinder performance of the query. The main reason for this is that using a UDF in a WHERE clause renders that clause as non-sargable, which means that SQL Server can no longer use an index with that clause in order to improve the speed of query execution. With reference to my own usage of UDF's, I'll frequently use the \"raw\" date column within the WHERE clause, but apply the UDF to the SELECTed column. In this way, the UDF is only applied to the filtered result-set and not every row of the table as part of the filter. Of course, the absolute <em>best</em> approach for this is to use SQL Server 2008 (or higher) and separate out your dates and times, as the SQL Server database engine is then natively providing the individual date and time components, and can efficiently query these independently without the need for a UDF or other mechanism to extract either the date or time part from a composite datetime type.",
        "summary": "I, personally, almost always use User Defined functions for this if dealing with SQL Server 2005 (or lower version), however, it should be noted that there are specific drawbacks to using UDF's, especially if applying them to WHERE clauses (see below and the comments on this answer for further details). If using SQL Server 2008 (or higher) - see below. If using a UDF, it should be noted that you should try to avoid using the UDF as part of a WHERE clause in a query as this will greatly hinder performance of the query. The main reason for this is that using a UDF in a WHERE clause renders that clause as non-sargable, which means that SQL Server can no longer use an index with that clause in order to improve the speed of query execution. Of course, the absolute <em>best</em> approach for this is to use SQL Server 2008 (or higher) and separate out your dates and times, as the SQL Server database engine is then natively providing the individual date and time components, and can efficiently query these independently without the need for a UDF or other mechanism to extract either the date or time part from a composite datetime type."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To eliminate spaces at the beginning and at the end of the String, use <code>String#trim()</code> method. And then use your <code>mytext.replaceAll(\"( )+\", \" \")</code>.",
        "output": "To eliminate spaces at the beginning and at the end of the String, use <code>String#trim()</code> method.",
        "answer": "To eliminate spaces at the beginning and at the end of the String, use <code>String#trim()</code> method. And then use your <code>mytext.replaceAll(\"( )+\", \" \")</code>.",
        "summary": "To eliminate spaces at the beginning and at the end of the String, use <code>String#trim()</code> method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism in coding terms is when your object can exist as multiple types through inheritance etc. If you create a class named \"Shape\" which defines the number of sides your object has then you can then create a new class which inherits it such as \"Square\". When you subsequently make an instance of \"Square\" you can then cast it back and forward from \"Shape\" to \"Square\" as required.",
        "output": "Polymorphism in coding terms is when your object can exist as multiple types through inheritance etc.",
        "answer": "Polymorphism in coding terms is when your object can exist as multiple types through inheritance etc. If you create a class named \"Shape\" which defines the number of sides your object has then you can then create a new class which inherits it such as \"Square\". When you subsequently make an instance of \"Square\" you can then cast it back and forward from \"Shape\" to \"Square\" as required.",
        "summary": "Polymorphism in coding terms is when your object can exist as multiple types through inheritance etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A List is an ordered grouping of items A Set is an unordered grouping of items with no duplicates allowed (usually) Conceptually we usually refer to an unordered grouping that allows duplicates as a Bag and doesn't allow duplicates is a Set.",
        "output": "A List is an ordered grouping of items A Set is an unordered grouping of items with no duplicates allowed (usually)",
        "answer": "A List is an ordered grouping of items A Set is an unordered grouping of items with no duplicates allowed (usually) Conceptually we usually refer to an unordered grouping that allows duplicates as a Bag and doesn't allow duplicates is a Set.",
        "summary": "A List is an ordered grouping of items A Set is an unordered grouping of items with no duplicates allowed (usually)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In short, it is a scripting notation for passing data about. In some ways an alternative to XML, natively supporting basic data types, arrays and associative arrays (name-value pairs, called Objects because that is what they represent). The syntax is that used in JavaScript and JSON itself stands for \"JavaScript Object Notation\". However it has become portable and is used in other languages too. A useful link for detail is here: http://secretgeek.net/json_3mins.asp",
        "output": "In short, it is a scripting notation for passing data about. In some ways an alternative to XML, natively supporting basic data types, arrays and associative arrays (name-value pairs, called Objects because that is what they represent). The syntax is that used in JavaScript and JSON itself stands for \"JavaScript Object Notation\".",
        "answer": "In short, it is a scripting notation for passing data about. In some ways an alternative to XML, natively supporting basic data types, arrays and associative arrays (name-value pairs, called Objects because that is what they represent). The syntax is that used in JavaScript and JSON itself stands for \"JavaScript Object Notation\". However it has become portable and is used in other languages too. A useful link for detail is here: http://secretgeek.net/json_3mins.asp",
        "summary": "In short, it is a scripting notation for passing data about. In some ways an alternative to XML, natively supporting basic data types, arrays and associative arrays (name-value pairs, called Objects because that is what they represent). The syntax is that used in JavaScript and JSON itself stands for \"JavaScript Object Notation\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Usually this refers the the ability for an object of type A to behave like an object of type B. In object oriented programming this is usually achieve by inheritance. Some wikipedia links to read more: Polymorphism in object oriented programming Type polymorphism EDIT: fixed broken links.",
        "output": "Usually this refers the the ability for an object of type A to behave like an object of type B. In object oriented programming this is usually achieve by inheritance.",
        "answer": "Usually this refers the the ability for an object of type A to behave like an object of type B. In object oriented programming this is usually achieve by inheritance. Some wikipedia links to read more: Polymorphism in object oriented programming Type polymorphism EDIT: fixed broken links.",
        "summary": "Usually this refers the the ability for an object of type A to behave like an object of type B. In object oriented programming this is usually achieve by inheritance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>signed char</code> has range -128 to 127; <code>unsigned char</code> has range 0 to 255. <code>char</code> will be equivalent to either signed char or unsigned char, depending on the compiler, but is a distinct type. If you're using C-style strings, just use <code>char</code>. If you need to use chars for arithmetic (pretty rare), specify signed or unsigned explicitly for portability.",
        "output": "<code>signed char</code> has range -128 to 127; <code>unsigned char</code> has range 0 to 255.",
        "answer": "<code>signed char</code> has range -128 to 127; <code>unsigned char</code> has range 0 to 255. <code>char</code> will be equivalent to either signed char or unsigned char, depending on the compiler, but is a distinct type. If you're using C-style strings, just use <code>char</code>. If you need to use chars for arithmetic (pretty rare), specify signed or unsigned explicitly for portability.",
        "summary": "<code>signed char</code> has range -128 to 127; <code>unsigned char</code> has range 0 to 255."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The link you gave seems to be attempting something different to the test you are trying to avoid repeating. tests if the string is an empty string or null. The article you linked to tests if the string consists entirely of whitespace (or is empty). The test you described can be replaced by: Because in javascript, an empty string, and null, both evaluate to false in a boolean context.",
        "output": "The test you described can be replaced by:",
        "answer": "The link you gave seems to be attempting something different to the test you are trying to avoid repeating. tests if the string is an empty string or null. The article you linked to tests if the string consists entirely of whitespace (or is empty). The test you described can be replaced by: Because in javascript, an empty string, and null, both evaluate to false in a boolean context.",
        "summary": "The test you described can be replaced by:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The big difference is on Windows. Mercurial is supported natively, Git isn't. You can get very similar hosting to github.com with bitbucket.org (actually even better as you get a free private repository). I was using msysGit for a while but moved to Mercurial and been very happy with it.",
        "output": "The big difference is on Windows. Mercurial is supported natively, Git isn't.",
        "answer": "The big difference is on Windows. Mercurial is supported natively, Git isn't. You can get very similar hosting to github.com with bitbucket.org (actually even better as you get a free private repository). I was using msysGit for a while but moved to Mercurial and been very happy with it.",
        "summary": "The big difference is on Windows. Mercurial is supported natively, Git isn't."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is some HTML that demonstrates how <code>padding</code> and <code>margin</code> affect clickability, and background filling. An object receives clicks to its padding, but clicks on an objects margin'd area go to its parent. <code>$(\".outer\").click(function(e) { console.log(\"outer\"); e.stopPropagation(); }); $(\".inner\").click(function(e) { console.log(\"inner\"); e.stopPropagation(); });</code> <code>.outer { padding: 10px; background: red; } .inner { margin: 10px; padding: 10px; background: blue; border: solid white 1px; }</code> <code>&lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt; &lt;div class=\"outer\"&gt; &lt;div class=\"inner\" style=\"position:relative; height:0px; width:0px\"&gt; &lt;/div&gt; &lt;/div&gt;</code>",
        "output": "An object receives clicks to its padding, but clicks on an objects margin'd area go to its parent.",
        "answer": "Here is some HTML that demonstrates how <code>padding</code> and <code>margin</code> affect clickability, and background filling. An object receives clicks to its padding, but clicks on an objects margin'd area go to its parent. <code>$(\".outer\").click(function(e) { console.log(\"outer\"); e.stopPropagation(); }); $(\".inner\").click(function(e) { console.log(\"inner\"); e.stopPropagation(); });</code> <code>.outer { padding: 10px; background: red; } .inner { margin: 10px; padding: 10px; background: blue; border: solid white 1px; }</code> <code>&lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt; &lt;div class=\"outer\"&gt; &lt;div class=\"inner\" style=\"position:relative; height:0px; width:0px\"&gt; &lt;/div&gt; &lt;/div&gt;</code>",
        "summary": "An object receives clicks to its padding, but clicks on an objects margin'd area go to its parent."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>break</code> would stop the <code>foreach</code> loop completely, <code>continue</code> would skip to the next <code>DataRow</code>.",
        "output": "<code>break</code> would stop the <code>foreach</code> loop completely, <code>continue</code> would skip to the next <code>DataRow</code>.",
        "answer": "<code>break</code> would stop the <code>foreach</code> loop completely, <code>continue</code> would skip to the next <code>DataRow</code>.",
        "summary": "<code>break</code> would stop the <code>foreach</code> loop completely, <code>continue</code> would skip to the next <code>DataRow</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n cin.get(), or system(\"PAUSE\").I haven't heard you can use return(0);",
        "output": "cin.get(), or system(\"PAUSE\").I haven't heard you can use return(0);",
        "answer": "cin.get(), or system(\"PAUSE\").I haven't heard you can use return(0);",
        "summary": "cin.get(), or system(\"PAUSE\").I haven't heard you can use return(0);"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Library - Any set of classes or components that can be used as the client deems fit to accomplish a certain task. Framework - mandates certain guidelines for you to \"plug-in\" into something bigger than you. You merely provide the pieces specific to your application/requirements in a published-required manner, so that 'the framwework can make your life easy'",
        "output": "Library - Any set of classes or components that can be used as the client deems fit to accomplish a certain task. Framework - mandates certain guidelines for you to \"plug-in\" into something bigger than you.",
        "answer": "Library - Any set of classes or components that can be used as the client deems fit to accomplish a certain task. Framework - mandates certain guidelines for you to \"plug-in\" into something bigger than you. You merely provide the pieces specific to your application/requirements in a published-required manner, so that 'the framwework can make your life easy'",
        "summary": "Library - Any set of classes or components that can be used as the client deems fit to accomplish a certain task. Framework - mandates certain guidelines for you to \"plug-in\" into something bigger than you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n editTransactionRow.pay_id is Null so in fact you are doing: null.ToString() and it cannot be executed. You need to check editTransactionRow.pay_id and not editTransactionRow.pay_id.ToString(); You code should be (IF pay_id is a string): BIGBLOCK If pay_id is an Integer than you can just check if it's null normally without String...Edit to show you if it's not a String: BIGBLOCK If it's from a database you can use IsDBNull but if not, do not use it.",
        "output": "editTransactionRow.pay_id is Null so in fact you are doing: null.ToString() and it cannot be executed. You need to check editTransactionRow.pay_id and not editTransactionRow.pay_id.ToString();",
        "answer": "editTransactionRow.pay_id is Null so in fact you are doing: null.ToString() and it cannot be executed. You need to check editTransactionRow.pay_id and not editTransactionRow.pay_id.ToString(); You code should be (IF pay_id is a string): BIGBLOCK If pay_id is an Integer than you can just check if it's null normally without String...Edit to show you if it's not a String: BIGBLOCK If it's from a database you can use IsDBNull but if not, do not use it.",
        "summary": "editTransactionRow.pay_id is Null so in fact you are doing: null.ToString() and it cannot be executed. You need to check editTransactionRow.pay_id and not editTransactionRow.pay_id.ToString();"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Alternatives include arrays, generators, and inversion of control, but none is appropriate here. Some (e.g. Microsoft in historical Win32) tend to use reference parameters for simplicity, because it's clear who allocates and how it will look on the stack, reduces the proliferation of structures, and allows a separate return value for success. \"Pure\" programmers prefer the struct, assuming it <em>is</em> the function value (as is the case here), rather than something that's touched incidentally by the function. If you had a more complicated procedure, or something with state, you'd probably use references (assuming you have a reason for not using a class).",
        "output": "Alternatives include arrays, generators, and inversion of control, but none is appropriate here. If you had a more complicated procedure, or something with state, you'd probably use references (assuming you have a reason for not using a class).",
        "answer": "Alternatives include arrays, generators, and inversion of control, but none is appropriate here. Some (e.g. Microsoft in historical Win32) tend to use reference parameters for simplicity, because it's clear who allocates and how it will look on the stack, reduces the proliferation of structures, and allows a separate return value for success. \"Pure\" programmers prefer the struct, assuming it <em>is</em> the function value (as is the case here), rather than something that's touched incidentally by the function. If you had a more complicated procedure, or something with state, you'd probably use references (assuming you have a reason for not using a class).",
        "summary": "Alternatives include arrays, generators, and inversion of control, but none is appropriate here. If you had a more complicated procedure, or something with state, you'd probably use references (assuming you have a reason for not using a class)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are a few methods to get metadata about a table: Will return several result sets, describing the table, it's columns and constraints. The <code>INFORMATION_SCHEMA</code> views will give you the information you want, though unfortunately you have to query the views and join them manually.",
        "output": "There are a few methods to get metadata about a table:",
        "answer": "There are a few methods to get metadata about a table: Will return several result sets, describing the table, it's columns and constraints. The <code>INFORMATION_SCHEMA</code> views will give you the information you want, though unfortunately you have to query the views and join them manually.",
        "summary": "There are a few methods to get metadata about a table:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I tend to do this (if I really, really had to):",
        "output": "I tend to do this (if I really, really had to):",
        "answer": "I tend to do this (if I really, really had to):",
        "summary": "I tend to do this (if I really, really had to):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Pay attention to the \"Output\" window in VS. It will tell you what assemblies are loaded and when. You may see that an older version of your assembly somewhere in the folder is being loaded. For example if you have multiple assemblies and you are currently trying to break in one of the support assemblies, the CLR will handle the assembly resolving, which may load another assembly file than the one you have referenced in the project.",
        "output": "Pay attention to the \"Output\" window in VS. It will tell you what assemblies are loaded and when. You may see that an older version of your assembly somewhere in the folder is being loaded.",
        "answer": "Pay attention to the \"Output\" window in VS. It will tell you what assemblies are loaded and when. You may see that an older version of your assembly somewhere in the folder is being loaded. For example if you have multiple assemblies and you are currently trying to break in one of the support assemblies, the CLR will handle the assembly resolving, which may load another assembly file than the one you have referenced in the project.",
        "summary": "Pay attention to the \"Output\" window in VS. It will tell you what assemblies are loaded and when. You may see that an older version of your assembly somewhere in the folder is being loaded."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here: BIGBLOCK From here and right below the above post, there's a curl solution: BIGBLOCK",
        "output": "BIGBLOCK BIGBLOCK",
        "answer": "Here: BIGBLOCK From here and right below the above post, there's a curl solution: BIGBLOCK",
        "summary": "BIGBLOCK BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Please let me state the obvious: note that adding neither break nor continue, will resume your program; i.e. I trapped for a certain error, then after logging it, I wanted to resume processing, and there were more code tasks in between the next row, so I just let it fall through.",
        "output": "Please let me state the obvious: note that adding neither break nor continue, will resume your program; i.e.",
        "answer": "Please let me state the obvious: note that adding neither break nor continue, will resume your program; i.e. I trapped for a certain error, then after logging it, I wanted to resume processing, and there were more code tasks in between the next row, so I just let it fall through.",
        "summary": "Please let me state the obvious: note that adding neither break nor continue, will resume your program; i.e."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I used pekka's pattern.I think yet another pattern. BIGBLOCK and parsed querystring in myjsfile.js. Plugins | jQuery Plugins",
        "output": "I used pekka's pattern.I think yet another pattern. BIGBLOCK and parsed querystring in myjsfile.js.",
        "answer": "I used pekka's pattern.I think yet another pattern. BIGBLOCK and parsed querystring in myjsfile.js. Plugins | jQuery Plugins",
        "summary": "I used pekka's pattern.I think yet another pattern. BIGBLOCK and parsed querystring in myjsfile.js."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n try then",
        "output": "try then",
        "answer": "try then",
        "summary": "try then"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Array.slice can be used to copy an array or part of an array..http://www.devguru.com/Technologies/Ecmascript/Quickref/Slice.htmlThis would work with strings and numbers .. - changing a string in one array would not affect the other - but objects are still just copied by reference so changes to referenced objects in one array would have an affect on the other array. Here is an example of a JavaScript undo manager that could be useful for this :http://www.ridgway.co.za/archive/2007/11/07/simple-javascript-undo-manager-for-dtos.aspx",
        "output": "Array.slice can be used to copy an array or part of an array..http://www.devguru.com/Technologies/Ecmascript/Quickref/Slice.htmlThis would work with strings and numbers .. - changing a string in one array would not affect the other - but objects are still just copied by reference so changes to referenced objects in one array would have an affect on the other array.",
        "answer": "Array.slice can be used to copy an array or part of an array..http://www.devguru.com/Technologies/Ecmascript/Quickref/Slice.htmlThis would work with strings and numbers .. - changing a string in one array would not affect the other - but objects are still just copied by reference so changes to referenced objects in one array would have an affect on the other array. Here is an example of a JavaScript undo manager that could be useful for this :http://www.ridgway.co.za/archive/2007/11/07/simple-javascript-undo-manager-for-dtos.aspx",
        "summary": "Array.slice can be used to copy an array or part of an array..http://www.devguru.com/Technologies/Ecmascript/Quickref/Slice.htmlThis would work with strings and numbers .. - changing a string in one array would not affect the other - but objects are still just copied by reference so changes to referenced objects in one array would have an affect on the other array."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The solution was to give the \"Network Service\" account read permission on the EventLog/Security key.",
        "output": "The solution was to give the \"Network Service\" account read permission on the EventLog/Security key.",
        "answer": "The solution was to give the \"Network Service\" account read permission on the EventLog/Security key.",
        "summary": "The solution was to give the \"Network Service\" account read permission on the EventLog/Security key."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've used ZetaHtmlTidy in the past to load random websites and then hit against various parts of the content with xpath (eg /html/body//p[@class='textblock']). It worked well but there were some exceptional sites that it had problems with, so I don't know if it's the absolute best solution.",
        "output": "I've used ZetaHtmlTidy in the past to load random websites and then hit against various parts of the content with xpath (eg /html/body//p[@class='textblock']).",
        "answer": "I've used ZetaHtmlTidy in the past to load random websites and then hit against various parts of the content with xpath (eg /html/body//p[@class='textblock']). It worked well but there were some exceptional sites that it had problems with, so I don't know if it's the absolute best solution.",
        "summary": "I've used ZetaHtmlTidy in the past to load random websites and then hit against various parts of the content with xpath (eg /html/body//p[@class='textblock'])."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n After looking at all the suggestions here, I've discovered a few things which I hope will be useful to others in my position: <li>hop is right to point me backat <code>/etc/init.d/functions</code>: the<code>daemon</code> function already allows youto set an alternate user: BIGBLOCK This is implemented by wrapping theprocess invocation with <code>runuser</code> -more on this later. <li>Jonathan Leffler is right:there is setuid in Python: BIGBLOCK I still don't think you can setuidfrom inside a JVM, however. <li>Neither <code>su</code> nor <code>runuser</code>gracefully handle the case where youask to run a command as the user youalready are. E.g. : BIGBLOCK To workaround that behaviour of <code>su</code> and <code>runuser</code>, I've changed my init script to something like: BIGBLOCK Thanks all for your help!",
        "output": "<li>hop is right to point me backat <code>/etc/init.d/functions</code>: the<code>daemon</code> function already allows youto set an alternate user: BIGBLOCK <li>Jonathan Leffler is right:there is setuid in Python: BIGBLOCK <li>Neither <code>su</code> nor <code>runuser</code>gracefully handle the case where youask to run a command as the user youalready are. BIGBLOCK To workaround that behaviour of <code>su</code> and <code>runuser</code>, I've changed my init script to something like: BIGBLOCK",
        "answer": "After looking at all the suggestions here, I've discovered a few things which I hope will be useful to others in my position: <li>hop is right to point me backat <code>/etc/init.d/functions</code>: the<code>daemon</code> function already allows youto set an alternate user: BIGBLOCK This is implemented by wrapping theprocess invocation with <code>runuser</code> -more on this later. <li>Jonathan Leffler is right:there is setuid in Python: BIGBLOCK I still don't think you can setuidfrom inside a JVM, however. <li>Neither <code>su</code> nor <code>runuser</code>gracefully handle the case where youask to run a command as the user youalready are. E.g. : BIGBLOCK To workaround that behaviour of <code>su</code> and <code>runuser</code>, I've changed my init script to something like: BIGBLOCK Thanks all for your help!",
        "summary": "<li>hop is right to point me backat <code>/etc/init.d/functions</code>: the<code>daemon</code> function already allows youto set an alternate user: BIGBLOCK <li>Jonathan Leffler is right:there is setuid in Python: BIGBLOCK <li>Neither <code>su</code> nor <code>runuser</code>gracefully handle the case where youask to run a command as the user youalready are. BIGBLOCK To workaround that behaviour of <code>su</code> and <code>runuser</code>, I've changed my init script to something like: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Like pretty much everyone pointed out: What__________________________ÃÂ¢________________________________s the difference between <code>const X* p</code>, <code>X* const p</code> and <code>const X* const p</code>? You have to read pointer declarations   right-to-left. <code>const X* p</code> means \"p points to an X that is const\": the X object can't be changed via p. <code>X* const p</code> means \"p is a const pointer to an X that is non-const\": you can't change the pointer p itself, but you can change the X object via p. <code>const X* const p</code> means \"p is a const pointer to an X that is const\": you can't change the pointer p itself, nor can you change the X object via p.",
        "output": "<code>const X* p</code> means \"p points to an X that is const\": the X object can't be changed via p. <code>X* const p</code> means \"p is a const pointer to an X that is non-const\": you can't change the pointer p itself, but you can change the X object via p. <code>const X* const p</code> means \"p is a const pointer to an X that is const\": you can't change the pointer p itself, nor can you change the X object via p.",
        "answer": "Like pretty much everyone pointed out: What__________________________ÃÂ¢________________________________s the difference between <code>const X* p</code>, <code>X* const p</code> and <code>const X* const p</code>? You have to read pointer declarations   right-to-left. <code>const X* p</code> means \"p points to an X that is const\": the X object can't be changed via p. <code>X* const p</code> means \"p is a const pointer to an X that is non-const\": you can't change the pointer p itself, but you can change the X object via p. <code>const X* const p</code> means \"p is a const pointer to an X that is const\": you can't change the pointer p itself, nor can you change the X object via p.",
        "summary": "<code>const X* p</code> means \"p points to an X that is const\": the X object can't be changed via p. <code>X* const p</code> means \"p is a const pointer to an X that is non-const\": you can't change the pointer p itself, but you can change the X object via p. <code>const X* const p</code> means \"p is a const pointer to an X that is const\": you can't change the pointer p itself, nor can you change the X object via p."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a project called quaere. It's a Java framework which adds the ability to query collections. Note: According to the author, the project is not maintained anymore.",
        "output": "There is a project called quaere.",
        "answer": "There is a project called quaere. It's a Java framework which adds the ability to query collections. Note: According to the author, the project is not maintained anymore.",
        "summary": "There is a project called quaere."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Make sure you allow 32 bits applications on IIS if you did deploy to IIS. You can define this on the settings of your current Application Pool.",
        "output": "Make sure you allow 32 bits applications on IIS if you did deploy to IIS.",
        "answer": "Make sure you allow 32 bits applications on IIS if you did deploy to IIS. You can define this on the settings of your current Application Pool.",
        "summary": "Make sure you allow 32 bits applications on IIS if you did deploy to IIS."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 2 / 4 = 0 with a remainder of 2",
        "output": "2 / 4 = 0 with a remainder of 2",
        "answer": "2 / 4 = 0 with a remainder of 2",
        "summary": "2 / 4 = 0 with a remainder of 2"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are some issues worth noticing if you're dealing with classes that are persisted using an Object-Relationship Mapper (ORM) like Hibernate, if you didn't think this was unreasonably complicated already! <strong>Lazy loaded objects are subclasses</strong> If your objects are persisted using an ORM, in many cases you will be dealing with dynamic proxies to avoid loading object too early from the data store. These proxies are implemented as subclasses of your own class. This means that<code>this.getClass() == o.getClass()</code> will return <code>false</code>. For example: <em>If you're dealing with an ORM, using <code>o instanceof Person</code> is the only thing that will behave correctly.</em> <strong>Lazy loaded objects have null-fields</strong> ORMs usually use the getters to force loading of lazy loaded objects. This means that <code>person.name</code> will be <code>null</code> if <code>person</code> is lazy loaded, even if <code>person.getName()</code> forces loading and returns \"John Doe\". In my experience, this crops up more often in <code>hashCode()</code> and <code>equals()</code>. <em>If you're dealing with an ORM, make sure to always use getters, and never field references in <code>hashCode()</code> and <code>equals()</code>.</em> <strong>Saving an object will change its state</strong> Persistent objects often use a <code>id</code> field to hold the key of the object. This field will be automatically updated when an object is first saved. Don't use an id field in <code>hashCode()</code>. But you can use it in <code>equals()</code>. A pattern I often use is But: you cannot include <code>getId()</code> in <code>hashCode()</code>. If you do, when an object is persisted, its <code>hashCode</code> changes. If the object is in a <code>HashSet</code>, you'll \"never\" find it again. In my <code>Person</code> example, I probably would use <code>getName()</code> for <code>hashCode</code> and <code>getId()</code> plus <code>getName()</code> (just for paranoia) for <code>equals()</code>. It's okay if there are some risk of \"collisions\" for <code>hashCode()</code>, but never okay for <code>equals()</code>. <em><code>hashCode()</code> should use the non-changing subset of properties from <code>equals()</code></em>",
        "output": "<strong>Lazy loaded objects are subclasses</strong> If your objects are persisted using an ORM, in many cases you will be dealing with dynamic proxies to avoid loading object too early from the data store. These proxies are implemented as subclasses of your own class. This means that<code>this.getClass() == o.getClass()</code> will return <code>false</code>.",
        "answer": "There are some issues worth noticing if you're dealing with classes that are persisted using an Object-Relationship Mapper (ORM) like Hibernate, if you didn't think this was unreasonably complicated already! <strong>Lazy loaded objects are subclasses</strong> If your objects are persisted using an ORM, in many cases you will be dealing with dynamic proxies to avoid loading object too early from the data store. These proxies are implemented as subclasses of your own class. This means that<code>this.getClass() == o.getClass()</code> will return <code>false</code>. For example: <em>If you're dealing with an ORM, using <code>o instanceof Person</code> is the only thing that will behave correctly.</em> <strong>Lazy loaded objects have null-fields</strong> ORMs usually use the getters to force loading of lazy loaded objects. This means that <code>person.name</code> will be <code>null</code> if <code>person</code> is lazy loaded, even if <code>person.getName()</code> forces loading and returns \"John Doe\". In my experience, this crops up more often in <code>hashCode()</code> and <code>equals()</code>. <em>If you're dealing with an ORM, make sure to always use getters, and never field references in <code>hashCode()</code> and <code>equals()</code>.</em> <strong>Saving an object will change its state</strong> Persistent objects often use a <code>id</code> field to hold the key of the object. This field will be automatically updated when an object is first saved. Don't use an id field in <code>hashCode()</code>. But you can use it in <code>equals()</code>. A pattern I often use is But: you cannot include <code>getId()</code> in <code>hashCode()</code>. If you do, when an object is persisted, its <code>hashCode</code> changes. If the object is in a <code>HashSet</code>, you'll \"never\" find it again. In my <code>Person</code> example, I probably would use <code>getName()</code> for <code>hashCode</code> and <code>getId()</code> plus <code>getName()</code> (just for paranoia) for <code>equals()</code>. It's okay if there are some risk of \"collisions\" for <code>hashCode()</code>, but never okay for <code>equals()</code>. <em><code>hashCode()</code> should use the non-changing subset of properties from <code>equals()</code></em>",
        "summary": "<strong>Lazy loaded objects are subclasses</strong> If your objects are persisted using an ORM, in many cases you will be dealing with dynamic proxies to avoid loading object too early from the data store. These proxies are implemented as subclasses of your own class. This means that<code>this.getClass() == o.getClass()</code> will return <code>false</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unless you have a specific reason not to, just use a normal object. Object properties in Javascript can be referenced using hashtable-style syntax: Both <code>foo</code> and <code>bar</code> elements can now then be referenced as: Of course this does mean your keys have to be strings. If they're not strings they are converted internally to strings, so it may still work, YMMV.",
        "output": "Unless you have a specific reason not to, just use a normal object. Both <code>foo</code> and <code>bar</code> elements can now then be referenced as:",
        "answer": "Unless you have a specific reason not to, just use a normal object. Object properties in Javascript can be referenced using hashtable-style syntax: Both <code>foo</code> and <code>bar</code> elements can now then be referenced as: Of course this does mean your keys have to be strings. If they're not strings they are converted internally to strings, so it may still work, YMMV.",
        "summary": "Unless you have a specific reason not to, just use a normal object. Both <code>foo</code> and <code>bar</code> elements can now then be referenced as:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think the advantages are: Web development in a dynamic language (JavaScript) on a VM that is incredibly fast (V8). It is much faster than Ruby, Python, or Perl. Ability to handle thousands of concurrent connections with minimal overhead on a single process. JavaScript is perfect for event loops with first class function objects and closures. People already know how to use it this way having used it in the browser to respond to user initiated events. A lot of people already know JavaScript, even people who do not claim to be programmers. It is arguably the most popular programming language. Using JavaScript on a web server as well as the browser reduces the impedance mismatch between the two programming environments which can communicate data structures via JSON that work the same on both sides of the equation. Duplicate form validation code can be shared between server and client, etc.",
        "output": "Web development in a dynamic language (JavaScript) on a VM that is incredibly fast (V8). Ability to handle thousands of concurrent connections with minimal overhead on a single process. A lot of people already know JavaScript, even people who do not claim to be programmers. Using JavaScript on a web server as well as the browser reduces the impedance mismatch between the two programming environments which can communicate data structures via JSON that work the same on both sides of the equation.",
        "answer": "I think the advantages are: Web development in a dynamic language (JavaScript) on a VM that is incredibly fast (V8). It is much faster than Ruby, Python, or Perl. Ability to handle thousands of concurrent connections with minimal overhead on a single process. JavaScript is perfect for event loops with first class function objects and closures. People already know how to use it this way having used it in the browser to respond to user initiated events. A lot of people already know JavaScript, even people who do not claim to be programmers. It is arguably the most popular programming language. Using JavaScript on a web server as well as the browser reduces the impedance mismatch between the two programming environments which can communicate data structures via JSON that work the same on both sides of the equation. Duplicate form validation code can be shared between server and client, etc.",
        "summary": "Web development in a dynamic language (JavaScript) on a VM that is incredibly fast (V8). Ability to handle thousands of concurrent connections with minimal overhead on a single process. A lot of people already know JavaScript, even people who do not claim to be programmers. Using JavaScript on a web server as well as the browser reduces the impedance mismatch between the two programming environments which can communicate data structures via JSON that work the same on both sides of the equation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The best way that I know of because of leap years and everything is: Hope this helps.",
        "output": "The best way that I know of because of leap years and everything is:",
        "answer": "The best way that I know of because of leap years and everything is: Hope this helps.",
        "summary": "The best way that I know of because of leap years and everything is:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Is a JNDI problem. You will see that exception if the InitialContext class has neither default properties for the JNDI service provider nor explicitly configured server properties. Set the Context.INITIAL_CONTEXT_FACTORY environment property to the class name of the initial context implementation that you are using. This class must be available to your program in the classpath. Check: http://docs.oracle.com/javase/7/docs/api/javax/naming/InitialContext.html http://java.sun.com/products/jndi/tutorial/getStarted/TOC.html  (runtime problems)",
        "output": "You will see that exception if the InitialContext class has neither default properties for the JNDI service provider nor explicitly configured server properties. Set the Context.INITIAL_CONTEXT_FACTORY environment property to the class name of the initial context implementation that you are using.",
        "answer": "Is a JNDI problem. You will see that exception if the InitialContext class has neither default properties for the JNDI service provider nor explicitly configured server properties. Set the Context.INITIAL_CONTEXT_FACTORY environment property to the class name of the initial context implementation that you are using. This class must be available to your program in the classpath. Check: http://docs.oracle.com/javase/7/docs/api/javax/naming/InitialContext.html http://java.sun.com/products/jndi/tutorial/getStarted/TOC.html  (runtime problems)",
        "summary": "You will see that exception if the InitialContext class has neither default properties for the JNDI service provider nor explicitly configured server properties. Set the Context.INITIAL_CONTEXT_FACTORY environment property to the class name of the initial context implementation that you are using."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I used that and it work fine :) BIGBLOCK Remi",
        "output": "I used that and it work fine :)",
        "answer": "I used that and it work fine :) BIGBLOCK Remi",
        "summary": "I used that and it work fine :)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The most common cause is that you have some conflict in where your classes are loaded from. For example if you have 2 locations and one has JDBC drivers and the other one not then if your classloader loads from the 1st location and some class from the 1st location wants to use the driver - the driver is not there. So look for the duplicate JARs that are using your driver",
        "output": "The most common cause is that you have some conflict in where your classes are loaded from.",
        "answer": "The most common cause is that you have some conflict in where your classes are loaded from. For example if you have 2 locations and one has JDBC drivers and the other one not then if your classloader loads from the 1st location and some class from the 1st location wants to use the driver - the driver is not there. So look for the duplicate JARs that are using your driver",
        "summary": "The most common cause is that you have some conflict in where your classes are loaded from."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As of v6, Java SE ships with JAXB. <code>javax.xml.bind.DatatypeConverter</code> has static methods that make this easy. See <code>parseBase64Binary()</code> and <code>printBase64Binary()</code>.",
        "output": "See <code>parseBase64Binary()</code> and <code>printBase64Binary()</code>.",
        "answer": "As of v6, Java SE ships with JAXB. <code>javax.xml.bind.DatatypeConverter</code> has static methods that make this easy. See <code>parseBase64Binary()</code> and <code>printBase64Binary()</code>.",
        "summary": "See <code>parseBase64Binary()</code> and <code>printBase64Binary()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you have a function like: Then foo() will keep calling itself, getting deeper and deeper, and when the space used to keep track of what functions you're in is filled up, you get the stack overflow error.",
        "output": "Then foo() will keep calling itself, getting deeper and deeper, and when the space used to keep track of what functions you're in is filled up, you get the stack overflow error.",
        "answer": "If you have a function like: Then foo() will keep calling itself, getting deeper and deeper, and when the space used to keep track of what functions you're in is filled up, you get the stack overflow error.",
        "summary": "Then foo() will keep calling itself, getting deeper and deeper, and when the space used to keep track of what functions you're in is filled up, you get the stack overflow error."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Java has a feature called \"checked exceptions\". That means that there are certain kinds of exceptions, namely those that subclass Exception but not RuntimeException, such that if a method may throw them, it must list them in its throws declaration, say: void readData() throws IOException. IOException is one of those. Thus, when you are calling a method that lists IOException in its throws declaration, you must either list it in your own throws declaration or catch it. The rationale for the presence of checked exceptions is that for some kinds of exceptions, you must not ignore the fact that they may happen, because their happening is quite a regular situation, not a program error. So, the compiler helps you not to forget about the possibility of such an exception being raised and requires you to handle it in some way. However, not all checked exception classes in Java standard library fit under this rationale, but that's a totally different topic.",
        "output": "Thus, when you are calling a method that lists IOException in its throws declaration, you must either list it in your own throws declaration or catch it.",
        "answer": "Java has a feature called \"checked exceptions\". That means that there are certain kinds of exceptions, namely those that subclass Exception but not RuntimeException, such that if a method may throw them, it must list them in its throws declaration, say: void readData() throws IOException. IOException is one of those. Thus, when you are calling a method that lists IOException in its throws declaration, you must either list it in your own throws declaration or catch it. The rationale for the presence of checked exceptions is that for some kinds of exceptions, you must not ignore the fact that they may happen, because their happening is quite a regular situation, not a program error. So, the compiler helps you not to forget about the possibility of such an exception being raised and requires you to handle it in some way. However, not all checked exception classes in Java standard library fit under this rationale, but that's a totally different topic.",
        "summary": "Thus, when you are calling a method that lists IOException in its throws declaration, you must either list it in your own throws declaration or catch it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can first use <code>String.trim()</code>, and then apply the regex replace command on the result.",
        "output": "You can first use <code>String.trim()</code>, and then apply the regex replace command on the result.",
        "answer": "You can first use <code>String.trim()</code>, and then apply the regex replace command on the result.",
        "summary": "You can first use <code>String.trim()</code>, and then apply the regex replace command on the result."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>\"$@\"</code> to represent all the arguments: This will iterate over each argument and print it out on a separate line. $@ behaves like $* except that when quoted the arguments are broken up properly if there are spaces in them:",
        "output": "Use <code>\"$@\"</code> to represent all the arguments:",
        "answer": "Use <code>\"$@\"</code> to represent all the arguments: This will iterate over each argument and print it out on a separate line. $@ behaves like $* except that when quoted the arguments are broken up properly if there are spaces in them:",
        "summary": "Use <code>\"$@\"</code> to represent all the arguments:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also get SIGBUS when a code page cannot be paged in for some reason.",
        "output": "You can also get SIGBUS when a code page cannot be paged in for some reason.",
        "answer": "You can also get SIGBUS when a code page cannot be paged in for some reason.",
        "summary": "You can also get SIGBUS when a code page cannot be paged in for some reason."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a space missing between <code>--</code> and <code>&gt;</code>. <code>x</code> is post decremented, that is, decremented after checking the condition <code>x&gt;0 ?</code>.",
        "output": "There is a space missing between <code>--</code> and <code>&gt;</code>.",
        "answer": "There is a space missing between <code>--</code> and <code>&gt;</code>. <code>x</code> is post decremented, that is, decremented after checking the condition <code>x&gt;0 ?</code>.",
        "summary": "There is a space missing between <code>--</code> and <code>&gt;</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In <code>actionPerformed(ActionEvent e)</code> you call <code>encrypt()</code>, which is declared to throw <code>Exception</code>. However, <code>actionPerformed</code> neither catches this Exception (with try/catch around the call to <code>encrypt()</code>) nor declares that it throws <code>Exception</code> itself. Your <code>encrypt</code> method, however, does not truly throw <code>Exception</code>. It swallows all Exceptions without even as much as logging a complaint. (Bad practice and bad style!) Also, your <code>encrypt</code> method does the following: That is, if you do catch any Exception, you discard it silently and then fall off the bottom of your <code>encrypt</code> method without actually returning anything. This won't compile (as you see), because a method that is declared to return a value must either return a value or throw an Exception for every single possible code path.",
        "output": "This won't compile (as you see), because a method that is declared to return a value must either return a value or throw an Exception for every single possible code path.",
        "answer": "In <code>actionPerformed(ActionEvent e)</code> you call <code>encrypt()</code>, which is declared to throw <code>Exception</code>. However, <code>actionPerformed</code> neither catches this Exception (with try/catch around the call to <code>encrypt()</code>) nor declares that it throws <code>Exception</code> itself. Your <code>encrypt</code> method, however, does not truly throw <code>Exception</code>. It swallows all Exceptions without even as much as logging a complaint. (Bad practice and bad style!) Also, your <code>encrypt</code> method does the following: That is, if you do catch any Exception, you discard it silently and then fall off the bottom of your <code>encrypt</code> method without actually returning anything. This won't compile (as you see), because a method that is declared to return a value must either return a value or throw an Exception for every single possible code path.",
        "summary": "This won't compile (as you see), because a method that is declared to return a value must either return a value or throw an Exception for every single possible code path."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are a several ways of declaring variables in SQL*Plus scripts. The first is to use VAR. The mechanism for assigning values to a VAR is with an EXEC call: A VAR is particularly useful when we want to call a stored procedure which has OUT parameters or a function. Alternativley we can use subsitution variables. These are good for interactive mode: When we're writing a script which calls other scripts it can be useful to DEFine the variables upfront: Finally there's the anonymous PL/SQL block. As you see, we can still assign values to declared variables interactively:",
        "output": "The first is to use VAR. Alternativley we can use subsitution variables. When we're writing a script which calls other scripts it can be useful to DEFine the variables upfront: Finally there's the anonymous PL/SQL block.",
        "answer": "There are a several ways of declaring variables in SQL*Plus scripts. The first is to use VAR. The mechanism for assigning values to a VAR is with an EXEC call: A VAR is particularly useful when we want to call a stored procedure which has OUT parameters or a function. Alternativley we can use subsitution variables. These are good for interactive mode: When we're writing a script which calls other scripts it can be useful to DEFine the variables upfront: Finally there's the anonymous PL/SQL block. As you see, we can still assign values to declared variables interactively:",
        "summary": "The first is to use VAR. Alternativley we can use subsitution variables. When we're writing a script which calls other scripts it can be useful to DEFine the variables upfront: Finally there's the anonymous PL/SQL block."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The Java runtime library supports validation. Last time I checked this was the Apache Xerces parser under the covers. You should probably use a javax.xml.validation.Validator. BIGBLOCK The schema factory constant is the string <code>http://www.w3.org/2001/XMLSchema</code> which defines XSDs. The above code validates a WAR deployment descriptor against the URL <code>http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</code> but you could just as easily validate against a local file. You should not use the DOMParser to validate a document (unless your goal is to create a document object model anyway). This will start creating DOM objects as it parses the document - wasteful if you aren't going to use them.",
        "output": "You should probably use a javax.xml.validation.Validator. BIGBLOCK The above code validates a WAR deployment descriptor against the URL <code>http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</code> but you could just as easily validate against a local file.",
        "answer": "The Java runtime library supports validation. Last time I checked this was the Apache Xerces parser under the covers. You should probably use a javax.xml.validation.Validator. BIGBLOCK The schema factory constant is the string <code>http://www.w3.org/2001/XMLSchema</code> which defines XSDs. The above code validates a WAR deployment descriptor against the URL <code>http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</code> but you could just as easily validate against a local file. You should not use the DOMParser to validate a document (unless your goal is to create a document object model anyway). This will start creating DOM objects as it parses the document - wasteful if you aren't going to use them.",
        "summary": "You should probably use a javax.xml.validation.Validator. BIGBLOCK The above code validates a WAR deployment descriptor against the URL <code>http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</code> but you could just as easily validate against a local file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For tables and columns:",
        "output": "For tables and columns:",
        "answer": "For tables and columns:",
        "summary": "For tables and columns:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm not saying that <code>Array</code> -> <code>|value,index|</code> and <code>Hash</code> -> <code>|key,value|</code> is not insane (see Horace Loeb's comment), but I am saying that there is a sane way to expect this arrangement. When I am dealing with arrays, I am focused on the elements in the array (not the index because the index is transitory). The method is each with index, i.e. each+index, or |each,index|, or <code>|value,index|</code>. This is also consistent with the index being viewed as an optional argument, e.g. |value| is equivalent to |value,index=nil| which is consistent with |value,index|. When I am dealing with hashes, I am often more focused on the keys than the values, and I am usually dealing with keys and values in that order, either <code>key =&gt; value</code> or <code>hash[key] = value</code>. If you want duck-typing, then either explicitly use a defined method as Brent Longborough showed, or an implicit method as maxhawkins showed. Ruby is all about accommodating the language to suit the programmer, not about the programmer accommodating to suit the language. This is why there are so many ways. There are so many ways to think about something. In Ruby, you choose the closest and the rest of the code usually falls out extremely neatly and concisely. As for the original question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby? \", well, I think the core way (i.e. without powerful syntactic sugar or object oriented power) is to do: But Ruby is all about powerful syntactic sugar and object oriented power, but anyway here is the equivalent for hashes, and the keys can be ordered or not: So, my answer is, \"The __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby depends on you (i.e. the programmer or the programming team) and the project.\". The better Ruby programmer makes the better choice (of which syntactic power and/or which object oriented approach). The better Ruby programmer continues to look for more ways. Now, I want to ask another question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through a Range in Ruby backwards?\"! (This question is how I came to this page.) It is nice to do (for the forwards): but I don't like to do (for the backwards): Well, I don't actually mind doing that too much, but when I am teaching going backwards, I want to show my students a nice symmetry (i.e. with minimal difference, e.g. only adding a reverse, or a step -1, but without modifying anything else). You can do (for symmetry): and which I don't like much, but you can't do You could ultimately do but I want to teach pure Ruby rather than object oriented approaches (just yet). I would like to iterate backwards: without creating an array (consider 0..1000000000) working for any Range (e.g. Strings, not just Integers) without using any extra object oriented power (i.e. no class modification) I believe this is impossible without defining a <code>pred</code> method, which means modifying the Range class to use it. If you can do this please let me know, otherwise confirmation of impossibility would be appreciated though it would be disappointing. Perhaps Ruby 1.9 addresses this. (Thanks for your time in reading this.)",
        "output": "As for the original question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby? \", well, I think the core way (i.e. without powerful syntactic sugar or object oriented power) is to do: But Ruby is all about powerful syntactic sugar and object oriented power, but anyway here is the equivalent for hashes, and the keys can be ordered or not: So, my answer is, \"The __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby depends on you (i.e. the programmer or the programming team) and the project.\".",
        "answer": "I'm not saying that <code>Array</code> -> <code>|value,index|</code> and <code>Hash</code> -> <code>|key,value|</code> is not insane (see Horace Loeb's comment), but I am saying that there is a sane way to expect this arrangement. When I am dealing with arrays, I am focused on the elements in the array (not the index because the index is transitory). The method is each with index, i.e. each+index, or |each,index|, or <code>|value,index|</code>. This is also consistent with the index being viewed as an optional argument, e.g. |value| is equivalent to |value,index=nil| which is consistent with |value,index|. When I am dealing with hashes, I am often more focused on the keys than the values, and I am usually dealing with keys and values in that order, either <code>key =&gt; value</code> or <code>hash[key] = value</code>. If you want duck-typing, then either explicitly use a defined method as Brent Longborough showed, or an implicit method as maxhawkins showed. Ruby is all about accommodating the language to suit the programmer, not about the programmer accommodating to suit the language. This is why there are so many ways. There are so many ways to think about something. In Ruby, you choose the closest and the rest of the code usually falls out extremely neatly and concisely. As for the original question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby? \", well, I think the core way (i.e. without powerful syntactic sugar or object oriented power) is to do: But Ruby is all about powerful syntactic sugar and object oriented power, but anyway here is the equivalent for hashes, and the keys can be ordered or not: So, my answer is, \"The __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby depends on you (i.e. the programmer or the programming team) and the project.\". The better Ruby programmer makes the better choice (of which syntactic power and/or which object oriented approach). The better Ruby programmer continues to look for more ways. Now, I want to ask another question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through a Range in Ruby backwards?\"! (This question is how I came to this page.) It is nice to do (for the forwards): but I don't like to do (for the backwards): Well, I don't actually mind doing that too much, but when I am teaching going backwards, I want to show my students a nice symmetry (i.e. with minimal difference, e.g. only adding a reverse, or a step -1, but without modifying anything else). You can do (for symmetry): and which I don't like much, but you can't do You could ultimately do but I want to teach pure Ruby rather than object oriented approaches (just yet). I would like to iterate backwards: without creating an array (consider 0..1000000000) working for any Range (e.g. Strings, not just Integers) without using any extra object oriented power (i.e. no class modification) I believe this is impossible without defining a <code>pred</code> method, which means modifying the Range class to use it. If you can do this please let me know, otherwise confirmation of impossibility would be appreciated though it would be disappointing. Perhaps Ruby 1.9 addresses this. (Thanks for your time in reading this.)",
        "summary": "As for the original question, \"What is the __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby? \", well, I think the core way (i.e. without powerful syntactic sugar or object oriented power) is to do: But Ruby is all about powerful syntactic sugar and object oriented power, but anyway here is the equivalent for hashes, and the keys can be ordered or not: So, my answer is, \"The __ightÃ¨ÂÂÃ©Â©Â´?way to iterate through an array in Ruby depends on you (i.e. the programmer or the programming team) and the project.\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n overloading is when you define 2 methods with the same name but different parameters overriding is where you change the behavior of the base class via a function with the same name in a subclass. So Polymorphism is related to overriding but not really overloading. However if someone gave me a simple answer of \"overriding\" for the question \"What is polymorphism?\" I would ask for further explanation.",
        "output": "overloading is when you define 2 methods with the same name but different parameters overriding is where you change the behavior of the base class via a function with the same name in a subclass. So Polymorphism is related to overriding but not really overloading.",
        "answer": "overloading is when you define 2 methods with the same name but different parameters overriding is where you change the behavior of the base class via a function with the same name in a subclass. So Polymorphism is related to overriding but not really overloading. However if someone gave me a simple answer of \"overriding\" for the question \"What is polymorphism?\" I would ask for further explanation.",
        "summary": "overloading is when you define 2 methods with the same name but different parameters overriding is where you change the behavior of the base class via a function with the same name in a subclass. So Polymorphism is related to overriding but not really overloading."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n use <code>String.equalsIgnoreCase()</code> Use the Java API reference to find answers like these. http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html#equalsIgnoreCase(java.lang.String) http://java.sun.com/j2se/1.5.0/docs/api/",
        "output": "use <code>String.equalsIgnoreCase()</code> Use the Java API reference to find answers like these.",
        "answer": "use <code>String.equalsIgnoreCase()</code> Use the Java API reference to find answers like these. http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html#equalsIgnoreCase(java.lang.String) http://java.sun.com/j2se/1.5.0/docs/api/",
        "summary": "use <code>String.equalsIgnoreCase()</code> Use the Java API reference to find answers like these."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use LINQ... it eliminates the need to check string length. Admittedly maybe not the most efficient, but it's fun. BIGBLOCK or BIGBLOCK",
        "output": "BIGBLOCK or BIGBLOCK",
        "answer": "You could use LINQ... it eliminates the need to check string length. Admittedly maybe not the most efficient, but it's fun. BIGBLOCK or BIGBLOCK",
        "summary": "BIGBLOCK or BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think that the main difference is that frameworks follow the \"Hollywood principle\", i.e. \"don't call us, we'll call you.\" According to Martin Fowler: A <strong>library</strong> is essentially a set of  functions that you can call, these  days usually organized into classes. Each call does some work and returns  control to the client. A <strong>framework</strong> embodies some abstract  design, with more behavior built in. In order to use it you need to insert  your behavior into various places in  the framework either by subclassing or  by plugging in your own classes. The  framework's code then calls your code  at these points.",
        "output": "I think that the main difference is that frameworks follow the \"Hollywood principle\", i.e. \"don't call us, we'll call you.\" A <strong>library</strong> is essentially a set of  functions that you can call, these  days usually organized into classes. A <strong>framework</strong> embodies some abstract  design, with more behavior built in.",
        "answer": "I think that the main difference is that frameworks follow the \"Hollywood principle\", i.e. \"don't call us, we'll call you.\" According to Martin Fowler: A <strong>library</strong> is essentially a set of  functions that you can call, these  days usually organized into classes. Each call does some work and returns  control to the client. A <strong>framework</strong> embodies some abstract  design, with more behavior built in. In order to use it you need to insert  your behavior into various places in  the framework either by subclassing or  by plugging in your own classes. The  framework's code then calls your code  at these points.",
        "summary": "I think that the main difference is that frameworks follow the \"Hollywood principle\", i.e. \"don't call us, we'll call you.\" A <strong>library</strong> is essentially a set of  functions that you can call, these  days usually organized into classes. A <strong>framework</strong> embodies some abstract  design, with more behavior built in."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For those tasks I use most of the time block selection. Put your cursor on the first <code>#</code> character, press CtrlV (or CtrlQ for gVim), and go down until the last commented line and press x, that will delete all the <code>#</code> characters vertically. For commenting a block of text is almost the same: <li>First, go to the first line you want to comment, press CtrlV. This will put the editor in the <code>VISUAL BLOCK</code> mode. <li>Then using the arrow key and select until the last line <li>Now press ShiftI, which will put the editor in <code>INSERT</code> mode and then press #. This will add a hash to the first line. <li>Then press Esc (give it a second), and it will insert a <code>#</code> character on all other selected lines. For the stripped-down version of vim shipped with debian/ubuntu by default, type <code>: s/^/#</code> in the third step instead.",
        "output": "<li>First, go to the first line you want to comment, press CtrlV. <li>Then using the arrow key and select until the last line <li>Now press ShiftI, which will put the editor in <code>INSERT</code> mode and then press #. <li>Then press Esc (give it a second), and it will insert a <code>#</code> character on all other selected lines.",
        "answer": "For those tasks I use most of the time block selection. Put your cursor on the first <code>#</code> character, press CtrlV (or CtrlQ for gVim), and go down until the last commented line and press x, that will delete all the <code>#</code> characters vertically. For commenting a block of text is almost the same: <li>First, go to the first line you want to comment, press CtrlV. This will put the editor in the <code>VISUAL BLOCK</code> mode. <li>Then using the arrow key and select until the last line <li>Now press ShiftI, which will put the editor in <code>INSERT</code> mode and then press #. This will add a hash to the first line. <li>Then press Esc (give it a second), and it will insert a <code>#</code> character on all other selected lines. For the stripped-down version of vim shipped with debian/ubuntu by default, type <code>: s/^/#</code> in the third step instead.",
        "summary": "<li>First, go to the first line you want to comment, press CtrlV. <li>Then using the arrow key and select until the last line <li>Now press ShiftI, which will put the editor in <code>INSERT</code> mode and then press #. <li>Then press Esc (give it a second), and it will insert a <code>#</code> character on all other selected lines."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'll sometimes do this: BIGBLOCK Though I tend to avoid this if it means I'll be saying <code>options[i]</code> more than a couple of times.",
        "output": "I'll sometimes do this: BIGBLOCK",
        "answer": "I'll sometimes do this: BIGBLOCK Though I tend to avoid this if it means I'll be saying <code>options[i]</code> more than a couple of times.",
        "summary": "I'll sometimes do this: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>fibo = f.fibo</code> references the class itself. You probably wanted <code>fibo = f.fibo()</code> (note the parentheses) to make <em>an instance</em> of the class, after which <code>fibo.f()</code> should succeed correctly. <code>f.fibo.f()</code> fails because you are essentially calling <code>f(self, a=0)</code> without supplying <code>self</code>; <code>self</code> is \"bound\" automatically when you have an instance of the class.",
        "output": "<code>f.fibo.f()</code> fails because you are essentially calling <code>f(self, a=0)</code> without supplying <code>self</code>; <code>self</code> is \"bound\" automatically when you have an instance of the class.",
        "answer": "<code>fibo = f.fibo</code> references the class itself. You probably wanted <code>fibo = f.fibo()</code> (note the parentheses) to make <em>an instance</em> of the class, after which <code>fibo.f()</code> should succeed correctly. <code>f.fibo.f()</code> fails because you are essentially calling <code>f(self, a=0)</code> without supplying <code>self</code>; <code>self</code> is \"bound\" automatically when you have an instance of the class.",
        "summary": "<code>f.fibo.f()</code> fails because you are essentially calling <code>f(self, a=0)</code> without supplying <code>self</code>; <code>self</code> is \"bound\" automatically when you have an instance of the class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To bind the data to ComboBox ComboData looks like:",
        "output": "To bind the data to ComboBox ComboData looks like:",
        "answer": "To bind the data to ComboBox ComboData looks like:",
        "summary": "To bind the data to ComboBox ComboData looks like:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have a function defined in my .bashrc that makes this easier. Here's an example of how it's used (from my <code>.bash_profile</code>.)",
        "output": "I have a function defined in my .bashrc that makes this easier.",
        "answer": "I have a function defined in my .bashrc that makes this easier. Here's an example of how it's used (from my <code>.bash_profile</code>.)",
        "summary": "I have a function defined in my .bashrc that makes this easier."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is one disadvantage you should be aware of: As soon as you out-source files to a CDN (or any other server which doesn't allow scripting) or if your files are cached on a proxy, altering response based on 'Origin' request header will not work.",
        "output": "There is one disadvantage you should be aware of: As soon as you out-source files to a CDN (or any other server which doesn't allow scripting) or if your files are cached on a proxy, altering response based on 'Origin' request header will not work.",
        "answer": "There is one disadvantage you should be aware of: As soon as you out-source files to a CDN (or any other server which doesn't allow scripting) or if your files are cached on a proxy, altering response based on 'Origin' request header will not work.",
        "summary": "There is one disadvantage you should be aware of: As soon as you out-source files to a CDN (or any other server which doesn't allow scripting) or if your files are cached on a proxy, altering response based on 'Origin' request header will not work."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n try using BIGBLOCK also make sure that the layout params you're creating are LinearLayout.LayoutParams...",
        "output": "try using BIGBLOCK",
        "answer": "try using BIGBLOCK also make sure that the layout params you're creating are LinearLayout.LayoutParams...",
        "summary": "try using BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Note that git makes it easy to just try out the merge and back away from any problems if you don't like the result. It might be easier than looking for potential problems in advance.",
        "output": "It might be easier than looking for potential problems in advance.",
        "answer": "Note that git makes it easy to just try out the merge and back away from any problems if you don't like the result. It might be easier than looking for potential problems in advance.",
        "summary": "It might be easier than looking for potential problems in advance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you have the error after setup a new https vhost and the config seems to be right, remember to link in <code>sites-enabled</code> too.",
        "output": "If you have the error after setup a new https vhost and the config seems to be right, remember to link in <code>sites-enabled</code> too.",
        "answer": "If you have the error after setup a new https vhost and the config seems to be right, remember to link in <code>sites-enabled</code> too.",
        "summary": "If you have the error after setup a new https vhost and the config seems to be right, remember to link in <code>sites-enabled</code> too."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Object Oriented languages, polymorphism allows treatment and handling of different data types through the same interface. For example, consider inheritance in C++: Class B is derived from Class A. A pointer of type A* (pointer to class A) may be used to handle both an object of class A AND an object of class B.",
        "output": "In Object Oriented languages, polymorphism allows treatment and handling of different data types through the same interface.",
        "answer": "In Object Oriented languages, polymorphism allows treatment and handling of different data types through the same interface. For example, consider inheritance in C++: Class B is derived from Class A. A pointer of type A* (pointer to class A) may be used to handle both an object of class A AND an object of class B.",
        "summary": "In Object Oriented languages, polymorphism allows treatment and handling of different data types through the same interface."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n That's a very complicated operator, so even ISO/IEC JTC1 (Joint Technical Committee 1) placed its description in two different parts of the C++ Standard. Joking aside, they are two different operators: <code>--</code> and <code>&gt;</code> described respectively in &sect;5.2.6/2 and &sect;5.9 of the C++03 Standard.",
        "output": "That's a very complicated operator, so even ISO/IEC JTC1 (Joint Technical Committee 1) placed its description in two different parts of the C++ Standard.",
        "answer": "That's a very complicated operator, so even ISO/IEC JTC1 (Joint Technical Committee 1) placed its description in two different parts of the C++ Standard. Joking aside, they are two different operators: <code>--</code> and <code>&gt;</code> described respectively in &sect;5.2.6/2 and &sect;5.9 of the C++03 Standard.",
        "summary": "That's a very complicated operator, so even ISO/IEC JTC1 (Joint Technical Committee 1) placed its description in two different parts of the C++ Standard."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When you need an outer join the second syntax is <strong>not</strong> always required: Oracle: BIGBLOCK MSSQLServer (although it's been deprecated in 2000 version)/Sybase: BIGBLOCK But returning to your question. I don't know the answer, but it is probably related to the fact that a <strong>join</strong> is more natural (syntactically, at least) than adding an expression to a <strong>where</strong> clause when you are doing exactly that: <strong>joining</strong>.",
        "output": "When you need an outer join the second syntax is <strong>not</strong> always required: I don't know the answer, but it is probably related to the fact that a <strong>join</strong> is more natural (syntactically, at least) than adding an expression to a <strong>where</strong> clause when you are doing exactly that: <strong>joining</strong>.",
        "answer": "When you need an outer join the second syntax is <strong>not</strong> always required: Oracle: BIGBLOCK MSSQLServer (although it's been deprecated in 2000 version)/Sybase: BIGBLOCK But returning to your question. I don't know the answer, but it is probably related to the fact that a <strong>join</strong> is more natural (syntactically, at least) than adding an expression to a <strong>where</strong> clause when you are doing exactly that: <strong>joining</strong>.",
        "summary": "When you need an outer join the second syntax is <strong>not</strong> always required: I don't know the answer, but it is probably related to the fact that a <strong>join</strong> is more natural (syntactically, at least) than adding an expression to a <strong>where</strong> clause when you are doing exactly that: <strong>joining</strong>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use the NERD Commenter script. It lets you easily comment, uncomment or toggle comments in your code. As mentioned in the comments: for anyone who is confused by the usage, default leader is \"\\\" so 10\\cc will comment ten lines and 10\\cu will uncomment those ten lines",
        "output": "I use the NERD Commenter script.",
        "answer": "I use the NERD Commenter script. It lets you easily comment, uncomment or toggle comments in your code. As mentioned in the comments: for anyone who is confused by the usage, default leader is \"\\\" so 10\\cc will comment ten lines and 10\\cu will uncomment those ten lines",
        "summary": "I use the NERD Commenter script."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'll take the risk of stating the obvious: You call the function, if it's defined in the base class it's automatically available in the derived class (unless it's <code>private</code>). If there is a function with the same signature in the derived class you can disambiguate it by adding the base class's name followed by two colons <code>base_class::foo(...)</code>. You should note that unlike Java and C#, C++ does not have a keyword for \"the base class\" (<code>super</code> or <code>base</code>) since C++ supports multiple inheritance which may lead to ambiguity. Incidentally, you can't derive directly from the same class twice since there will be no way to refer to one of the base classes over the other.",
        "output": "If there is a function with the same signature in the derived class you can disambiguate it by adding the base class's name followed by two colons <code>base_class::foo(...)</code>.",
        "answer": "I'll take the risk of stating the obvious: You call the function, if it's defined in the base class it's automatically available in the derived class (unless it's <code>private</code>). If there is a function with the same signature in the derived class you can disambiguate it by adding the base class's name followed by two colons <code>base_class::foo(...)</code>. You should note that unlike Java and C#, C++ does not have a keyword for \"the base class\" (<code>super</code> or <code>base</code>) since C++ supports multiple inheritance which may lead to ambiguity. Incidentally, you can't derive directly from the same class twice since there will be no way to refer to one of the base classes over the other.",
        "summary": "If there is a function with the same signature in the derived class you can disambiguate it by adding the base class's name followed by two colons <code>base_class::foo(...)</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This can be useful to see the progress of long insert queries, make any rough estimates (like <code>COUNT(*)</code> or rough <code>SUM(*)</code>)  etc. In other words, the results the dirty read queries return are fine as long as you treat them as estimates and don't make any critical decisions based upon them.",
        "output": "In other words, the results the dirty read queries return are fine as long as you treat them as estimates and don't make any critical decisions based upon them.",
        "answer": "This can be useful to see the progress of long insert queries, make any rough estimates (like <code>COUNT(*)</code> or rough <code>SUM(*)</code>)  etc. In other words, the results the dirty read queries return are fine as long as you treat them as estimates and don't make any critical decisions based upon them.",
        "summary": "In other words, the results the dirty read queries return are fine as long as you treat them as estimates and don't make any critical decisions based upon them."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>jQuery.fn</code> is defined shorthand for <code>jQuery.prototype</code>. From the source code: BIGBLOCK That means <code>jQuery.fn.jquery</code> is an alias for <code>jQuery.prototype.jquery</code>, which returns the current jQuery version. Again from the source code: BIGBLOCK",
        "output": "<code>jQuery.fn</code> is defined shorthand for <code>jQuery.prototype</code>. That means <code>jQuery.fn.jquery</code> is an alias for <code>jQuery.prototype.jquery</code>, which returns the current jQuery version.",
        "answer": "<code>jQuery.fn</code> is defined shorthand for <code>jQuery.prototype</code>. From the source code: BIGBLOCK That means <code>jQuery.fn.jquery</code> is an alias for <code>jQuery.prototype.jquery</code>, which returns the current jQuery version. Again from the source code: BIGBLOCK",
        "summary": "<code>jQuery.fn</code> is defined shorthand for <code>jQuery.prototype</code>. That means <code>jQuery.fn.jquery</code> is an alias for <code>jQuery.prototype.jquery</code>, which returns the current jQuery version."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I made some extensions for easy enum usage, maybe someone can use it... The enum itself must be decorated with the FlagsAttribute",
        "output": "I made some extensions for easy enum usage, maybe someone can use it... The enum itself must be decorated with the FlagsAttribute",
        "answer": "I made some extensions for easy enum usage, maybe someone can use it... The enum itself must be decorated with the FlagsAttribute",
        "summary": "I made some extensions for easy enum usage, maybe someone can use it... The enum itself must be decorated with the FlagsAttribute"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An alternative solution would be to have to browser simply provide this option on the contextual menu. No need to have Javascript to do this, though I could see when it would be useful. In the mean time an alternative solution would simply be to maximise the window (Javascript can provide screen dimensions) and then maximise the video within it. Give it a go and then simply see if the results are acceptable to your users.",
        "output": "An alternative solution would be to have to browser simply provide this option on the contextual menu. In the mean time an alternative solution would simply be to maximise the window (Javascript can provide screen dimensions) and then maximise the video within it.",
        "answer": "An alternative solution would be to have to browser simply provide this option on the contextual menu. No need to have Javascript to do this, though I could see when it would be useful. In the mean time an alternative solution would simply be to maximise the window (Javascript can provide screen dimensions) and then maximise the video within it. Give it a go and then simply see if the results are acceptable to your users.",
        "summary": "An alternative solution would be to have to browser simply provide this option on the contextual menu. In the mean time an alternative solution would simply be to maximise the window (Javascript can provide screen dimensions) and then maximise the video within it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can un-check the build automatically in Project menu and then build by hand by type Ctrl + B, or clicking an icon the appears to the right of the printer icon.",
        "output": "You can un-check the build automatically in Project menu and then build by hand by type Ctrl + B, or clicking an icon the appears to the right of the printer icon.",
        "answer": "You can un-check the build automatically in Project menu and then build by hand by type Ctrl + B, or clicking an icon the appears to the right of the printer icon.",
        "summary": "You can un-check the build automatically in Project menu and then build by hand by type Ctrl + B, or clicking an icon the appears to the right of the printer icon."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is a generator that work on arbitrary iterables: Example:",
        "output": "Here is a generator that work on arbitrary iterables:",
        "answer": "Here is a generator that work on arbitrary iterables: Example:",
        "summary": "Here is a generator that work on arbitrary iterables:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Both of these frameworks aim to seperate concerns - for instance, interaction with a data source (model), application logic (or turning this data into useful information) (Controller/Presenter) and display code (View). In some cases the model can also be used to turn a data source into a higher level abstraction as well. A good example of this is the MVC Storefront project. There is a discussion here regarding the differences between MVC vs MVP. The distinction made is that in an MVC application traditionally has the view and the controller interact with the model, but not with each other. MVP designs have the Presenter access the model and interact with the view. Having said that, ASP.NET MVC is by these definitions an MVP framework because the Controller accesses the Model to populate the View which is meant to have no logic (just  displays the variables provided by the Controller). To perhaps get an idea of the ASP.NET MVC distinction from MVP, check out this MIX presentation by Scott Hanselman.",
        "output": "Both of these frameworks aim to seperate concerns - for instance, interaction with a data source (model), application logic (or turning this data into useful information) (Controller/Presenter) and display code (View). The distinction made is that in an MVC application traditionally has the view and the controller interact with the model, but not with each other. MVP designs have the Presenter access the model and interact with the view.",
        "answer": "Both of these frameworks aim to seperate concerns - for instance, interaction with a data source (model), application logic (or turning this data into useful information) (Controller/Presenter) and display code (View). In some cases the model can also be used to turn a data source into a higher level abstraction as well. A good example of this is the MVC Storefront project. There is a discussion here regarding the differences between MVC vs MVP. The distinction made is that in an MVC application traditionally has the view and the controller interact with the model, but not with each other. MVP designs have the Presenter access the model and interact with the view. Having said that, ASP.NET MVC is by these definitions an MVP framework because the Controller accesses the Model to populate the View which is meant to have no logic (just  displays the variables provided by the Controller). To perhaps get an idea of the ASP.NET MVC distinction from MVP, check out this MIX presentation by Scott Hanselman.",
        "summary": "Both of these frameworks aim to seperate concerns - for instance, interaction with a data source (model), application logic (or turning this data into useful information) (Controller/Presenter) and display code (View). The distinction made is that in an MVC application traditionally has the view and the controller interact with the model, but not with each other. MVP designs have the Presenter access the model and interact with the view."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I never did get the above solutions to work on the box I have access to. For one, type has been installed (doing what more does). So the builtin directive is needed. This command works for me:",
        "output": "This command works for me:",
        "answer": "I never did get the above solutions to work on the box I have access to. For one, type has been installed (doing what more does). So the builtin directive is needed. This command works for me:",
        "summary": "This command works for me:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n POSIX is a standard for operating systems that was supposed to make it easier to write cross-platform software. It's an especially big deal in the world of Unix.",
        "output": "POSIX is a standard for operating systems that was supposed to make it easier to write cross-platform software.",
        "answer": "POSIX is a standard for operating systems that was supposed to make it easier to write cross-platform software. It's an especially big deal in the world of Unix.",
        "summary": "POSIX is a standard for operating systems that was supposed to make it easier to write cross-platform software."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Stack overflow means exactly that: a stack overflows. Usually there's a one stack in the program that contains local-scope variables and addresses where to return when execution of a routine ends. That stack tends to be a fixed memory range somewhere in the memory, therefore it's limited how much it can contain values. If the stack is empty you can't pop, if you do you'll get stack underflow error. If the stack is full you can't push, if you do you'll get stack overflow error. So stack overflow appears where you allocate too much into the stack. For instance, in the mentioned recursion. Some implementations optimize out some forms of recursions. Tail recursion in particular. Tail recursive routines are form of routines where the recursive call appears as a final thing what the routine does. Such routine call gets simply reduced into a jump. Some implementations go so far as implement their own stacks for recursion, therefore they allow the recursion to continue until the system runs out of memory. Easiest thing you could try would be to increase your stack size if you can. If you can't do that though, the second best thing would be to look whether there's something that clearly causes the stack overflow. Try it by printing something before and after the call into routine. This helps you to find out the failing routine.",
        "output": "So stack overflow appears where you allocate too much into the stack. For instance, in the mentioned recursion.",
        "answer": "Stack overflow means exactly that: a stack overflows. Usually there's a one stack in the program that contains local-scope variables and addresses where to return when execution of a routine ends. That stack tends to be a fixed memory range somewhere in the memory, therefore it's limited how much it can contain values. If the stack is empty you can't pop, if you do you'll get stack underflow error. If the stack is full you can't push, if you do you'll get stack overflow error. So stack overflow appears where you allocate too much into the stack. For instance, in the mentioned recursion. Some implementations optimize out some forms of recursions. Tail recursion in particular. Tail recursive routines are form of routines where the recursive call appears as a final thing what the routine does. Such routine call gets simply reduced into a jump. Some implementations go so far as implement their own stacks for recursion, therefore they allow the recursion to continue until the system runs out of memory. Easiest thing you could try would be to increase your stack size if you can. If you can't do that though, the second best thing would be to look whether there's something that clearly causes the stack overflow. Try it by printing something before and after the call into routine. This helps you to find out the failing routine.",
        "summary": "So stack overflow appears where you allocate too much into the stack. For instance, in the mentioned recursion."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Update: 2017-01-10</strong> Data URIs are now supported by all major browsers. IE supports embedding images since version 8 as well. http://caniuse.com/#feat=datauri Data URIs are now supported by the following web browsers: <li>Gecko-based, such as Firefox, SeaMonkey, XeroBank, Camino, Fennec and K-Meleon <li>Konqueror, via KDE's KIO slaves input/output system <li>Opera (including devices such as the Nintendo DSi or Wii) <li>WebKit-based, such as Safari (including on iOS), Android's browser, Epiphany and Midori (WebKit is a derivative of Konqueror's KHTML engine, but Mac OS X does not share the KIO architecture so the implementations are different), as well as Webkit/Chromium-based, such as Chrome <li>Trident      <li>Internet Explorer 8: Microsoft has limited its support to certain \"non-navigable\" content for security reasons, including concerns that JavaScript embedded in a data URI may not be interpretable by script filters such as those used by web-based email clients. Data URIs must be smaller than 32 KiB in Version 8[3]. <li>Data URIs are supported only for the following elements and/or attributes[4]:      <li>object (images only) <li>img <li>input type=image <li>link <li>CSS declarations that accept a URL, such as background-image, background, list-style-type, list-style and similar. <li>Internet Explorer 9: Internet Explorer 9 does not have 32KiB limitation and allowed in broader elements. <li>TheWorld Browser: An IE shell browser which has a built-in support for Data URI scheme http://en.wikipedia.org/wiki/Data_URI_scheme#Web_browser_support",
        "output": "Data URIs are now supported by the following web browsers: <li>Gecko-based, such as Firefox, SeaMonkey, XeroBank, Camino, Fennec and K-Meleon <li>Konqueror, via KDE's KIO slaves input/output system <li>Opera (including devices such as the Nintendo DSi or Wii) <li>WebKit-based, such as Safari (including on iOS), Android's browser, Epiphany and Midori (WebKit is a derivative of Konqueror's KHTML engine, but Mac OS X does not share the KIO architecture so the implementations are different), as well as Webkit/Chromium-based, such as Chrome <li>Trident      <li>Internet Explorer 8: Microsoft has limited its support to certain \"non-navigable\" content for security reasons, including concerns that JavaScript embedded in a data URI may not be interpretable by script filters such as those used by web-based email clients. Data URIs must be smaller than 32 KiB in Version 8[3]. <li>Data URIs are supported only for the following elements and/or attributes[4]:      <li>object (images only) <li>img <li>input type=image <li>link <li>CSS declarations that accept a URL, such as background-image, background, list-style-type, list-style and similar. <li>Internet Explorer 9: Internet Explorer 9 does not have 32KiB limitation and allowed in broader elements. <li>TheWorld Browser: An IE shell browser which has a built-in support for Data URI scheme",
        "answer": "<strong>Update: 2017-01-10</strong> Data URIs are now supported by all major browsers. IE supports embedding images since version 8 as well. http://caniuse.com/#feat=datauri Data URIs are now supported by the following web browsers: <li>Gecko-based, such as Firefox, SeaMonkey, XeroBank, Camino, Fennec and K-Meleon <li>Konqueror, via KDE's KIO slaves input/output system <li>Opera (including devices such as the Nintendo DSi or Wii) <li>WebKit-based, such as Safari (including on iOS), Android's browser, Epiphany and Midori (WebKit is a derivative of Konqueror's KHTML engine, but Mac OS X does not share the KIO architecture so the implementations are different), as well as Webkit/Chromium-based, such as Chrome <li>Trident      <li>Internet Explorer 8: Microsoft has limited its support to certain \"non-navigable\" content for security reasons, including concerns that JavaScript embedded in a data URI may not be interpretable by script filters such as those used by web-based email clients. Data URIs must be smaller than 32 KiB in Version 8[3]. <li>Data URIs are supported only for the following elements and/or attributes[4]:      <li>object (images only) <li>img <li>input type=image <li>link <li>CSS declarations that accept a URL, such as background-image, background, list-style-type, list-style and similar. <li>Internet Explorer 9: Internet Explorer 9 does not have 32KiB limitation and allowed in broader elements. <li>TheWorld Browser: An IE shell browser which has a built-in support for Data URI scheme http://en.wikipedia.org/wiki/Data_URI_scheme#Web_browser_support",
        "summary": "Data URIs are now supported by the following web browsers: <li>Gecko-based, such as Firefox, SeaMonkey, XeroBank, Camino, Fennec and K-Meleon <li>Konqueror, via KDE's KIO slaves input/output system <li>Opera (including devices such as the Nintendo DSi or Wii) <li>WebKit-based, such as Safari (including on iOS), Android's browser, Epiphany and Midori (WebKit is a derivative of Konqueror's KHTML engine, but Mac OS X does not share the KIO architecture so the implementations are different), as well as Webkit/Chromium-based, such as Chrome <li>Trident      <li>Internet Explorer 8: Microsoft has limited its support to certain \"non-navigable\" content for security reasons, including concerns that JavaScript embedded in a data URI may not be interpretable by script filters such as those used by web-based email clients. Data URIs must be smaller than 32 KiB in Version 8[3]. <li>Data URIs are supported only for the following elements and/or attributes[4]:      <li>object (images only) <li>img <li>input type=image <li>link <li>CSS declarations that accept a URL, such as background-image, background, list-style-type, list-style and similar. <li>Internet Explorer 9: Internet Explorer 9 does not have 32KiB limitation and allowed in broader elements. <li>TheWorld Browser: An IE shell browser which has a built-in support for Data URI scheme"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's perfectly possible to use both a color and an image as background for an element. You set the <code>background-color</code> and <code>background-image</code> styles. If the image is smaller than the element, you need to use the <code>background-position</code> style to place it to the right, and to keep it from repeating and covering the entire background you use the <code>background-repeat</code> style: BIGBLOCK Or using the composite style <code>background</code>: BIGBLOCK If you use the composite style <code>background</code> to set both separately, only the last one will be used, that's one possible reason why your color is not visible: BIGBLOCK There is no way to specifically limit the background image to cover only part of the element, so you have to make sure that the image is smaller than the element, or that it has any transparent areas, for the background color to be visible.",
        "output": "It's perfectly possible to use both a color and an image as background for an element. If the image is smaller than the element, you need to use the <code>background-position</code> style to place it to the right, and to keep it from repeating and covering the entire background you use the <code>background-repeat</code> style: BIGBLOCK Or using the composite style <code>background</code>: BIGBLOCK If you use the composite style <code>background</code> to set both separately, only the last one will be used, that's one possible reason why your color is not visible: BIGBLOCK",
        "answer": "It's perfectly possible to use both a color and an image as background for an element. You set the <code>background-color</code> and <code>background-image</code> styles. If the image is smaller than the element, you need to use the <code>background-position</code> style to place it to the right, and to keep it from repeating and covering the entire background you use the <code>background-repeat</code> style: BIGBLOCK Or using the composite style <code>background</code>: BIGBLOCK If you use the composite style <code>background</code> to set both separately, only the last one will be used, that's one possible reason why your color is not visible: BIGBLOCK There is no way to specifically limit the background image to cover only part of the element, so you have to make sure that the image is smaller than the element, or that it has any transparent areas, for the background color to be visible.",
        "summary": "It's perfectly possible to use both a color and an image as background for an element. If the image is smaller than the element, you need to use the <code>background-position</code> style to place it to the right, and to keep it from repeating and covering the entire background you use the <code>background-repeat</code> style: BIGBLOCK Or using the composite style <code>background</code>: BIGBLOCK If you use the composite style <code>background</code> to set both separately, only the last one will be used, that's one possible reason why your color is not visible: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I feel your pain. You can learn programming out of a book, but when it comes to working with Eclipse or Visual Studio, its a ^&amp;<em>^&amp;</em>'n nightmare to do something simple like add a library. Everybody expects you to know how to use it and if you don't they downvote your question. The problem is, if you don't work in an office or know anyone who you can ask these questions, then its almost impossible to figure this stuff out. Anyway... I was having your problem, and this is how I fixed it. The following steps are a working way to add a library. I had done the first two steps right, but I hadn't done the last one by dragging the \".jar\" file direct from the file system into the \"lib\" folder on my eclipse project. Additionally, I had to remove the previous version of the library from both the build path and the \"lib\" folder. If anyone knows of a more proper way to add/update a library, please chime in. Step 1 - Add .jar to build path Step 2 - Associate sources and javadocs (optional) Step 3 - Actually drag .jar file into \"lib\" folder (not optional)",
        "output": "The following steps are a working way to add a library. I had done the first two steps right, but I hadn't done the last one by dragging the \".jar\" file direct from the file system into the \"lib\" folder on my eclipse project. Additionally, I had to remove the previous version of the library from both the build path and the \"lib\" folder. Step 1 - Add .jar to build path Step 2 - Associate sources and javadocs (optional) Step 3 - Actually drag .jar file into \"lib\" folder (not optional)",
        "answer": "I feel your pain. You can learn programming out of a book, but when it comes to working with Eclipse or Visual Studio, its a ^&amp;<em>^&amp;</em>'n nightmare to do something simple like add a library. Everybody expects you to know how to use it and if you don't they downvote your question. The problem is, if you don't work in an office or know anyone who you can ask these questions, then its almost impossible to figure this stuff out. Anyway... I was having your problem, and this is how I fixed it. The following steps are a working way to add a library. I had done the first two steps right, but I hadn't done the last one by dragging the \".jar\" file direct from the file system into the \"lib\" folder on my eclipse project. Additionally, I had to remove the previous version of the library from both the build path and the \"lib\" folder. If anyone knows of a more proper way to add/update a library, please chime in. Step 1 - Add .jar to build path Step 2 - Associate sources and javadocs (optional) Step 3 - Actually drag .jar file into \"lib\" folder (not optional)",
        "summary": "The following steps are a working way to add a library. I had done the first two steps right, but I hadn't done the last one by dragging the \".jar\" file direct from the file system into the \"lib\" folder on my eclipse project. Additionally, I had to remove the previous version of the library from both the build path and the \"lib\" folder. Step 1 - Add .jar to build path Step 2 - Associate sources and javadocs (optional) Step 3 - Actually drag .jar file into \"lib\" folder (not optional)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n OK, first of all, you don't have to get a reference to the module into a different name; you already have a reference (from the <code>import</code>) and you can just use it. If you want a different name just use <code>import swineflu as f</code>. Second, you are getting a reference to the class rather than instantiating the class. So this should be: A <em>bound method</em> is one that is attached to an instance of an object. An <em>unbound method</em> is, of course, one that is <em>not</em> attached to an instance. The error usually means you are calling the method on the class rather than on an instance, which is exactly what was happening in this case because you hadn't instantiated the class.",
        "output": "OK, first of all, you don't have to get a reference to the module into a different name; you already have a reference (from the <code>import</code>) and you can just use it. Second, you are getting a reference to the class rather than instantiating the class. The error usually means you are calling the method on the class rather than on an instance, which is exactly what was happening in this case because you hadn't instantiated the class.",
        "answer": "OK, first of all, you don't have to get a reference to the module into a different name; you already have a reference (from the <code>import</code>) and you can just use it. If you want a different name just use <code>import swineflu as f</code>. Second, you are getting a reference to the class rather than instantiating the class. So this should be: A <em>bound method</em> is one that is attached to an instance of an object. An <em>unbound method</em> is, of course, one that is <em>not</em> attached to an instance. The error usually means you are calling the method on the class rather than on an instance, which is exactly what was happening in this case because you hadn't instantiated the class.",
        "summary": "OK, first of all, you don't have to get a reference to the module into a different name; you already have a reference (from the <code>import</code>) and you can just use it. Second, you are getting a reference to the class rather than instantiating the class. The error usually means you are calling the method on the class rather than on an instance, which is exactly what was happening in this case because you hadn't instantiated the class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is a faster/simpler (and prototypical) variation of the function that Josh posted: BIGBLOCK Usage: BIGBLOCK I use this so much that I aliased it to just <code>f</code>, but you can also use the more verbose <code>format</code>. e.g. <code>'Hello {0}! '.format(name)</code>",
        "output": "BIGBLOCK BIGBLOCK",
        "answer": "This is a faster/simpler (and prototypical) variation of the function that Josh posted: BIGBLOCK Usage: BIGBLOCK I use this so much that I aliased it to just <code>f</code>, but you can also use the more verbose <code>format</code>. e.g. <code>'Hello {0}! '.format(name)</code>",
        "summary": "BIGBLOCK BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The theory (for the language lawyers and the mathematically inclined): <code>equals()</code> (javadoc) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false. <code>hashCode()</code> (javadoc) must also be <em>consistent</em> (if the object is not modified in terms of <code>equals()</code>, it must keep returning the same value). The <strong>relation</strong> between the two methods is: <em>Whenever <code>a.equals(b)</code>, then <code>a.hashCode()</code> must be same as <code>b.hashCode()</code>.</em> In practice: If you override one, then you should override the other. Use the same set of fields that you use to compute <code>equals()</code> to compute <code>hashCode()</code>. Use the excellent helper classes EqualsBuilder and HashCodeBuilder from the Apache Commons Lang library. An example: Also remember: When using a hash-based Collection or Map such as HashSet, LinkedHashSet, HashMap, Hashtable, or WeakHashMap, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection. The bulletproof way to ensure this is to make your keys immutable, which has also other benefits.",
        "output": "The theory (for the language lawyers and the mathematically inclined): <code>equals()</code> (javadoc) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false.",
        "answer": "The theory (for the language lawyers and the mathematically inclined): <code>equals()</code> (javadoc) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false. <code>hashCode()</code> (javadoc) must also be <em>consistent</em> (if the object is not modified in terms of <code>equals()</code>, it must keep returning the same value). The <strong>relation</strong> between the two methods is: <em>Whenever <code>a.equals(b)</code>, then <code>a.hashCode()</code> must be same as <code>b.hashCode()</code>.</em> In practice: If you override one, then you should override the other. Use the same set of fields that you use to compute <code>equals()</code> to compute <code>hashCode()</code>. Use the excellent helper classes EqualsBuilder and HashCodeBuilder from the Apache Commons Lang library. An example: Also remember: When using a hash-based Collection or Map such as HashSet, LinkedHashSet, HashMap, Hashtable, or WeakHashMap, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection. The bulletproof way to ensure this is to make your keys immutable, which has also other benefits.",
        "summary": "The theory (for the language lawyers and the mathematically inclined): <code>equals()</code> (javadoc) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I would prefer:",
        "output": "I would prefer:",
        "answer": "I would prefer:",
        "summary": "I would prefer:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Jeremy Ruten's idea of using a symlink triggered a thought that hasn't crossed any other answer. Use: The leading colon is important; it means that if there is a directory 'dir' in the current directory, then '<code>cd dir</code>' will change to that, rather than hopping off somewhere else. With the value set as shown, you can do: and, if there is no sub-directory called java in the current directory, then it will take you directly to $HOME/projects/java - no aliases, no scripts, no dubious execs or dot commands. My $HOME is /Users/jleffler; my $CDPATH is:",
        "output": "Use:",
        "answer": "Jeremy Ruten's idea of using a symlink triggered a thought that hasn't crossed any other answer. Use: The leading colon is important; it means that if there is a directory 'dir' in the current directory, then '<code>cd dir</code>' will change to that, rather than hopping off somewhere else. With the value set as shown, you can do: and, if there is no sub-directory called java in the current directory, then it will take you directly to $HOME/projects/java - no aliases, no scripts, no dubious execs or dot commands. My $HOME is /Users/jleffler; my $CDPATH is:",
        "summary": "Use:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For Python 2: For Python 3: See the documentation. If you are using Python 3.0, see this question. See answer by @S.Lott for an example of how you access globals from filename.py after executing it.",
        "output": "For Python 2: For Python 3:",
        "answer": "For Python 2: For Python 3: See the documentation. If you are using Python 3.0, see this question. See answer by @S.Lott for an example of how you access globals from filename.py after executing it.",
        "summary": "For Python 2: For Python 3:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Check out REPLACE http://dev.mysql.com/doc/refman/5.0/en/replace.html",
        "output": "Check out REPLACE",
        "answer": "Check out REPLACE http://dev.mysql.com/doc/refman/5.0/en/replace.html",
        "summary": "Check out REPLACE"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You get an ExceptionInInitializerError if something goes wrong in the static initializer block. Because static variables are initialized in static blocks there are a source of these errors too. An example: => So if foo() goes wild, you get a ExceptionInInitializerError.",
        "output": "You get an ExceptionInInitializerError if something goes wrong in the static initializer block.",
        "answer": "You get an ExceptionInInitializerError if something goes wrong in the static initializer block. Because static variables are initialized in static blocks there are a source of these errors too. An example: => So if foo() goes wild, you get a ExceptionInInitializerError.",
        "summary": "You get an ExceptionInInitializerError if something goes wrong in the static initializer block."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>&mdash;8 bytes selected by a <code>SecureRandom</code> makes a good salt&mdash;which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information: The magic numbers (which could be defined as constants somewhere) 65536 and 256 are the key derivation iteration count and the key size, respectively. The key derivation function is iterated to require significant computational effort, and that prevents attackers from quickly trying many different passwords. The iteration count can be changed depending on the computing resources available. The key size can be reduced to 128 bits, which is still considered \"strong\" encryption, but it doesn't give much of a safety margin if attacks are discovered that weaken AES. Used with a proper block-chaining mode, the same derived key can be used to encrypt many messages. In CBC, a random initialization vector (IV) is generated for each message, yielding different cipher text even if the plain text is identical. CBC may not be the most secure mode available to you (see AEAD below); there are many other modes with different security properties, but they all use a similar random input. In any case, the outputs of each encryption operation are the cipher text and the initialization vector: Store the <code>ciphertext</code> and the <code>iv</code>. On decryption, the <code>SecretKey</code> is regenerated in exactly the same way, using using the password with the same salt and iteration parameters. Initialize the cipher with this key and the initialization vector stored with the message: Java 7 included API support for AEAD cipher modes, and the \"SunJCE\" provider included with OpenJDK and Oracle distributions implements these beginning with Java 8. One of these modes is strongly recommended in place of CBC; it will protect the integrity of the data as well as their privacy. A <code>java.security.InvalidKeyException</code> with the message \"Illegal key size or default parameters\" means that the cryptography strength is limited; the unlimited strength jurisdiction policy files are not in the correct location. In a JDK, they should be placed under <code>${jdk}/jre/lib/security</code> Based on the problem description, it sounds like the policy files are not correctly installed. Systems can easily have multiple Java runtimes; double-check to make sure that the correct location is being used.",
        "output": "Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>&mdash;8 bytes selected by a <code>SecureRandom</code> makes a good salt&mdash;which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information:",
        "answer": "Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>&mdash;8 bytes selected by a <code>SecureRandom</code> makes a good salt&mdash;which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information: The magic numbers (which could be defined as constants somewhere) 65536 and 256 are the key derivation iteration count and the key size, respectively. The key derivation function is iterated to require significant computational effort, and that prevents attackers from quickly trying many different passwords. The iteration count can be changed depending on the computing resources available. The key size can be reduced to 128 bits, which is still considered \"strong\" encryption, but it doesn't give much of a safety margin if attacks are discovered that weaken AES. Used with a proper block-chaining mode, the same derived key can be used to encrypt many messages. In CBC, a random initialization vector (IV) is generated for each message, yielding different cipher text even if the plain text is identical. CBC may not be the most secure mode available to you (see AEAD below); there are many other modes with different security properties, but they all use a similar random input. In any case, the outputs of each encryption operation are the cipher text and the initialization vector: Store the <code>ciphertext</code> and the <code>iv</code>. On decryption, the <code>SecretKey</code> is regenerated in exactly the same way, using using the password with the same salt and iteration parameters. Initialize the cipher with this key and the initialization vector stored with the message: Java 7 included API support for AEAD cipher modes, and the \"SunJCE\" provider included with OpenJDK and Oracle distributions implements these beginning with Java 8. One of these modes is strongly recommended in place of CBC; it will protect the integrity of the data as well as their privacy. A <code>java.security.InvalidKeyException</code> with the message \"Illegal key size or default parameters\" means that the cryptography strength is limited; the unlimited strength jurisdiction policy files are not in the correct location. In a JDK, they should be placed under <code>${jdk}/jre/lib/security</code> Based on the problem description, it sounds like the policy files are not correctly installed. Systems can easily have multiple Java runtimes; double-check to make sure that the correct location is being used.",
        "summary": "Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>&mdash;8 bytes selected by a <code>SecureRandom</code> makes a good salt&mdash;which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Beside list comprehension, you can try <strong>map</strong> BIGBLOCK",
        "output": "Beside list comprehension, you can try <strong>map</strong> BIGBLOCK",
        "answer": "Beside list comprehension, you can try <strong>map</strong> BIGBLOCK",
        "summary": "Beside list comprehension, you can try <strong>map</strong> BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They are functionally equivalent, but <code>INNER JOIN</code> can be a bit clearer to read, especially if the query has other join types (i.e. <code>LEFT</code> or <code>RIGHT</code> or <code>CROSS</code>) included in it.",
        "output": "They are functionally equivalent, but <code>INNER JOIN</code> can be a bit clearer to read, especially if the query has other join types (i.e. <code>LEFT</code> or <code>RIGHT</code> or <code>CROSS</code>) included in it.",
        "answer": "They are functionally equivalent, but <code>INNER JOIN</code> can be a bit clearer to read, especially if the query has other join types (i.e. <code>LEFT</code> or <code>RIGHT</code> or <code>CROSS</code>) included in it.",
        "summary": "They are functionally equivalent, but <code>INNER JOIN</code> can be a bit clearer to read, especially if the query has other join types (i.e. <code>LEFT</code> or <code>RIGHT</code> or <code>CROSS</code>) included in it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the command svn status on your working copy to show the status of files, files that are not yet under version control (and not ignored) will have a question mark next to them. As for ignoring files you need to edit the svn:ignore property, read the chapter Ignoring Unversioned Items in the svnbook at http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.ignore.html. The book also describes more about using svn status.",
        "output": "Use the command svn status on your working copy to show the status of files, files that are not yet under version control (and not ignored) will have a question mark next to them. As for ignoring files you need to edit the svn:ignore property, read the chapter Ignoring Unversioned Items in the svnbook at http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.ignore.html.",
        "answer": "Use the command svn status on your working copy to show the status of files, files that are not yet under version control (and not ignored) will have a question mark next to them. As for ignoring files you need to edit the svn:ignore property, read the chapter Ignoring Unversioned Items in the svnbook at http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.ignore.html. The book also describes more about using svn status.",
        "summary": "Use the command svn status on your working copy to show the status of files, files that are not yet under version control (and not ignored) will have a question mark next to them. As for ignoring files you need to edit the svn:ignore property, read the chapter Ignoring Unversioned Items in the svnbook at http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.ignore.html."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Because <code>Dictionary</code> is a generic class ( <code>Dictionary&lt;TKey, TValue&gt;</code> ), so that accessing its content is type-safe (i.e. you do not need to cast from <code>Object</code>, as you do with a <code>Hashtable</code>). Compare to However, <code>Dictionary</code> is implemented as <code>Hashtable</code> inside, so technically it works the same way.",
        "output": "Because <code>Dictionary</code> is a generic class ( <code>Dictionary&lt;TKey, TValue&gt;</code> ), so that accessing its content is type-safe (i.e.",
        "answer": "Because <code>Dictionary</code> is a generic class ( <code>Dictionary&lt;TKey, TValue&gt;</code> ), so that accessing its content is type-safe (i.e. you do not need to cast from <code>Object</code>, as you do with a <code>Hashtable</code>). Compare to However, <code>Dictionary</code> is implemented as <code>Hashtable</code> inside, so technically it works the same way.",
        "summary": "Because <code>Dictionary</code> is a generic class ( <code>Dictionary&lt;TKey, TValue&gt;</code> ), so that accessing its content is type-safe (i.e."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 1) An interface can be seen as a pure Abstract Class, is the same, but despite this, is not the same to implement an interface and inheriting from an abstract class. When you inherit from this pure abstract class you are defining a hierarchy -> inheritance, if you implement the interface you are not, and you can implement as many interfaces as you want, but you can only inherit from one class. 2) You can define a property in an interface, so the class that implements that interface must have that property. For example: The class that implements that interface must have a property like that.",
        "output": "1) An interface can be seen as a pure Abstract Class, is the same, but despite this, is not the same to implement an interface and inheriting from an abstract class.",
        "answer": "1) An interface can be seen as a pure Abstract Class, is the same, but despite this, is not the same to implement an interface and inheriting from an abstract class. When you inherit from this pure abstract class you are defining a hierarchy -> inheritance, if you implement the interface you are not, and you can implement as many interfaces as you want, but you can only inherit from one class. 2) You can define a property in an interface, so the class that implements that interface must have that property. For example: The class that implements that interface must have a property like that.",
        "summary": "1) An interface can be seen as a pure Abstract Class, is the same, but despite this, is not the same to implement an interface and inheriting from an abstract class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The server first tries to authenticate you by public key. That doesn't work (I guess you haven't set one up), so it then falls back to 'keyboard-interactive'. It should then ask you for a password, which presumably you're not getting right. Did you see a password prompt?",
        "output": "The server first tries to authenticate you by public key. That doesn't work (I guess you haven't set one up), so it then falls back to 'keyboard-interactive'.",
        "answer": "The server first tries to authenticate you by public key. That doesn't work (I guess you haven't set one up), so it then falls back to 'keyboard-interactive'. It should then ask you for a password, which presumably you're not getting right. Did you see a password prompt?",
        "summary": "The server first tries to authenticate you by public key. That doesn't work (I guess you haven't set one up), so it then falls back to 'keyboard-interactive'."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you're dealing with literal notation, and not constructors, you can use typeof:. If you're creating numbers and strings via a constructor, such as <code>var foo = new String(\"foo\")</code>, you should keep in mind that <code>typeof</code> may return <code>object</code> for <code>foo</code>. Perhaps a more foolproof method of checking the type would be to utilize the method found in underscore.js (annotated source can be found here), This returns a boolean <code>true</code> for the following:",
        "output": "If you're dealing with literal notation, and not constructors, you can use typeof:.",
        "answer": "If you're dealing with literal notation, and not constructors, you can use typeof:. If you're creating numbers and strings via a constructor, such as <code>var foo = new String(\"foo\")</code>, you should keep in mind that <code>typeof</code> may return <code>object</code> for <code>foo</code>. Perhaps a more foolproof method of checking the type would be to utilize the method found in underscore.js (annotated source can be found here), This returns a boolean <code>true</code> for the following:",
        "summary": "If you're dealing with literal notation, and not constructors, you can use typeof:."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n (This answer has been updated to match SVN 1.8 and 1.9's behaviour) You have 2 questions: Marking files as ignored: By \"ignored file\" I mean the file won't appear in lists even as \"unversioned\": your SVN client will pretend the file doesn't exist at all in the filesystem. Ignored files are specified by a \"file pattern\". The syntax and format of file patterns is explained in SVN's online documentation: http://svnbook.red-bean.com/nightly/en/svn.advanced.props.special.ignore.html \"File Patterns in Subversion\". Subversion, as of version 1.8 (June 2013) and later, supports 3 different ways of specifying file patterns. Here's a summary with examples: 1 - Runtime Configuration Area - <code>global-ignores</code> option: This is a client-side only setting, so your <code>global-ignores</code> list won't be shared by other users, and it applies to all repos you checkout onto your computer. This setting is defined in your Runtime Configuration Area file: Windows (file-based) - <code>C:\\Users\\{you}\\AppData\\Roaming\\Subversion\\config</code> Windows (registry-based) - <code>Software\\Tigris.org\\Subversion\\Config\\Miscellany\\global-ignores</code> in both <code>HKLM</code> and <code>HKCU</code>. Linux/Unix - <code>~/.subversion/config</code> 2 - The <code>svn:ignore</code> property, which is set on directories (not files): This is stored within the repo, so other users will have the same ignore files. Similar to how <code>.gitignore</code> works. <code>svn:ignore</code> is applied to directories and is non-recursive or inherited. Any file or immediate subdirectory of the parent directory that matches the File Pattern will be excluded. While SVN 1.8 adds the concept of \"inherited properties\", the <code>svn:ignore</code> property itself is ignored in non-immediate descendant directories: (So the file <code>./subdirectory/ignoreThis</code> is not ignored, even though \"<code>ignoreThis.txt</code>\" is applied on the <code>.</code> repo root). Therefore, to apply an ignore list recursively you must use <code>svn propset svn:ignore &lt;filePattern&gt; . --recursive</code>. This will create a copy of the property on every subdirectory. If the <code>&lt;filePattern&gt;</code> value is different in a child directory then the child's value completely overrides the parents, so there is no \"additive\" effect. So if you change the <code>&lt;filePattern&gt;</code> on the root <code>.</code>, then you must change it with <code>--recursive</code> to overwrite it on the child and descendant directories. I note that the command-line syntax is counter-intuitive. I started-off assuming that you would ignore a file in SVN by typing something like <code>svn ignore pathToFileToIgnore.txt</code> however this is not how SVN's ignore feature works. 3- The <code>svn:global-ignores</code> property. Requires SVN 1.8 (June 2013): This is similar to <code>svn:ignore</code>, except it makes use of SVN 1.8's \"inherited properties\" feature. Compare to <code>svn:ignore</code>, the file pattern is automatically applied in every descendant directory (not just immediate children). This means that is unnecessary to set <code>svn:global-ignores</code> with the <code>--recursive</code> flag, as inherited ignore file patterns are automatically applied as they're inherited. Running the same set of commands as in the previous example, but using <code>svn:global-ignores</code> instead: For TortoiseSVN users: This whole arrangement was confusing for me, because TortoiseSVN's terminology (as used in their Windows Explorer menu system) was initially misleading to me - I was unsure what the significance of the Ignore menu's \"Add  recursively\", \"Add *\" and \"Add \" options. I hope this post explains how the Ignore feature ties-in to the SVN Properties feature. That said, I suggest using the command-line to set ignored files so you get a feel for how it works instead of using the GUI, and only using the GUI to manipulate properties after you're comfortable with the command-line. Listing files that are ignored: The command <code>svn status</code> will hide ignored files (that is, files that match an RGA <code>global-ignores</code> pattern, or match an immediate parent directory's <code>svn:ignore</code> pattern or match any ancesor directory's <code>svn:global-ignores</code> pattern. Use the <code>--no-ignore</code> option to see those files listed. Ignored files have a status of <code>I</code>, then pipe the output to <code>grep</code> to only show lines starting with \"I\". The command is: For example: ta-da!",
        "output": "Subversion, as of version 1.8 (June 2013) and later, supports 3 different ways of specifying file patterns. The command <code>svn status</code> will hide ignored files (that is, files that match an RGA <code>global-ignores</code> pattern, or match an immediate parent directory's <code>svn:ignore</code> pattern or match any ancesor directory's <code>svn:global-ignores</code> pattern.",
        "answer": "(This answer has been updated to match SVN 1.8 and 1.9's behaviour) You have 2 questions: Marking files as ignored: By \"ignored file\" I mean the file won't appear in lists even as \"unversioned\": your SVN client will pretend the file doesn't exist at all in the filesystem. Ignored files are specified by a \"file pattern\". The syntax and format of file patterns is explained in SVN's online documentation: http://svnbook.red-bean.com/nightly/en/svn.advanced.props.special.ignore.html \"File Patterns in Subversion\". Subversion, as of version 1.8 (June 2013) and later, supports 3 different ways of specifying file patterns. Here's a summary with examples: 1 - Runtime Configuration Area - <code>global-ignores</code> option: This is a client-side only setting, so your <code>global-ignores</code> list won't be shared by other users, and it applies to all repos you checkout onto your computer. This setting is defined in your Runtime Configuration Area file: Windows (file-based) - <code>C:\\Users\\{you}\\AppData\\Roaming\\Subversion\\config</code> Windows (registry-based) - <code>Software\\Tigris.org\\Subversion\\Config\\Miscellany\\global-ignores</code> in both <code>HKLM</code> and <code>HKCU</code>. Linux/Unix - <code>~/.subversion/config</code> 2 - The <code>svn:ignore</code> property, which is set on directories (not files): This is stored within the repo, so other users will have the same ignore files. Similar to how <code>.gitignore</code> works. <code>svn:ignore</code> is applied to directories and is non-recursive or inherited. Any file or immediate subdirectory of the parent directory that matches the File Pattern will be excluded. While SVN 1.8 adds the concept of \"inherited properties\", the <code>svn:ignore</code> property itself is ignored in non-immediate descendant directories: (So the file <code>./subdirectory/ignoreThis</code> is not ignored, even though \"<code>ignoreThis.txt</code>\" is applied on the <code>.</code> repo root). Therefore, to apply an ignore list recursively you must use <code>svn propset svn:ignore &lt;filePattern&gt; . --recursive</code>. This will create a copy of the property on every subdirectory. If the <code>&lt;filePattern&gt;</code> value is different in a child directory then the child's value completely overrides the parents, so there is no \"additive\" effect. So if you change the <code>&lt;filePattern&gt;</code> on the root <code>.</code>, then you must change it with <code>--recursive</code> to overwrite it on the child and descendant directories. I note that the command-line syntax is counter-intuitive. I started-off assuming that you would ignore a file in SVN by typing something like <code>svn ignore pathToFileToIgnore.txt</code> however this is not how SVN's ignore feature works. 3- The <code>svn:global-ignores</code> property. Requires SVN 1.8 (June 2013): This is similar to <code>svn:ignore</code>, except it makes use of SVN 1.8's \"inherited properties\" feature. Compare to <code>svn:ignore</code>, the file pattern is automatically applied in every descendant directory (not just immediate children). This means that is unnecessary to set <code>svn:global-ignores</code> with the <code>--recursive</code> flag, as inherited ignore file patterns are automatically applied as they're inherited. Running the same set of commands as in the previous example, but using <code>svn:global-ignores</code> instead: For TortoiseSVN users: This whole arrangement was confusing for me, because TortoiseSVN's terminology (as used in their Windows Explorer menu system) was initially misleading to me - I was unsure what the significance of the Ignore menu's \"Add  recursively\", \"Add *\" and \"Add \" options. I hope this post explains how the Ignore feature ties-in to the SVN Properties feature. That said, I suggest using the command-line to set ignored files so you get a feel for how it works instead of using the GUI, and only using the GUI to manipulate properties after you're comfortable with the command-line. Listing files that are ignored: The command <code>svn status</code> will hide ignored files (that is, files that match an RGA <code>global-ignores</code> pattern, or match an immediate parent directory's <code>svn:ignore</code> pattern or match any ancesor directory's <code>svn:global-ignores</code> pattern. Use the <code>--no-ignore</code> option to see those files listed. Ignored files have a status of <code>I</code>, then pipe the output to <code>grep</code> to only show lines starting with \"I\". The command is: For example: ta-da!",
        "summary": "Subversion, as of version 1.8 (June 2013) and later, supports 3 different ways of specifying file patterns. The command <code>svn status</code> will hide ignored files (that is, files that match an RGA <code>global-ignores</code> pattern, or match an immediate parent directory's <code>svn:ignore</code> pattern or match any ancesor directory's <code>svn:global-ignores</code> pattern."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's needed when you don't want to share some sensitive data that go with serialization.",
        "output": "It's needed when you don't want to share some sensitive data that go with serialization.",
        "answer": "It's needed when you don't want to share some sensitive data that go with serialization.",
        "summary": "It's needed when you don't want to share some sensitive data that go with serialization."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is called <strong><em>heredoc</strong> format</em> to provide a string into stdin. See https://en.wikipedia.org/wiki/Here_document#Unix_shells for more details. From <code>man bash</code>: Here Documents This type of redirection instructs the shell to read input from  the current source until a line  containing only word (with no trailing  blanks)  is  seen. All of the lines read up to that point are then used as the  standard input for a command. The format of here-documents is: No parameter expansion, command substitution, arithmetic expansion, or  pathname expansion is performed on  <strong>word</strong>. If any characters in <strong>word</strong> are  quoted, the  <strong>delimiter</strong> is the result of quote removal on <strong>word</strong>, and the lines  in the <strong>here-document</strong> are not expanded. If <strong>word</strong> is unquoted, all lines of  the  <strong>here-document</strong>  are  subjected  to  parameter  expansion,  command  substitution, and arithmetic  expansion. In the latter case, the  character sequence <code>\\&lt;newline&gt;</code> is  ignored, and <code>\\</code> must be used to quote the characters <code>\\</code>, <code>$</code>, and <code>`</code>. If the redirection operator is <code>&lt;&lt;-</code>, then all leading tab characters  are stripped from input lines and the  line containing <strong>delimiter</strong>. This   allows  here-documents within shell scripts to be indented in a natural fashion.",
        "output": "This is called <strong><em>heredoc</strong> format</em> to provide a string into stdin.",
        "answer": "This is called <strong><em>heredoc</strong> format</em> to provide a string into stdin. See https://en.wikipedia.org/wiki/Here_document#Unix_shells for more details. From <code>man bash</code>: Here Documents This type of redirection instructs the shell to read input from  the current source until a line  containing only word (with no trailing  blanks)  is  seen. All of the lines read up to that point are then used as the  standard input for a command. The format of here-documents is: No parameter expansion, command substitution, arithmetic expansion, or  pathname expansion is performed on  <strong>word</strong>. If any characters in <strong>word</strong> are  quoted, the  <strong>delimiter</strong> is the result of quote removal on <strong>word</strong>, and the lines  in the <strong>here-document</strong> are not expanded. If <strong>word</strong> is unquoted, all lines of  the  <strong>here-document</strong>  are  subjected  to  parameter  expansion,  command  substitution, and arithmetic  expansion. In the latter case, the  character sequence <code>\\&lt;newline&gt;</code> is  ignored, and <code>\\</code> must be used to quote the characters <code>\\</code>, <code>$</code>, and <code>`</code>. If the redirection operator is <code>&lt;&lt;-</code>, then all leading tab characters  are stripped from input lines and the  line containing <strong>delimiter</strong>. This   allows  here-documents within shell scripts to be indented in a natural fashion.",
        "summary": "This is called <strong><em>heredoc</strong> format</em> to provide a string into stdin."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The bit shifting operators do exactly what their name implies. They shift bits. Here's a brief (or not-so-brief) introduction to the different shift operators. The Operators <li><code>&gt;&gt;</code> is the  arithmetic (or signed) right shift operator. <li><code>&gt;&gt;&gt;</code> is the logical (or unsigned) right shift operator. <li><code>&lt;&lt;</code> is the left shift operator, and meets the needs of both logical and arithmetic shifts. All of these operators can be applied to integer values (<code>int</code>, <code>long</code>, possibly <code>short</code> and <code>byte</code> or <code>char</code>). In some languages, applying the shift operators to any datatype smaller than <code>int</code> automatically resizes the operand to be an <code>int</code>. Note that <code>&lt;&lt;&lt;</code> is not an operator, because it would be redundant. Also note that C and C++ do not distinguish between the right shift operators. They provide only the <code>&gt;&gt;</code> operator, and the right-shifting behavior is implementation defined for signed types. Left shift (&lt;&lt;) Integers are stored, in memory, as a series of bits. For example, the number 6 stored as a 32-bit <code>int</code> would be: Shifting this bit pattern to the left one position (<code>6 &lt;&lt; 1</code>) would result in the number 12: As you can see, the digits have shifted to the left by one position, and the last digit on the right is filled with a zero. You might also note that shifting left is equivalent to multiplication by powers of 2. So <code>6 &lt;&lt; 1</code> is equivalent to <code>6 * 2</code>, and <code>6 &lt;&lt; 3</code> is equivalent to <code>6 * 8</code>. A good optimizing compiler will replace multiplications with shifts when possible. Non-circular shifting Please note that these are <em>not</em> circular shifts. Shifting this value to the left by one position (<code>3,758,096,384 &lt;&lt; 1</code>): results in 3,221,225,472: The digit that gets shifted \"off the end\" is lost. It does not wrap around. Logical right shift (>>>) A logical right shift is the converse to the left shift. Rather than moving bits to the left, they simply move to the right. For example, shifting the number 12: to the right by one position (<code>12 &gt;&gt;&gt; 1</code>) will get back our original 6: So we see that shifting to the right is equivalent to division by powers of 2. Lost bits are gone However, a shift cannot reclaim \"lost\" bits. For example, if we shift this pattern: to the left 4 positions (<code>939,524,102 &lt;&lt; 4</code>), we get 2,147,483,744: and then shifting back (<code>(939,524,102 &lt;&lt; 4) &gt;&gt;&gt; 4</code>) we get 134,217,734: We cannot get back our original value once we have lost bits. Arithmetic right shift (>>) The arithmetic right shift is exactly like the logical right shift, except instead of padding with zero, it pads with the most significant bit. This is because the most significant bit is the <em>sign</em> bit, or the bit that distinguishes positive and negative numbers. By padding with the most significant bit, the arithmetic right shift is sign-preserving. For example, if we interpret this bit pattern as a negative number: we have the number -2,147,483,552. Shifting this to the right 4 positions with the arithmetic shift (-2,147,483,552 >> 4) would give us: or the number -134,217,722. So we see that we have preserved the sign of our negative numbers by using the arithmetic right shift, rather than the logical right shift. And once again, we see that we are performing division by powers of 2.",
        "output": "The bit shifting operators do exactly what their name implies. They shift bits. <li><code>&gt;&gt;</code> is the  arithmetic (or signed) right shift operator. <li><code>&gt;&gt;&gt;</code> is the logical (or unsigned) right shift operator. <li><code>&lt;&lt;</code> is the left shift operator, and meets the needs of both logical and arithmetic shifts. All of these operators can be applied to integer values (<code>int</code>, <code>long</code>, possibly <code>short</code> and <code>byte</code> or <code>char</code>). In some languages, applying the shift operators to any datatype smaller than <code>int</code> automatically resizes the operand to be an <code>int</code>.",
        "answer": "The bit shifting operators do exactly what their name implies. They shift bits. Here's a brief (or not-so-brief) introduction to the different shift operators. The Operators <li><code>&gt;&gt;</code> is the  arithmetic (or signed) right shift operator. <li><code>&gt;&gt;&gt;</code> is the logical (or unsigned) right shift operator. <li><code>&lt;&lt;</code> is the left shift operator, and meets the needs of both logical and arithmetic shifts. All of these operators can be applied to integer values (<code>int</code>, <code>long</code>, possibly <code>short</code> and <code>byte</code> or <code>char</code>). In some languages, applying the shift operators to any datatype smaller than <code>int</code> automatically resizes the operand to be an <code>int</code>. Note that <code>&lt;&lt;&lt;</code> is not an operator, because it would be redundant. Also note that C and C++ do not distinguish between the right shift operators. They provide only the <code>&gt;&gt;</code> operator, and the right-shifting behavior is implementation defined for signed types. Left shift (&lt;&lt;) Integers are stored, in memory, as a series of bits. For example, the number 6 stored as a 32-bit <code>int</code> would be: Shifting this bit pattern to the left one position (<code>6 &lt;&lt; 1</code>) would result in the number 12: As you can see, the digits have shifted to the left by one position, and the last digit on the right is filled with a zero. You might also note that shifting left is equivalent to multiplication by powers of 2. So <code>6 &lt;&lt; 1</code> is equivalent to <code>6 * 2</code>, and <code>6 &lt;&lt; 3</code> is equivalent to <code>6 * 8</code>. A good optimizing compiler will replace multiplications with shifts when possible. Non-circular shifting Please note that these are <em>not</em> circular shifts. Shifting this value to the left by one position (<code>3,758,096,384 &lt;&lt; 1</code>): results in 3,221,225,472: The digit that gets shifted \"off the end\" is lost. It does not wrap around. Logical right shift (>>>) A logical right shift is the converse to the left shift. Rather than moving bits to the left, they simply move to the right. For example, shifting the number 12: to the right by one position (<code>12 &gt;&gt;&gt; 1</code>) will get back our original 6: So we see that shifting to the right is equivalent to division by powers of 2. Lost bits are gone However, a shift cannot reclaim \"lost\" bits. For example, if we shift this pattern: to the left 4 positions (<code>939,524,102 &lt;&lt; 4</code>), we get 2,147,483,744: and then shifting back (<code>(939,524,102 &lt;&lt; 4) &gt;&gt;&gt; 4</code>) we get 134,217,734: We cannot get back our original value once we have lost bits. Arithmetic right shift (>>) The arithmetic right shift is exactly like the logical right shift, except instead of padding with zero, it pads with the most significant bit. This is because the most significant bit is the <em>sign</em> bit, or the bit that distinguishes positive and negative numbers. By padding with the most significant bit, the arithmetic right shift is sign-preserving. For example, if we interpret this bit pattern as a negative number: we have the number -2,147,483,552. Shifting this to the right 4 positions with the arithmetic shift (-2,147,483,552 >> 4) would give us: or the number -134,217,722. So we see that we have preserved the sign of our negative numbers by using the arithmetic right shift, rather than the logical right shift. And once again, we see that we are performing division by powers of 2.",
        "summary": "The bit shifting operators do exactly what their name implies. They shift bits. <li><code>&gt;&gt;</code> is the  arithmetic (or signed) right shift operator. <li><code>&gt;&gt;&gt;</code> is the logical (or unsigned) right shift operator. <li><code>&lt;&lt;</code> is the left shift operator, and meets the needs of both logical and arithmetic shifts. All of these operators can be applied to integer values (<code>int</code>, <code>long</code>, possibly <code>short</code> and <code>byte</code> or <code>char</code>). In some languages, applying the shift operators to any datatype smaller than <code>int</code> automatically resizes the operand to be an <code>int</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I might be barking up the wrong tree here, but your exception seems to indicate your MySQL server isn't available. Exception in thread \"main\" com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:   Communications link failureThe last packet sent successfully to the server was 0   milliseconds ago. The driver has not received any packets from the server. at... What happens if you try (from the terminal) You will be prompted for the password associated with the username. After you give the correct password does the mysql client connect? You may have to start MySQL from the Preferences if not. You can also set it to run at startup.",
        "output": "I might be barking up the wrong tree here, but your exception seems to indicate your MySQL server isn't available.",
        "answer": "I might be barking up the wrong tree here, but your exception seems to indicate your MySQL server isn't available. Exception in thread \"main\" com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:   Communications link failureThe last packet sent successfully to the server was 0   milliseconds ago. The driver has not received any packets from the server. at... What happens if you try (from the terminal) You will be prompted for the password associated with the username. After you give the correct password does the mysql client connect? You may have to start MySQL from the Preferences if not. You can also set it to run at startup.",
        "summary": "I might be barking up the wrong tree here, but your exception seems to indicate your MySQL server isn't available."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to Scott Myers, Effective C++ (3rd ed.) item 42 (which must, of course, be the ultimate answer)  - the difference is \"nothing\". Advice is to use \"class\" if it is expected T will always be a class, with \"typename\"  if other types (int, char* whatever) may be expected. Consider it a usage hint.",
        "output": "Advice is to use \"class\" if it is expected T will always be a class, with \"typename\"  if other types (int, char* whatever) may be expected.",
        "answer": "According to Scott Myers, Effective C++ (3rd ed.) item 42 (which must, of course, be the ultimate answer)  - the difference is \"nothing\". Advice is to use \"class\" if it is expected T will always be a class, with \"typename\"  if other types (int, char* whatever) may be expected. Consider it a usage hint.",
        "summary": "Advice is to use \"class\" if it is expected T will always be a class, with \"typename\"  if other types (int, char* whatever) may be expected."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To be able to access them from your static methods they need to be static member variables, like this:",
        "output": "To be able to access them from your static methods they need to be static member variables, like this:",
        "answer": "To be able to access them from your static methods they need to be static member variables, like this:",
        "summary": "To be able to access them from your static methods they need to be static member variables, like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you have access to change the JVM parameters, adding verbose output should allow you to see what classes are being loaded from what JARs. When your program is run, the JVM should dump to standard out information such as: ... [Loaded junit.framework.Assert from file:/C:/Program%20Files/junit3.8.2/junit.jar] ...",
        "output": "If you have access to change the JVM parameters, adding verbose output should allow you to see what classes are being loaded from what JARs.",
        "answer": "If you have access to change the JVM parameters, adding verbose output should allow you to see what classes are being loaded from what JARs. When your program is run, the JVM should dump to standard out information such as: ... [Loaded junit.framework.Assert from file:/C:/Program%20Files/junit3.8.2/junit.jar] ...",
        "summary": "If you have access to change the JVM parameters, adding verbose output should allow you to see what classes are being loaded from what JARs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just follow closely the chain of events. <li>Grab 10 <li>Grab 20 <li>Grab 30 <li>Grab EOF Look at the second-to-last iteration. You grabbed 30, then carried on to check for EOF. You haven't reached EOF because the EOF mark hasn't been read yet (\"binarically\" speaking, its conceptual location is just after the 30 line). Therefore you carry on to the next iteration. x is still 30 from previous iteration. Now you read from the stream and you get EOF. x remains 30 and the ios::eofbit is raised. You output to stderr x (which is 30, just like in the previous iteration). Next you check for EOF in the loop condition, and this time you're out of the loop. Try this: BIGBLOCK By the way, there is another bug in your code. Did you ever try to run it on an empty file? The behaviour you get is for the exact same reason.",
        "output": "Try this: BIGBLOCK By the way, there is another bug in your code. Did you ever try to run it on an empty file?",
        "answer": "Just follow closely the chain of events. <li>Grab 10 <li>Grab 20 <li>Grab 30 <li>Grab EOF Look at the second-to-last iteration. You grabbed 30, then carried on to check for EOF. You haven't reached EOF because the EOF mark hasn't been read yet (\"binarically\" speaking, its conceptual location is just after the 30 line). Therefore you carry on to the next iteration. x is still 30 from previous iteration. Now you read from the stream and you get EOF. x remains 30 and the ios::eofbit is raised. You output to stderr x (which is 30, just like in the previous iteration). Next you check for EOF in the loop condition, and this time you're out of the loop. Try this: BIGBLOCK By the way, there is another bug in your code. Did you ever try to run it on an empty file? The behaviour you get is for the exact same reason.",
        "summary": "Try this: BIGBLOCK By the way, there is another bug in your code. Did you ever try to run it on an empty file?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is an alternate solution, Coollection. Coolection has not pretend to be the new lambda, however we're surrounded by old legacy Java projects where this lib will help. It's really simple to use and extend, covering only the most used actions of iteration over collections, like that: BIGBLOCK",
        "output": "There is an alternate solution, Coollection. It's really simple to use and extend, covering only the most used actions of iteration over collections, like that: BIGBLOCK",
        "answer": "There is an alternate solution, Coollection. Coolection has not pretend to be the new lambda, however we're surrounded by old legacy Java projects where this lib will help. It's really simple to use and extend, covering only the most used actions of iteration over collections, like that: BIGBLOCK",
        "summary": "There is an alternate solution, Coollection. It's really simple to use and extend, covering only the most used actions of iteration over collections, like that: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Popen.communicate()</code> documentation: Note that if you want to send data to  the processÃ©ÂÂ¥Ã¦ÂªÂ stdin, you need to  create the Popen object with  stdin=PIPE. Similarly, to get anything  other than None in the result tuple,  you need to give stdout=PIPE and/or  stderr=PIPE too. <strong>Replacing os.popen*</strong> BIGBLOCK <strong>Warning</strong> Use communicate() rather than  stdin.write(), stdout.read() or  stderr.read() to avoid deadlocks due  to any of the other OS pipe buffers  filling up and blocking the child  process. So your example could be written as follows: BIGBLOCK On the current Python 3 version, you could use <code>subprocess.run</code>, to pass input as a string to an external command and get its exit status, and its output as a string back in one call: BIGBLOCK",
        "output": "Note that if you want to send data to  the processÃ©ÂÂ¥Ã¦ÂªÂ stdin, you need to  create the Popen object with  stdin=PIPE. <strong>Warning</strong> Use communicate() rather than  stdin.write(), stdout.read() or  stderr.read() to avoid deadlocks due  to any of the other OS pipe buffers  filling up and blocking the child  process. So your example could be written as follows: BIGBLOCK On the current Python 3 version, you could use <code>subprocess.run</code>, to pass input as a string to an external command and get its exit status, and its output as a string back in one call: BIGBLOCK",
        "answer": "<code>Popen.communicate()</code> documentation: Note that if you want to send data to  the processÃ©ÂÂ¥Ã¦ÂªÂ stdin, you need to  create the Popen object with  stdin=PIPE. Similarly, to get anything  other than None in the result tuple,  you need to give stdout=PIPE and/or  stderr=PIPE too. <strong>Replacing os.popen*</strong> BIGBLOCK <strong>Warning</strong> Use communicate() rather than  stdin.write(), stdout.read() or  stderr.read() to avoid deadlocks due  to any of the other OS pipe buffers  filling up and blocking the child  process. So your example could be written as follows: BIGBLOCK On the current Python 3 version, you could use <code>subprocess.run</code>, to pass input as a string to an external command and get its exit status, and its output as a string back in one call: BIGBLOCK",
        "summary": "Note that if you want to send data to  the processÃ©ÂÂ¥Ã¦ÂªÂ stdin, you need to  create the Popen object with  stdin=PIPE. <strong>Warning</strong> Use communicate() rather than  stdin.write(), stdout.read() or  stderr.read() to avoid deadlocks due  to any of the other OS pipe buffers  filling up and blocking the child  process. So your example could be written as follows: BIGBLOCK On the current Python 3 version, you could use <code>subprocess.run</code>, to pass input as a string to an external command and get its exit status, and its output as a string back in one call: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I had the same problem in some browser to access to my SSL site.I  have found that <strong>I had to give to fireFox the right proxy</strong> (FireFox was accessing directly to internet). Depending of the lan configuration (Tunneling, filtering, proxy redirection), the \"direct access to internet\" mode for FireFox throws this error.",
        "output": "Depending of the lan configuration (Tunneling, filtering, proxy redirection), the \"direct access to internet\" mode for FireFox throws this error.",
        "answer": "I had the same problem in some browser to access to my SSL site.I  have found that <strong>I had to give to fireFox the right proxy</strong> (FireFox was accessing directly to internet). Depending of the lan configuration (Tunneling, filtering, proxy redirection), the \"direct access to internet\" mode for FireFox throws this error.",
        "summary": "Depending of the lan configuration (Tunneling, filtering, proxy redirection), the \"direct access to internet\" mode for FireFox throws this error."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To define this on a permanent basis for the current user, create (or edit) the <code>.vimrc</code> file: Then, paste the configuration below into the file. Once vim is restarted, the tab settings will apply.",
        "output": "To define this on a permanent basis for the current user, create (or edit) the <code>.vimrc</code> file: Then, paste the configuration below into the file. Once vim is restarted, the tab settings will apply.",
        "answer": "To define this on a permanent basis for the current user, create (or edit) the <code>.vimrc</code> file: Then, paste the configuration below into the file. Once vim is restarted, the tab settings will apply.",
        "summary": "To define this on a permanent basis for the current user, create (or edit) the <code>.vimrc</code> file: Then, paste the configuration below into the file. Once vim is restarted, the tab settings will apply."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Voted up Jason Cohen's argument because it was well presented. Let me dismember it step by step. ;-) The NPE JavaDoc explicitly says, \"other illegal uses of the null object\". If it was just limited to situations where the runtime encounters a null when it shouldn't, all such cases could be defined far more succinctly. Can't help it if you assume the wrong thing, but assuming encapsulation is applied properly, you really shouldn't care or notice whether a null was dereferenced inappropriately vs. whether a method detected an inappropriate null and fired an exception off. I'd choose NPE over IAE for multiple reasons It is more specific about the nature of the illegal operation Logic that mistakenly allows nulls tends to be very different from logic that mistakenly allows illegal values. For example, if I'm validating data entered by a user, if I get value that is unacceptable, the source of that error is with the end user of the application. If I get a null, that's programmer error. Invalid values can cause things like stack overflows, out of memory errors, parsing exceptions, etc. Indeed, most errors generally present, at some point, as an invalid value in some method call. For this reason I see IAE as actually the MOST GENERAL of all exceptions under RuntimeException. Actually, other invalid arguments can result in all kinds of other exceptions. UnknownHostException, FileNotFoundException, a variety of syntax error exceptions, IndexOutOfBoundsException, authentication failures, etc., etc. In general, I feel NPE is much maligned because traditionally has been associated with code that fails to follow the fail fast principle. That, plus the JDK's failure to populate NPE's with a message string really has created a strong negative sentiment that isn't well founded. Indeed, the difference between NPE and IAE from a runtime perspective is strictly the name. From that perspective, the more precise you are with the name, the more clarity you give to the caller.",
        "output": "In general, I feel NPE is much maligned because traditionally has been associated with code that fails to follow the fail fast principle.",
        "answer": "Voted up Jason Cohen's argument because it was well presented. Let me dismember it step by step. ;-) The NPE JavaDoc explicitly says, \"other illegal uses of the null object\". If it was just limited to situations where the runtime encounters a null when it shouldn't, all such cases could be defined far more succinctly. Can't help it if you assume the wrong thing, but assuming encapsulation is applied properly, you really shouldn't care or notice whether a null was dereferenced inappropriately vs. whether a method detected an inappropriate null and fired an exception off. I'd choose NPE over IAE for multiple reasons It is more specific about the nature of the illegal operation Logic that mistakenly allows nulls tends to be very different from logic that mistakenly allows illegal values. For example, if I'm validating data entered by a user, if I get value that is unacceptable, the source of that error is with the end user of the application. If I get a null, that's programmer error. Invalid values can cause things like stack overflows, out of memory errors, parsing exceptions, etc. Indeed, most errors generally present, at some point, as an invalid value in some method call. For this reason I see IAE as actually the MOST GENERAL of all exceptions under RuntimeException. Actually, other invalid arguments can result in all kinds of other exceptions. UnknownHostException, FileNotFoundException, a variety of syntax error exceptions, IndexOutOfBoundsException, authentication failures, etc., etc. In general, I feel NPE is much maligned because traditionally has been associated with code that fails to follow the fail fast principle. That, plus the JDK's failure to populate NPE's with a message string really has created a strong negative sentiment that isn't well founded. Indeed, the difference between NPE and IAE from a runtime perspective is strictly the name. From that perspective, the more precise you are with the name, the more clarity you give to the caller.",
        "summary": "In general, I feel NPE is much maligned because traditionally has been associated with code that fails to follow the fail fast principle."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Like you say, you need to show some code. :-) A stack overflow error usually happens when your function calls nest too deeply. See the Stack Overflow Code Golf thread for some examples of how this happens (though in the case of that question, the answers intentionally cause stack overflow).",
        "output": "A stack overflow error usually happens when your function calls nest too deeply.",
        "answer": "Like you say, you need to show some code. :-) A stack overflow error usually happens when your function calls nest too deeply. See the Stack Overflow Code Golf thread for some examples of how this happens (though in the case of that question, the answers intentionally cause stack overflow).",
        "summary": "A stack overflow error usually happens when your function calls nest too deeply."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Response.Redirect()</code> throws an exception to abort the current request. This KB article describes this behavior (also for the <code>Request.End()</code> and <code>Server.Transfer()</code> methods). For <code>Response.Redirect()</code> there exists an overload: If you pass endResponse=false, then the exception is not thrown (but the runtime will continue processing the current request). If endResponse=true (or if the other overload is used), the exception is thrown and the current request will immediately be terminated.",
        "output": "<code>Response.Redirect()</code> throws an exception to abort the current request. For <code>Response.Redirect()</code> there exists an overload: If you pass endResponse=false, then the exception is not thrown (but the runtime will continue processing the current request). If endResponse=true (or if the other overload is used), the exception is thrown and the current request will immediately be terminated.",
        "answer": "<code>Response.Redirect()</code> throws an exception to abort the current request. This KB article describes this behavior (also for the <code>Request.End()</code> and <code>Server.Transfer()</code> methods). For <code>Response.Redirect()</code> there exists an overload: If you pass endResponse=false, then the exception is not thrown (but the runtime will continue processing the current request). If endResponse=true (or if the other overload is used), the exception is thrown and the current request will immediately be terminated.",
        "summary": "<code>Response.Redirect()</code> throws an exception to abort the current request. For <code>Response.Redirect()</code> there exists an overload: If you pass endResponse=false, then the exception is not thrown (but the runtime will continue processing the current request). If endResponse=true (or if the other overload is used), the exception is thrown and the current request will immediately be terminated."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As Daniel Lew mentioned, cyclic graphs have some problems. If I had this problem I'd either add special <code>clone()</code> methods to the problematic objects or remember which objects I've already copied. I'd do it with a variable <code>copyCount</code> which increases by 1 every time you copy in your code. An object that has a lower <code>copyCount</code> than the current copy-process is copied. If not, the copy, that exists already, should be referenced. This makes it necessary to link from the original to its copy. There is still one problem: Memory. If you have this reference from one object to the other, it's likely that the browser can't free those objects, as they are always referenced from somewhere. You'd have to make a second pass where you set all copy-references to Null. (If you do this, you'd not have to have a <code>copyCount</code> but a boolean <code>isCopied</code> would be enough, as you can reset the value in the second pass.)",
        "output": "I'd do it with a variable <code>copyCount</code> which increases by 1 every time you copy in your code. An object that has a lower <code>copyCount</code> than the current copy-process is copied. If not, the copy, that exists already, should be referenced. This makes it necessary to link from the original to its copy. You'd have to make a second pass where you set all copy-references to Null.",
        "answer": "As Daniel Lew mentioned, cyclic graphs have some problems. If I had this problem I'd either add special <code>clone()</code> methods to the problematic objects or remember which objects I've already copied. I'd do it with a variable <code>copyCount</code> which increases by 1 every time you copy in your code. An object that has a lower <code>copyCount</code> than the current copy-process is copied. If not, the copy, that exists already, should be referenced. This makes it necessary to link from the original to its copy. There is still one problem: Memory. If you have this reference from one object to the other, it's likely that the browser can't free those objects, as they are always referenced from somewhere. You'd have to make a second pass where you set all copy-references to Null. (If you do this, you'd not have to have a <code>copyCount</code> but a boolean <code>isCopied</code> would be enough, as you can reset the value in the second pass.)",
        "summary": "I'd do it with a variable <code>copyCount</code> which increases by 1 every time you copy in your code. An object that has a lower <code>copyCount</code> than the current copy-process is copied. If not, the copy, that exists already, should be referenced. This makes it necessary to link from the original to its copy. You'd have to make a second pass where you set all copy-references to Null."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A user defined type that has the possible values of <code>kCircle</code>, <code>kRectangle</code>, or <code>kOblateSpheroid</code>. The values inside the enum (kCircle, etc) are visible outside the enum, though. It's important to keep that in mind (<code>int i = kCircle;</code> is valid, for example).",
        "output": "A user defined type that has the possible values of <code>kCircle</code>, <code>kRectangle</code>, or <code>kOblateSpheroid</code>.",
        "answer": "A user defined type that has the possible values of <code>kCircle</code>, <code>kRectangle</code>, or <code>kOblateSpheroid</code>. The values inside the enum (kCircle, etc) are visible outside the enum, though. It's important to keep that in mind (<code>int i = kCircle;</code> is valid, for example).",
        "summary": "A user defined type that has the possible values of <code>kCircle</code>, <code>kRectangle</code>, or <code>kOblateSpheroid</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you have queries that will be frequently using a relatively static set of columns, creating a single covering index that includes them all will improve performance dramatically. By putting multiple columns in your index, the optimizer will only have to access the table directly if a column is not in the index. I use these a lot in data warehousing. The downside is that doing this can cost a lot of overhead, especially if the data is very volatile. Creating indexes on single columns is useful for lookup operations frequently found in OLTP systems. You should ask yourself why you're indexing the columns and how they'll be used. Run some query plans and see when they are being accessed. Index tuning is as much instinct as science.",
        "output": "By putting multiple columns in your index, the optimizer will only have to access the table directly if a column is not in the index. The downside is that doing this can cost a lot of overhead, especially if the data is very volatile. Index tuning is as much instinct as science.",
        "answer": "If you have queries that will be frequently using a relatively static set of columns, creating a single covering index that includes them all will improve performance dramatically. By putting multiple columns in your index, the optimizer will only have to access the table directly if a column is not in the index. I use these a lot in data warehousing. The downside is that doing this can cost a lot of overhead, especially if the data is very volatile. Creating indexes on single columns is useful for lookup operations frequently found in OLTP systems. You should ask yourself why you're indexing the columns and how they'll be used. Run some query plans and see when they are being accessed. Index tuning is as much instinct as science.",
        "summary": "By putting multiple columns in your index, the optimizer will only have to access the table directly if a column is not in the index. The downside is that doing this can cost a lot of overhead, especially if the data is very volatile. Index tuning is as much instinct as science."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can do a lot without going nuts on 3rd-party products and mshtml (i.e. interop). use the System.Windows.Forms.WebBrowser. From there, you can do such things as \"GetElementById\" on an HtmlDocument or \"GetElementsByTagName\" on HtmlElements. If you want to actually inteface with the browser (simulate button clicks for example), you can use a little reflection (imo a lesser evil than Interop) to do it: ... tell the browser to navigate (tangential to this question). Then on the Document_Completed event you can simulate clicks like this. you can do similar reflection stuff to submit forms, etc. Enjoy.",
        "output": "use the System.Windows.Forms.WebBrowser.",
        "answer": "You can do a lot without going nuts on 3rd-party products and mshtml (i.e. interop). use the System.Windows.Forms.WebBrowser. From there, you can do such things as \"GetElementById\" on an HtmlDocument or \"GetElementsByTagName\" on HtmlElements. If you want to actually inteface with the browser (simulate button clicks for example), you can use a little reflection (imo a lesser evil than Interop) to do it: ... tell the browser to navigate (tangential to this question). Then on the Document_Completed event you can simulate clicks like this. you can do similar reflection stuff to submit forms, etc. Enjoy.",
        "summary": "use the System.Windows.Forms.WebBrowser."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You should add \"throws IOException\" to your main method: <code>public static void main(String[] args) throws IOException {</code> You can read a bit more about checked exceptions (which are specific to Java) in JLS.",
        "output": "You should add \"throws IOException\" to your main method:",
        "answer": "You should add \"throws IOException\" to your main method: <code>public static void main(String[] args) throws IOException {</code> You can read a bit more about checked exceptions (which are specific to Java) in JLS.",
        "summary": "You should add \"throws IOException\" to your main method:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n On a first hand, a web server serves web content (HTML and static content) over the HTTP protocol. On the other hand, an application server is a container upon which you can build and expose business logic and processes to client applications through various protocols including HTTP in a n-tier architecture. An application server thus offers much more services than an web server which typically include: <li>A (proprietary or not) API <li>Object life cycle management, <li>State management (session), <li>Resource management (e.g. connection pools to database), <li>Load balancing, fail over... AFAIK, ATG Dynamo was one of the very first application server in late 90's (according to the definition above). In early 2000, it was the reign of some proprietary application servers like ColdFusion (CFML AS), BroadVision (Server-side JavaScript AS), etc. But none really survived the Java application server era.",
        "output": "On a first hand, a web server serves web content (HTML and static content) over the HTTP protocol. On the other hand, an application server is a container upon which you can build and expose business logic and processes to client applications through various protocols including HTTP in a n-tier architecture. An application server thus offers much more services than an web server which typically include: <li>A (proprietary or not) API <li>Object life cycle management, <li>State management (session), <li>Resource management (e.g. connection pools to database), <li>Load balancing, fail over...",
        "answer": "On a first hand, a web server serves web content (HTML and static content) over the HTTP protocol. On the other hand, an application server is a container upon which you can build and expose business logic and processes to client applications through various protocols including HTTP in a n-tier architecture. An application server thus offers much more services than an web server which typically include: <li>A (proprietary or not) API <li>Object life cycle management, <li>State management (session), <li>Resource management (e.g. connection pools to database), <li>Load balancing, fail over... AFAIK, ATG Dynamo was one of the very first application server in late 90's (according to the definition above). In early 2000, it was the reign of some proprietary application servers like ColdFusion (CFML AS), BroadVision (Server-side JavaScript AS), etc. But none really survived the Java application server era.",
        "summary": "On a first hand, a web server serves web content (HTML and static content) over the HTTP protocol. On the other hand, an application server is a container upon which you can build and expose business logic and processes to client applications through various protocols including HTTP in a n-tier architecture. An application server thus offers much more services than an web server which typically include: <li>A (proprietary or not) API <li>Object life cycle management, <li>State management (session), <li>Resource management (e.g. connection pools to database), <li>Load balancing, fail over..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In jQuery, the <code>fn</code> property is just an alias to the <code>prototype</code> property. The <code>jQuery</code> identifier (or <code>$</code>) is just a <em>constructor function</em>, and all instances created with it, inherit from the constructor's prototype. A simple constructor function: BIGBLOCK A simple structure that resembles the architecture of jQuery: BIGBLOCK",
        "output": "In jQuery, the <code>fn</code> property is just an alias to the <code>prototype</code> property. The <code>jQuery</code> identifier (or <code>$</code>) is just a <em>constructor function</em>, and all instances created with it, inherit from the constructor's prototype.",
        "answer": "In jQuery, the <code>fn</code> property is just an alias to the <code>prototype</code> property. The <code>jQuery</code> identifier (or <code>$</code>) is just a <em>constructor function</em>, and all instances created with it, inherit from the constructor's prototype. A simple constructor function: BIGBLOCK A simple structure that resembles the architecture of jQuery: BIGBLOCK",
        "summary": "In jQuery, the <code>fn</code> property is just an alias to the <code>prototype</code> property. The <code>jQuery</code> identifier (or <code>$</code>) is just a <em>constructor function</em>, and all instances created with it, inherit from the constructor's prototype."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You should throw an IllegalArgumentException, as it will make it obvious to the programmer that he has done something invalid. Developers are so used to seeing NPE thrown by the VM, that any programmer would not immediately realize his error, and would start looking around randomly, or worse, blame your code for being 'buggy'.",
        "output": "You should throw an IllegalArgumentException, as it will make it obvious to the programmer that he has done something invalid.",
        "answer": "You should throw an IllegalArgumentException, as it will make it obvious to the programmer that he has done something invalid. Developers are so used to seeing NPE thrown by the VM, that any programmer would not immediately realize his error, and would start looking around randomly, or worse, blame your code for being 'buggy'.",
        "summary": "You should throw an IllegalArgumentException, as it will make it obvious to the programmer that he has done something invalid."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As Sam Dutton answered, a new method for this very purpose has been introduced in ECMAScript 5th Edition. <code>Object.keys()</code> will do what you want and is supported in Firefox 4, Chrome 6, Safari 5 and IE 9. You can also very easily implement the method in browsers that don't support it. However, some of the implementations out there aren't fully compatible with Internet Explorer. I've detailed this on my blog and produced a more compatible solution: Note that the currently accepted answer doesn't include a check for <em>hasOwnProperty()</em> and will return properties that are inherited through the prototype chain. It also doesn't account for the famous DontEnum bug in Internet Explorer where non-enumerable properties on the prototype chain cause locally declared properties with the same name to inherit their DontEnum attribute. Implementing <em>Object.keys()</em> will give you a more robust solution. <strong>EDIT:</strong> following a recent discussion with kangax, a well-known contributor to Prototype, I implemented the workaround for the DontEnum bug based on code for his <code>Object.forIn()</code> function found here.",
        "output": "As Sam Dutton answered, a new method for this very purpose has been introduced in ECMAScript 5th Edition. <code>Object.keys()</code> will do what you want and is supported in Firefox 4, Chrome 6, Safari 5 and IE 9. However, some of the implementations out there aren't fully compatible with Internet Explorer. It also doesn't account for the famous DontEnum bug in Internet Explorer where non-enumerable properties on the prototype chain cause locally declared properties with the same name to inherit their DontEnum attribute.",
        "answer": "As Sam Dutton answered, a new method for this very purpose has been introduced in ECMAScript 5th Edition. <code>Object.keys()</code> will do what you want and is supported in Firefox 4, Chrome 6, Safari 5 and IE 9. You can also very easily implement the method in browsers that don't support it. However, some of the implementations out there aren't fully compatible with Internet Explorer. I've detailed this on my blog and produced a more compatible solution: Note that the currently accepted answer doesn't include a check for <em>hasOwnProperty()</em> and will return properties that are inherited through the prototype chain. It also doesn't account for the famous DontEnum bug in Internet Explorer where non-enumerable properties on the prototype chain cause locally declared properties with the same name to inherit their DontEnum attribute. Implementing <em>Object.keys()</em> will give you a more robust solution. <strong>EDIT:</strong> following a recent discussion with kangax, a well-known contributor to Prototype, I implemented the workaround for the DontEnum bug based on code for his <code>Object.forIn()</code> function found here.",
        "summary": "As Sam Dutton answered, a new method for this very purpose has been introduced in ECMAScript 5th Edition. <code>Object.keys()</code> will do what you want and is supported in Firefox 4, Chrome 6, Safari 5 and IE 9. However, some of the implementations out there aren't fully compatible with Internet Explorer. It also doesn't account for the famous DontEnum bug in Internet Explorer where non-enumerable properties on the prototype chain cause locally declared properties with the same name to inherit their DontEnum attribute."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n RGB Luminance value   =   0.3 R + 0.59 G + 0.11 B http://www.scantips.com/lumin.html If you're looking for how close to white the color is you can use Euclidean Distance from (255, 255, 255) I think RGB color space is perceptively non-uniform with respect to the L2 euclidian distance.Uniform spaces include CIE LAB and LUV.",
        "output": "RGB Luminance value   =   0.3 R + 0.59 G + 0.11 B If you're looking for how close to white the color is you can use Euclidean Distance from (255, 255, 255)",
        "answer": "RGB Luminance value   =   0.3 R + 0.59 G + 0.11 B http://www.scantips.com/lumin.html If you're looking for how close to white the color is you can use Euclidean Distance from (255, 255, 255) I think RGB color space is perceptively non-uniform with respect to the L2 euclidian distance.Uniform spaces include CIE LAB and LUV.",
        "summary": "RGB Luminance value   =   0.3 R + 0.59 G + 0.11 B If you're looking for how close to white the color is you can use Euclidean Distance from (255, 255, 255)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When I'm faced with an enormous log file, I don't try to look at the whole thing, I use Free File Splitter Admittedly this is a workaround rather than a solution, and there are times when you would need the whole file. But often I only need to see a few lines from a larger file and that seems to be your problem too. If not, maybe others would find that utility useful. A viewer that lets you see enormous text files isn't much help if you are trying to get it loaded into Excel to use the Autofilter, for example. Since we all spend the day breaking down problems into smaller parts to be able to solve them, applying the same principle to a large file didn't strike me as contentious.",
        "output": "When I'm faced with an enormous log file, I don't try to look at the whole thing, I use Free File Splitter But often I only need to see a few lines from a larger file and that seems to be your problem too.",
        "answer": "When I'm faced with an enormous log file, I don't try to look at the whole thing, I use Free File Splitter Admittedly this is a workaround rather than a solution, and there are times when you would need the whole file. But often I only need to see a few lines from a larger file and that seems to be your problem too. If not, maybe others would find that utility useful. A viewer that lets you see enormous text files isn't much help if you are trying to get it loaded into Excel to use the Autofilter, for example. Since we all spend the day breaking down problems into smaller parts to be able to solve them, applying the same principle to a large file didn't strike me as contentious.",
        "summary": "When I'm faced with an enormous log file, I don't try to look at the whole thing, I use Free File Splitter But often I only need to see a few lines from a larger file and that seems to be your problem too."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think it is related to good OOP design. If you are a developer of a library you want to hide the inner workings of your library. That way, you can modify your library inner workings later on. So you put your members and helper methods as private, and only interface methods are public. Methods that should be overwritten should be protected.",
        "output": "If you are a developer of a library you want to hide the inner workings of your library. So you put your members and helper methods as private, and only interface methods are public. Methods that should be overwritten should be protected.",
        "answer": "I think it is related to good OOP design. If you are a developer of a library you want to hide the inner workings of your library. That way, you can modify your library inner workings later on. So you put your members and helper methods as private, and only interface methods are public. Methods that should be overwritten should be protected.",
        "summary": "If you are a developer of a library you want to hide the inner workings of your library. So you put your members and helper methods as private, and only interface methods are public. Methods that should be overwritten should be protected."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I had this same problem a week ago. First of all I noticed your URL has an ampersand preceding the parameter string, but it probably needs to have a question mark instead to begin the parameter string, followed by an ampersand between each additional parameter. Now, you do need to escape your URL but also double-escape the URL parameters (title or other content you need to provide content in the Share) you are passing to the URL, as follows: BIGBLOCK Now, you need to create the above-linked superDuperSharingPage.php, which should provide the dynamic title, description, and image content you desire. Something like this should suffice: BIGBLOCK Let me know if this works for you, it's essentially what did for me :)",
        "output": "Now, you do need to escape your URL but also double-escape the URL parameters (title or other content you need to provide content in the Share) you are passing to the URL, as follows: BIGBLOCK Now, you need to create the above-linked superDuperSharingPage.php, which should provide the dynamic title, description, and image content you desire. Something like this should suffice: BIGBLOCK",
        "answer": "I had this same problem a week ago. First of all I noticed your URL has an ampersand preceding the parameter string, but it probably needs to have a question mark instead to begin the parameter string, followed by an ampersand between each additional parameter. Now, you do need to escape your URL but also double-escape the URL parameters (title or other content you need to provide content in the Share) you are passing to the URL, as follows: BIGBLOCK Now, you need to create the above-linked superDuperSharingPage.php, which should provide the dynamic title, description, and image content you desire. Something like this should suffice: BIGBLOCK Let me know if this works for you, it's essentially what did for me :)",
        "summary": "Now, you do need to escape your URL but also double-escape the URL parameters (title or other content you need to provide content in the Share) you are passing to the URL, as follows: BIGBLOCK Now, you need to create the above-linked superDuperSharingPage.php, which should provide the dynamic title, description, and image content you desire. Something like this should suffice: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In A, 3 is tested for equality against each member of the set, yielding (FALSE, FALSE, TRUE, UNKNOWN). Since one of the elements is TRUE, the condition is TRUE. (It's also possible that some short-circuiting takes place here, so it actually stops as soon as it hits the first TRUE and never evaluates 3=NULL.) In B, I think it is evaluating the condition as NOT (3 in (1,2,null)). Testing 3 for equality against the set yields (FALSE, FALSE, UNKNOWN), which is aggregated to UNKNOWN. NOT ( UNKNOWN ) yields UNKNOWN. So overall the truth of the condition is unknown, which at the end is essentially treated as FALSE.",
        "output": "In A, 3 is tested for equality against each member of the set, yielding (FALSE, FALSE, TRUE, UNKNOWN). In B, I think it is evaluating the condition as NOT (3 in (1,2,null)). NOT ( UNKNOWN ) yields UNKNOWN. So overall the truth of the condition is unknown, which at the end is essentially treated as FALSE.",
        "answer": "In A, 3 is tested for equality against each member of the set, yielding (FALSE, FALSE, TRUE, UNKNOWN). Since one of the elements is TRUE, the condition is TRUE. (It's also possible that some short-circuiting takes place here, so it actually stops as soon as it hits the first TRUE and never evaluates 3=NULL.) In B, I think it is evaluating the condition as NOT (3 in (1,2,null)). Testing 3 for equality against the set yields (FALSE, FALSE, UNKNOWN), which is aggregated to UNKNOWN. NOT ( UNKNOWN ) yields UNKNOWN. So overall the truth of the condition is unknown, which at the end is essentially treated as FALSE.",
        "summary": "In A, 3 is tested for equality against each member of the set, yielding (FALSE, FALSE, TRUE, UNKNOWN). In B, I think it is evaluating the condition as NOT (3 in (1,2,null)). NOT ( UNKNOWN ) yields UNKNOWN. So overall the truth of the condition is unknown, which at the end is essentially treated as FALSE."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In addition to what's been said already, it should be said that optimistic locking tends to improve concurrency at the expense of predictability. Pessimistic locking tends to reduce concurrency, but is more predictable. You pays your money, etc",
        "output": "In addition to what's been said already, it should be said that optimistic locking tends to improve concurrency at the expense of predictability. Pessimistic locking tends to reduce concurrency, but is more predictable.",
        "answer": "In addition to what's been said already, it should be said that optimistic locking tends to improve concurrency at the expense of predictability. Pessimistic locking tends to reduce concurrency, but is more predictable. You pays your money, etc",
        "summary": "In addition to what's been said already, it should be said that optimistic locking tends to improve concurrency at the expense of predictability. Pessimistic locking tends to reduce concurrency, but is more predictable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your <code>persistence.xml</code> is not valid and the <code>EntityManagerFactory</code> can't get created. It should be: (Note how the <code>&lt;property&gt;</code> elements are closed, they shouldn't be nested) Update: I went through the tutorial and you will also have to change the <code>Id</code> generation strategy when using MySQL (as MySQL doesn't support sequences). I suggest using the <code>AUTO</code> strategy (defaults to IDENTITY with MySQL). To do so, remove the <code>SequenceGenerator</code> annotation and change the code like this: This should help. PS: you should also provide a <code>log4j.properties</code> as suggested.",
        "output": "Your <code>persistence.xml</code> is not valid and the <code>EntityManagerFactory</code> can't get created. It should be:",
        "answer": "Your <code>persistence.xml</code> is not valid and the <code>EntityManagerFactory</code> can't get created. It should be: (Note how the <code>&lt;property&gt;</code> elements are closed, they shouldn't be nested) Update: I went through the tutorial and you will also have to change the <code>Id</code> generation strategy when using MySQL (as MySQL doesn't support sequences). I suggest using the <code>AUTO</code> strategy (defaults to IDENTITY with MySQL). To do so, remove the <code>SequenceGenerator</code> annotation and change the code like this: This should help. PS: you should also provide a <code>log4j.properties</code> as suggested.",
        "summary": "Your <code>persistence.xml</code> is not valid and the <code>EntityManagerFactory</code> can't get created. It should be:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You don't need to interact with the API or use a plugin. First, duplicate <code>post.php</code> or <code>page.php</code> in your theme folder (under <code>/wp-content/themes/themename/</code>). Rename the new file as <code>templatename.php</code> (where templatename is what you want to call your new template). To add your new template to the list of available templates, enter the following at the top of the new file: BIGBLOCK You can modify this file (using PHP) to include other files or whatever you need. Then create a new page in your WordPress blog, and in the page editing screen you'll see a <em>Template</em> dropdown in the <em>Attributes</em> widget to the right. Select your new template and publish the page. Your new page will use the PHP code defined in <code>templatename.php</code> Source: https://developer.wordpress.org/themes/template-files-section/page-template-files/#creating-custom-page-templates-for-global-use",
        "output": "First, duplicate <code>post.php</code> or <code>page.php</code> in your theme folder (under <code>/wp-content/themes/themename/</code>). Rename the new file as <code>templatename.php</code> (where templatename is what you want to call your new template). Then create a new page in your WordPress blog, and in the page editing screen you'll see a <em>Template</em> dropdown in the <em>Attributes</em> widget to the right. Select your new template and publish the page. Your new page will use the PHP code defined in <code>templatename.php</code>",
        "answer": "You don't need to interact with the API or use a plugin. First, duplicate <code>post.php</code> or <code>page.php</code> in your theme folder (under <code>/wp-content/themes/themename/</code>). Rename the new file as <code>templatename.php</code> (where templatename is what you want to call your new template). To add your new template to the list of available templates, enter the following at the top of the new file: BIGBLOCK You can modify this file (using PHP) to include other files or whatever you need. Then create a new page in your WordPress blog, and in the page editing screen you'll see a <em>Template</em> dropdown in the <em>Attributes</em> widget to the right. Select your new template and publish the page. Your new page will use the PHP code defined in <code>templatename.php</code> Source: https://developer.wordpress.org/themes/template-files-section/page-template-files/#creating-custom-page-templates-for-global-use",
        "summary": "First, duplicate <code>post.php</code> or <code>page.php</code> in your theme folder (under <code>/wp-content/themes/themename/</code>). Rename the new file as <code>templatename.php</code> (where templatename is what you want to call your new template). Then create a new page in your WordPress blog, and in the page editing screen you'll see a <em>Template</em> dropdown in the <em>Attributes</em> widget to the right. Select your new template and publish the page. Your new page will use the PHP code defined in <code>templatename.php</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use equalsIgnoreCase",
        "output": "You can use equalsIgnoreCase",
        "answer": "You can use equalsIgnoreCase",
        "summary": "You can use equalsIgnoreCase"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I tend to use out-vals in functions like this, because I stick to the paradigm of a function returning success/error codes and I like to keep things uniform.",
        "output": "I tend to use out-vals in functions like this, because I stick to the paradigm of a function returning success/error codes and I like to keep things uniform.",
        "answer": "I tend to use out-vals in functions like this, because I stick to the paradigm of a function returning success/error codes and I like to keep things uniform.",
        "summary": "I tend to use out-vals in functions like this, because I stick to the paradigm of a function returning success/error codes and I like to keep things uniform."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's a nice bookmarklet called Visual Event that can show you all the events attached to an element. It has color-coded highlights for different types of events (mouse, keyboard, etc.). When you hover over them, it shows the body of the event handler, how it was attached, and the file/line number (on WebKit and Opera). You can also trigger the event manually. It can't find every event because there's no standard way to look up what event handlers are attached to an element, but it works with popular libraries like jQuery, Prototype, MooTools, YUI, etc.",
        "output": "There's a nice bookmarklet called Visual Event that can show you all the events attached to an element.",
        "answer": "There's a nice bookmarklet called Visual Event that can show you all the events attached to an element. It has color-coded highlights for different types of events (mouse, keyboard, etc.). When you hover over them, it shows the body of the event handler, how it was attached, and the file/line number (on WebKit and Opera). You can also trigger the event manually. It can't find every event because there's no standard way to look up what event handlers are attached to an element, but it works with popular libraries like jQuery, Prototype, MooTools, YUI, etc.",
        "summary": "There's a nice bookmarklet called Visual Event that can show you all the events attached to an element."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Summary: <li>Private: no one can see it except for within the class <li>Protected: Private + derived classes can see it <li>Public: the world can see it When inheriting, you can (in some languages) change the protection type of a data member in certain direction, e.g. from protected to public.",
        "output": "<li>Private: no one can see it except for within the class <li>Protected: Private + derived classes can see it <li>Public: the world can see it",
        "answer": "Summary: <li>Private: no one can see it except for within the class <li>Protected: Private + derived classes can see it <li>Public: the world can see it When inheriting, you can (in some languages) change the protection type of a data member in certain direction, e.g. from protected to public.",
        "summary": "<li>Private: no one can see it except for within the class <li>Protected: Private + derived classes can see it <li>Public: the world can see it"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Considering for general bit length (though I have used specific type here), I tried to design simplistic algo as below. Simple and obvious check for 0,1,2 or &lt;0 is required initially.Following is simple in sense that it doesn't try to use any existing maths functions. Most of the operator can be replaced with bit-wise operators. I haven't tested with any bench mark data though. I'm neither expert at maths or computer algorithm design in particular, I would love to see you pointing out problem. I know there is lots of improvement chances there. BIGBLOCK",
        "output": "Simple and obvious check for 0,1,2 or &lt;0 is required initially.Following is simple in sense that it doesn't try to use any existing maths functions. Most of the operator can be replaced with bit-wise operators. BIGBLOCK",
        "answer": "Considering for general bit length (though I have used specific type here), I tried to design simplistic algo as below. Simple and obvious check for 0,1,2 or &lt;0 is required initially.Following is simple in sense that it doesn't try to use any existing maths functions. Most of the operator can be replaced with bit-wise operators. I haven't tested with any bench mark data though. I'm neither expert at maths or computer algorithm design in particular, I would love to see you pointing out problem. I know there is lots of improvement chances there. BIGBLOCK",
        "summary": "Simple and obvious check for 0,1,2 or &lt;0 is required initially.Following is simple in sense that it doesn't try to use any existing maths functions. Most of the operator can be replaced with bit-wise operators. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n My log4j got fixed by below property file:",
        "output": "My log4j got fixed by below property file:",
        "answer": "My log4j got fixed by below property file:",
        "summary": "My log4j got fixed by below property file:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This happen often also if you are using a file references to binaries (instead of project references to code in your project), and the compiled binary that you are referencing falls out of sync with the corresponding source code on your machine. This can happen because you downloaded a new version of the binary from source control without the new source code that went with it, or you have a few versions of the binary on your machine and are referencing an old copy, etc. If this is indeed the problem, it's a good reason to use project references as much as it practical.",
        "output": "This happen often also if you are using a file references to binaries (instead of project references to code in your project), and the compiled binary that you are referencing falls out of sync with the corresponding source code on your machine. This can happen because you downloaded a new version of the binary from source control without the new source code that went with it, or you have a few versions of the binary on your machine and are referencing an old copy, etc.",
        "answer": "This happen often also if you are using a file references to binaries (instead of project references to code in your project), and the compiled binary that you are referencing falls out of sync with the corresponding source code on your machine. This can happen because you downloaded a new version of the binary from source control without the new source code that went with it, or you have a few versions of the binary on your machine and are referencing an old copy, etc. If this is indeed the problem, it's a good reason to use project references as much as it practical.",
        "summary": "This happen often also if you are using a file references to binaries (instead of project references to code in your project), and the compiled binary that you are referencing falls out of sync with the corresponding source code on your machine. This can happen because you downloaded a new version of the binary from source control without the new source code that went with it, or you have a few versions of the binary on your machine and are referencing an old copy, etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To summarize the contents of other (already good!) answers, <code>isinstance</code> caters for inheritance (an instance of a derived class <em>is an</em> instance of a base class, too), while checking for equality of <code>type</code> does not (it demands identity of types and rejects instances of subtypes, AKA subclasses). Normally, in Python, you want your code to support inheritance, of course (since inheritance is so handy, it would be bad to stop code using yours from using it! ), so <code>isinstance</code> is less bad than checking identity of <code>type</code>s because it seamlessly supports inheritance. It's not that <code>isinstance</code> is <em>good</em>, mind youÃ©ÂÂ¥Ã¦ÂÂt's just <em>less bad</em> than checking equality of types. The normal, Pythonic, preferred solution is almost invariably \"duck typing\": try using the argument <em>as if</em> it was of a certain desired type, do it in a <code>try</code>/<code>except</code> statement catching all exceptions that could arise if the argument was not in fact of that type (or any other type nicely duck-mimicking it;-), and in the <code>except</code> clause, try something else (using the argument \"as if\" it was of some other type). <code>basestring</code> <strong>is</strong>, however, quite a special caseÃ©ÂÂ¥Ã¦ÂÂ builtin type that exists <strong>only</strong> to let you use <code>isinstance</code> (both <code>str</code> and <code>unicode</code> subclass <code>basestring</code>). Strings are sequences (you could loop over them, index them, slice them, ...), but you generally want to treat them as \"scalar\" typesÃ©ÂÂ¥Ã¦ÂÂt's somewhat incovenient (but a reasonably frequent use case) to treat all kinds of strings (and maybe other scalar types, i.e., ones you can't loop on) one way, all containers (lists, sets, dicts, ...) in another way, and <code>basestring</code> plus <code>isinstance</code> helps you do thatÃ©ÂÂ¥Ã¦ÂÂhe overall structure of this idiom is something like: You could say that <code>basestring</code> is an <em>Abstract Base Class</em> (\"ABC\")Ã©ÂÂ¥Ã¦ÂÂt offers no concrete functionality to subclasses, but rather exists as a \"marker\", mainly for use with <code>isinstance</code>. The concept is obviously a growing one in Python, since PEP 3119, which introduces a generalization of it, was accepted and has been implemented starting with Python 2.6 and 3.0. The PEP makes it clear that, while ABCs can often substitute for duck typing, there is generally no big pressure to do that (see here). ABCs as implemented in recent Python versions do however offer extra goodies: <code>isinstance</code> (and <code>issubclass</code>) can now mean more than just \"[an instance of] a derived class\" (in particular, any class can be \"registered\" with an ABC so that it will show as a subclass, and its instances as instances of the ABC); and ABCs can also offer extra convenience to actual subclasses in a very natural way via Template Method design pattern applications (see here and here [[part II]] for more on the TM DP, in general and specifically in Python, independent of ABCs). For the underlying mechanics of ABC support as offered in Python 2.6, see here; for their 3.1 version, very similar, see here. In both versions, standard library module collections (that's the 3.1 versionÃ©ÂÂ¥Ã¦ÂÂor the very similar 2.6 version, see here) offers several useful ABCs. For the purpose of this answer, the key thing to retain about ABCs (beyond an arguably more natural placement for TM DP functionality, compared to the classic Python alternative of mixin classes such as UserDict.DictMixin) is that they make <code>isinstance</code> (and <code>issubclass</code>) much more attractive and pervasive (in Python 2.6 and going forward) than they used to be (in 2.5 and before), and therefore, by contrast, make checking type equality an even worse practice in recent Python versions than it already used to be.",
        "output": "To summarize the contents of other (already good!) answers, <code>isinstance</code> caters for inheritance (an instance of a derived class <em>is an</em> instance of a base class, too), while checking for equality of <code>type</code> does not (it demands identity of types and rejects instances of subtypes, AKA subclasses). For the purpose of this answer, the key thing to retain about ABCs (beyond an arguably more natural placement for TM DP functionality, compared to the classic Python alternative of mixin classes such as UserDict.DictMixin) is that they make <code>isinstance</code> (and <code>issubclass</code>) much more attractive and pervasive (in Python 2.6 and going forward) than they used to be (in 2.5 and before), and therefore, by contrast, make checking type equality an even worse practice in recent Python versions than it already used to be.",
        "answer": "To summarize the contents of other (already good!) answers, <code>isinstance</code> caters for inheritance (an instance of a derived class <em>is an</em> instance of a base class, too), while checking for equality of <code>type</code> does not (it demands identity of types and rejects instances of subtypes, AKA subclasses). Normally, in Python, you want your code to support inheritance, of course (since inheritance is so handy, it would be bad to stop code using yours from using it! ), so <code>isinstance</code> is less bad than checking identity of <code>type</code>s because it seamlessly supports inheritance. It's not that <code>isinstance</code> is <em>good</em>, mind youÃ©ÂÂ¥Ã¦ÂÂt's just <em>less bad</em> than checking equality of types. The normal, Pythonic, preferred solution is almost invariably \"duck typing\": try using the argument <em>as if</em> it was of a certain desired type, do it in a <code>try</code>/<code>except</code> statement catching all exceptions that could arise if the argument was not in fact of that type (or any other type nicely duck-mimicking it;-), and in the <code>except</code> clause, try something else (using the argument \"as if\" it was of some other type). <code>basestring</code> <strong>is</strong>, however, quite a special caseÃ©ÂÂ¥Ã¦ÂÂ builtin type that exists <strong>only</strong> to let you use <code>isinstance</code> (both <code>str</code> and <code>unicode</code> subclass <code>basestring</code>). Strings are sequences (you could loop over them, index them, slice them, ...), but you generally want to treat them as \"scalar\" typesÃ©ÂÂ¥Ã¦ÂÂt's somewhat incovenient (but a reasonably frequent use case) to treat all kinds of strings (and maybe other scalar types, i.e., ones you can't loop on) one way, all containers (lists, sets, dicts, ...) in another way, and <code>basestring</code> plus <code>isinstance</code> helps you do thatÃ©ÂÂ¥Ã¦ÂÂhe overall structure of this idiom is something like: You could say that <code>basestring</code> is an <em>Abstract Base Class</em> (\"ABC\")Ã©ÂÂ¥Ã¦ÂÂt offers no concrete functionality to subclasses, but rather exists as a \"marker\", mainly for use with <code>isinstance</code>. The concept is obviously a growing one in Python, since PEP 3119, which introduces a generalization of it, was accepted and has been implemented starting with Python 2.6 and 3.0. The PEP makes it clear that, while ABCs can often substitute for duck typing, there is generally no big pressure to do that (see here). ABCs as implemented in recent Python versions do however offer extra goodies: <code>isinstance</code> (and <code>issubclass</code>) can now mean more than just \"[an instance of] a derived class\" (in particular, any class can be \"registered\" with an ABC so that it will show as a subclass, and its instances as instances of the ABC); and ABCs can also offer extra convenience to actual subclasses in a very natural way via Template Method design pattern applications (see here and here [[part II]] for more on the TM DP, in general and specifically in Python, independent of ABCs). For the underlying mechanics of ABC support as offered in Python 2.6, see here; for their 3.1 version, very similar, see here. In both versions, standard library module collections (that's the 3.1 versionÃ©ÂÂ¥Ã¦ÂÂor the very similar 2.6 version, see here) offers several useful ABCs. For the purpose of this answer, the key thing to retain about ABCs (beyond an arguably more natural placement for TM DP functionality, compared to the classic Python alternative of mixin classes such as UserDict.DictMixin) is that they make <code>isinstance</code> (and <code>issubclass</code>) much more attractive and pervasive (in Python 2.6 and going forward) than they used to be (in 2.5 and before), and therefore, by contrast, make checking type equality an even worse practice in recent Python versions than it already used to be.",
        "summary": "To summarize the contents of other (already good!) answers, <code>isinstance</code> caters for inheritance (an instance of a derived class <em>is an</em> instance of a base class, too), while checking for equality of <code>type</code> does not (it demands identity of types and rejects instances of subtypes, AKA subclasses). For the purpose of this answer, the key thing to retain about ABCs (beyond an arguably more natural placement for TM DP functionality, compared to the classic Python alternative of mixin classes such as UserDict.DictMixin) is that they make <code>isinstance</code> (and <code>issubclass</code>) much more attractive and pervasive (in Python 2.6 and going forward) than they used to be (in 2.5 and before), and therefore, by contrast, make checking type equality an even worse practice in recent Python versions than it already used to be."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From within your batch file: <code>%cd%</code> refers to the current working directory (variable) <code>%~dp0</code> refers to the full path to the batch file's directory (static) <code>%~dpnx0</code> refers to the full path to the batch directory and file name (static).",
        "output": "From within your batch file:",
        "answer": "From within your batch file: <code>%cd%</code> refers to the current working directory (variable) <code>%~dp0</code> refers to the full path to the batch file's directory (static) <code>%~dpnx0</code> refers to the full path to the batch directory and file name (static).",
        "summary": "From within your batch file:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In the simplest case, it's probably sufficient to \"cast\" the array as an object: Another option would be to instantiate a standard class as a variable, and loop through your array while re-assigning the values: As Edson Medina pointed out, a really clean solution is to use the built-in <code>json_</code> functions: This also (recursively) converts all of your sub arrays into objects, which you may or may not want. Unfortunately it has a 2-3x performance hit over the looping approach. Warning! (thanks to Ultra for the comment): json_decode on different enviroments converts UTF-8 data in different ways. I end up getting on of values '240.00' locally and '240' on production - massive dissaster. Morover if conversion fails string get's returned as NULL",
        "output": "In the simplest case, it's probably sufficient to \"cast\" the array as an object: Another option would be to instantiate a standard class as a variable, and loop through your array while re-assigning the values: As Edson Medina pointed out, a really clean solution is to use the built-in <code>json_</code> functions:",
        "answer": "In the simplest case, it's probably sufficient to \"cast\" the array as an object: Another option would be to instantiate a standard class as a variable, and loop through your array while re-assigning the values: As Edson Medina pointed out, a really clean solution is to use the built-in <code>json_</code> functions: This also (recursively) converts all of your sub arrays into objects, which you may or may not want. Unfortunately it has a 2-3x performance hit over the looping approach. Warning! (thanks to Ultra for the comment): json_decode on different enviroments converts UTF-8 data in different ways. I end up getting on of values '240.00' locally and '240' on production - massive dissaster. Morover if conversion fails string get's returned as NULL",
        "summary": "In the simplest case, it's probably sufficient to \"cast\" the array as an object: Another option would be to instantiate a standard class as a variable, and loop through your array while re-assigning the values: As Edson Medina pointed out, a really clean solution is to use the built-in <code>json_</code> functions:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>git gc --prune=now</code> is not what you want. or <code>git remote prune origin</code> # if thats the the remote source is what you want",
        "output": "<code>git gc --prune=now</code> is not what you want. or <code>git remote prune origin</code> # if thats the the remote source",
        "answer": "<code>git gc --prune=now</code> is not what you want. or <code>git remote prune origin</code> # if thats the the remote source is what you want",
        "summary": "<code>git gc --prune=now</code> is not what you want. or <code>git remote prune origin</code> # if thats the the remote source"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You'll need to decide how you'd like to handle exceptions thrown by the <code>encrypt</code> method. Currently, <code>encrypt</code> is declared with <code>throws Exception</code> - however, in the body of the method, exceptions are caught in a try/catch block. I recommend you either: remove the <code>throws Exception</code> clause from <code>encrypt</code> and handle exceptions internally (consider writing a log message at the very least); or, remove the try/catch block from the body of <code>encrypt</code>, and surround the call to <code>encrypt</code> with a try/catch instead (i.e. in <code>actionPerformed</code>). Regarding the compilation error you refer to: if an exception was thrown in the <code>try</code> block of <code>encrypt</code>, nothing gets returned after the <code>catch</code> block finishes. You could address this by initially declaring the return value as <code>null</code>: However, if you can correct the bigger issue (the exception-handling strategy), this problem will take care of itself - particularly if you choose the second option I've suggested.",
        "output": "Currently, <code>encrypt</code> is declared with <code>throws Exception</code> - however, in the body of the method, exceptions are caught in a try/catch block. I recommend you either: Regarding the compilation error you refer to: if an exception was thrown in the <code>try</code> block of <code>encrypt</code>, nothing gets returned after the <code>catch</code> block finishes. You could address this by initially declaring the return value as <code>null</code>:",
        "answer": "You'll need to decide how you'd like to handle exceptions thrown by the <code>encrypt</code> method. Currently, <code>encrypt</code> is declared with <code>throws Exception</code> - however, in the body of the method, exceptions are caught in a try/catch block. I recommend you either: remove the <code>throws Exception</code> clause from <code>encrypt</code> and handle exceptions internally (consider writing a log message at the very least); or, remove the try/catch block from the body of <code>encrypt</code>, and surround the call to <code>encrypt</code> with a try/catch instead (i.e. in <code>actionPerformed</code>). Regarding the compilation error you refer to: if an exception was thrown in the <code>try</code> block of <code>encrypt</code>, nothing gets returned after the <code>catch</code> block finishes. You could address this by initially declaring the return value as <code>null</code>: However, if you can correct the bigger issue (the exception-handling strategy), this problem will take care of itself - particularly if you choose the second option I've suggested.",
        "summary": "Currently, <code>encrypt</code> is declared with <code>throws Exception</code> - however, in the body of the method, exceptions are caught in a try/catch block. I recommend you either: Regarding the compilation error you refer to: if an exception was thrown in the <code>try</code> block of <code>encrypt</code>, nothing gets returned after the <code>catch</code> block finishes. You could address this by initially declaring the return value as <code>null</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n sealed",
        "output": "sealed",
        "answer": "sealed",
        "summary": "sealed"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n +/- 9007199254740991 ECMA Section 8.5 - Numbers Note that all the positive and negative integers whose magnitude is no greater than 253 are representable in the Number type (indeed, the integer 0 has two representations, +0 and Ã¨ÂÂÃ©Â©Â´?). They are 64-bit floating point values, the largest exact integral value is 253-1, or <code>9007199254740991</code>. In ES6, this is defined as Number.MAX_SAFE_INTEGER. Note that the bitwise operators and shift operators operate on 32-bit ints, so in that case, the max safe integer is 231-1, or 2147483647. Test it out!",
        "output": "+/- 9007199254740991",
        "answer": "+/- 9007199254740991 ECMA Section 8.5 - Numbers Note that all the positive and negative integers whose magnitude is no greater than 253 are representable in the Number type (indeed, the integer 0 has two representations, +0 and Ã¨ÂÂÃ©Â©Â´?). They are 64-bit floating point values, the largest exact integral value is 253-1, or <code>9007199254740991</code>. In ES6, this is defined as Number.MAX_SAFE_INTEGER. Note that the bitwise operators and shift operators operate on 32-bit ints, so in that case, the max safe integer is 231-1, or 2147483647. Test it out!",
        "summary": "+/- 9007199254740991"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n \"I'm looking for the fastest way to determine if a long value is a perfect square (i.e. its square root is another integer).\" The answers are impressive, but I failed to see a simple check : check whether the first number on the right of the long it a member of the set (0,1,4,5,6,9) . If it is not, then it cannot possibly be a 'perfect square' . eg. 4567 - cannot be a perfect square.",
        "output": "check whether the first number on the right of the long it a member of the set (0,1,4,5,6,9) . If it is not, then it cannot possibly be a 'perfect square' .",
        "answer": "\"I'm looking for the fastest way to determine if a long value is a perfect square (i.e. its square root is another integer).\" The answers are impressive, but I failed to see a simple check : check whether the first number on the right of the long it a member of the set (0,1,4,5,6,9) . If it is not, then it cannot possibly be a 'perfect square' . eg. 4567 - cannot be a perfect square.",
        "summary": "check whether the first number on the right of the long it a member of the set (0,1,4,5,6,9) . If it is not, then it cannot possibly be a 'perfect square' ."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another consideration is the exit code to return. Just \"<code>1</code>\" is pretty standard, although there are a handful of reserved exit codes that bash itself uses, and that same page argues that user-defined codes should be in the range 64-113 to conform to C/C++ standards. You might also consider the bit vector approach that <code>mount</code> uses for its exit codes: BIGBLOCK <code>OR</code>-ing the codes together allows your script to signal multiple simultaneous errors.",
        "output": "Another consideration is the exit code to return. Just \"<code>1</code>\" is pretty standard, although there are a handful of reserved exit codes that bash itself uses, and that same page argues that user-defined codes should be in the range 64-113 to conform to C/C++ standards. You might also consider the bit vector approach that <code>mount</code> uses for its exit codes: BIGBLOCK",
        "answer": "Another consideration is the exit code to return. Just \"<code>1</code>\" is pretty standard, although there are a handful of reserved exit codes that bash itself uses, and that same page argues that user-defined codes should be in the range 64-113 to conform to C/C++ standards. You might also consider the bit vector approach that <code>mount</code> uses for its exit codes: BIGBLOCK <code>OR</code>-ing the codes together allows your script to signal multiple simultaneous errors.",
        "summary": "Another consideration is the exit code to return. Just \"<code>1</code>\" is pretty standard, although there are a handful of reserved exit codes that bash itself uses, and that same page argues that user-defined codes should be in the range 64-113 to conform to C/C++ standards. You might also consider the bit vector approach that <code>mount</code> uses for its exit codes: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Best way to do that is using isNaN + type casting: Updated all-in method: The same using regex:",
        "output": "Best way to do that is using isNaN + type casting:",
        "answer": "Best way to do that is using isNaN + type casting: Updated all-in method: The same using regex:",
        "summary": "Best way to do that is using isNaN + type casting:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I like this one: http://xkcd.com/149/ (Proper User Policy apparently means Simon Says.)",
        "output": "I like this one: http://xkcd.com/149/",
        "answer": "I like this one: http://xkcd.com/149/ (Proper User Policy apparently means Simon Says.)",
        "summary": "I like this one: http://xkcd.com/149/"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This isolation level allows dirty reads. One transaction may see uncommitted changes made by some other transaction. To maintain the highest level of isolation, a DBMS usually acquires locks on data, which may result in a loss of concurrency and a high locking overhead. This isolation level relaxes this property. You may want to check out the Wikipedia article on <code>READ UNCOMMITTED</code> for a few examples and further reading. You may also be interested in checking out Jeff Atwood's blog article on how he and his team tackled a deadlock issue in the early days of Stack Overflow. According to Jeff: <strong>But is <code>nolock</code> dangerous?</strong> Could you end  up reading invalid data with <code>read uncommitted</code> on? Yes, in theory. You'll  find no shortage of database  architecture astronauts who start  dropping ACID science on you  and all  but pull the building fire alarm when  you tell them you want to try <code>nolock</code>. It's true: the theory is scary. But  here's what I think: \"In theory there  is no difference between theory and  practice. In practice there is.\" I would never recommend using <code>nolock</code>  as a general \"good for what ails you\"  snake oil fix for any database  deadlocking problems you may have. You  should try to diagnose the source of  the problem first. But in practice adding <code>nolock</code> to queries that you absolutely know are simple, straightforward read-only affairs never seems to lead to problems... <strong>As long as you know what you're doing.</strong> One alternative to the <code>READ UNCOMMITTED</code> level that you may want to consider is the <code>READ COMMITTED SNAPSHOT</code>. Quoting Jeff again: Snapshots rely on an entirely new data change tracking method ... more than just a slight logical change, it requires the server to handle the data physically differently. Once this new data change tracking method is enabled, it creates a copy, or snapshot of every data change. <strong>By reading these snapshots rather than live data at times of contention, Shared Locks are no longer needed on reads, and overall database performance may increase.</strong>",
        "output": "But  here's what I think: \"In theory there  is no difference between theory and  practice. In practice there is.\" I would never recommend using <code>nolock</code>  as a general \"good for what ails you\"  snake oil fix for any database  deadlocking problems you may have. But in practice adding <code>nolock</code> to queries that you absolutely know are simple, straightforward read-only affairs never seems to lead to problems... <strong>As long as you know what you're doing.</strong>",
        "answer": "This isolation level allows dirty reads. One transaction may see uncommitted changes made by some other transaction. To maintain the highest level of isolation, a DBMS usually acquires locks on data, which may result in a loss of concurrency and a high locking overhead. This isolation level relaxes this property. You may want to check out the Wikipedia article on <code>READ UNCOMMITTED</code> for a few examples and further reading. You may also be interested in checking out Jeff Atwood's blog article on how he and his team tackled a deadlock issue in the early days of Stack Overflow. According to Jeff: <strong>But is <code>nolock</code> dangerous?</strong> Could you end  up reading invalid data with <code>read uncommitted</code> on? Yes, in theory. You'll  find no shortage of database  architecture astronauts who start  dropping ACID science on you  and all  but pull the building fire alarm when  you tell them you want to try <code>nolock</code>. It's true: the theory is scary. But  here's what I think: \"In theory there  is no difference between theory and  practice. In practice there is.\" I would never recommend using <code>nolock</code>  as a general \"good for what ails you\"  snake oil fix for any database  deadlocking problems you may have. You  should try to diagnose the source of  the problem first. But in practice adding <code>nolock</code> to queries that you absolutely know are simple, straightforward read-only affairs never seems to lead to problems... <strong>As long as you know what you're doing.</strong> One alternative to the <code>READ UNCOMMITTED</code> level that you may want to consider is the <code>READ COMMITTED SNAPSHOT</code>. Quoting Jeff again: Snapshots rely on an entirely new data change tracking method ... more than just a slight logical change, it requires the server to handle the data physically differently. Once this new data change tracking method is enabled, it creates a copy, or snapshot of every data change. <strong>By reading these snapshots rather than live data at times of contention, Shared Locks are no longer needed on reads, and overall database performance may increase.</strong>",
        "summary": "But  here's what I think: \"In theory there  is no difference between theory and  practice. In practice there is.\" I would never recommend using <code>nolock</code>  as a general \"good for what ails you\"  snake oil fix for any database  deadlocking problems you may have. But in practice adding <code>nolock</code> to queries that you absolutely know are simple, straightforward read-only affairs never seems to lead to problems... <strong>As long as you know what you're doing.</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to tell MySQL which database to use: before you create a table. In case the database does not exist, you need to create it as: followed by:",
        "output": "You need to tell MySQL which database to use: In case the database does not exist, you need to create it as:",
        "answer": "You need to tell MySQL which database to use: before you create a table. In case the database does not exist, you need to create it as: followed by:",
        "summary": "You need to tell MySQL which database to use: In case the database does not exist, you need to create it as:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Depends what I want to find out. SERVER_NAME is the host name of the server, whilst HTTP_HOST is the virtual host that the client connected to.",
        "output": "SERVER_NAME is the host name of the server, whilst HTTP_HOST is the virtual host that the client connected to.",
        "answer": "Depends what I want to find out. SERVER_NAME is the host name of the server, whilst HTTP_HOST is the virtual host that the client connected to.",
        "summary": "SERVER_NAME is the host name of the server, whilst HTTP_HOST is the virtual host that the client connected to."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n use .load to load your image. to test if you get an error ( let's say 404 ) you can do the following: careful - .error() event will not trigger when the src attribute is empty for an image.",
        "output": "use .load to load your image. careful - .error() event will not trigger when the src attribute is empty for an image.",
        "answer": "use .load to load your image. to test if you get an error ( let's say 404 ) you can do the following: careful - .error() event will not trigger when the src attribute is empty for an image.",
        "summary": "use .load to load your image. careful - .error() event will not trigger when the src attribute is empty for an image."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Let's say we have a single byte: Applying a single left bitshift gets us: The leftmost zero was shifted out of the byte, and a new zero was appended to the right end of the byte. The bits don't rollover; they are discarded. That means if you left shift 1101100 and then right shift it, you won't get the same result back. Shifting left by N is equivalent to multiplying by 2N. Shifting right by N is (if you are using ones' complement) is the equivalent of dividing by 2N and rounding to zero. Bitshifting can be used for insanely fast multiplication and division, provided you are working with a power of 2. Almost all low-level graphics routines use bitshifting. For example, way back in the olden days, we used mode 13h (320x200 256 colors) for games. In Mode 13h, the video memory was laid out sequentially per pixel. That meant to calculate the location for a pixel, you would use the following math: Now, back in that day and age, speed was critical, so we would use bitshifts to do this operation. However, 320 is not a power of two, so to get around this we have to find out what is a power of two that added together makes 320: Now we can convert that into left shifts: For a final result of: Now we get the same offset as before, except instead of an expensive multiplication operation, we use the two bitshifts...in x86 it would be something like this (note, it's been forever since I've done assembly (editor's note: corrected a couple mistakes and added a 32-bit example)): Total: 28 cycles on whatever ancient CPU had these timings. Vrs 12 cycles on the same ancient CPU. Yes, we would work this hard to shave off 16 CPU cycles. In 32 or 64-bit mode, both versions get a lot shorter and faster. Modern out-of-order execution CPUs like Intel Skylake (see http://agner.org/optimize/) have very fast hardware multiply (low latency and high throughput), so the gain is much smaller. AMD Bulldozer-family is a bit slower, especially for 64-bit multiply. On Intel CPUs, and AMD Ryzen, two shifts are slightly lower latency but more instructions than a multiply (which may lead to lower throughput): vs. Compilers will do this for you: See how gcc, clang, and MSVC all use shift+lea when optimizing <code>return 320*row + col;</code>. The most interesting thing to note here is that x86 has a shift-and-add instruction (<code>LEA</code>) that can do small left shifts and add at the same time, with the performance as and <code>add</code> instruction. ARM is even more powerful: one operand of any instruction can be left or right shifted for free. So scaling by a compile-time-constant that's known to be a power-of-2 can be even more efficient than a multiply. OK, back in the modern days... something more useful now would be to use bitshifting to store two 8-bit values in a 16-bit integer. For example, in C#: In C++, compilers should do this for you if you used a <code>struct</code> with two 8-bit members, but in practice don't always.",
        "output": "Applying a single left bitshift gets us: The leftmost zero was shifted out of the byte, and a new zero was appended to the right end of the byte. The bits don't rollover; they are discarded. Shifting left by N is equivalent to multiplying by 2N. Shifting right by N is (if you are using ones' complement) is the equivalent of dividing by 2N and rounding to zero.",
        "answer": "Let's say we have a single byte: Applying a single left bitshift gets us: The leftmost zero was shifted out of the byte, and a new zero was appended to the right end of the byte. The bits don't rollover; they are discarded. That means if you left shift 1101100 and then right shift it, you won't get the same result back. Shifting left by N is equivalent to multiplying by 2N. Shifting right by N is (if you are using ones' complement) is the equivalent of dividing by 2N and rounding to zero. Bitshifting can be used for insanely fast multiplication and division, provided you are working with a power of 2. Almost all low-level graphics routines use bitshifting. For example, way back in the olden days, we used mode 13h (320x200 256 colors) for games. In Mode 13h, the video memory was laid out sequentially per pixel. That meant to calculate the location for a pixel, you would use the following math: Now, back in that day and age, speed was critical, so we would use bitshifts to do this operation. However, 320 is not a power of two, so to get around this we have to find out what is a power of two that added together makes 320: Now we can convert that into left shifts: For a final result of: Now we get the same offset as before, except instead of an expensive multiplication operation, we use the two bitshifts...in x86 it would be something like this (note, it's been forever since I've done assembly (editor's note: corrected a couple mistakes and added a 32-bit example)): Total: 28 cycles on whatever ancient CPU had these timings. Vrs 12 cycles on the same ancient CPU. Yes, we would work this hard to shave off 16 CPU cycles. In 32 or 64-bit mode, both versions get a lot shorter and faster. Modern out-of-order execution CPUs like Intel Skylake (see http://agner.org/optimize/) have very fast hardware multiply (low latency and high throughput), so the gain is much smaller. AMD Bulldozer-family is a bit slower, especially for 64-bit multiply. On Intel CPUs, and AMD Ryzen, two shifts are slightly lower latency but more instructions than a multiply (which may lead to lower throughput): vs. Compilers will do this for you: See how gcc, clang, and MSVC all use shift+lea when optimizing <code>return 320*row + col;</code>. The most interesting thing to note here is that x86 has a shift-and-add instruction (<code>LEA</code>) that can do small left shifts and add at the same time, with the performance as and <code>add</code> instruction. ARM is even more powerful: one operand of any instruction can be left or right shifted for free. So scaling by a compile-time-constant that's known to be a power-of-2 can be even more efficient than a multiply. OK, back in the modern days... something more useful now would be to use bitshifting to store two 8-bit values in a 16-bit integer. For example, in C#: In C++, compilers should do this for you if you used a <code>struct</code> with two 8-bit members, but in practice don't always.",
        "summary": "Applying a single left bitshift gets us: The leftmost zero was shifted out of the byte, and a new zero was appended to the right end of the byte. The bits don't rollover; they are discarded. Shifting left by N is equivalent to multiplying by 2N. Shifting right by N is (if you are using ones' complement) is the equivalent of dividing by 2N and rounding to zero."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Lexical cast is very nice. BIGBLOCK",
        "output": "Lexical cast is very nice. BIGBLOCK",
        "answer": "Lexical cast is very nice. BIGBLOCK",
        "summary": "Lexical cast is very nice. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The text before each parameter is <strong>part</strong> of the method name. From your example, the name of the method is actually BIGBLOCK Each : represents an argument. In a method call, the method name is split at the :s and arguments appear after the :s. e.g. BIGBLOCK",
        "output": "The text before each parameter is <strong>part</strong> of the method name.",
        "answer": "The text before each parameter is <strong>part</strong> of the method name. From your example, the name of the method is actually BIGBLOCK Each : represents an argument. In a method call, the method name is split at the :s and arguments appear after the :s. e.g. BIGBLOCK",
        "summary": "The text before each parameter is <strong>part</strong> of the method name."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Based on your comments it sounds like you are doing something like this: There are two problems. First, as others have said, <code>obj.wait()</code> can only be called if the current thread holds the primitive mutex for <code>obj</code>. If the current thread does not hold the mutex, you get the exception you are seeing. The second (more important) problem is that <code>thread.wait()</code> does not do what you seem to be expecting it to do. Specifically, <code>thread.wait()</code> does not cause the nominated thread to wait. Rather it causes the current thread to wait until some other thread calls <code>thread.notify()</code> or <code>thread.notifyAll()</code>. There is actually no safe way to force a Thread instance to pause if it doesn't want to. (The nearest that Java has to this is the deprecated <code>Thread.suspend()</code> method, but that method is inherently unsafe, as is explained in the Javadoc.) If you want the newly started Thread to pause, the best way to do it is to create a CountdownLatch instance and have the thread call <code>await()</code> on the latch to pause itself. The main thread would then call <code>countDown()</code> on the latch to let the paused thread continue.",
        "output": "First, as others have said, <code>obj.wait()</code> can only be called if the current thread holds the primitive mutex for <code>obj</code>. The second (more important) problem is that <code>thread.wait()</code> does not do what you seem to be expecting it to do.",
        "answer": "Based on your comments it sounds like you are doing something like this: There are two problems. First, as others have said, <code>obj.wait()</code> can only be called if the current thread holds the primitive mutex for <code>obj</code>. If the current thread does not hold the mutex, you get the exception you are seeing. The second (more important) problem is that <code>thread.wait()</code> does not do what you seem to be expecting it to do. Specifically, <code>thread.wait()</code> does not cause the nominated thread to wait. Rather it causes the current thread to wait until some other thread calls <code>thread.notify()</code> or <code>thread.notifyAll()</code>. There is actually no safe way to force a Thread instance to pause if it doesn't want to. (The nearest that Java has to this is the deprecated <code>Thread.suspend()</code> method, but that method is inherently unsafe, as is explained in the Javadoc.) If you want the newly started Thread to pause, the best way to do it is to create a CountdownLatch instance and have the thread call <code>await()</code> on the latch to pause itself. The main thread would then call <code>countDown()</code> on the latch to let the paused thread continue.",
        "summary": "First, as others have said, <code>obj.wait()</code> can only be called if the current thread holds the primitive mutex for <code>obj</code>. The second (more important) problem is that <code>thread.wait()</code> does not do what you seem to be expecting it to do."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n How about converting to lowercase first? you can use <code>string.lower()</code>.",
        "output": "How about converting to lowercase first?",
        "answer": "How about converting to lowercase first? you can use <code>string.lower()</code>.",
        "summary": "How about converting to lowercase first?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could try using a Bloom Filter. Insert each number in the bag into the bloom, then iterate over the complete 1-k set until reporting each one not found. This may not find the answer in all scenarios, but might be a good enough solution.",
        "output": "You could try using a Bloom Filter. Insert each number in the bag into the bloom, then iterate over the complete 1-k set until reporting each one not found. This may not find the answer in all scenarios, but might be a good enough solution.",
        "answer": "You could try using a Bloom Filter. Insert each number in the bag into the bloom, then iterate over the complete 1-k set until reporting each one not found. This may not find the answer in all scenarios, but might be a good enough solution.",
        "summary": "You could try using a Bloom Filter. Insert each number in the bag into the bloom, then iterate over the complete 1-k set until reporting each one not found. This may not find the answer in all scenarios, but might be a good enough solution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The using keyword defines the scope for the object and then disposes of the object when the scope is complete. For example. BIGBLOCK See here for the MSDN article on the C# using keyword.",
        "output": "The using keyword defines the scope for the object and then disposes of the object when the scope is complete.",
        "answer": "The using keyword defines the scope for the object and then disposes of the object when the scope is complete. For example. BIGBLOCK See here for the MSDN article on the C# using keyword.",
        "summary": "The using keyword defines the scope for the object and then disposes of the object when the scope is complete."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Imagine what happens if x[l] is neither 0 nor 1 in the loop. In that case a and b will never be assigned to and have an undefined value.You must initialize them both with some value, for example 0.",
        "output": "In that case a and b will never be assigned to and have an undefined value.You must initialize them both with some value, for example 0.",
        "answer": "Imagine what happens if x[l] is neither 0 nor 1 in the loop. In that case a and b will never be assigned to and have an undefined value.You must initialize them both with some value, for example 0.",
        "summary": "In that case a and b will never be assigned to and have an undefined value.You must initialize them both with some value, for example 0."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's another solution that also works. <li>Go to the <em>Build Path</em> settings in the project properties. <li>Remove the <em>JRE System Library</em> <li>Add it back; Select <em>\"Add Library\"</em> and select the <em>JRE System Library</em>. The default worked for me. This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.If you want a fundamental solution make sure you exclude the jar files with the same classes. For me I have: <code>javax.xml.soap.SOAPPart</code> in three different jars: <code>axis-saaj-1.4.jar</code>, <code>saaj-api-1.3.jar</code> and the <code>rt.jar</code>",
        "output": "<li>Go to the <em>Build Path</em> settings in the project properties. <li>Remove the <em>JRE System Library</em> <li>Add it back; Select <em>\"Add Library\"</em> and select the <em>JRE System Library</em>. This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.If you want a fundamental solution make sure you exclude the jar files with the same classes.",
        "answer": "There's another solution that also works. <li>Go to the <em>Build Path</em> settings in the project properties. <li>Remove the <em>JRE System Library</em> <li>Add it back; Select <em>\"Add Library\"</em> and select the <em>JRE System Library</em>. The default worked for me. This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.If you want a fundamental solution make sure you exclude the jar files with the same classes. For me I have: <code>javax.xml.soap.SOAPPart</code> in three different jars: <code>axis-saaj-1.4.jar</code>, <code>saaj-api-1.3.jar</code> and the <code>rt.jar</code>",
        "summary": "<li>Go to the <em>Build Path</em> settings in the project properties. <li>Remove the <em>JRE System Library</em> <li>Add it back; Select <em>\"Add Library\"</em> and select the <em>JRE System Library</em>. This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.If you want a fundamental solution make sure you exclude the jar files with the same classes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Well the only CSS way of doing only background transparency is via <code>RGBa</code> but since you want to use an image I would suggest using Photoshop or Gimp to make the image transparent and then using it as the background.",
        "output": "Well the only CSS way of doing only background transparency is via <code>RGBa</code> but since you want to use an image I would suggest using Photoshop or Gimp to make the image transparent and then using it as the background.",
        "answer": "Well the only CSS way of doing only background transparency is via <code>RGBa</code> but since you want to use an image I would suggest using Photoshop or Gimp to make the image transparent and then using it as the background.",
        "summary": "Well the only CSS way of doing only background transparency is via <code>RGBa</code> but since you want to use an image I would suggest using Photoshop or Gimp to make the image transparent and then using it as the background."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If they implement the IDisposable interface then you should dispose them. The garbage collector will take care of the rest. <strong>EDIT:</strong> best is to use the <code>using</code> command when working with disposable items: BIGBLOCK",
        "output": "<strong>EDIT:</strong> best is to use the <code>using</code> command when working with disposable items:",
        "answer": "If they implement the IDisposable interface then you should dispose them. The garbage collector will take care of the rest. <strong>EDIT:</strong> best is to use the <code>using</code> command when working with disposable items: BIGBLOCK",
        "summary": "<strong>EDIT:</strong> best is to use the <code>using</code> command when working with disposable items:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just check whether the commons-logging.jar has been added to your libs and the classpath.. I had the same issue and that was because of this. dhammikas-",
        "output": "Just check whether the commons-logging.jar has been added to your libs and the classpath..",
        "answer": "Just check whether the commons-logging.jar has been added to your libs and the classpath.. I had the same issue and that was because of this. dhammikas-",
        "summary": "Just check whether the commons-logging.jar has been added to your libs and the classpath.."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Did you check your php.ini (check for the correct location with phpinfo()) if MySQL and the driver is installed correctly?",
        "output": "Did you check your php.ini (check for the correct location with phpinfo()) if MySQL and the driver is installed correctly?",
        "answer": "Did you check your php.ini (check for the correct location with phpinfo()) if MySQL and the driver is installed correctly?",
        "summary": "Did you check your php.ini (check for the correct location with phpinfo()) if MySQL and the driver is installed correctly?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n C-style casts conflate const_cast, static_cast, and reinterpret_cast. I wish C++ didn't have C-style casts. C++ casts stand out properly (as they should; casts are normally indicative of doing something bad) and properly distinguish between the different kinds of conversion that casts perform. They also permit similar-looking functions to be written, e.g. boost::lexical_cast, which is quite nice from a consistency perspective.",
        "output": "C-style casts conflate const_cast, static_cast, and reinterpret_cast. C++ casts stand out properly (as they should; casts are normally indicative of doing something bad) and properly distinguish between the different kinds of conversion that casts perform.",
        "answer": "C-style casts conflate const_cast, static_cast, and reinterpret_cast. I wish C++ didn't have C-style casts. C++ casts stand out properly (as they should; casts are normally indicative of doing something bad) and properly distinguish between the different kinds of conversion that casts perform. They also permit similar-looking functions to be written, e.g. boost::lexical_cast, which is quite nice from a consistency perspective.",
        "summary": "C-style casts conflate const_cast, static_cast, and reinterpret_cast. C++ casts stand out properly (as they should; casts are normally indicative of doing something bad) and properly distinguish between the different kinds of conversion that casts perform."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's really pretty simple: if you are trying to typecast an object of class A into an object of class B, and they aren't compatible, you get a class cast exception. Let's think of a collection of classes. You can cast any of these things to Object, because all Java classes inherit from Object. You can cast either B or C to A, because they're both \"kinds of\" A You can cast a reference to an A object to B only if the real object is a B. You can't cast a B to a C even though they're both A's.",
        "output": "It's really pretty simple: if you are trying to typecast an object of class A into an object of class B, and they aren't compatible, you get a class cast exception.",
        "answer": "It's really pretty simple: if you are trying to typecast an object of class A into an object of class B, and they aren't compatible, you get a class cast exception. Let's think of a collection of classes. You can cast any of these things to Object, because all Java classes inherit from Object. You can cast either B or C to A, because they're both \"kinds of\" A You can cast a reference to an A object to B only if the real object is a B. You can't cast a B to a C even though they're both A's.",
        "summary": "It's really pretty simple: if you are trying to typecast an object of class A into an object of class B, and they aren't compatible, you get a class cast exception."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I did a simple test with a formula, X-(X+1)=-1, and the largest value of X I can get to work on Safari, Opera and Firefox (tested on OS&nbsp;X) is 9e15. Here is the code I used for testing:",
        "output": "I did a simple test with a formula, X-(X+1)=-1, and the largest value of X I can get to work on Safari, Opera and Firefox (tested on OS&nbsp;X) is 9e15.",
        "answer": "I did a simple test with a formula, X-(X+1)=-1, and the largest value of X I can get to work on Safari, Opera and Firefox (tested on OS&nbsp;X) is 9e15. Here is the code I used for testing:",
        "summary": "I did a simple test with a formula, X-(X+1)=-1, and the largest value of X I can get to work on Safari, Opera and Firefox (tested on OS&nbsp;X) is 9e15."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An equivalent alternative to \"set -e\" is BIGBLOCK It makes the meaning of the flag somewhat clearer than just \"-e\". Random addition: to temporarily disable the flag, and return to the default (of continuing execution regardless of exit codes), just use BIGBLOCK This precludes proper error handling mentioned in other responses, but is quick &amp; effective (just like bash).",
        "output": "An equivalent alternative to \"set -e\" is BIGBLOCK It makes the meaning of the flag somewhat clearer than just \"-e\".",
        "answer": "An equivalent alternative to \"set -e\" is BIGBLOCK It makes the meaning of the flag somewhat clearer than just \"-e\". Random addition: to temporarily disable the flag, and return to the default (of continuing execution regardless of exit codes), just use BIGBLOCK This precludes proper error handling mentioned in other responses, but is quick &amp; effective (just like bash).",
        "summary": "An equivalent alternative to \"set -e\" is BIGBLOCK It makes the meaning of the flag somewhat clearer than just \"-e\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When using <code>instanceof</code>, you need to know the class of <code>B</code> at compile time. When using <code>isAssignableFrom()</code> it can be dynamic and change during runtime.",
        "output": "When using <code>instanceof</code>, you need to know the class of <code>B</code> at compile time. When using <code>isAssignableFrom()</code> it can be dynamic and change during runtime.",
        "answer": "When using <code>instanceof</code>, you need to know the class of <code>B</code> at compile time. When using <code>isAssignableFrom()</code> it can be dynamic and change during runtime.",
        "summary": "When using <code>instanceof</code>, you need to know the class of <code>B</code> at compile time. When using <code>isAssignableFrom()</code> it can be dynamic and change during runtime."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Without calling len() which is good for large lists: And this is for iterables: The functional flavour of the above: OR: OR:",
        "output": "Without calling len() which is good for large lists: And this is for iterables:",
        "answer": "Without calling len() which is good for large lists: And this is for iterables: The functional flavour of the above: OR: OR:",
        "summary": "Without calling len() which is good for large lists: And this is for iterables:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Put an <code>alert()</code> in your <code>success</code> callback to make sure it's being called at all. If it's not, that's simply because the request wasn't successful at all, even though you manage to hit the server. Reasonable causes could be that a timeout expires, or something in your php code throws an exception. Install the firebug addon for firefox, if you haven't already, and inspect the AJAX callback. You'll be able to see the response, and whether or not it receives a successful (200 OK) response. You can also put another <code>alert()</code> in the <code>complete</code>  callback, which should definitely be invoked.",
        "output": "Reasonable causes could be that a timeout expires, or something in your php code throws an exception. Install the firebug addon for firefox, if you haven't already, and inspect the AJAX callback. You can also put another <code>alert()</code> in the <code>complete</code>  callback, which should definitely be invoked.",
        "answer": "Put an <code>alert()</code> in your <code>success</code> callback to make sure it's being called at all. If it's not, that's simply because the request wasn't successful at all, even though you manage to hit the server. Reasonable causes could be that a timeout expires, or something in your php code throws an exception. Install the firebug addon for firefox, if you haven't already, and inspect the AJAX callback. You'll be able to see the response, and whether or not it receives a successful (200 OK) response. You can also put another <code>alert()</code> in the <code>complete</code>  callback, which should definitely be invoked.",
        "summary": "Reasonable causes could be that a timeout expires, or something in your php code throws an exception. Install the firebug addon for firefox, if you haven't already, and inspect the AJAX callback. You can also put another <code>alert()</code> in the <code>complete</code>  callback, which should definitely be invoked."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's an example of polymorphism in pseudo-C#/Java: BIGBLOCK The Main function doesn't know the type of the animal and depends on a particular implementation's behavior of the MakeNoise() method. Edit: Looks like Brian beat me to the punch. Funny we used the same example. But the above code should help clarify the concepts.",
        "output": "Here's an example of polymorphism in pseudo-C#/Java: BIGBLOCK",
        "answer": "Here's an example of polymorphism in pseudo-C#/Java: BIGBLOCK The Main function doesn't know the type of the animal and depends on a particular implementation's behavior of the MakeNoise() method. Edit: Looks like Brian beat me to the punch. Funny we used the same example. But the above code should help clarify the concepts.",
        "summary": "Here's an example of polymorphism in pseudo-C#/Java: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Verifying that a user is an admin in javascript leads to trouble because javascript code is visible to anyone. The server is the one who should tell the difference between an admin and a regular user AFTER the login process and then generate the new page accordingly. Maybe that's not what you are trying to do so to answer your question: BIGBLOCK",
        "output": "Verifying that a user is an admin in javascript leads to trouble because javascript code is visible to anyone.",
        "answer": "Verifying that a user is an admin in javascript leads to trouble because javascript code is visible to anyone. The server is the one who should tell the difference between an admin and a regular user AFTER the login process and then generate the new page accordingly. Maybe that's not what you are trying to do so to answer your question: BIGBLOCK",
        "summary": "Verifying that a user is an admin in javascript leads to trouble because javascript code is visible to anyone."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's really tough to handle a 4G file as such. I used to handle larger text files, but I never used to load them in to my editor. I mostly used UltraEdit in my previous company, now I use Notepad++, but I would get just those parts which i needed to edit. (Most of the cases, the files never needed an edit). Why do u want to load such a big file in to an editor? When I handled files of these size, I used GNU Core Utils. The most common operations i performed on those files were head ( to get the top 250k lines etc ), tail, split, sort, shuf, uniq etc. It's really powerful. There's a lot of things you can do with GNU Core Utils. I would definitely recommend those, instead of a new editor.",
        "output": "I mostly used UltraEdit in my previous company, now I use Notepad++, but I would get just those parts which i needed to edit. When I handled files of these size, I used GNU Core Utils. The most common operations i performed on those files were head ( to get the top 250k lines etc ), tail, split, sort, shuf, uniq etc. There's a lot of things you can do with GNU Core Utils.",
        "answer": "It's really tough to handle a 4G file as such. I used to handle larger text files, but I never used to load them in to my editor. I mostly used UltraEdit in my previous company, now I use Notepad++, but I would get just those parts which i needed to edit. (Most of the cases, the files never needed an edit). Why do u want to load such a big file in to an editor? When I handled files of these size, I used GNU Core Utils. The most common operations i performed on those files were head ( to get the top 250k lines etc ), tail, split, sort, shuf, uniq etc. It's really powerful. There's a lot of things you can do with GNU Core Utils. I would definitely recommend those, instead of a new editor.",
        "summary": "I mostly used UltraEdit in my previous company, now I use Notepad++, but I would get just those parts which i needed to edit. When I handled files of these size, I used GNU Core Utils. The most common operations i performed on those files were head ( to get the top 250k lines etc ), tail, split, sort, shuf, uniq etc. There's a lot of things you can do with GNU Core Utils."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I see two possibilities for what you are trying to do: <li>You want your webpage, running on a server, to find the file on the computer that you originally designed it? <li>You want it to fetch it from the pc that is viewing at the page? Option 1 just doesn't make sense :) Option 2 would be a security hole, the browser prohibits a web page (served from the web) from loading content on the viewer's machine. Kyle Hudson told you what you need to do, but that is so basic that I find it hard to believe this is all you want to do.",
        "output": "<li>You want your webpage, running on a server, to find the file on the computer that you originally designed it? <li>You want it to fetch it from the pc that is viewing at the page? Option 1 just doesn't make sense :) Option 2 would be a security hole, the browser prohibits a web page (served from the web) from loading content on the viewer's machine.",
        "answer": "I see two possibilities for what you are trying to do: <li>You want your webpage, running on a server, to find the file on the computer that you originally designed it? <li>You want it to fetch it from the pc that is viewing at the page? Option 1 just doesn't make sense :) Option 2 would be a security hole, the browser prohibits a web page (served from the web) from loading content on the viewer's machine. Kyle Hudson told you what you need to do, but that is so basic that I find it hard to believe this is all you want to do.",
        "summary": "<li>You want your webpage, running on a server, to find the file on the computer that you originally designed it? <li>You want it to fetch it from the pc that is viewing at the page? Option 1 just doesn't make sense :) Option 2 would be a security hole, the browser prohibits a web page (served from the web) from loading content on the viewer's machine."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I will try to explain the static thing to you. First of all static variables do not belong to any particular instance of the class. They are recognized with the name of the class. Static methods again do not belong again to any particular instance. They can access only static variables. Imagine you call MyClass.myMethod() and myMethod is a static method. If you use non-static variables inside the method, how the hell on earth would it know which variables to use? That's why you can use from static methods only static variables. I repeat again they do NOT belong to any particular instance.",
        "output": "If you use non-static variables inside the method, how the hell on earth would it know which variables to use?",
        "answer": "I will try to explain the static thing to you. First of all static variables do not belong to any particular instance of the class. They are recognized with the name of the class. Static methods again do not belong again to any particular instance. They can access only static variables. Imagine you call MyClass.myMethod() and myMethod is a static method. If you use non-static variables inside the method, how the hell on earth would it know which variables to use? That's why you can use from static methods only static variables. I repeat again they do NOT belong to any particular instance.",
        "summary": "If you use non-static variables inside the method, how the hell on earth would it know which variables to use?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've created an Age struct, which looks like this:",
        "output": "I've created an Age struct, which looks like this:",
        "answer": "I've created an Age struct, which looks like this:",
        "summary": "I've created an Age struct, which looks like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To simply redirect a browser using javascript: BIGBLOCK To redirect AND submit a form (i.e. login details), requires no javascript: BIGBLOCK",
        "output": "To simply redirect a browser using javascript: BIGBLOCK To redirect AND submit a form (i.e. login details), requires no javascript: BIGBLOCK",
        "answer": "To simply redirect a browser using javascript: BIGBLOCK To redirect AND submit a form (i.e. login details), requires no javascript: BIGBLOCK",
        "summary": "To simply redirect a browser using javascript: BIGBLOCK To redirect AND submit a form (i.e. login details), requires no javascript: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In my case the problem was that https was unable to start correctly because Listen 443 was in \"IfDefine SSL\" derective, but my apache didnt start with -DSSL option. The fix was to change my apachectl script in: to: Hope that helps somebody.",
        "output": "In my case the problem was that https was unable to start correctly because Listen 443 was in \"IfDefine SSL\" derective, but my apache didnt start with -DSSL option. The fix was to change my apachectl script in:",
        "answer": "In my case the problem was that https was unable to start correctly because Listen 443 was in \"IfDefine SSL\" derective, but my apache didnt start with -DSSL option. The fix was to change my apachectl script in: to: Hope that helps somebody.",
        "summary": "In my case the problem was that https was unable to start correctly because Listen 443 was in \"IfDefine SSL\" derective, but my apache didnt start with -DSSL option. The fix was to change my apachectl script in:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An application that I've found indispensible as an alternative is DTerm, which actually opens a mini terminal right in your application. Plus it works with just about everything out there - Finder, XCode, PhotoShop, etc.",
        "output": "An application that I've found indispensible as an alternative is DTerm, which actually opens a mini terminal right in your application.",
        "answer": "An application that I've found indispensible as an alternative is DTerm, which actually opens a mini terminal right in your application. Plus it works with just about everything out there - Finder, XCode, PhotoShop, etc.",
        "summary": "An application that I've found indispensible as an alternative is DTerm, which actually opens a mini terminal right in your application."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ruby can't find any root certificates to trust. Take a look at this blog post for a solution: \"Ruby 1.9 and the SSL error\". The solution is to install the <code>curl-ca-bundle</code> port which contains the same root certificates used by Firefox: BIGBLOCK and tell your <code>https</code> object to use it: BIGBLOCK Note that if you want your code to run on Ubuntu, you need to set the <code>ca_path</code> attribute instead, with the default certificates location <code>/etc/ssl/certs</code>.",
        "output": "Ruby can't find any root certificates to trust. The solution is to install the <code>curl-ca-bundle</code> port which contains the same root certificates used by Firefox: BIGBLOCK and tell your <code>https</code> object to use it: BIGBLOCK",
        "answer": "Ruby can't find any root certificates to trust. Take a look at this blog post for a solution: \"Ruby 1.9 and the SSL error\". The solution is to install the <code>curl-ca-bundle</code> port which contains the same root certificates used by Firefox: BIGBLOCK and tell your <code>https</code> object to use it: BIGBLOCK Note that if you want your code to run on Ubuntu, you need to set the <code>ca_path</code> attribute instead, with the default certificates location <code>/etc/ssl/certs</code>.",
        "summary": "Ruby can't find any root certificates to trust. The solution is to install the <code>curl-ca-bundle</code> port which contains the same root certificates used by Firefox: BIGBLOCK and tell your <code>https</code> object to use it: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try the += operator link text,append() method link text,or push_back() method link text The links in this post also contain examples of how to use the respective APIs.",
        "output": "Try the += operator link text,append() method link text,or push_back() method link text",
        "answer": "Try the += operator link text,append() method link text,or push_back() method link text The links in this post also contain examples of how to use the respective APIs.",
        "summary": "Try the += operator link text,append() method link text,or push_back() method link text"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Inheritance type</strong>  : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Object inherited as</strong>:",
        "output": "<strong>Inheritance type</strong>  : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Object inherited as</strong>:",
        "answer": "<strong>Inheritance type</strong>  : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Object inherited as</strong>:",
        "summary": "<strong>Inheritance type</strong>  : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Object inherited as</strong>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To link a new framework (In the Groups and Files pane, open the Targets disclosure triangle to display the targets associated with your project.) <li>In the Groups and Files pane, double-click your current project target to display the Target Info panel. <li>In the Info panel, select the General tab. The lower pane displays the currently-linked frameworks. <li>Add a new framework by pressing the + button at the bottom left of the panel and selecting from the list presented in the sheet that appears. (Importantly, the list in the sheet shows only the frameworks relevant to the target...) (This wasn't available two years ago, but it's nevertheless worth pointing out as a significant time-saver over finding the framework in the filesystem and dragging it into the project...)",
        "output": "<li>In the Groups and Files pane, double-click your current project target to display the Target Info panel. <li>In the Info panel, select the General tab. The lower pane displays the currently-linked frameworks. <li>Add a new framework by pressing the + button at the bottom left of the panel and selecting from the list presented in the sheet that appears.",
        "answer": "To link a new framework (In the Groups and Files pane, open the Targets disclosure triangle to display the targets associated with your project.) <li>In the Groups and Files pane, double-click your current project target to display the Target Info panel. <li>In the Info panel, select the General tab. The lower pane displays the currently-linked frameworks. <li>Add a new framework by pressing the + button at the bottom left of the panel and selecting from the list presented in the sheet that appears. (Importantly, the list in the sheet shows only the frameworks relevant to the target...) (This wasn't available two years ago, but it's nevertheless worth pointing out as a significant time-saver over finding the framework in the filesystem and dragging it into the project...)",
        "summary": "<li>In the Groups and Files pane, double-click your current project target to display the Target Info panel. <li>In the Info panel, select the General tab. The lower pane displays the currently-linked frameworks. <li>Add a new framework by pressing the + button at the bottom left of the panel and selecting from the list presented in the sheet that appears."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See this question: How can I truncate a datetime in SQL Server? Whatever you do, <strong>don't use the string method</strong>. That's about the worst way you could do it.",
        "output": "Whatever you do, <strong>don't use the string method</strong>.",
        "answer": "See this question: How can I truncate a datetime in SQL Server? Whatever you do, <strong>don't use the string method</strong>. That's about the worst way you could do it.",
        "summary": "Whatever you do, <strong>don't use the string method</strong>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You will want to take a look in to WordPress' plugin API. This explains how to \"hook\" and \"filter\" in to different parts of the WordPress mechanics, so you can execute custom PHP code pretty much any where at any given time. This hooking, filtering, and custom code authoring can all take place in your functions.php file in any of your themes. Happy coding :) <li>WordPress Plugin API <li>WordPress Hooks/Filter Database <li>WordPress PHPXHref by Yoast",
        "output": "This hooking, filtering, and custom code authoring can all take place in your functions.php file in any of your themes.",
        "answer": "You will want to take a look in to WordPress' plugin API. This explains how to \"hook\" and \"filter\" in to different parts of the WordPress mechanics, so you can execute custom PHP code pretty much any where at any given time. This hooking, filtering, and custom code authoring can all take place in your functions.php file in any of your themes. Happy coding :) <li>WordPress Plugin API <li>WordPress Hooks/Filter Database <li>WordPress PHPXHref by Yoast",
        "summary": "This hooking, filtering, and custom code authoring can all take place in your functions.php file in any of your themes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A self join is simply when you join a table with itself. There is no <code>SELF JOIN</code> keyword, you just write an ordinary join where both tables involved in the join are the same table. One thing to notice is that when you are self joining it is necessary to use an alias for the table otherwise the table name would be ambiguous. It is useful when you want to correlate pairs of rows from the same table, for example a parent - child relationship. The following query returns the names of all immediate subcategories of the category 'Kitchen'.",
        "output": "A self join is simply when you join a table with itself. It is useful when you want to correlate pairs of rows from the same table, for example a parent - child relationship.",
        "answer": "A self join is simply when you join a table with itself. There is no <code>SELF JOIN</code> keyword, you just write an ordinary join where both tables involved in the join are the same table. One thing to notice is that when you are self joining it is necessary to use an alias for the table otherwise the table name would be ambiguous. It is useful when you want to correlate pairs of rows from the same table, for example a parent - child relationship. The following query returns the names of all immediate subcategories of the category 'Kitchen'.",
        "summary": "A self join is simply when you join a table with itself. It is useful when you want to correlate pairs of rows from the same table, for example a parent - child relationship."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try: I have some code that does what your say, but there is a lot of parameters in it. I think these are the bare minimum, let me know if it doesn't work, I'll post the rest.",
        "output": "Try:",
        "answer": "Try: I have some code that does what your say, but there is a lot of parameters in it. I think these are the bare minimum, let me know if it doesn't work, I'll post the rest.",
        "summary": "Try:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>%ld</code> see <code>printf</code> reference on cplusplus.com",
        "output": "<code>%ld</code> see <code>printf</code> reference on cplusplus.com",
        "answer": "<code>%ld</code> see <code>printf</code> reference on cplusplus.com",
        "summary": "<code>%ld</code> see <code>printf</code> reference on cplusplus.com"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Java, you just throw the exception you caught, so <code>throw e</code> rather than just <code>throw</code>. Java maintains the stack trace.",
        "output": "In Java, you just throw the exception you caught, so <code>throw e</code> rather than just <code>throw</code>.",
        "answer": "In Java, you just throw the exception you caught, so <code>throw e</code> rather than just <code>throw</code>. Java maintains the stack trace.",
        "summary": "In Java, you just throw the exception you caught, so <code>throw e</code> rather than just <code>throw</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you're trying to do this via the command line... If you're trying to run the CREATE TABLE statement from the command line interface, you need to specify the database you're working in before executing the query: Here's the documentation. If you're trying to do this via MySQL Workbench... ...you need to select the appropriate database/catalog in the drop down menu found above the :Object Browser: tab. You can specify the default schema/database/catalog for the connection - click the \"Manage Connections\" options under the SQL Development heading of the Workbench splash screen. Addendum This all assumes there's a database you want to create the table inside of - if not, you need to create the database before anything else:",
        "output": "If you're trying to do this via the command line... If you're trying to run the CREATE TABLE statement from the command line interface, you need to specify the database you're working in before executing the query: If you're trying to do this via MySQL Workbench... You can specify the default schema/database/catalog for the connection - click the \"Manage Connections\" options under the SQL Development heading of the Workbench splash screen. This all assumes there's a database you want to create the table inside of - if not, you need to create the database before anything else:",
        "answer": "If you're trying to do this via the command line... If you're trying to run the CREATE TABLE statement from the command line interface, you need to specify the database you're working in before executing the query: Here's the documentation. If you're trying to do this via MySQL Workbench... ...you need to select the appropriate database/catalog in the drop down menu found above the :Object Browser: tab. You can specify the default schema/database/catalog for the connection - click the \"Manage Connections\" options under the SQL Development heading of the Workbench splash screen. Addendum This all assumes there's a database you want to create the table inside of - if not, you need to create the database before anything else:",
        "summary": "If you're trying to do this via the command line... If you're trying to run the CREATE TABLE statement from the command line interface, you need to specify the database you're working in before executing the query: If you're trying to do this via MySQL Workbench... You can specify the default schema/database/catalog for the connection - click the \"Manage Connections\" options under the SQL Development heading of the Workbench splash screen. This all assumes there's a database you want to create the table inside of - if not, you need to create the database before anything else:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n http://curl.haxx.se/docs/httpscripting.html See part 6. HTTP Authentication HTTP Authentication HTTP Authentication is the ability to tell the server your username and    password so that it can verify that you're allowed to do the request you're    doing. The Basic authentication used in HTTP (which is the type curl uses by    default) is plain text based, which means it sends username and password    only slightly obfuscated, but still fully readable by anyone that sniffs on    the network between you and the remote server. To tell curl to use a user and password for authentication: The site might require a different authentication method (check the headers    returned by the server), and then --ntlm, --digest, --negotiate or even    --anyauth might be options that suit you. Sometimes your HTTP access is only available through the use of a HTTP    proxy. This seems to be especially common at various companies. A HTTP proxy    may require its own user and password to allow the client to get through to    the Internet. To specify those with curl, run something like: If your proxy requires the authentication to be done using the NTLM method,    use --proxy-ntlm, if it requires Digest use --proxy-digest. If you use any one these user+password options but leave out the password    part, curl will prompt for the password interactively. Do note that when a program is run, its parameters might be possible to see    when listing the running processes of the system. Thus, other users may be    able to watch your passwords if you pass them as plain command line    options. There are ways to circumvent this. It is worth noting that while this is how HTTP Authentication works, very    many web sites will not use this concept when they provide logins etc. See    the Web Login chapter further below for more details on that.",
        "output": "See part 6.",
        "answer": "http://curl.haxx.se/docs/httpscripting.html See part 6. HTTP Authentication HTTP Authentication HTTP Authentication is the ability to tell the server your username and    password so that it can verify that you're allowed to do the request you're    doing. The Basic authentication used in HTTP (which is the type curl uses by    default) is plain text based, which means it sends username and password    only slightly obfuscated, but still fully readable by anyone that sniffs on    the network between you and the remote server. To tell curl to use a user and password for authentication: The site might require a different authentication method (check the headers    returned by the server), and then --ntlm, --digest, --negotiate or even    --anyauth might be options that suit you. Sometimes your HTTP access is only available through the use of a HTTP    proxy. This seems to be especially common at various companies. A HTTP proxy    may require its own user and password to allow the client to get through to    the Internet. To specify those with curl, run something like: If your proxy requires the authentication to be done using the NTLM method,    use --proxy-ntlm, if it requires Digest use --proxy-digest. If you use any one these user+password options but leave out the password    part, curl will prompt for the password interactively. Do note that when a program is run, its parameters might be possible to see    when listing the running processes of the system. Thus, other users may be    able to watch your passwords if you pass them as plain command line    options. There are ways to circumvent this. It is worth noting that while this is how HTTP Authentication works, very    many web sites will not use this concept when they provide logins etc. See    the Web Login chapter further below for more details on that.",
        "summary": "See part 6."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK It's defined in <code>$INCDIR/bits/types.h</code> through: BIGBLOCK",
        "output": "BIGBLOCK It's defined in <code>$INCDIR/bits/types.h</code> through:",
        "answer": "BIGBLOCK It's defined in <code>$INCDIR/bits/types.h</code> through: BIGBLOCK",
        "summary": "BIGBLOCK It's defined in <code>$INCDIR/bits/types.h</code> through:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>$this-&gt;</code> is used to refer to a specific instance of a class's variables (member variables) or methods. $derek is now a specific instance of Person.Every Person has a first_name and a last_name, but $derek has a specific first_name and last_name (Derek Martin). Inside the $derek instance, we can refer to those as $this->first_name and $this->last_name ClassName:: is used to refer to that type of class, and its static variables, static methods. If it helps, you can mentally replace the word \"static\" with \"shared\". Because they are shared, they cannot refer to $this, which refers to a specific instance (not shared). Static Variables (i.e. static $db_connection) can be shared among all instances of a type of object. For example, all database objects share a single connection (static $connection). <strong>Static Variables Example:</strong>Pretend we have a database class with a single member variable: static $num_connections;Now, put this in the constructor: Just as objects have constructors, they also have destructors, which are executed when the object dies or is unset: Every time we create a new instance, it will increase our connection counter by one. Every time we destroy or stop using an instance, it will decrease the connection counter by one. In this way, we can monitor the number of instances of the database object we have in use with: Because $num_connections is static (shared), it will reflect the total number of active database objects. You may have seen this technique used to share database connections among all instances of a database class. This is done because creating the database connection takes a long time, so it's best to create just one, and share it (this is called a Singleton Pattern). Static Methods (i.e. public static View::format_phone_number($digits)) can be used WITHOUT first instantiating one of those objects (i.e. They do not internally refer to $this). <strong>Static Method Example:</strong> As you can see, public static function prettyName knows nothing about the object. It's just working with the parameters you pass in, like a normal function that's not part of an object. Why bother, then, if we could just have it not as part of the object? <li>First, attaching functions to objects helps you keep things organized, so you know where to find them. <li>Second, it prevents naming conflicts. In a big project, you're likely to have two developers create getName() functions. If one creates a ClassName1::getName(), and the other creates ClassName2::getName(), it's no problem at all. No conflict. Yay static methods! <strong>SELF::</strong>If you are coding <em>outside</em> the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);If you are coding <em>inside</em> the object that has the static method you want to refer to, you can <em>either</em> use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut The same goes for static variables:<strong>Example:</strong> View::templates_path versus self::templates_path Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:<strong>Example:</strong> Session::getUsersOnline(); But if the DB class wanted to refer to its own static variable, it would just say self:<strong>Example:</strong> self::connection; Hope that helps clear things up :)",
        "output": "<code>$this-&gt;</code> is used to refer to a specific instance of a class's variables (member variables) or methods. If it helps, you can mentally replace the word \"static\" with \"shared\". <strong>SELF::</strong>If you are coding <em>outside</em> the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);If you are coding <em>inside</em> the object that has the static method you want to refer to, you can <em>either</em> use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut The same goes for static variables:<strong>Example:</strong> View::templates_path versus self::templates_path Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:<strong>Example:</strong> Session::getUsersOnline(); But if the DB class wanted to refer to its own static variable, it would just say self:<strong>Example:</strong> self::connection;",
        "answer": "<code>$this-&gt;</code> is used to refer to a specific instance of a class's variables (member variables) or methods. $derek is now a specific instance of Person.Every Person has a first_name and a last_name, but $derek has a specific first_name and last_name (Derek Martin). Inside the $derek instance, we can refer to those as $this->first_name and $this->last_name ClassName:: is used to refer to that type of class, and its static variables, static methods. If it helps, you can mentally replace the word \"static\" with \"shared\". Because they are shared, they cannot refer to $this, which refers to a specific instance (not shared). Static Variables (i.e. static $db_connection) can be shared among all instances of a type of object. For example, all database objects share a single connection (static $connection). <strong>Static Variables Example:</strong>Pretend we have a database class with a single member variable: static $num_connections;Now, put this in the constructor: Just as objects have constructors, they also have destructors, which are executed when the object dies or is unset: Every time we create a new instance, it will increase our connection counter by one. Every time we destroy or stop using an instance, it will decrease the connection counter by one. In this way, we can monitor the number of instances of the database object we have in use with: Because $num_connections is static (shared), it will reflect the total number of active database objects. You may have seen this technique used to share database connections among all instances of a database class. This is done because creating the database connection takes a long time, so it's best to create just one, and share it (this is called a Singleton Pattern). Static Methods (i.e. public static View::format_phone_number($digits)) can be used WITHOUT first instantiating one of those objects (i.e. They do not internally refer to $this). <strong>Static Method Example:</strong> As you can see, public static function prettyName knows nothing about the object. It's just working with the parameters you pass in, like a normal function that's not part of an object. Why bother, then, if we could just have it not as part of the object? <li>First, attaching functions to objects helps you keep things organized, so you know where to find them. <li>Second, it prevents naming conflicts. In a big project, you're likely to have two developers create getName() functions. If one creates a ClassName1::getName(), and the other creates ClassName2::getName(), it's no problem at all. No conflict. Yay static methods! <strong>SELF::</strong>If you are coding <em>outside</em> the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);If you are coding <em>inside</em> the object that has the static method you want to refer to, you can <em>either</em> use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut The same goes for static variables:<strong>Example:</strong> View::templates_path versus self::templates_path Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:<strong>Example:</strong> Session::getUsersOnline(); But if the DB class wanted to refer to its own static variable, it would just say self:<strong>Example:</strong> self::connection; Hope that helps clear things up :)",
        "summary": "<code>$this-&gt;</code> is used to refer to a specific instance of a class's variables (member variables) or methods. If it helps, you can mentally replace the word \"static\" with \"shared\". <strong>SELF::</strong>If you are coding <em>outside</em> the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);If you are coding <em>inside</em> the object that has the static method you want to refer to, you can <em>either</em> use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut The same goes for static variables:<strong>Example:</strong> View::templates_path versus self::templates_path Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:<strong>Example:</strong> Session::getUsersOnline(); But if the DB class wanted to refer to its own static variable, it would just say self:<strong>Example:</strong> self::connection;"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a difference, but there is no difference in that example. Using the more verbose method: <code>new Array()</code> does have one extra option in the parameters: if you pass a number to the constructor, you will get an array of that length: To illustrate the different ways to create an array:",
        "output": "There is a difference, but there is no difference in that example. Using the more verbose method: <code>new Array()</code> does have one extra option in the parameters: if you pass a number to the constructor, you will get an array of that length:",
        "answer": "There is a difference, but there is no difference in that example. Using the more verbose method: <code>new Array()</code> does have one extra option in the parameters: if you pass a number to the constructor, you will get an array of that length: To illustrate the different ways to create an array:",
        "summary": "There is a difference, but there is no difference in that example. Using the more verbose method: <code>new Array()</code> does have one extra option in the parameters: if you pass a number to the constructor, you will get an array of that length:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ordering... a list has an order, a set does not.",
        "output": "Ordering... a list has an order, a set does not.",
        "answer": "Ordering... a list has an order, a set does not.",
        "summary": "Ordering... a list has an order, a set does not."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try grep -o Edit: matching from Phil's comment From the docs:",
        "output": "Try grep -o",
        "answer": "Try grep -o Edit: matching from Phil's comment From the docs:",
        "summary": "Try grep -o"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n from http://ora-12154.ora-code.com <strong>ORA-12154</strong>:  TNS:could not resolve the connect identifier specified <em>Cause</em>:    A connection to a database or other service was requested using a connect identifier, and the connect identifier specified could not be resolved into a connect descriptor using one of the naming methods configured. For example, if the type of connect identifier used was a net service name then the net service name could not be found in a naming method repository, or the repository could not be located or reached. <em>Action</em>: <li>If you are using local naming (TNSNAMES.ORA file): <li>Make sure that \"TNSNAMES\" is listed as one of the values of the NAMES.DIRECTORY_PATH parameter in the Oracle Net profile (SQLNET.ORA) <li>Verify that a TNSNAMES.ORA file exists and is in the proper directory and is accessible. <li>Check that the net service name used as the connect identifier exists in the TNSNAMES.ORA file. <li>Make sure there are no syntax errors anywhere in the TNSNAMES.ORA file. Look for unmatched parentheses or stray characters. Errors in a TNSNAMES.ORA file may make it unusable. <li>If you are using directory naming: <li>Verify that \"LDAP\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Verify that the LDAP directory server is up and that it is accessible. <li>Verify that the net service name or database name used as the connect identifier is configured in the directory. <li>Verify that the default context being used is correct by specifying a fully qualified net service name or a full LDAP DN as the connect identifier <li>If you are using easy connect naming: <li>Verify that \"EZCONNECT\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Make sure the host, port and service name specified are correct. <li>Try enclosing the connect identifier in quote marks. See the Oracle Net Services Administrators Guide or the Oracle operating system specific guide for more information on naming.",
        "output": "<strong>ORA-12154</strong>:  TNS:could not resolve the connect identifier specified <em>Cause</em>:    A connection to a database or other service was requested using a connect identifier, and the connect identifier specified could not be resolved into a connect descriptor using one of the naming methods configured. <em>Action</em>: <li>If you are using local naming (TNSNAMES.ORA file): <li>Make sure that \"TNSNAMES\" is listed as one of the values of the NAMES.DIRECTORY_PATH parameter in the Oracle Net profile (SQLNET.ORA) <li>Verify that a TNSNAMES.ORA file exists and is in the proper directory and is accessible. <li>Check that the net service name used as the connect identifier exists in the TNSNAMES.ORA file. <li>Make sure there are no syntax errors anywhere in the TNSNAMES.ORA file. <li>If you are using directory naming: <li>Verify that \"LDAP\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Verify that the LDAP directory server is up and that it is accessible. <li>Verify that the net service name or database name used as the connect identifier is configured in the directory. <li>Verify that the default context being used is correct by specifying a fully qualified net service name or a full LDAP DN as the connect identifier <li>If you are using easy connect naming: <li>Verify that \"EZCONNECT\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Make sure the host, port and service name specified are correct. <li>Try enclosing the connect identifier in quote marks.",
        "answer": "from http://ora-12154.ora-code.com <strong>ORA-12154</strong>:  TNS:could not resolve the connect identifier specified <em>Cause</em>:    A connection to a database or other service was requested using a connect identifier, and the connect identifier specified could not be resolved into a connect descriptor using one of the naming methods configured. For example, if the type of connect identifier used was a net service name then the net service name could not be found in a naming method repository, or the repository could not be located or reached. <em>Action</em>: <li>If you are using local naming (TNSNAMES.ORA file): <li>Make sure that \"TNSNAMES\" is listed as one of the values of the NAMES.DIRECTORY_PATH parameter in the Oracle Net profile (SQLNET.ORA) <li>Verify that a TNSNAMES.ORA file exists and is in the proper directory and is accessible. <li>Check that the net service name used as the connect identifier exists in the TNSNAMES.ORA file. <li>Make sure there are no syntax errors anywhere in the TNSNAMES.ORA file. Look for unmatched parentheses or stray characters. Errors in a TNSNAMES.ORA file may make it unusable. <li>If you are using directory naming: <li>Verify that \"LDAP\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Verify that the LDAP directory server is up and that it is accessible. <li>Verify that the net service name or database name used as the connect identifier is configured in the directory. <li>Verify that the default context being used is correct by specifying a fully qualified net service name or a full LDAP DN as the connect identifier <li>If you are using easy connect naming: <li>Verify that \"EZCONNECT\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Make sure the host, port and service name specified are correct. <li>Try enclosing the connect identifier in quote marks. See the Oracle Net Services Administrators Guide or the Oracle operating system specific guide for more information on naming.",
        "summary": "<strong>ORA-12154</strong>:  TNS:could not resolve the connect identifier specified <em>Cause</em>:    A connection to a database or other service was requested using a connect identifier, and the connect identifier specified could not be resolved into a connect descriptor using one of the naming methods configured. <em>Action</em>: <li>If you are using local naming (TNSNAMES.ORA file): <li>Make sure that \"TNSNAMES\" is listed as one of the values of the NAMES.DIRECTORY_PATH parameter in the Oracle Net profile (SQLNET.ORA) <li>Verify that a TNSNAMES.ORA file exists and is in the proper directory and is accessible. <li>Check that the net service name used as the connect identifier exists in the TNSNAMES.ORA file. <li>Make sure there are no syntax errors anywhere in the TNSNAMES.ORA file. <li>If you are using directory naming: <li>Verify that \"LDAP\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Verify that the LDAP directory server is up and that it is accessible. <li>Verify that the net service name or database name used as the connect identifier is configured in the directory. <li>Verify that the default context being used is correct by specifying a fully qualified net service name or a full LDAP DN as the connect identifier <li>If you are using easy connect naming: <li>Verify that \"EZCONNECT\" is listed as one of the values of the NAMES.DIRETORY_PATH parameter in the Oracle Net profile (SQLNET.ORA). <li>Make sure the host, port and service name specified are correct. <li>Try enclosing the connect identifier in quote marks."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Can I increase the heap memory to 75%  of physical memory(6GB Heap). Yes you can. In fact, you can increase to more than the amount of physical memory, if you want to. Whether it is a good idea to do this depends on how much else is running on your system. In particular, if the \"working set\" of the applications and services that are currently running significantly exceeds the available physical memory, your system is liable to \"thrash\", spending a lot of time moving virtual memory pages to and from disk. The net effect is that the system gets horribly slow.",
        "output": "Yes you can. In fact, you can increase to more than the amount of physical memory, if you want to. In particular, if the \"working set\" of the applications and services that are currently running significantly exceeds the available physical memory, your system is liable to \"thrash\", spending a lot of time moving virtual memory pages to and from disk.",
        "answer": "Can I increase the heap memory to 75%  of physical memory(6GB Heap). Yes you can. In fact, you can increase to more than the amount of physical memory, if you want to. Whether it is a good idea to do this depends on how much else is running on your system. In particular, if the \"working set\" of the applications and services that are currently running significantly exceeds the available physical memory, your system is liable to \"thrash\", spending a lot of time moving virtual memory pages to and from disk. The net effect is that the system gets horribly slow.",
        "summary": "Yes you can. In fact, you can increase to more than the amount of physical memory, if you want to. In particular, if the \"working set\" of the applications and services that are currently running significantly exceeds the available physical memory, your system is liable to \"thrash\", spending a lot of time moving virtual memory pages to and from disk."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n JSP (JavaServer Pages) JSP is a Java view technology running on the server machine which allows you to write template text in client side languages (like HTML, CSS, JavaScript, ect.). JSP supports taglibs, which are backed by pieces of Java code that let you control the page flow or output dynamically. A well-known taglib is JSTL. JSP also supports Expression Language, which can be used to access backend data (via attributes available in the page, request, session and application scopes), mostly in combination with taglibs. When a JSP is requested for the first time or when the web app starts up, the servlet container will compile it into a class extending <code>HttpServlet</code> and use it during the web app's lifetime. You can find the generated source code in the server's work directory. In for example Tomcat, it's the <code>/work</code> directory. On a JSP request, the servlet container will execute the compiled JSP class and send the generated output (usually just HTML/CSS/JS) through the web server over a network to the client side, which in turn displays it in the web browser. Servlets Servlet is a Java application programming interface (API) running on the server machine, which intercepts requests made by the client and generates/sends a response. A well-known example is the <code>HttpServlet</code> which provides methods to hook on HTTP requests using the popular HTTP methods such as <code>GET</code> and <code>POST</code>. You can configure <code>HttpServlet</code>s to listen to a certain HTTP URL pattern, which is configurable in <code>web.xml</code>, or more recently with Java EE 6, with <code>@WebServlet</code> annotation. When a Servlet is first requested or during web app startup, the servlet container will create an instance of it and keep it in memory during the web app's lifetime. The same instance will be reused for every incoming request whose URL matches the servlet's URL pattern. You can access the request data by <code>HttpServletRequest</code> and handle the response by <code>HttpServletResponse</code>. Both objects are available as method arguments inside any of the overridden methods of <code>HttpServlet</code>, such as <code>doGet()</code> and <code>doPost()</code>. JSF (JavaServer Faces) JSF is a component based MVC framework which is built on top of the Servlet API and provides components via taglibs which can be used in JSP or any other Java based view technology such as Facelets. Facelets is much more suited to JSF than JSP. It namely provides great templating capabilities such as composite components, while JSP basically only offers the <code>&lt;jsp:include&gt;</code> for templating, so that you're forced to create custom components with raw Java code (which is a bit opaque and a lot of tedious work in JSF) when you want to replace a repeated group of components with a single component. Since JSF 2.0, JSP has been deprecated as view technology in favor of Facelets. As being a MVC (Model-View-Controller) framework, JSF provides the <code>FacesServlet</code> as the sole request-response Controller. It takes all the standard and tedious HTTP request/response work from your hands, such as gathering user input, validating/converting them, putting them in model objects, invoking actions and rendering the response. This way you end up with basically a JSP or Facelets (XHTML) page for View and a JavaBean class as Model. The JSF components are used to bind the view with the model (such as your ASP.NET web control does) and the <code>FacesServlet</code> uses the JSF component tree to do all the work. Related questions What is the main-stream Java alternative to ASP.NET / PHP? Java EE web development, what skills do I need? How do servlets work? Instantiation, session variables and multithreading What is a Javabean and where are they used? How to avoid Java code in JSP files? What components are MVC in JSF MVC framework? What is the need of JSF, when UI can be achieved from CSS, HTML, JavaScript, jQuery?",
        "output": "JSP is a Java view technology running on the server machine which allows you to write template text in client side languages (like HTML, CSS, JavaScript, ect.). Servlet is a Java application programming interface (API) running on the server machine, which intercepts requests made by the client and generates/sends a response. JSF is a component based MVC framework which is built on top of the Servlet API and provides components via taglibs which can be used in JSP or any other Java based view technology such as Facelets.",
        "answer": "JSP (JavaServer Pages) JSP is a Java view technology running on the server machine which allows you to write template text in client side languages (like HTML, CSS, JavaScript, ect.). JSP supports taglibs, which are backed by pieces of Java code that let you control the page flow or output dynamically. A well-known taglib is JSTL. JSP also supports Expression Language, which can be used to access backend data (via attributes available in the page, request, session and application scopes), mostly in combination with taglibs. When a JSP is requested for the first time or when the web app starts up, the servlet container will compile it into a class extending <code>HttpServlet</code> and use it during the web app's lifetime. You can find the generated source code in the server's work directory. In for example Tomcat, it's the <code>/work</code> directory. On a JSP request, the servlet container will execute the compiled JSP class and send the generated output (usually just HTML/CSS/JS) through the web server over a network to the client side, which in turn displays it in the web browser. Servlets Servlet is a Java application programming interface (API) running on the server machine, which intercepts requests made by the client and generates/sends a response. A well-known example is the <code>HttpServlet</code> which provides methods to hook on HTTP requests using the popular HTTP methods such as <code>GET</code> and <code>POST</code>. You can configure <code>HttpServlet</code>s to listen to a certain HTTP URL pattern, which is configurable in <code>web.xml</code>, or more recently with Java EE 6, with <code>@WebServlet</code> annotation. When a Servlet is first requested or during web app startup, the servlet container will create an instance of it and keep it in memory during the web app's lifetime. The same instance will be reused for every incoming request whose URL matches the servlet's URL pattern. You can access the request data by <code>HttpServletRequest</code> and handle the response by <code>HttpServletResponse</code>. Both objects are available as method arguments inside any of the overridden methods of <code>HttpServlet</code>, such as <code>doGet()</code> and <code>doPost()</code>. JSF (JavaServer Faces) JSF is a component based MVC framework which is built on top of the Servlet API and provides components via taglibs which can be used in JSP or any other Java based view technology such as Facelets. Facelets is much more suited to JSF than JSP. It namely provides great templating capabilities such as composite components, while JSP basically only offers the <code>&lt;jsp:include&gt;</code> for templating, so that you're forced to create custom components with raw Java code (which is a bit opaque and a lot of tedious work in JSF) when you want to replace a repeated group of components with a single component. Since JSF 2.0, JSP has been deprecated as view technology in favor of Facelets. As being a MVC (Model-View-Controller) framework, JSF provides the <code>FacesServlet</code> as the sole request-response Controller. It takes all the standard and tedious HTTP request/response work from your hands, such as gathering user input, validating/converting them, putting them in model objects, invoking actions and rendering the response. This way you end up with basically a JSP or Facelets (XHTML) page for View and a JavaBean class as Model. The JSF components are used to bind the view with the model (such as your ASP.NET web control does) and the <code>FacesServlet</code> uses the JSF component tree to do all the work. Related questions What is the main-stream Java alternative to ASP.NET / PHP? Java EE web development, what skills do I need? How do servlets work? Instantiation, session variables and multithreading What is a Javabean and where are they used? How to avoid Java code in JSP files? What components are MVC in JSF MVC framework? What is the need of JSF, when UI can be achieved from CSS, HTML, JavaScript, jQuery?",
        "summary": "JSP is a Java view technology running on the server machine which allows you to write template text in client side languages (like HTML, CSS, JavaScript, ect.). Servlet is a Java application programming interface (API) running on the server machine, which intercepts requests made by the client and generates/sends a response. JSF is a component based MVC framework which is built on top of the Servlet API and provides components via taglibs which can be used in JSP or any other Java based view technology such as Facelets."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You'd use a self-join on a table that \"refers\" to itself - e.g. a table of employees where managerid is a foreign-key to employeeid on that same table. Example:",
        "output": "You'd use a self-join on a table that \"refers\" to itself - e.g. a table of employees where managerid is a foreign-key to employeeid on that same table.",
        "answer": "You'd use a self-join on a table that \"refers\" to itself - e.g. a table of employees where managerid is a foreign-key to employeeid on that same table. Example:",
        "summary": "You'd use a self-join on a table that \"refers\" to itself - e.g. a table of employees where managerid is a foreign-key to employeeid on that same table."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Implementations of <code>java.util.Set</code>",
        "output": "Implementations of <code>java.util.Set</code>",
        "answer": "Implementations of <code>java.util.Set</code>",
        "summary": "Implementations of <code>java.util.Set</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The root cause is that the sql server database you took the schema from has a collation that differs from your local installation. If you don't want to worry about collation re install SQL Server locally using the same collation as the SQL Server 2008 database.",
        "output": "The root cause is that the sql server database you took the schema from has a collation that differs from your local installation. If you don't want to worry about collation re install SQL Server locally using the same collation as the SQL Server 2008 database.",
        "answer": "The root cause is that the sql server database you took the schema from has a collation that differs from your local installation. If you don't want to worry about collation re install SQL Server locally using the same collation as the SQL Server 2008 database.",
        "summary": "The root cause is that the sql server database you took the schema from has a collation that differs from your local installation. If you don't want to worry about collation re install SQL Server locally using the same collation as the SQL Server 2008 database."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n After much pulling out of hair I discovered that the <code>foreach</code> loops were the culprits. What needs to happen is to call EF but return it into an <code>IList&lt;T&gt;</code> of that target type then loop on the <code>IList&lt;T&gt;</code>. Example:",
        "output": "After much pulling out of hair I discovered that the <code>foreach</code> loops were the culprits.",
        "answer": "After much pulling out of hair I discovered that the <code>foreach</code> loops were the culprits. What needs to happen is to call EF but return it into an <code>IList&lt;T&gt;</code> of that target type then loop on the <code>IList&lt;T&gt;</code>. Example:",
        "summary": "After much pulling out of hair I discovered that the <code>foreach</code> loops were the culprits."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Personally, I don't see the point of making it a property at all if you're not going to do  anything at all beyond the auto-property. Just leave it as a field. The encapsulation benefit for these item are just red herrings, because there's nothing behind them to encapsulate. If you ever need to change the underlying implementation you're still free to refactor them as properties without breaking any dependent code. Hmm... maybe this will be the subject of it's own question later",
        "output": "Just leave it as a field. The encapsulation benefit for these item are just red herrings, because there's nothing behind them to encapsulate.",
        "answer": "Personally, I don't see the point of making it a property at all if you're not going to do  anything at all beyond the auto-property. Just leave it as a field. The encapsulation benefit for these item are just red herrings, because there's nothing behind them to encapsulate. If you ever need to change the underlying implementation you're still free to refactor them as properties without breaking any dependent code. Hmm... maybe this will be the subject of it's own question later",
        "summary": "Just leave it as a field. The encapsulation benefit for these item are just red herrings, because there's nothing behind them to encapsulate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When you fire a shell script, it runs a new instance of that shell (<code>/bin/bash</code>). Thus, your script just fires up a shell, changes the directory and exits. Put another way, <code>cd</code> (and other such commands) within a shell script do not affect nor have access to the shell from which they were launched.",
        "output": "Put another way, <code>cd</code> (and other such commands) within a shell script do not affect nor have access to the shell from which they were launched.",
        "answer": "When you fire a shell script, it runs a new instance of that shell (<code>/bin/bash</code>). Thus, your script just fires up a shell, changes the directory and exits. Put another way, <code>cd</code> (and other such commands) within a shell script do not affect nor have access to the shell from which they were launched.",
        "summary": "Put another way, <code>cd</code> (and other such commands) within a shell script do not affect nor have access to the shell from which they were launched."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I find lambda useful for a list of functions that do the same, but for different circumstances. Like the Mozilla plural rules. If you'd have to define a function for all of those you'd go mad by the end of it. Also it wouldn't be nice with function names like <code>plural_rule_1</code>, <code>plural_rule_2</code>, etc. And you'd need to <code>eval()</code> it when you're depending on a variable function id.",
        "output": "I find lambda useful for a list of functions that do the same, but for different circumstances.",
        "answer": "I find lambda useful for a list of functions that do the same, but for different circumstances. Like the Mozilla plural rules. If you'd have to define a function for all of those you'd go mad by the end of it. Also it wouldn't be nice with function names like <code>plural_rule_1</code>, <code>plural_rule_2</code>, etc. And you'd need to <code>eval()</code> it when you're depending on a variable function id.",
        "summary": "I find lambda useful for a list of functions that do the same, but for different circumstances."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The source code for ASP.NET AJAX is available for your reference, so you can pick through it and include the parts you want to continue using into a separate JS file. Or, you can port them to jQuery. Here is the format function... BIGBLOCK And here are the endsWith and startsWith prototype functions... BIGBLOCK",
        "output": "The source code for ASP.NET AJAX is available for your reference, so you can pick through it and include the parts you want to continue using into a separate JS file. Or, you can port them to jQuery. BIGBLOCK BIGBLOCK",
        "answer": "The source code for ASP.NET AJAX is available for your reference, so you can pick through it and include the parts you want to continue using into a separate JS file. Or, you can port them to jQuery. Here is the format function... BIGBLOCK And here are the endsWith and startsWith prototype functions... BIGBLOCK",
        "summary": "The source code for ASP.NET AJAX is available for your reference, so you can pick through it and include the parts you want to continue using into a separate JS file. Or, you can port them to jQuery. BIGBLOCK BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Probably the easiest way: BIGBLOCK",
        "output": "Probably the easiest way: BIGBLOCK",
        "answer": "Probably the easiest way: BIGBLOCK",
        "summary": "Probably the easiest way: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A Type Initializer exception indicates that the type couldn't be created. This would occur typically right before your call to your method when you simply reference that class. Is the code you have here the complete text of your type? I would be looking for something like an assignment to fail. I see this a lot with getting app settings and things of that nature. You can also see this with static constructors for types. In any case, is there any more to this class?",
        "output": "A Type Initializer exception indicates that the type couldn't be created. This would occur typically right before your call to your method when you simply reference that class.",
        "answer": "A Type Initializer exception indicates that the type couldn't be created. This would occur typically right before your call to your method when you simply reference that class. Is the code you have here the complete text of your type? I would be looking for something like an assignment to fail. I see this a lot with getting app settings and things of that nature. You can also see this with static constructors for types. In any case, is there any more to this class?",
        "summary": "A Type Initializer exception indicates that the type couldn't be created. This would occur typically right before your call to your method when you simply reference that class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Previous poster is right. You cannot return multiple values from a C# method. However, you do have a couple of options: Return a structure that contains multiple members Return an instance of a class Use output parameters (using the out or ref keywords) Use a dictionary or key-value pair as output The pros and cons here are often hard to figure out. If you return a structure, make sure it's small because structs are value type and passed on the stack. If you return an instance of a class, there are some design patterns here that you might want to use to avoid causing problems - members of classes can be modified because C# passes objects by reference (you don't have ByVal like you did in VB). Finally you can use output parameters but I would limit the use of this to scenarios when you only have a couple (like 3 or less) of parameters - otherwise things get ugly and hard to maintain. Also, the use of output parameters can be an inhibitor to agility because your method signature will have to change every time you need to add something to the return value whereas returning a struct or class instance you can add members without modifying the method signature. From an architectural standpoint I would recommend against using key-value pairs or dictionaries. I find this style of coding requires \"secret knowledge\" in code that consumes the method. It must know ahead of time what the keys are going to be and what the values mean and if the developer working on the internal implementation changes the way the dictionary or KVP is created, it could easily create a failure cascade throughout the entire application.",
        "output": "Return a structure that contains multiple members Return an instance of a class Use output parameters (using the out or ref keywords) Use a dictionary or key-value pair as output",
        "answer": "Previous poster is right. You cannot return multiple values from a C# method. However, you do have a couple of options: Return a structure that contains multiple members Return an instance of a class Use output parameters (using the out or ref keywords) Use a dictionary or key-value pair as output The pros and cons here are often hard to figure out. If you return a structure, make sure it's small because structs are value type and passed on the stack. If you return an instance of a class, there are some design patterns here that you might want to use to avoid causing problems - members of classes can be modified because C# passes objects by reference (you don't have ByVal like you did in VB). Finally you can use output parameters but I would limit the use of this to scenarios when you only have a couple (like 3 or less) of parameters - otherwise things get ugly and hard to maintain. Also, the use of output parameters can be an inhibitor to agility because your method signature will have to change every time you need to add something to the return value whereas returning a struct or class instance you can add members without modifying the method signature. From an architectural standpoint I would recommend against using key-value pairs or dictionaries. I find this style of coding requires \"secret knowledge\" in code that consumes the method. It must know ahead of time what the keys are going to be and what the values mean and if the developer working on the internal implementation changes the way the dictionary or KVP is created, it could easily create a failure cascade throughout the entire application.",
        "summary": "Return a structure that contains multiple members Return an instance of a class Use output parameters (using the out or ref keywords) Use a dictionary or key-value pair as output"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The documentation could help you : http://java.sun.com/j2se/1.5.0/docs/api/javax/xml/parsers/DocumentBuilder.html The method <code>DocumentBuilder.parse(String)</code> takes a URI and tries to open it. If you want to directly give the content, you have to give it an <code>InputStream</code> or <code>Reader</code>, for example a <code>StringReader</code>. ... Welcome to the Java standard levels of indirections ! Basically : Note that if you read your XML from a file, you can directly give the <code>File</code> object to <code>DocumentBuilder.parse()</code> . As a side note, this is a pattern you will encounter a lot in Java. Usually, most API work with Streams more than with Strings. Using Streams means that potentially not all the content has to be loaded in memory at the same time, which can be a great idea !",
        "output": "The method <code>DocumentBuilder.parse(String)</code> takes a URI and tries to open it. If you want to directly give the content, you have to give it an <code>InputStream</code> or <code>Reader</code>, for example a <code>StringReader</code>.",
        "answer": "The documentation could help you : http://java.sun.com/j2se/1.5.0/docs/api/javax/xml/parsers/DocumentBuilder.html The method <code>DocumentBuilder.parse(String)</code> takes a URI and tries to open it. If you want to directly give the content, you have to give it an <code>InputStream</code> or <code>Reader</code>, for example a <code>StringReader</code>. ... Welcome to the Java standard levels of indirections ! Basically : Note that if you read your XML from a file, you can directly give the <code>File</code> object to <code>DocumentBuilder.parse()</code> . As a side note, this is a pattern you will encounter a lot in Java. Usually, most API work with Streams more than with Strings. Using Streams means that potentially not all the content has to be loaded in memory at the same time, which can be a great idea !",
        "summary": "The method <code>DocumentBuilder.parse(String)</code> takes a URI and tries to open it. If you want to directly give the content, you have to give it an <code>InputStream</code> or <code>Reader</code>, for example a <code>StringReader</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is 253 == 9 007 199 254 740 992. This is because <code>Number</code>s are stored as floating-point in a 52-bit mantissa. The min value is -253. This makes some fun things happening And can also be dangerous :) Further reading: http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html",
        "output": "It is 253 == 9 007 199 254 740 992.",
        "answer": "It is 253 == 9 007 199 254 740 992. This is because <code>Number</code>s are stored as floating-point in a 52-bit mantissa. The min value is -253. This makes some fun things happening And can also be dangerous :) Further reading: http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html",
        "summary": "It is 253 == 9 007 199 254 740 992."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Do you have data in a production database yet? If so, you could setup a period refresh of the data via DTS. We do ours weekly on the weekends and it is very nice to have clean, real data every week for our testing. If you don't have production yet, then you should create a database that is they want you want it (fresh). Then, duplicate that database and use that newly created database as your test environment. When you want the clean version, simply duplicate your clean one again and Bob's your uncle.",
        "output": "If so, you could setup a period refresh of the data via DTS. If you don't have production yet, then you should create a database that is they want you want it (fresh).",
        "answer": "Do you have data in a production database yet? If so, you could setup a period refresh of the data via DTS. We do ours weekly on the weekends and it is very nice to have clean, real data every week for our testing. If you don't have production yet, then you should create a database that is they want you want it (fresh). Then, duplicate that database and use that newly created database as your test environment. When you want the clean version, simply duplicate your clean one again and Bob's your uncle.",
        "summary": "If so, you could setup a period refresh of the data via DTS. If you don't have production yet, then you should create a database that is they want you want it (fresh)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm afraid there aren't any good platform independent ways to do this other than connecting to another computer and having it send you your IP address. For example:  findmyipaddress. Note that this won't work if you need an IP address that's behind NAT unless the computer you're connecting to is behind NAT as well. Here's one solution that works in Linux:  get the IP address associated with a network interface.",
        "output": "I'm afraid there aren't any good platform independent ways to do this other than connecting to another computer and having it send you your IP address.",
        "answer": "I'm afraid there aren't any good platform independent ways to do this other than connecting to another computer and having it send you your IP address. For example:  findmyipaddress. Note that this won't work if you need an IP address that's behind NAT unless the computer you're connecting to is behind NAT as well. Here's one solution that works in Linux:  get the IP address associated with a network interface.",
        "summary": "I'm afraid there aren't any good platform independent ways to do this other than connecting to another computer and having it send you your IP address."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Thread.wait() call make sense inside a code that synchronizes on Thread.class object. I don't think it's what you meant. You ask How can I make a thread wait until it will be notified? You can make only your current thread wait. Any other thread can be only gently asked to wait, if it agree. If you want to wait for some condition, you need a lock object - Thread.class object is a very bad choice - it is a singleton AFAIK so synchronizing on it (except for Thread static methods) is dangerous. Details for synchronization and waiting are already explained by Tom Hawtin. <code>java.lang.IllegalMonitorStateException</code> means you are trying to wait on object on which you are not synchronized - it's illegal to do so.",
        "output": "If you want to wait for some condition, you need a lock object - Thread.class object is a very bad choice - it is a singleton AFAIK so synchronizing on it (except for Thread static methods) is dangerous.",
        "answer": "Thread.wait() call make sense inside a code that synchronizes on Thread.class object. I don't think it's what you meant. You ask How can I make a thread wait until it will be notified? You can make only your current thread wait. Any other thread can be only gently asked to wait, if it agree. If you want to wait for some condition, you need a lock object - Thread.class object is a very bad choice - it is a singleton AFAIK so synchronizing on it (except for Thread static methods) is dangerous. Details for synchronization and waiting are already explained by Tom Hawtin. <code>java.lang.IllegalMonitorStateException</code> means you are trying to wait on object on which you are not synchronized - it's illegal to do so.",
        "summary": "If you want to wait for some condition, you need a lock object - Thread.class object is a very bad choice - it is a singleton AFAIK so synchronizing on it (except for Thread static methods) is dangerous."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To show both: Hide X Axis: Hide Y Axis:",
        "output": "To show both: Hide X Axis: Hide Y Axis:",
        "answer": "To show both: Hide X Axis: Hide Y Axis:",
        "summary": "To show both: Hide X Axis: Hide Y Axis:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed). So either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.",
        "output": "This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed). So either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.",
        "answer": "This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed). So either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.",
        "summary": "This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed). So either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have had this error many times and it can be quite hard to track down... Basically, what hibernate is saying is that you have two objects which have the same identifier (same primary key) but they are not the same object. I would suggest you break down your code, i.e. comment out bits until the error goes away and then put the code back until it comes back and you should find the error it. It most often happens via cascading saves where there is a cascade save between object A and B, but object B has already been associated with the session but not on the same instance of B. What primary key generator are you using? The reason I ask is this error is related to how you're telling hibernate to ascertain the persistent state of an object (i.e. whether an object is persistent or not). The error could be happening because hibernate is trying to persist and object that is already persistent. In fact, if you use save hibernate will try and persist that object, and maybe there is already an object with that same primary key associated with the session. Example Assuming you have a hibernate class object for a table with 10 rows based on a primary key combination (column 1 and column 2). Now, you have removed 5 rows from the table at some point of time. Now, if you try to add the same 10 rows again, while hibernate tries to persist the objects in database, 5 rows which were already removed will be added without errors. Now the remaining 5 rows which are already existing, will throw this exception. So the easy approach would be checking if you have updated/removed any value in a table which is part of something and later are you trying to insert the same objects again",
        "output": "I would suggest you break down your code, i.e. comment out bits until the error goes away and then put the code back until it comes back and you should find the error it. The reason I ask is this error is related to how you're telling hibernate to ascertain the persistent state of an object (i.e. whether an object is persistent or not). The error could be happening because hibernate is trying to persist and object that is already persistent.",
        "answer": "I have had this error many times and it can be quite hard to track down... Basically, what hibernate is saying is that you have two objects which have the same identifier (same primary key) but they are not the same object. I would suggest you break down your code, i.e. comment out bits until the error goes away and then put the code back until it comes back and you should find the error it. It most often happens via cascading saves where there is a cascade save between object A and B, but object B has already been associated with the session but not on the same instance of B. What primary key generator are you using? The reason I ask is this error is related to how you're telling hibernate to ascertain the persistent state of an object (i.e. whether an object is persistent or not). The error could be happening because hibernate is trying to persist and object that is already persistent. In fact, if you use save hibernate will try and persist that object, and maybe there is already an object with that same primary key associated with the session. Example Assuming you have a hibernate class object for a table with 10 rows based on a primary key combination (column 1 and column 2). Now, you have removed 5 rows from the table at some point of time. Now, if you try to add the same 10 rows again, while hibernate tries to persist the objects in database, 5 rows which were already removed will be added without errors. Now the remaining 5 rows which are already existing, will throw this exception. So the easy approach would be checking if you have updated/removed any value in a table which is part of something and later are you trying to insert the same objects again",
        "summary": "I would suggest you break down your code, i.e. comment out bits until the error goes away and then put the code back until it comes back and you should find the error it. The reason I ask is this error is related to how you're telling hibernate to ascertain the persistent state of an object (i.e. whether an object is persistent or not). The error could be happening because hibernate is trying to persist and object that is already persistent."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Textpad also works well at opening files that size. I have done it many times when having to deal with extremely large log files in the 3-5gb range. Also, using grep to pull out the worthwhile lines and then look at those works great.",
        "output": "Textpad also works well at opening files that size. Also, using grep to pull out the worthwhile lines and then look at those works great.",
        "answer": "Textpad also works well at opening files that size. I have done it many times when having to deal with extremely large log files in the 3-5gb range. Also, using grep to pull out the worthwhile lines and then look at those works great.",
        "summary": "Textpad also works well at opening files that size. Also, using grep to pull out the worthwhile lines and then look at those works great."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It sounds like IIS is listening to port 80 for HTTP requests. Try stopping IIS by going into Control Panel/Administrative Tools/Internet Information Services, right-clicking on Default Web Site, and click on the Stop option in the popup menu, and see if the listener on port 80 has cleared.",
        "output": "It sounds like IIS is listening to port 80 for HTTP requests. Try stopping IIS by going into Control Panel/Administrative Tools/Internet Information Services, right-clicking on Default Web Site, and click on the Stop option in the popup menu, and see if the listener on port 80 has cleared.",
        "answer": "It sounds like IIS is listening to port 80 for HTTP requests. Try stopping IIS by going into Control Panel/Administrative Tools/Internet Information Services, right-clicking on Default Web Site, and click on the Stop option in the popup menu, and see if the listener on port 80 has cleared.",
        "summary": "It sounds like IIS is listening to port 80 for HTTP requests. Try stopping IIS by going into Control Panel/Administrative Tools/Internet Information Services, right-clicking on Default Web Site, and click on the Stop option in the popup menu, and see if the listener on port 80 has cleared."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In your action method, return Json(object) to return JSON to your page. Then just call the action method using Ajax. You could use one of the helper methods from the ViewPage such as SomeMethod would be a javascript method that then evaluates the Json object returned. If you want to return a plain string, you can just use the ContentResult: ContentResult by default returns a text/plain as its contentType. This is overloadable so you can also do:",
        "output": "In your action method, return Json(object) to return JSON to your page.",
        "answer": "In your action method, return Json(object) to return JSON to your page. Then just call the action method using Ajax. You could use one of the helper methods from the ViewPage such as SomeMethod would be a javascript method that then evaluates the Json object returned. If you want to return a plain string, you can just use the ContentResult: ContentResult by default returns a text/plain as its contentType. This is overloadable so you can also do:",
        "summary": "In your action method, return Json(object) to return JSON to your page."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Overriding depends on having an instance of a class. The point of polymorphism is that you can subclass a class and the objects implementing those subclasses will have different behaviors for the same methods defined in the superclass (and overridden in the subclasses). A static method is not associated with any instance of a class so the concept is not applicable. There were two considerations driving Java's design that impacted this. One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers. Making static methods work the way they do had the benefit of familiarity for C++ programmers and was also very fast, because there's no need to wait until runtime to figure out which method to call.",
        "output": "One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers.",
        "answer": "Overriding depends on having an instance of a class. The point of polymorphism is that you can subclass a class and the objects implementing those subclasses will have different behaviors for the same methods defined in the superclass (and overridden in the subclasses). A static method is not associated with any instance of a class so the concept is not applicable. There were two considerations driving Java's design that impacted this. One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers. Making static methods work the way they do had the benefit of familiarity for C++ programmers and was also very fast, because there's no need to wait until runtime to figure out which method to call.",
        "summary": "One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Take a look at assert() example program in C++ Many compilers offer an assert()  macro. The assert() macro returns TRUE  if its parameter evaluates TRUE and  takes some kind of action if it  evaluates FALSE. Many compilers will  abort the program on an assert() that  fails; others will throw an exception One powerful feature of the assert()  macro is that the preprocessor  collapses it into no code at all if  DEBUG is not defined. It is a great  help during development, and when the  final product ships there is no  performance penalty nor increase in  the size of the executable version of  the program. Eg BIGBLOCK",
        "output": "The assert() macro returns TRUE  if its parameter evaluates TRUE and  takes some kind of action if it  evaluates FALSE. One powerful feature of the assert()  macro is that the preprocessor  collapses it into no code at all if  DEBUG is not defined.",
        "answer": "Take a look at assert() example program in C++ Many compilers offer an assert()  macro. The assert() macro returns TRUE  if its parameter evaluates TRUE and  takes some kind of action if it  evaluates FALSE. Many compilers will  abort the program on an assert() that  fails; others will throw an exception One powerful feature of the assert()  macro is that the preprocessor  collapses it into no code at all if  DEBUG is not defined. It is a great  help during development, and when the  final product ships there is no  performance penalty nor increase in  the size of the executable version of  the program. Eg BIGBLOCK",
        "summary": "The assert() macro returns TRUE  if its parameter evaluates TRUE and  takes some kind of action if it  evaluates FALSE. One powerful feature of the assert()  macro is that the preprocessor  collapses it into no code at all if  DEBUG is not defined."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, you can't do it by using an actual <code>&lt;select&gt;</code>, but there are techniques that allow you to \"replace\" them with javascript solutions that look better. Here's a good article on the topic: &lt;select> Something New",
        "output": "No, you can't do it by using an actual <code>&lt;select&gt;</code>, but there are techniques that allow you to \"replace\" them with javascript solutions that look better.",
        "answer": "No, you can't do it by using an actual <code>&lt;select&gt;</code>, but there are techniques that allow you to \"replace\" them with javascript solutions that look better. Here's a good article on the topic: &lt;select> Something New",
        "summary": "No, you can't do it by using an actual <code>&lt;select&gt;</code>, but there are techniques that allow you to \"replace\" them with javascript solutions that look better."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In OO languages such as Object Pascal or C++, a \"method\" is a function associated with an object. So, for example, a \"Dog\" object might have a \"bark\" function and this would be considered a \"Method\". In contrast, the \"StrLen\" function stands alone (it provides the length of a string provided as an argument). It is thus <em>just</em> a \"function.\" Javascript is technically Object Oriented as well but faces many limitations compared to a full-blown language like C++, C# or Pascal. Nonetheless, the distinction should still hold. A couple of additional facts: C# is fully object oriented so you cannot create standalone \"functions.\" In C# every function is bound to an object and is thus, technically, a \"method.\" The kicker is that few people in C# refer to them as \"methods\" - they just use the term \"functions\" because there isn't any real distinction to be made. Finally - just so any Pascal gurus don't jump on me here - Pascal also differentiates between \"functions\" (which return a value) and \"procedures\" which do not. C# does not make this distinction explicitly although you can, of course, choose to return a value or not.",
        "output": "In OO languages such as Object Pascal or C++, a \"method\" is a function associated with an object. So, for example, a \"Dog\" object might have a \"bark\" function and this would be considered a \"Method\". In contrast, the \"StrLen\" function stands alone (it provides the length of a string provided as an argument). It is thus <em>just</em> a \"function.\"",
        "answer": "In OO languages such as Object Pascal or C++, a \"method\" is a function associated with an object. So, for example, a \"Dog\" object might have a \"bark\" function and this would be considered a \"Method\". In contrast, the \"StrLen\" function stands alone (it provides the length of a string provided as an argument). It is thus <em>just</em> a \"function.\" Javascript is technically Object Oriented as well but faces many limitations compared to a full-blown language like C++, C# or Pascal. Nonetheless, the distinction should still hold. A couple of additional facts: C# is fully object oriented so you cannot create standalone \"functions.\" In C# every function is bound to an object and is thus, technically, a \"method.\" The kicker is that few people in C# refer to them as \"methods\" - they just use the term \"functions\" because there isn't any real distinction to be made. Finally - just so any Pascal gurus don't jump on me here - Pascal also differentiates between \"functions\" (which return a value) and \"procedures\" which do not. C# does not make this distinction explicitly although you can, of course, choose to return a value or not.",
        "summary": "In OO languages such as Object Pascal or C++, a \"method\" is a function associated with an object. So, for example, a \"Dog\" object might have a \"bark\" function and this would be considered a \"Method\". In contrast, the \"StrLen\" function stands alone (it provides the length of a string provided as an argument). It is thus <em>just</em> a \"function.\""
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think there are two different things here. The first one is that normal SSH authentication requires the user to put the account's password (where the account password will be authenticated against different methods, depending on the sshd configuration). You can avoid putting that password using certificates. With certificates you still have to put a password, but this time is the password of your private key (that's independent of the account's password). To do this you can follow the instructions pointed out by steveth45: With Public Key Authentication. If you want to avoid putting the certificate's password every time then you can use ssh-agent, as pointed out by DigitalRoss The exact way you do this depends on Unix vs Windows, but essentially you need to run ssh-agent in the background when you log in, and then the first time you log in, run ssh-add to give the agent your passphrase. All ssh-family commands will then consult the agent and automatically pick up your passphrase. Start here: man ssh-agent. The only problem of ssh-agent is that, on *nix at least, you have to put the certificates password on every new shell. And then the certificate is \"loaded\" and you can use it to authenticate against an ssh server without putting any kind of password. But this is on that particular shell. With keychain you can do the same thing as ssh-agent but \"system-wide\". Once you turn on your computer, you open a shell and put the password of the certificate. And then, every other shell will use that \"loaded\" certificate and your password will never be asked again until you restart your PC. Gnome has a similar application, called Gnome Keyring that asks for your certificate's password the first time you use it and then it stores it securely so you won't be asked again.",
        "output": "I think there are two different things here. The first one is that normal SSH authentication requires the user to put the account's password (where the account password will be authenticated against different methods, depending on the sshd configuration). With certificates you still have to put a password, but this time is the password of your private key (that's independent of the account's password). If you want to avoid putting the certificate's password every time then you can use ssh-agent, as pointed out by DigitalRoss The exact way you do this depends on Unix vs Windows, but essentially you need to run ssh-agent in the background when you log in, and then the first time you log in, run ssh-add to give the agent your passphrase. All ssh-family commands will then consult the agent and automatically pick up your passphrase. But this is on that particular shell. With keychain you can do the same thing as ssh-agent but \"system-wide\".",
        "answer": "I think there are two different things here. The first one is that normal SSH authentication requires the user to put the account's password (where the account password will be authenticated against different methods, depending on the sshd configuration). You can avoid putting that password using certificates. With certificates you still have to put a password, but this time is the password of your private key (that's independent of the account's password). To do this you can follow the instructions pointed out by steveth45: With Public Key Authentication. If you want to avoid putting the certificate's password every time then you can use ssh-agent, as pointed out by DigitalRoss The exact way you do this depends on Unix vs Windows, but essentially you need to run ssh-agent in the background when you log in, and then the first time you log in, run ssh-add to give the agent your passphrase. All ssh-family commands will then consult the agent and automatically pick up your passphrase. Start here: man ssh-agent. The only problem of ssh-agent is that, on *nix at least, you have to put the certificates password on every new shell. And then the certificate is \"loaded\" and you can use it to authenticate against an ssh server without putting any kind of password. But this is on that particular shell. With keychain you can do the same thing as ssh-agent but \"system-wide\". Once you turn on your computer, you open a shell and put the password of the certificate. And then, every other shell will use that \"loaded\" certificate and your password will never be asked again until you restart your PC. Gnome has a similar application, called Gnome Keyring that asks for your certificate's password the first time you use it and then it stores it securely so you won't be asked again.",
        "summary": "I think there are two different things here. The first one is that normal SSH authentication requires the user to put the account's password (where the account password will be authenticated against different methods, depending on the sshd configuration). With certificates you still have to put a password, but this time is the password of your private key (that's independent of the account's password). If you want to avoid putting the certificate's password every time then you can use ssh-agent, as pointed out by DigitalRoss The exact way you do this depends on Unix vs Windows, but essentially you need to run ssh-agent in the background when you log in, and then the first time you log in, run ssh-add to give the agent your passphrase. All ssh-family commands will then consult the agent and automatically pick up your passphrase. But this is on that particular shell. With keychain you can do the same thing as ssh-agent but \"system-wide\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just use the location.host property BIGBLOCK",
        "output": "Just use the location.host property",
        "answer": "Just use the location.host property BIGBLOCK",
        "summary": "Just use the location.host property"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 32bit windows has a 2GB process memory limit. The /3GB boot option others have mentioned will make this 3GB with just 1gb remaining for OS kernel use. Realistically if you want to use more than 2GB without hassle then a 64bit OS is required. This also overcomes the problem whereby although you may have 4GB of physical RAM, the address space requried for the video card can make a sizeable chuck of that memory unusable - usually around 500MB.",
        "output": "Realistically if you want to use more than 2GB without hassle then a 64bit OS is required.",
        "answer": "32bit windows has a 2GB process memory limit. The /3GB boot option others have mentioned will make this 3GB with just 1gb remaining for OS kernel use. Realistically if you want to use more than 2GB without hassle then a 64bit OS is required. This also overcomes the problem whereby although you may have 4GB of physical RAM, the address space requried for the video card can make a sizeable chuck of that memory unusable - usually around 500MB.",
        "summary": "Realistically if you want to use more than 2GB without hassle then a 64bit OS is required."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>SELECT * FROM table1, table2, ...</code> syntax is ok for a couple of tables, but it becomes exponentially (<em>not necessarily a mathematically accurate statement</em>) harder and harder to read as the number of tables increases. The JOIN syntax is harder to write (at the beginning), but it makes it explicit what criteria affects which tables. This makes it much harder to make a mistake. Also, if all the joins are INNER, then both versions are equivalent. However, the moment you have an OUTER join anywhere in the statement, things get much more complicated and it's virtually guarantee that what you write won't be querying what you think you wrote.",
        "output": "The JOIN syntax is harder to write (at the beginning), but it makes it explicit what criteria affects which tables. Also, if all the joins are INNER, then both versions are equivalent.",
        "answer": "The <code>SELECT * FROM table1, table2, ...</code> syntax is ok for a couple of tables, but it becomes exponentially (<em>not necessarily a mathematically accurate statement</em>) harder and harder to read as the number of tables increases. The JOIN syntax is harder to write (at the beginning), but it makes it explicit what criteria affects which tables. This makes it much harder to make a mistake. Also, if all the joins are INNER, then both versions are equivalent. However, the moment you have an OUTER join anywhere in the statement, things get much more complicated and it's virtually guarantee that what you write won't be querying what you think you wrote.",
        "summary": "The JOIN syntax is harder to write (at the beginning), but it makes it explicit what criteria affects which tables. Also, if all the joins are INNER, then both versions are equivalent."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Server.MapPath specifies the relative or virtual path to map to a physical directory. <code>Server.MapPath(\". \")</code>1 returns the current physical directory of the file (e.g. aspx) being executed <code>Server.MapPath(\"..\")</code> returns the parent directory <code>Server.MapPath(\"~\")</code> returns the physical path to the root of the application <code>Server.MapPath(\"/\")</code> returns the physical path to the root of the domain name (is not necessarily the same as the root of the application) An example: Let's say you pointed a web site application (<code>http://www.example.com/</code>) to and installed your shop application (sub web as virtual directory in IIS, marked as application) in For example, if you call <code>Server.MapPath()</code> in following request: then: <code>Server.MapPath(\". \")</code>1 returns <code>D:\\WebApps\\shop\\products</code> <code>Server.MapPath(\"..\")</code> returns <code>D:\\WebApps\\shop</code> <code>Server.MapPath(\"~\")</code> returns <code>D:\\WebApps\\shop</code> <code>Server.MapPath(\"/\")</code> returns <code>C:\\Inetpub\\wwwroot</code> <code>Server.MapPath(\"/shop\")</code> returns <code>D:\\WebApps\\shop</code> If Path starts with either a forward slash (<code>/</code>) or backward slash (<code>\\</code>), the <code>MapPath()</code> returns a path as if Path was a full, virtual path. If Path doesn't start with a slash, the <code>MapPath()</code> returns a path relative to the directory of the request being processed. Note: in C#, <code>@</code> is the verbatim literal string operator meaning that the string should be used \"as is\" and not be processed for escape sequences. Footnotes <code>Server.MapPath(null)</code> and <code>Server.MapPath(\"\")</code> will produce this effect too.",
        "output": "Server.MapPath specifies the relative or virtual path to map to a physical directory. <code>Server.MapPath(\". \")</code>1 returns the current physical directory of the file (e.g. aspx) being executed <code>Server.MapPath(\"..\")</code> returns the parent directory <code>Server.MapPath(\"~\")</code> returns the physical path to the root of the application <code>Server.MapPath(\"/\")</code> returns the physical path to the root of the domain name (is not necessarily the same as the root of the application)",
        "answer": "Server.MapPath specifies the relative or virtual path to map to a physical directory. <code>Server.MapPath(\". \")</code>1 returns the current physical directory of the file (e.g. aspx) being executed <code>Server.MapPath(\"..\")</code> returns the parent directory <code>Server.MapPath(\"~\")</code> returns the physical path to the root of the application <code>Server.MapPath(\"/\")</code> returns the physical path to the root of the domain name (is not necessarily the same as the root of the application) An example: Let's say you pointed a web site application (<code>http://www.example.com/</code>) to and installed your shop application (sub web as virtual directory in IIS, marked as application) in For example, if you call <code>Server.MapPath()</code> in following request: then: <code>Server.MapPath(\". \")</code>1 returns <code>D:\\WebApps\\shop\\products</code> <code>Server.MapPath(\"..\")</code> returns <code>D:\\WebApps\\shop</code> <code>Server.MapPath(\"~\")</code> returns <code>D:\\WebApps\\shop</code> <code>Server.MapPath(\"/\")</code> returns <code>C:\\Inetpub\\wwwroot</code> <code>Server.MapPath(\"/shop\")</code> returns <code>D:\\WebApps\\shop</code> If Path starts with either a forward slash (<code>/</code>) or backward slash (<code>\\</code>), the <code>MapPath()</code> returns a path as if Path was a full, virtual path. If Path doesn't start with a slash, the <code>MapPath()</code> returns a path relative to the directory of the request being processed. Note: in C#, <code>@</code> is the verbatim literal string operator meaning that the string should be used \"as is\" and not be processed for escape sequences. Footnotes <code>Server.MapPath(null)</code> and <code>Server.MapPath(\"\")</code> will produce this effect too.",
        "summary": "Server.MapPath specifies the relative or virtual path to map to a physical directory. <code>Server.MapPath(\". \")</code>1 returns the current physical directory of the file (e.g. aspx) being executed <code>Server.MapPath(\"..\")</code> returns the parent directory <code>Server.MapPath(\"~\")</code> returns the physical path to the root of the application <code>Server.MapPath(\"/\")</code> returns the physical path to the root of the domain name (is not necessarily the same as the root of the application)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n HashMap compatible Pair class:",
        "output": "HashMap compatible Pair class:",
        "answer": "HashMap compatible Pair class:",
        "summary": "HashMap compatible Pair class:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You might also try eliminating the code you <em>think</em> you're having problems with and seeing if it compiles with no references to that code. If not, fix things until it compiles again, and then work your <em>suspected</em> problem code back in. Sometimes I get strange errors about classes or methods that I know are correct when the compiler doesn't like something else. Once I fix the thing that it's really getting hung up on, these 'phantom' errors disappear.",
        "output": "You might also try eliminating the code you <em>think</em> you're having problems with and seeing if it compiles with no references to that code. Sometimes I get strange errors about classes or methods that I know are correct when the compiler doesn't like something else.",
        "answer": "You might also try eliminating the code you <em>think</em> you're having problems with and seeing if it compiles with no references to that code. If not, fix things until it compiles again, and then work your <em>suspected</em> problem code back in. Sometimes I get strange errors about classes or methods that I know are correct when the compiler doesn't like something else. Once I fix the thing that it's really getting hung up on, these 'phantom' errors disappear.",
        "summary": "You might also try eliminating the code you <em>think</em> you're having problems with and seeing if it compiles with no references to that code. Sometimes I get strange errors about classes or methods that I know are correct when the compiler doesn't like something else."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>continue</code> is kind of like <code>goto</code>. Are you familiar with <code>break</code>? It's easier to think about them in contrast: <code>break</code> terminates the loop (jumps to the code below it). <code>continue</code> terminates the rest of the processing of the code within the loop for the current iteration, but continues the loop.",
        "output": "<code>continue</code> is kind of like <code>goto</code>. <code>continue</code> terminates the rest of the processing of the code within the loop for the current iteration, but continues the loop.",
        "answer": "<code>continue</code> is kind of like <code>goto</code>. Are you familiar with <code>break</code>? It's easier to think about them in contrast: <code>break</code> terminates the loop (jumps to the code below it). <code>continue</code> terminates the rest of the processing of the code within the loop for the current iteration, but continues the loop.",
        "summary": "<code>continue</code> is kind of like <code>goto</code>. <code>continue</code> terminates the rest of the processing of the code within the loop for the current iteration, but continues the loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This wouldn't explain the PID side of things, but if you run Skype, it likes to use Port 80 for some reason.",
        "output": "This wouldn't explain the PID side of things, but if you run Skype, it likes to use Port 80 for some reason.",
        "answer": "This wouldn't explain the PID side of things, but if you run Skype, it likes to use Port 80 for some reason.",
        "summary": "This wouldn't explain the PID side of things, but if you run Skype, it likes to use Port 80 for some reason."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is supported in WebKit via webkitEnterFullscreen.",
        "output": "This is supported in WebKit via webkitEnterFullscreen.",
        "answer": "This is supported in WebKit via webkitEnterFullscreen.",
        "summary": "This is supported in WebKit via webkitEnterFullscreen."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I found this site to be helpful, too. http://www.ibm.com/developerworks/xml/library/x-javaxmlvalidapi.html It's the one that actually worked for me with a minimum of fuss.",
        "output": "I found this site to be helpful, too. http://www.ibm.com/developerworks/xml/library/x-javaxmlvalidapi.html",
        "answer": "I found this site to be helpful, too. http://www.ibm.com/developerworks/xml/library/x-javaxmlvalidapi.html It's the one that actually worked for me with a minimum of fuss.",
        "summary": "I found this site to be helpful, too. http://www.ibm.com/developerworks/xml/library/x-javaxmlvalidapi.html"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It seems that the <code>! !</code> operator results in a double negation.",
        "output": "It seems that the <code>! !</code> operator results in a double negation.",
        "answer": "It seems that the <code>! !</code> operator results in a double negation.",
        "summary": "It seems that the <code>! !</code> operator results in a double negation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Optimistic locking is used when you don't expect many collisions. It costs less to do a normal operation but if the collision DOES occur you would pay a higher price to resolve it as the transaction is aborted. Pessimistic locking is used when a collision is anticipated. The transactions which would violate synchronization are simply blocked. To select proper locking mechanism you have to estimate the amount of reads and writes and  plan accordingly",
        "output": "Optimistic locking is used when you don't expect many collisions. Pessimistic locking is used when a collision is anticipated.",
        "answer": "Optimistic locking is used when you don't expect many collisions. It costs less to do a normal operation but if the collision DOES occur you would pay a higher price to resolve it as the transaction is aborted. Pessimistic locking is used when a collision is anticipated. The transactions which would violate synchronization are simply blocked. To select proper locking mechanism you have to estimate the amount of reads and writes and  plan accordingly",
        "summary": "Optimistic locking is used when you don't expect many collisions. Pessimistic locking is used when a collision is anticipated."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is <li>a semantical difference <li>a performance difference between the two. <strong>Semantical Difference:</strong> <li><code>FirstOrDefault</code> returns a first item of potentially multiple (or default if none exists). <li><code>SingleOrDefault</code> assumes that there is a single item and returns it (or default if none exists). Multiple items are a violation of contract, an exception is thrown. <strong>Performance Difference</strong> <li><code>FirstOrDefault</code> is usually faster, it iterates until it finds the element and only has to iterate the whole enumerable when it doesn't find it. In many cases, there is a high probability to find an item. <li><code>SingleOrDefault</code> needs to check if there is only one element and therefore always iterates the whole enumerable. To be precise, it iterates until it finds a second element and throws an exception. But in most cases, there is no second element. <strong>Conclusion</strong> <li>Use <code>FirstOrDefault</code> if you don't care how many items there are <strong>or</strong> when you can't afford checking uniqueness (e.g. in a very large collection). When you check uniqueness on adding the items to the collection, it might be too expensive to check it again when searching for those items. <li>Use <code>SingleOrDefault</code> if you don't have to care about performance too much and want to make sure that the assumption of a single item is clear to the reader and checked at runtime. In practice, you use <code>First</code> / <code>FirstOrDefault</code> often even in cases when you assume a single item, to improve performance. You should still remember that <code>Single</code> / <code>SingleOrDefault</code> can improve readability (because it states the assumption of a single item) and stability (because it checks it) and use it appropriately.",
        "output": "<strong>Semantical Difference:</strong> <li><code>FirstOrDefault</code> returns a first item of potentially multiple (or default if none exists). <li><code>SingleOrDefault</code> assumes that there is a single item and returns it (or default if none exists). <strong>Performance Difference</strong> <li><code>FirstOrDefault</code> is usually faster, it iterates until it finds the element and only has to iterate the whole enumerable when it doesn't find it. In many cases, there is a high probability to find an item. <strong>Conclusion</strong> <li>Use <code>FirstOrDefault</code> if you don't care how many items there are <strong>or</strong> when you can't afford checking uniqueness (e.g. <li>Use <code>SingleOrDefault</code> if you don't have to care about performance too much and want to make sure that the assumption of a single item is clear to the reader and checked at runtime. In practice, you use <code>First</code> / <code>FirstOrDefault</code> often even in cases when you assume a single item, to improve performance.",
        "answer": "There is <li>a semantical difference <li>a performance difference between the two. <strong>Semantical Difference:</strong> <li><code>FirstOrDefault</code> returns a first item of potentially multiple (or default if none exists). <li><code>SingleOrDefault</code> assumes that there is a single item and returns it (or default if none exists). Multiple items are a violation of contract, an exception is thrown. <strong>Performance Difference</strong> <li><code>FirstOrDefault</code> is usually faster, it iterates until it finds the element and only has to iterate the whole enumerable when it doesn't find it. In many cases, there is a high probability to find an item. <li><code>SingleOrDefault</code> needs to check if there is only one element and therefore always iterates the whole enumerable. To be precise, it iterates until it finds a second element and throws an exception. But in most cases, there is no second element. <strong>Conclusion</strong> <li>Use <code>FirstOrDefault</code> if you don't care how many items there are <strong>or</strong> when you can't afford checking uniqueness (e.g. in a very large collection). When you check uniqueness on adding the items to the collection, it might be too expensive to check it again when searching for those items. <li>Use <code>SingleOrDefault</code> if you don't have to care about performance too much and want to make sure that the assumption of a single item is clear to the reader and checked at runtime. In practice, you use <code>First</code> / <code>FirstOrDefault</code> often even in cases when you assume a single item, to improve performance. You should still remember that <code>Single</code> / <code>SingleOrDefault</code> can improve readability (because it states the assumption of a single item) and stability (because it checks it) and use it appropriately.",
        "summary": "<strong>Semantical Difference:</strong> <li><code>FirstOrDefault</code> returns a first item of potentially multiple (or default if none exists). <li><code>SingleOrDefault</code> assumes that there is a single item and returns it (or default if none exists). <strong>Performance Difference</strong> <li><code>FirstOrDefault</code> is usually faster, it iterates until it finds the element and only has to iterate the whole enumerable when it doesn't find it. In many cases, there is a high probability to find an item. <strong>Conclusion</strong> <li>Use <code>FirstOrDefault</code> if you don't care how many items there are <strong>or</strong> when you can't afford checking uniqueness (e.g. <li>Use <code>SingleOrDefault</code> if you don't have to care about performance too much and want to make sure that the assumption of a single item is clear to the reader and checked at runtime. In practice, you use <code>First</code> / <code>FirstOrDefault</code> often even in cases when you assume a single item, to improve performance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>SQL</code> a language for talking to the database. It lets you select data, mutate and create database objects (like tables, views, etc. ), change database settings. <code>PL-SQL</code> a procedural programming language (with embedded SQL) <code>T-SQL</code> (procedural) extensions for SQL used by SQL Server",
        "output": "<code>SQL</code> a language for talking to the database. <code>PL-SQL</code> a procedural programming language (with embedded SQL) <code>T-SQL</code> (procedural) extensions for SQL used by SQL Server",
        "answer": "<code>SQL</code> a language for talking to the database. It lets you select data, mutate and create database objects (like tables, views, etc. ), change database settings. <code>PL-SQL</code> a procedural programming language (with embedded SQL) <code>T-SQL</code> (procedural) extensions for SQL used by SQL Server",
        "summary": "<code>SQL</code> a language for talking to the database. <code>PL-SQL</code> a procedural programming language (with embedded SQL) <code>T-SQL</code> (procedural) extensions for SQL used by SQL Server"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I may have a simple way to do this without having to do painful recursion and not knowing all the finer details of the object in question. Using jQuery, simply convert your object to JSON using the jQuery <code>$.toJSON(myObjectArray)</code>, then take your JSON string and evaluate it back to an object. BAM! Done, and done! Problem solved. :) BIGBLOCK",
        "output": "Using jQuery, simply convert your object to JSON using the jQuery <code>$.toJSON(myObjectArray)</code>, then take your JSON string and evaluate it back to an object.",
        "answer": "I may have a simple way to do this without having to do painful recursion and not knowing all the finer details of the object in question. Using jQuery, simply convert your object to JSON using the jQuery <code>$.toJSON(myObjectArray)</code>, then take your JSON string and evaluate it back to an object. BAM! Done, and done! Problem solved. :) BIGBLOCK",
        "summary": "Using jQuery, simply convert your object to JSON using the jQuery <code>$.toJSON(myObjectArray)</code>, then take your JSON string and evaluate it back to an object."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>cd</code> is done within the script's shell. When the script ends, that shell exits, and then you are left in the directory you were. \"Source\" the script, don't run it. Instead of: do (Notice the dot and space before the script name.)",
        "output": "The <code>cd</code> is done within the script's shell. When the script ends, that shell exits, and then you are left in the directory you were.",
        "answer": "The <code>cd</code> is done within the script's shell. When the script ends, that shell exits, and then you are left in the directory you were. \"Source\" the script, don't run it. Instead of: do (Notice the dot and space before the script name.)",
        "summary": "The <code>cd</code> is done within the script's shell. When the script ends, that shell exits, and then you are left in the directory you were."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To give <code>Network Service</code> read permission on the <code>EventLog/Security</code> key (as suggested by Firenzi and royrules22) follow instructions from http://geekswithblogs.net/timh/archive/2005/10/05/56029.aspx Open the Registry Editor: Select <code>Start</code> then <code>Run</code> Enter <code>regedt32</code> or <code>regedit</code> Navigate/expand to the following key: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Security</code> Right click on this entry and select Permissions Add the <code>Network Service</code> user Give it Read permission UPDATE: The steps above are ok on developer  machines, where you do not use deployment process to install application. However if you deploy your application to other machine(s), consider to register event log sources during installation as suggested in SailAvid's and Nicole Calinoiu's answers. I am using PowerShell function (calling in Octopus Deploy.ps1)",
        "output": "To give <code>Network Service</code> read permission on the <code>EventLog/Security</code> key (as suggested by Firenzi and royrules22) follow instructions from http://geekswithblogs.net/timh/archive/2005/10/05/56029.aspx",
        "answer": "To give <code>Network Service</code> read permission on the <code>EventLog/Security</code> key (as suggested by Firenzi and royrules22) follow instructions from http://geekswithblogs.net/timh/archive/2005/10/05/56029.aspx Open the Registry Editor: Select <code>Start</code> then <code>Run</code> Enter <code>regedt32</code> or <code>regedit</code> Navigate/expand to the following key: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Security</code> Right click on this entry and select Permissions Add the <code>Network Service</code> user Give it Read permission UPDATE: The steps above are ok on developer  machines, where you do not use deployment process to install application. However if you deploy your application to other machine(s), consider to register event log sources during installation as suggested in SailAvid's and Nicole Calinoiu's answers. I am using PowerShell function (calling in Octopus Deploy.ps1)",
        "summary": "To give <code>Network Service</code> read permission on the <code>EventLog/Security</code> key (as suggested by Firenzi and royrules22) follow instructions from http://geekswithblogs.net/timh/archive/2005/10/05/56029.aspx"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As it says, the \"source code is different from the original version\". Right click on the project folder inside the solution explorer and choose to <code>Clean</code>. Build a new version of the project and the breakpoint will work again!",
        "output": "Right click on the project folder inside the solution explorer and choose to <code>Clean</code>. Build a new version of the project and the breakpoint will work again!",
        "answer": "As it says, the \"source code is different from the original version\". Right click on the project folder inside the solution explorer and choose to <code>Clean</code>. Build a new version of the project and the breakpoint will work again!",
        "summary": "Right click on the project folder inside the solution explorer and choose to <code>Clean</code>. Build a new version of the project and the breakpoint will work again!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Iterator.remove()</code> is safe, you can use it like this: Note that <code>Iterator.remove()</code> is the only safe way to modify a collection during iteration; the behavior is unspecified if the underlying collection is modified in any other way while the iteration is in progress. Source: docs.oracle > The Collection Interface And similarly, if you have a <code>ListIterator</code> and want to add items, you can use <code>ListIterator#add</code>, for the same reason you can use <code>Iterator#remove</code>&nbsp;&mdash; it's designed to allow it.",
        "output": "<code>Iterator.remove()</code> is safe, you can use it like this:",
        "answer": "<code>Iterator.remove()</code> is safe, you can use it like this: Note that <code>Iterator.remove()</code> is the only safe way to modify a collection during iteration; the behavior is unspecified if the underlying collection is modified in any other way while the iteration is in progress. Source: docs.oracle > The Collection Interface And similarly, if you have a <code>ListIterator</code> and want to add items, you can use <code>ListIterator#add</code>, for the same reason you can use <code>Iterator#remove</code>&nbsp;&mdash; it's designed to allow it.",
        "summary": "<code>Iterator.remove()</code> is safe, you can use it like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The code won't even compile. Only an fullworthy <code>Object</code> can be <code>null</code>, like <code>Integer</code>. Here's a basic example to show when you can test for null: BIGBLOCK On the other hand, if <code>check()</code> is declared to return <code>int</code>, it can <strong>never</strong> be <code>null</code> and the whole <code>if-else</code> block is then superfluous. BIGBLOCK Autoboxing problems doesn't apply here as well when <code>check()</code> is declared to return <code>int</code>. If it had returned <code>Integer</code>, then you may risk <code>NullPointerException</code> when assigning it to an <code>int</code> instead of <code>Integer</code>. Assigning it as an <code>Integer</code> and using the <code>if-else</code> block would then indeed have been mandatory. To learn more about autoboxing, check this Sun guide.",
        "output": "Only an fullworthy <code>Object</code> can be <code>null</code>, like <code>Integer</code>. Here's a basic example to show when you can test for null: BIGBLOCK If it had returned <code>Integer</code>, then you may risk <code>NullPointerException</code> when assigning it to an <code>int</code> instead of <code>Integer</code>.",
        "answer": "The code won't even compile. Only an fullworthy <code>Object</code> can be <code>null</code>, like <code>Integer</code>. Here's a basic example to show when you can test for null: BIGBLOCK On the other hand, if <code>check()</code> is declared to return <code>int</code>, it can <strong>never</strong> be <code>null</code> and the whole <code>if-else</code> block is then superfluous. BIGBLOCK Autoboxing problems doesn't apply here as well when <code>check()</code> is declared to return <code>int</code>. If it had returned <code>Integer</code>, then you may risk <code>NullPointerException</code> when assigning it to an <code>int</code> instead of <code>Integer</code>. Assigning it as an <code>Integer</code> and using the <code>if-else</code> block would then indeed have been mandatory. To learn more about autoboxing, check this Sun guide.",
        "summary": "Only an fullworthy <code>Object</code> can be <code>null</code>, like <code>Integer</code>. Here's a basic example to show when you can test for null: BIGBLOCK If it had returned <code>Integer</code>, then you may risk <code>NullPointerException</code> when assigning it to an <code>int</code> instead of <code>Integer</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To add a char to a std::string var using the append method, you need to use this overload: <strong>Edit :Your're right I misunderstood the size_type parameter, displayed in the context help. This is the number of chars to add. So the correct call is</strong> not Or the simpliest way :",
        "output": "To add a char to a std::string var using the append method, you need to use this overload: This is the number of chars to add.",
        "answer": "To add a char to a std::string var using the append method, you need to use this overload: <strong>Edit :Your're right I misunderstood the size_type parameter, displayed in the context help. This is the number of chars to add. So the correct call is</strong> not Or the simpliest way :",
        "summary": "To add a char to a std::string var using the append method, you need to use this overload: This is the number of chars to add."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use a <strong>GROUP BY</strong> to group items by type and id. Then you can use the <strong>MAX()</strong> Aggregate function to get the most recent service month. The below returns a result set with ChargeId, ChargeType, and MostRecentServiceMonth BIGBLOCK",
        "output": "You can use a <strong>GROUP BY</strong> to group items by type and id. Then you can use the <strong>MAX()</strong> Aggregate function to get the most recent service month. BIGBLOCK",
        "answer": "You can use a <strong>GROUP BY</strong> to group items by type and id. Then you can use the <strong>MAX()</strong> Aggregate function to get the most recent service month. The below returns a result set with ChargeId, ChargeType, and MostRecentServiceMonth BIGBLOCK",
        "summary": "You can use a <strong>GROUP BY</strong> to group items by type and id. Then you can use the <strong>MAX()</strong> Aggregate function to get the most recent service month. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK This is the same as monoxide's answer, but a bit more concise.",
        "output": "BIGBLOCK This is the same as monoxide's answer, but a bit more concise.",
        "answer": "BIGBLOCK This is the same as monoxide's answer, but a bit more concise.",
        "summary": "BIGBLOCK This is the same as monoxide's answer, but a bit more concise."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can also use the <code>split</code> method of String: BIGBLOCK This gives you all lines in a handy array. I don't know about the performance of split. It uses regular expressions.",
        "output": "You can also use the <code>split</code> method of String: BIGBLOCK It uses regular expressions.",
        "answer": "You can also use the <code>split</code> method of String: BIGBLOCK This gives you all lines in a handy array. I don't know about the performance of split. It uses regular expressions.",
        "summary": "You can also use the <code>split</code> method of String: BIGBLOCK It uses regular expressions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can get a reference to the constructor function which created the object by using the constructor property: If you need to confirm the type of an object at runtime you can use the instanceof operator:",
        "output": "You can get a reference to the constructor function which created the object by using the constructor property: If you need to confirm the type of an object at runtime you can use the instanceof operator:",
        "answer": "You can get a reference to the constructor function which created the object by using the constructor property: If you need to confirm the type of an object at runtime you can use the instanceof operator:",
        "summary": "You can get a reference to the constructor function which created the object by using the constructor property: If you need to confirm the type of an object at runtime you can use the instanceof operator:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Label without an onclick will behave as you would expect. It changes the input. What you relly want is to execute <code>selectAll()</code> when you click on a label, right?Then only add select all to the label onclick. Or wrap the input into the the label and assign onclick only for the label BIGBLOCK",
        "output": "Label without an onclick will behave as you would expect.",
        "answer": "Label without an onclick will behave as you would expect. It changes the input. What you relly want is to execute <code>selectAll()</code> when you click on a label, right?Then only add select all to the label onclick. Or wrap the input into the the label and assign onclick only for the label BIGBLOCK",
        "summary": "Label without an onclick will behave as you would expect."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You declared them but did not provide them with an intial value - thus, they're unintialized. Try something like: and the warnings should go away.",
        "output": "You declared them but did not provide them with an intial value - thus, they're unintialized.",
        "answer": "You declared them but did not provide them with an intial value - thus, they're unintialized. Try something like: and the warnings should go away.",
        "summary": "You declared them but did not provide them with an intial value - thus, they're unintialized."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Class is for applying your style to a group of elements. ID styles apply to just the element with that ID (there should only be one). Usually you use classes, but if there's a one-off you can use IDs (or just stick the style straight into the element).",
        "output": "Class is for applying your style to a group of elements. ID styles apply to just the element with that ID (there should only be one). Usually you use classes, but if there's a one-off you can use IDs (or just stick the style straight into the element).",
        "answer": "Class is for applying your style to a group of elements. ID styles apply to just the element with that ID (there should only be one). Usually you use classes, but if there's a one-off you can use IDs (or just stick the style straight into the element).",
        "summary": "Class is for applying your style to a group of elements. ID styles apply to just the element with that ID (there should only be one). Usually you use classes, but if there's a one-off you can use IDs (or just stick the style straight into the element)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Optimistic Locking is a strategy where you read a record, take note of a version number (other methods to do this involve dates, timestamps or checksums/hashes) and check that the version hasn't changed before you write the record back. When you write the record back you filter the update on the version to make sure it's atomic. (i.e. hasn't been updated between when you check the version and write the record to the disk) and update the version in one hit. If the record is dirty (i.e. different version to yours) you abort the transaction and the user can re-start it. This strategy is most applicable to high-volume systems and three-tier architectures where you do not necessarily maintain a connection to the database for your session. In this situation the client cannot actually maintain database locks as the connections are taken from a pool and you may not be using the same connection from one access to the next. Pessimistic Locking is when you lock the record for your exclusive use until you have finished with it. It has much better integrity than optimistic locking but requires you to be careful with your application design to avoid Deadlocks. To use pessimistic locking you need either a direct connection to the database (as would typically be the case in a two tier client server application) or an externally available transaction ID that can be used independently of the connection. In the latter case you open the transaction with the TxID and then reconnect using that ID. The DBMS maintains the locks and allows you to pick the session back up through the TxID. This is how distributed transactions using two-phase commit protocols (such as XA or COM+ Transactions) work.",
        "output": "Optimistic Locking is a strategy where you read a record, take note of a version number (other methods to do this involve dates, timestamps or checksums/hashes) and check that the version hasn't changed before you write the record back. Pessimistic Locking is when you lock the record for your exclusive use until you have finished with it.",
        "answer": "Optimistic Locking is a strategy where you read a record, take note of a version number (other methods to do this involve dates, timestamps or checksums/hashes) and check that the version hasn't changed before you write the record back. When you write the record back you filter the update on the version to make sure it's atomic. (i.e. hasn't been updated between when you check the version and write the record to the disk) and update the version in one hit. If the record is dirty (i.e. different version to yours) you abort the transaction and the user can re-start it. This strategy is most applicable to high-volume systems and three-tier architectures where you do not necessarily maintain a connection to the database for your session. In this situation the client cannot actually maintain database locks as the connections are taken from a pool and you may not be using the same connection from one access to the next. Pessimistic Locking is when you lock the record for your exclusive use until you have finished with it. It has much better integrity than optimistic locking but requires you to be careful with your application design to avoid Deadlocks. To use pessimistic locking you need either a direct connection to the database (as would typically be the case in a two tier client server application) or an externally available transaction ID that can be used independently of the connection. In the latter case you open the transaction with the TxID and then reconnect using that ID. The DBMS maintains the locks and allows you to pick the session back up through the TxID. This is how distributed transactions using two-phase commit protocols (such as XA or COM+ Transactions) work.",
        "summary": "Optimistic Locking is a strategy where you read a record, take note of a version number (other methods to do this involve dates, timestamps or checksums/hashes) and check that the version hasn't changed before you write the record back. Pessimistic Locking is when you lock the record for your exclusive use until you have finished with it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Explicitly filling in the ContentDisposition fields did the trick. BIGBLOCK",
        "output": "Explicitly filling in the ContentDisposition fields did the trick. BIGBLOCK",
        "answer": "Explicitly filling in the ContentDisposition fields did the trick. BIGBLOCK",
        "summary": "Explicitly filling in the ContentDisposition fields did the trick. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>HTTP_HOST</code> is the target host sent by the client. It can be manipulated freely by the user. It's no problem to send a request to your site asking for a <code>HTTP_HOST</code> value of <code>www.stackoverflow.com</code>. <code>SERVER_NAME</code> comes from the server's <code>VirtualHost</code> definition and is therefore considered more reliable. It can, however, also be manipulated from outside under certain conditions related to how your web server is set up: See this This SO question that deals with the security aspects of both variations. You shouldn't rely on either to be safe. That said, what to use really depends on what you want to do. If you want to determine which domain your script is running on, you can safely use <code>HTTP_HOST</code> as long as invalid values coming from a malicious user can't break anything.",
        "output": "<code>HTTP_HOST</code> is the target host sent by the client. <code>SERVER_NAME</code> comes from the server's <code>VirtualHost</code> definition and is therefore considered more reliable.",
        "answer": "<code>HTTP_HOST</code> is the target host sent by the client. It can be manipulated freely by the user. It's no problem to send a request to your site asking for a <code>HTTP_HOST</code> value of <code>www.stackoverflow.com</code>. <code>SERVER_NAME</code> comes from the server's <code>VirtualHost</code> definition and is therefore considered more reliable. It can, however, also be manipulated from outside under certain conditions related to how your web server is set up: See this This SO question that deals with the security aspects of both variations. You shouldn't rely on either to be safe. That said, what to use really depends on what you want to do. If you want to determine which domain your script is running on, you can safely use <code>HTTP_HOST</code> as long as invalid values coming from a malicious user can't break anything.",
        "summary": "<code>HTTP_HOST</code> is the target host sent by the client. <code>SERVER_NAME</code> comes from the server's <code>VirtualHost</code> definition and is therefore considered more reliable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'd suggest checking for an inner exception. If there isn't one, check your logs for the exception that occurred immediately prior to this one. This isn't a web-specific exception, I've also encountered it in desktop-app development. In short, what's happening is that the thread receiving this exception is running some asynchronous code (via Invoke(), e.g.) and that code that's being run asynchronously is exploding with an exception. This target invocation exception is the aftermath of that failure. If you haven't already, place some sort of exception logging wrapper around the asynchronous callbacks that are being invoked when you trigger this error. Event handlers, for instance. That ought to help you track down the problem. Good luck!",
        "output": "I'd suggest checking for an inner exception. If there isn't one, check your logs for the exception that occurred immediately prior to this one.",
        "answer": "I'd suggest checking for an inner exception. If there isn't one, check your logs for the exception that occurred immediately prior to this one. This isn't a web-specific exception, I've also encountered it in desktop-app development. In short, what's happening is that the thread receiving this exception is running some asynchronous code (via Invoke(), e.g.) and that code that's being run asynchronously is exploding with an exception. This target invocation exception is the aftermath of that failure. If you haven't already, place some sort of exception logging wrapper around the asynchronous callbacks that are being invoked when you trigger this error. Event handlers, for instance. That ought to help you track down the problem. Good luck!",
        "summary": "I'd suggest checking for an inner exception. If there isn't one, check your logs for the exception that occurred immediately prior to this one."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You might be needing a cleanup or you might be needing a prune <strong>prune</strong> Deletes all stale tracking branches under &lt;name>. These stale branches have already been removed from the remote repository referenced by &lt;name>, but are still locally available in \"remotes/&lt;name>\". With --dry-run option, report what branches will be pruned, but do no actually prune them. However, it appears these should have been cleaned up earlier with <strong>rm</strong> Remove the remote named &lt;name>. All remote tracking branches and configuration settings for the remote             are removed. So it might be you hand-edited your config file and this did not occur, or you have privilege problems. Maybe run that again and see what happens. Advice Context If you take a look in the revision logs,  you'll note I suggested more \"correct\" techniques, which for whatever reason didn't want to work on their repository. I suspected the OP had done something that left their tree in an inconsistent state that caused it to behave a bit strangely, and <code>git gc</code> was required to fix up the left behind cruft. <em>Usually</em>  <code>git branch -rd origin/badbranch</code> is sufficient for nuking a local tracking branch , or <code>git push origin :badbranch</code> for nuking a remote branch, and <em>usually</em> you will <em>never</em> need to call <code>git gc</code>",
        "output": "<strong>prune</strong> Deletes all stale tracking branches under &lt;name>. <strong>rm</strong> Remove the remote named &lt;name>. I suspected the OP had done something that left their tree in an inconsistent state that caused it to behave a bit strangely, and <code>git gc</code> was required to fix up the left behind cruft. <em>Usually</em>  <code>git branch -rd origin/badbranch</code> is sufficient for nuking a local tracking branch , or <code>git push origin :badbranch</code> for nuking a remote branch, and <em>usually</em> you will <em>never</em> need to call <code>git gc</code>",
        "answer": "You might be needing a cleanup or you might be needing a prune <strong>prune</strong> Deletes all stale tracking branches under &lt;name>. These stale branches have already been removed from the remote repository referenced by &lt;name>, but are still locally available in \"remotes/&lt;name>\". With --dry-run option, report what branches will be pruned, but do no actually prune them. However, it appears these should have been cleaned up earlier with <strong>rm</strong> Remove the remote named &lt;name>. All remote tracking branches and configuration settings for the remote             are removed. So it might be you hand-edited your config file and this did not occur, or you have privilege problems. Maybe run that again and see what happens. Advice Context If you take a look in the revision logs,  you'll note I suggested more \"correct\" techniques, which for whatever reason didn't want to work on their repository. I suspected the OP had done something that left their tree in an inconsistent state that caused it to behave a bit strangely, and <code>git gc</code> was required to fix up the left behind cruft. <em>Usually</em>  <code>git branch -rd origin/badbranch</code> is sufficient for nuking a local tracking branch , or <code>git push origin :badbranch</code> for nuking a remote branch, and <em>usually</em> you will <em>never</em> need to call <code>git gc</code>",
        "summary": "<strong>prune</strong> Deletes all stale tracking branches under &lt;name>. <strong>rm</strong> Remove the remote named &lt;name>. I suspected the OP had done something that left their tree in an inconsistent state that caused it to behave a bit strangely, and <code>git gc</code> was required to fix up the left behind cruft. <em>Usually</em>  <code>git branch -rd origin/badbranch</code> is sufficient for nuking a local tracking branch , or <code>git push origin :badbranch</code> for nuking a remote branch, and <em>usually</em> you will <em>never</em> need to call <code>git gc</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n POSIX is a family of standards, specified by the IEEE, to clarify and make uniform the application programming interfaces (and ancillary issues, such as commandline shell utilities) provided by Unix-y operating systems. When you write your programs to rely on POSIX standards, you can be pretty sure to be able to port them easily among a large family of Unix derivatives (including Linux, but not limited to it! ); if and when you use some Linux API that's not standardized as part of Posix, you will have a harder time if and when you want to port that program or library to other Unix-y systems (e.g., MacOSX) in the future.",
        "output": "POSIX is a family of standards, specified by the IEEE, to clarify and make uniform the application programming interfaces (and ancillary issues, such as commandline shell utilities) provided by Unix-y operating systems. When you write your programs to rely on POSIX standards, you can be pretty sure to be able to port them easily among a large family of Unix derivatives (including Linux, but not limited to it!",
        "answer": "POSIX is a family of standards, specified by the IEEE, to clarify and make uniform the application programming interfaces (and ancillary issues, such as commandline shell utilities) provided by Unix-y operating systems. When you write your programs to rely on POSIX standards, you can be pretty sure to be able to port them easily among a large family of Unix derivatives (including Linux, but not limited to it! ); if and when you use some Linux API that's not standardized as part of Posix, you will have a harder time if and when you want to port that program or library to other Unix-y systems (e.g., MacOSX) in the future.",
        "summary": "POSIX is a family of standards, specified by the IEEE, to clarify and make uniform the application programming interfaces (and ancillary issues, such as commandline shell utilities) provided by Unix-y operating systems. When you write your programs to rely on POSIX standards, you can be pretty sure to be able to port them easily among a large family of Unix derivatives (including Linux, but not limited to it!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A layer in a neural network without a bias is nothing more than the multiplication of an input vector with a matrix. (The output vector might be passed through a sigmoid function for normalisation and for use in multi-layered ANN afterwards but thatÃ©ÂÂ¥Ã¦ÂªÂ not important.) This means that youÃ©ÂÂ¥Ã¦ÂªÂe using a linear function and thus an input of all zeros will always be mapped to an output of all zeros. This might be a reasonable solution for some systems but in general it is too restrictive. Using a bias, youÃ©ÂÂ¥Ã¦ÂªÂe effectively adding another dimension to your input space, which always takes the value one, so youÃ©ÂÂ¥Ã¦ÂªÂe avoiding an input vector of all zeros. You donÃ©ÂÂ¥Ã¦ÂªÂ lose any generality by this because your trained weight matrix needs not be surjective, so it still can map to all values previously possible. <strong>2d ANN:</strong> For a ANN mapping two dimensions to one dimension, as in reproducing the AND or the OR (or XOR) functions, you can think of a neuronal network as doing the following: On the 2d plane mark all positions of input vectors. So, for boolean values, youÃ©ÂÂ¥Ã¦ÂªÂ want to mark (-1,-1), (1,1), (-1,1), (1,-1). What your ANN now does is drawing a straight line on the 2d plane, separating the positive output from the negative output values. Without bias, this straight line has to go through zero, whereas with bias, youÃ©ÂÂ¥Ã¦ÂªÂe free to put it anywhere.So, youÃ©ÂÂ¥Ã¦ÂªÂl see that without bias youÃ©ÂÂ¥Ã¦ÂªÂe facing a problem with the AND function, since you canÃ©ÂÂ¥Ã¦ÂªÂ put both (1,-1) <em>and</em> (-1,1) to the negative side. (They are not allowed to be <em>on</em> the line.) The problem is equal for the OR function. With a bias, however, itÃ©ÂÂ¥Ã¦ÂªÂ easy to draw the line. Note that the XOR function in that situation canÃ©ÂÂ¥Ã¦ÂªÂ be solved even with bias.",
        "output": "Using a bias, youÃ©ÂÂ¥Ã¦ÂªÂe effectively adding another dimension to your input space, which always takes the value one, so youÃ©ÂÂ¥Ã¦ÂªÂe avoiding an input vector of all zeros. You donÃ©ÂÂ¥Ã¦ÂªÂ lose any generality by this because your trained weight matrix needs not be surjective, so it still can map to all values previously possible. Without bias, this straight line has to go through zero, whereas with bias, youÃ©ÂÂ¥Ã¦ÂªÂe free to put it anywhere.So, youÃ©ÂÂ¥Ã¦ÂªÂl see that without bias youÃ©ÂÂ¥Ã¦ÂªÂe facing a problem with the AND function, since you canÃ©ÂÂ¥Ã¦ÂªÂ put both (1,-1) <em>and</em> (-1,1) to the negative side. With a bias, however, itÃ©ÂÂ¥Ã¦ÂªÂ easy to draw the line.",
        "answer": "A layer in a neural network without a bias is nothing more than the multiplication of an input vector with a matrix. (The output vector might be passed through a sigmoid function for normalisation and for use in multi-layered ANN afterwards but thatÃ©ÂÂ¥Ã¦ÂªÂ not important.) This means that youÃ©ÂÂ¥Ã¦ÂªÂe using a linear function and thus an input of all zeros will always be mapped to an output of all zeros. This might be a reasonable solution for some systems but in general it is too restrictive. Using a bias, youÃ©ÂÂ¥Ã¦ÂªÂe effectively adding another dimension to your input space, which always takes the value one, so youÃ©ÂÂ¥Ã¦ÂªÂe avoiding an input vector of all zeros. You donÃ©ÂÂ¥Ã¦ÂªÂ lose any generality by this because your trained weight matrix needs not be surjective, so it still can map to all values previously possible. <strong>2d ANN:</strong> For a ANN mapping two dimensions to one dimension, as in reproducing the AND or the OR (or XOR) functions, you can think of a neuronal network as doing the following: On the 2d plane mark all positions of input vectors. So, for boolean values, youÃ©ÂÂ¥Ã¦ÂªÂ want to mark (-1,-1), (1,1), (-1,1), (1,-1). What your ANN now does is drawing a straight line on the 2d plane, separating the positive output from the negative output values. Without bias, this straight line has to go through zero, whereas with bias, youÃ©ÂÂ¥Ã¦ÂªÂe free to put it anywhere.So, youÃ©ÂÂ¥Ã¦ÂªÂl see that without bias youÃ©ÂÂ¥Ã¦ÂªÂe facing a problem with the AND function, since you canÃ©ÂÂ¥Ã¦ÂªÂ put both (1,-1) <em>and</em> (-1,1) to the negative side. (They are not allowed to be <em>on</em> the line.) The problem is equal for the OR function. With a bias, however, itÃ©ÂÂ¥Ã¦ÂªÂ easy to draw the line. Note that the XOR function in that situation canÃ©ÂÂ¥Ã¦ÂªÂ be solved even with bias.",
        "summary": "Using a bias, youÃ©ÂÂ¥Ã¦ÂªÂe effectively adding another dimension to your input space, which always takes the value one, so youÃ©ÂÂ¥Ã¦ÂªÂe avoiding an input vector of all zeros. You donÃ©ÂÂ¥Ã¦ÂªÂ lose any generality by this because your trained weight matrix needs not be surjective, so it still can map to all values previously possible. Without bias, this straight line has to go through zero, whereas with bias, youÃ©ÂÂ¥Ã¦ÂªÂe free to put it anywhere.So, youÃ©ÂÂ¥Ã¦ÂªÂl see that without bias youÃ©ÂÂ¥Ã¦ÂªÂe facing a problem with the AND function, since you canÃ©ÂÂ¥Ã¦ÂªÂ put both (1,-1) <em>and</em> (-1,1) to the negative side. With a bias, however, itÃ©ÂÂ¥Ã¦ÂªÂ easy to draw the line."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n backup log logname with truncate_only followed by a dbcc shrinkfile command",
        "output": "backup log logname with truncate_only followed by a dbcc shrinkfile command",
        "answer": "backup log logname with truncate_only followed by a dbcc shrinkfile command",
        "summary": "backup log logname with truncate_only followed by a dbcc shrinkfile command"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also be aware that deleting a base class pointer when there is no virtual destructor will result in <strong><em>undefined behavior</em></strong>. Something that I learned just recently: How should overriding delete in C++ behave? I've been using C++ for years and I still manage to hang myself.",
        "output": "Also be aware that deleting a base class pointer when there is no virtual destructor will result in <strong><em>undefined behavior</em></strong>.",
        "answer": "Also be aware that deleting a base class pointer when there is no virtual destructor will result in <strong><em>undefined behavior</em></strong>. Something that I learned just recently: How should overriding delete in C++ behave? I've been using C++ for years and I still manage to hang myself.",
        "summary": "Also be aware that deleting a base class pointer when there is no virtual destructor will result in <strong><em>undefined behavior</em></strong>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See SBQL4J. It's type-safe strong query language integrated with Java. Allows to write complicated and multiply nested queries. There is a lot of operators, Java methods can be invoked inside queries so as constructors. Queries are translated to pure Java code (there is no reflection at runtime) so execution is very fast. EDIT: Well, so far SBQL4J it's the ONLY extension to Java language which gives query capabilities similar to LINQ. There are some interesting project like Quaere and JaQue but they are only API's, not syntax / semantics extension with strong type safety in compile time.",
        "output": "See SBQL4J. EDIT: Well, so far SBQL4J it's the ONLY extension to Java language which gives query capabilities similar to LINQ.",
        "answer": "See SBQL4J. It's type-safe strong query language integrated with Java. Allows to write complicated and multiply nested queries. There is a lot of operators, Java methods can be invoked inside queries so as constructors. Queries are translated to pure Java code (there is no reflection at runtime) so execution is very fast. EDIT: Well, so far SBQL4J it's the ONLY extension to Java language which gives query capabilities similar to LINQ. There are some interesting project like Quaere and JaQue but they are only API's, not syntax / semantics extension with strong type safety in compile time.",
        "summary": "See SBQL4J. EDIT: Well, so far SBQL4J it's the ONLY extension to Java language which gives query capabilities similar to LINQ."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One use for metaclasses is adding new properties and methods to an instance automatically. For example, if you look at Django models, their definition looks a bit confusing. It looks as if you are only defining class properties: However, at runtime the Person objects are filled with all sorts of useful methods. See the source for some amazing metaclassery.",
        "output": "One use for metaclasses is adding new properties and methods to an instance automatically.",
        "answer": "One use for metaclasses is adding new properties and methods to an instance automatically. For example, if you look at Django models, their definition looks a bit confusing. It looks as if you are only defining class properties: However, at runtime the Person objects are filled with all sorts of useful methods. See the source for some amazing metaclassery.",
        "summary": "One use for metaclasses is adding new properties and methods to an instance automatically."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use the Func delegate in .net 3.5 as the parameter in your RunTheMethod method. The Func delegate allows you to specify a method that takes a number of parameters of a specific type and returns a single argument of a specific type. Here is an example that should work:",
        "output": "You can use the Func delegate in .net 3.5 as the parameter in your RunTheMethod method.",
        "answer": "You can use the Func delegate in .net 3.5 as the parameter in your RunTheMethod method. The Func delegate allows you to specify a method that takes a number of parameters of a specific type and returns a single argument of a specific type. Here is an example that should work:",
        "summary": "You can use the Func delegate in .net 3.5 as the parameter in your RunTheMethod method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have had problems with TextPad on 4G files too. Notepad++ works nicely.",
        "output": "Notepad++ works nicely.",
        "answer": "I have had problems with TextPad on 4G files too. Notepad++ works nicely.",
        "summary": "Notepad++ works nicely."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You declared them at the start of the method, but you never initialized them. Initializing would be setting them equal to a value, such as:",
        "output": "You declared them at the start of the method, but you never initialized them.",
        "answer": "You declared them at the start of the method, but you never initialized them. Initializing would be setting them equal to a value, such as:",
        "summary": "You declared them at the start of the method, but you never initialized them."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The jQuery documentation has a link to this article 'Basic usage of the jQuery UI dialog'that explains this situation and how to resolve it.",
        "output": "The jQuery documentation has a link to this article 'Basic usage of the jQuery UI dialog'that explains this situation and how to resolve it.",
        "answer": "The jQuery documentation has a link to this article 'Basic usage of the jQuery UI dialog'that explains this situation and how to resolve it.",
        "summary": "The jQuery documentation has a link to this article 'Basic usage of the jQuery UI dialog'that explains this situation and how to resolve it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Sometimes I use this, if I don't want it to be actually set and persisted in my db: Obviously if it's not a string then I might make the object nullable ( double?, int? ) and check if it's null, return a default, or return the value it's set to. Then I can make a check in my repository to see if it's my default and not persist, or make a backdoor check in to see the true status of the backing value, before saving. Hope that helps!",
        "output": "Sometimes I use this, if I don't want it to be actually set and persisted in my db:",
        "answer": "Sometimes I use this, if I don't want it to be actually set and persisted in my db: Obviously if it's not a string then I might make the object nullable ( double?, int? ) and check if it's null, return a default, or return the value it's set to. Then I can make a check in my repository to see if it's my default and not persist, or make a backdoor check in to see the true status of the backing value, before saving. Hope that helps!",
        "summary": "Sometimes I use this, if I don't want it to be actually set and persisted in my db:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Without any more information it is difficult to pinpoint the problem, but the root cause is that you most likely have compiled a class against a different version of the class that is missing a method, than the one you are using when running it. Look at the stack trace ... If the exception appears when calling a method on an object in a library, you are most likely using separate versions of the library when compiling and running. Make sure you have the right version both places. If the exception appears when calling a method on objects instantiated by classes <em>you</em> made, then your build process seems to be faulty. Make sure the class files that you are actually running are updated when you compile.",
        "output": "Without any more information it is difficult to pinpoint the problem, but the root cause is that you most likely have compiled a class against a different version of the class that is missing a method, than the one you are using when running it. If the exception appears when calling a method on an object in a library, you are most likely using separate versions of the library when compiling and running. Make sure you have the right version both places. If the exception appears when calling a method on objects instantiated by classes <em>you</em> made, then your build process seems to be faulty. Make sure the class files that you are actually running are updated when you compile.",
        "answer": "Without any more information it is difficult to pinpoint the problem, but the root cause is that you most likely have compiled a class against a different version of the class that is missing a method, than the one you are using when running it. Look at the stack trace ... If the exception appears when calling a method on an object in a library, you are most likely using separate versions of the library when compiling and running. Make sure you have the right version both places. If the exception appears when calling a method on objects instantiated by classes <em>you</em> made, then your build process seems to be faulty. Make sure the class files that you are actually running are updated when you compile.",
        "summary": "Without any more information it is difficult to pinpoint the problem, but the root cause is that you most likely have compiled a class against a different version of the class that is missing a method, than the one you are using when running it. If the exception appears when calling a method on an object in a library, you are most likely using separate versions of the library when compiling and running. Make sure you have the right version both places. If the exception appears when calling a method on objects instantiated by classes <em>you</em> made, then your build process seems to be faulty. Make sure the class files that you are actually running are updated when you compile."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n V8 is an implementation of JavaScript. It lets you run standalone JavaScript applications (among other things). Node.js is simply a library written for V8 which does evented I/O. This concept is a bit trickier to explain, and I'm sure someone will answer with a better explanation than I... The gist is that rather than doing some input or output and waiting for it to happen, you just don't wait for it to finish. So for example, ask for the last edited time of a file: That might take a couple of milliseconds, or it might take seconds. With evented I/O you simply fire off the request and instead of waiting around you attach a callback that gets run when the request finishes: This makes it a lot like JavaScript code in the browser (for example, with Ajax style functionality). For more information, you should check out the article Node.js is genuinely exciting which was my introduction to the library/platform... I found it quite good.",
        "output": "V8 is an implementation of JavaScript. Node.js is simply a library written for V8 which does evented I/O.",
        "answer": "V8 is an implementation of JavaScript. It lets you run standalone JavaScript applications (among other things). Node.js is simply a library written for V8 which does evented I/O. This concept is a bit trickier to explain, and I'm sure someone will answer with a better explanation than I... The gist is that rather than doing some input or output and waiting for it to happen, you just don't wait for it to finish. So for example, ask for the last edited time of a file: That might take a couple of milliseconds, or it might take seconds. With evented I/O you simply fire off the request and instead of waiting around you attach a callback that gets run when the request finishes: This makes it a lot like JavaScript code in the browser (for example, with Ajax style functionality). For more information, you should check out the article Node.js is genuinely exciting which was my introduction to the library/platform... I found it quite good.",
        "summary": "V8 is an implementation of JavaScript. Node.js is simply a library written for V8 which does evented I/O."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you look into the source of java.lang.Runtime, you'll see exec finally call protected method: execVM, which means it uses Virtual memory. So for Unix-like system, VM depends on amount of swap space + some ratio of physical memory. Michael's answer did solve your problem but it might (or to say, would eventually) cause the O.S. deadlock in memory allocation issue since 1 tell O.S. less careful of memory allocation &amp; 0 is just guessing &amp; obviously that you are lucky that O.S. guess you can have memory THIS TIME. Next time? Hmm..... Better approach is that you experiment your case &amp; give a good swap space &amp; give a better ratio of physical memory used &amp; set value to 2 rather than 1 or 0.",
        "output": "Better approach is that you experiment your case &amp; give a good swap space &amp; give a better ratio of physical memory used &amp; set value to 2 rather than 1 or 0.",
        "answer": "If you look into the source of java.lang.Runtime, you'll see exec finally call protected method: execVM, which means it uses Virtual memory. So for Unix-like system, VM depends on amount of swap space + some ratio of physical memory. Michael's answer did solve your problem but it might (or to say, would eventually) cause the O.S. deadlock in memory allocation issue since 1 tell O.S. less careful of memory allocation &amp; 0 is just guessing &amp; obviously that you are lucky that O.S. guess you can have memory THIS TIME. Next time? Hmm..... Better approach is that you experiment your case &amp; give a good swap space &amp; give a better ratio of physical memory used &amp; set value to 2 rather than 1 or 0.",
        "summary": "Better approach is that you experiment your case &amp; give a good swap space &amp; give a better ratio of physical memory used &amp; set value to 2 rather than 1 or 0."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another one from xkcd",
        "output": "Another one from xkcd",
        "answer": "Another one from xkcd",
        "summary": "Another one from xkcd"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try this out: Hope this helps.",
        "output": "Try this out:",
        "answer": "Try this out: Hope this helps.",
        "summary": "Try this out:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use std::stringstream: BIGBLOCK Usage: BIGBLOCK",
        "output": "You can use std::stringstream: BIGBLOCK",
        "answer": "You can use std::stringstream: BIGBLOCK Usage: BIGBLOCK",
        "summary": "You can use std::stringstream: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Well, one way is to compile it as x64 with VS2008 This runs as you would expect: For 32 bit code, we need to use the correct __int64 format specifier %I64u. So it becomes. This code works for both 32 and 64 bit VS compiler.",
        "output": "Well, one way is to compile it as x64 with VS2008 For 32 bit code, we need to use the correct __int64 format specifier %I64u.",
        "answer": "Well, one way is to compile it as x64 with VS2008 This runs as you would expect: For 32 bit code, we need to use the correct __int64 format specifier %I64u. So it becomes. This code works for both 32 and 64 bit VS compiler.",
        "summary": "Well, one way is to compile it as x64 with VS2008 For 32 bit code, we need to use the correct __int64 format specifier %I64u."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It only changes the directory for the script itself, while your current directory stays the same. You might want to use a symbolic link instead. It allows you to make a \"shortcut\" to a file or directory, so you'd only have to type something like <code>cd my-project</code>.",
        "output": "It only changes the directory for the script itself, while your current directory stays the same.",
        "answer": "It only changes the directory for the script itself, while your current directory stays the same. You might want to use a symbolic link instead. It allows you to make a \"shortcut\" to a file or directory, so you'd only have to type something like <code>cd my-project</code>.",
        "summary": "It only changes the directory for the script itself, while your current directory stays the same."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>pathinfo()</code>",
        "output": "<code>pathinfo()</code>",
        "answer": "<code>pathinfo()</code>",
        "summary": "<code>pathinfo()</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An easy to understand and simple solution. However, this assumes you are looking for the western idea of age and not using East Asian reckoning.",
        "output": "An easy to understand and simple solution.",
        "answer": "An easy to understand and simple solution. However, this assumes you are looking for the western idea of age and not using East Asian reckoning.",
        "summary": "An easy to understand and simple solution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <code>LEFT JOIN</code> is absolutely not faster than an <code>INNER JOIN</code>. In fact, it's slower; by definition, an outer join (<code>LEFT JOIN</code> or <code>RIGHT JOIN</code>)  has to do all the work of an <code>INNER JOIN</code> plus the extra work of null-extending the results. It would also be expected to return more rows, further increasing the total execution time simply due to the larger size of the result set. (And even if a <code>LEFT JOIN</code> <em>were</em> faster in <em>specific</em> situations due to some difficult-to-imagine confluence of factors, it is not functionally equivalent to an <code>INNER JOIN</code>, so you cannot simply go replacing all instances of one with the other!) Most likely your performance problems lie elsewhere, such as not having a candidate key or foreign key indexed properly. 9 tables is quite a lot to be joining so the slowdown could literally be almost anywhere. If you post your schema, we might be able to provide more details. <strong>Edit:</strong> Reflecting further on this, I could think of one circumstance under which a <code>LEFT JOIN</code> might be faster than an <code>INNER JOIN</code>, and that is when: <li>Some of the tables are <em>very</em> small (say, under 10 rows); <li>The tables do not have sufficient indexes to cover the query. Consider this example: BIGBLOCK If you run this and view the execution plan, you'll see that the <code>INNER JOIN</code> query does indeed cost more than the <code>LEFT JOIN</code>, because it satisfies the two criteria above. It's because SQL Server wants to do a hash match for the <code>INNER JOIN</code>, but does nested loops for the <code>LEFT JOIN</code>; the former is <em>normally</em> much faster, but since the number of rows is so tiny <em>and</em> there's no index to use, the hashing operation turns out to be the most expensive part of the query. You can see the same effect by writing a program in your favourite programming language to perform a large number of lookups on a list with 5 elements, vs. a hash table with 5 elements. Because of the size, the hash table version is actually slower. But increase it to 50 elements, or 5000 elements, and the list version slows to a crawl, because it's O(N) vs. O(1) for the hashtable. But change this query to be on the <code>ID</code> column instead of <code>Name</code> and you'll see a very different story. In that case, it does nested loops for both queries, but the <code>INNER JOIN</code> version is able to replace one of the clustered index scans with a seek - meaning that this will literally be <em>an order of magnitude</em> faster with a large number of rows. So the conclusion is more or less what I mentioned several paragraphs above; this is almost certainly an indexing or index coverage problem, possibly combined with one or more very small tables. Those are the only circumstances under which SQL Server <em>might</em> sometimes choose a worse execution plan for an <code>INNER JOIN</code> than a <code>LEFT JOIN</code>.",
        "output": "A <code>LEFT JOIN</code> is absolutely not faster than an <code>INNER JOIN</code>. In fact, it's slower; by definition, an outer join (<code>LEFT JOIN</code> or <code>RIGHT JOIN</code>)  has to do all the work of an <code>INNER JOIN</code> plus the extra work of null-extending the results. It would also be expected to return more rows, further increasing the total execution time simply due to the larger size of the result set. Reflecting further on this, I could think of one circumstance under which a <code>LEFT JOIN</code> might be faster than an <code>INNER JOIN</code>, and that is when: <li>Some of the tables are <em>very</em> small (say, under 10 rows); <li>The tables do not have sufficient indexes to cover the query. If you run this and view the execution plan, you'll see that the <code>INNER JOIN</code> query does indeed cost more than the <code>LEFT JOIN</code>, because it satisfies the two criteria above. It's because SQL Server wants to do a hash match for the <code>INNER JOIN</code>, but does nested loops for the <code>LEFT JOIN</code>; the former is <em>normally</em> much faster, but since the number of rows is so tiny <em>and</em> there's no index to use, the hashing operation turns out to be the most expensive part of the query. Because of the size, the hash table version is actually slower. But increase it to 50 elements, or 5000 elements, and the list version slows to a crawl, because it's O(N) vs. O(1) for the hashtable. But change this query to be on the <code>ID</code> column instead of <code>Name</code> and you'll see a very different story. So the conclusion is more or less what I mentioned several paragraphs above; this is almost certainly an indexing or index coverage problem, possibly combined with one or more very small tables. Those are the only circumstances under which SQL Server <em>might</em> sometimes choose a worse execution plan for an <code>INNER JOIN</code> than a <code>LEFT JOIN</code>.",
        "answer": "A <code>LEFT JOIN</code> is absolutely not faster than an <code>INNER JOIN</code>. In fact, it's slower; by definition, an outer join (<code>LEFT JOIN</code> or <code>RIGHT JOIN</code>)  has to do all the work of an <code>INNER JOIN</code> plus the extra work of null-extending the results. It would also be expected to return more rows, further increasing the total execution time simply due to the larger size of the result set. (And even if a <code>LEFT JOIN</code> <em>were</em> faster in <em>specific</em> situations due to some difficult-to-imagine confluence of factors, it is not functionally equivalent to an <code>INNER JOIN</code>, so you cannot simply go replacing all instances of one with the other!) Most likely your performance problems lie elsewhere, such as not having a candidate key or foreign key indexed properly. 9 tables is quite a lot to be joining so the slowdown could literally be almost anywhere. If you post your schema, we might be able to provide more details. <strong>Edit:</strong> Reflecting further on this, I could think of one circumstance under which a <code>LEFT JOIN</code> might be faster than an <code>INNER JOIN</code>, and that is when: <li>Some of the tables are <em>very</em> small (say, under 10 rows); <li>The tables do not have sufficient indexes to cover the query. Consider this example: BIGBLOCK If you run this and view the execution plan, you'll see that the <code>INNER JOIN</code> query does indeed cost more than the <code>LEFT JOIN</code>, because it satisfies the two criteria above. It's because SQL Server wants to do a hash match for the <code>INNER JOIN</code>, but does nested loops for the <code>LEFT JOIN</code>; the former is <em>normally</em> much faster, but since the number of rows is so tiny <em>and</em> there's no index to use, the hashing operation turns out to be the most expensive part of the query. You can see the same effect by writing a program in your favourite programming language to perform a large number of lookups on a list with 5 elements, vs. a hash table with 5 elements. Because of the size, the hash table version is actually slower. But increase it to 50 elements, or 5000 elements, and the list version slows to a crawl, because it's O(N) vs. O(1) for the hashtable. But change this query to be on the <code>ID</code> column instead of <code>Name</code> and you'll see a very different story. In that case, it does nested loops for both queries, but the <code>INNER JOIN</code> version is able to replace one of the clustered index scans with a seek - meaning that this will literally be <em>an order of magnitude</em> faster with a large number of rows. So the conclusion is more or less what I mentioned several paragraphs above; this is almost certainly an indexing or index coverage problem, possibly combined with one or more very small tables. Those are the only circumstances under which SQL Server <em>might</em> sometimes choose a worse execution plan for an <code>INNER JOIN</code> than a <code>LEFT JOIN</code>.",
        "summary": "A <code>LEFT JOIN</code> is absolutely not faster than an <code>INNER JOIN</code>. In fact, it's slower; by definition, an outer join (<code>LEFT JOIN</code> or <code>RIGHT JOIN</code>)  has to do all the work of an <code>INNER JOIN</code> plus the extra work of null-extending the results. It would also be expected to return more rows, further increasing the total execution time simply due to the larger size of the result set. Reflecting further on this, I could think of one circumstance under which a <code>LEFT JOIN</code> might be faster than an <code>INNER JOIN</code>, and that is when: <li>Some of the tables are <em>very</em> small (say, under 10 rows); <li>The tables do not have sufficient indexes to cover the query. If you run this and view the execution plan, you'll see that the <code>INNER JOIN</code> query does indeed cost more than the <code>LEFT JOIN</code>, because it satisfies the two criteria above. It's because SQL Server wants to do a hash match for the <code>INNER JOIN</code>, but does nested loops for the <code>LEFT JOIN</code>; the former is <em>normally</em> much faster, but since the number of rows is so tiny <em>and</em> there's no index to use, the hashing operation turns out to be the most expensive part of the query. Because of the size, the hash table version is actually slower. But increase it to 50 elements, or 5000 elements, and the list version slows to a crawl, because it's O(N) vs. O(1) for the hashtable. But change this query to be on the <code>ID</code> column instead of <code>Name</code> and you'll see a very different story. So the conclusion is more or less what I mentioned several paragraphs above; this is almost certainly an indexing or index coverage problem, possibly combined with one or more very small tables. Those are the only circumstances under which SQL Server <em>might</em> sometimes choose a worse execution plan for an <code>INNER JOIN</code> than a <code>LEFT JOIN</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I suspect this is a leftover from C++ where people override the ! operator but not the bool operator. So to get a negative(or positive) answer in that case you would first need to use the ! operator to get a boolean, but if you wanted to check the positive case would use ! !.",
        "output": "I suspect this is a leftover from C++ where people override the ! operator but not the bool operator.",
        "answer": "I suspect this is a leftover from C++ where people override the ! operator but not the bool operator. So to get a negative(or positive) answer in that case you would first need to use the ! operator to get a boolean, but if you wanted to check the positive case would use ! !.",
        "summary": "I suspect this is a leftover from C++ where people override the ! operator but not the bool operator."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <strong>library</strong> performs specific, well-defined operations. A <strong>framework</strong> is a skeleton where the application defines the \"meat\" of the operation by filling out the skeleton. The skeleton still has code to link up the parts but the most important work is done by the application. <strong>Examples of libraries:</strong> Network protocols, compression, image manipulation, string utilities, regular expression evaluation, math. Operations are self-contained. <strong>Examples of frameworks:</strong> Web application system, Plug-in manager, GUI system. The framework defines the concept but the application defines the fundamental functionality that end-users care about.",
        "output": "A <strong>library</strong> performs specific, well-defined operations. A <strong>framework</strong> is a skeleton where the application defines the \"meat\" of the operation by filling out the skeleton. <strong>Examples of libraries:</strong> Network protocols, compression, image manipulation, string utilities, regular expression evaluation, math. <strong>Examples of frameworks:</strong> Web application system, Plug-in manager, GUI system.",
        "answer": "A <strong>library</strong> performs specific, well-defined operations. A <strong>framework</strong> is a skeleton where the application defines the \"meat\" of the operation by filling out the skeleton. The skeleton still has code to link up the parts but the most important work is done by the application. <strong>Examples of libraries:</strong> Network protocols, compression, image manipulation, string utilities, regular expression evaluation, math. Operations are self-contained. <strong>Examples of frameworks:</strong> Web application system, Plug-in manager, GUI system. The framework defines the concept but the application defines the fundamental functionality that end-users care about.",
        "summary": "A <strong>library</strong> performs specific, well-defined operations. A <strong>framework</strong> is a skeleton where the application defines the \"meat\" of the operation by filling out the skeleton. <strong>Examples of libraries:</strong> Network protocols, compression, image manipulation, string utilities, regular expression evaluation, math. <strong>Examples of frameworks:</strong> Web application system, Plug-in manager, GUI system."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A status of Private indicates that variables can only be accessed by objects of the same class. Protected status extends that access to include descendants of the class as well. \"from the above table we can see the deference between private and protected... am think both are same ....so what the need for that two separate command\" Check MSDN link for more information",
        "output": "A status of Private indicates that variables can only be accessed by objects of the same class. Protected status extends that access to include descendants of the class as well.",
        "answer": "A status of Private indicates that variables can only be accessed by objects of the same class. Protected status extends that access to include descendants of the class as well. \"from the above table we can see the deference between private and protected... am think both are same ....so what the need for that two separate command\" Check MSDN link for more information",
        "summary": "A status of Private indicates that variables can only be accessed by objects of the same class. Protected status extends that access to include descendants of the class as well."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use the <code>querystring</code> module: Now, for example, if you have an <code>input</code> field with name <code>age</code>, you could access it using the variable <code>post</code>:",
        "output": "You can use the <code>querystring</code> module:",
        "answer": "You can use the <code>querystring</code> module: Now, for example, if you have an <code>input</code> field with name <code>age</code>, you could access it using the variable <code>post</code>:",
        "summary": "You can use the <code>querystring</code> module:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n CSS3 has the <code>overflow-x</code> property, but I wouldn't expect great support for that. In CSS2 all you can do is set a general <code>scroll</code> policy and work your <code>widths</code> and <code>heights</code> not to mess them up.",
        "output": "CSS3 has the <code>overflow-x</code> property, but I wouldn't expect great support for that. In CSS2 all you can do is set a general <code>scroll</code> policy and work your <code>widths</code> and <code>heights</code> not to mess them up.",
        "answer": "CSS3 has the <code>overflow-x</code> property, but I wouldn't expect great support for that. In CSS2 all you can do is set a general <code>scroll</code> policy and work your <code>widths</code> and <code>heights</code> not to mess them up.",
        "summary": "CSS3 has the <code>overflow-x</code> property, but I wouldn't expect great support for that. In CSS2 all you can do is set a general <code>scroll</code> policy and work your <code>widths</code> and <code>heights</code> not to mess them up."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are several options... assuming you found your TD by <code>var td = document.getElementyById('myTD_ID');</code> you can do: <li><code>td.innerHTML = \"mytext\";</code> <li><code>td.textContent= \"mytext\";</code> <li><code>td.innerText= \"mytext\";</code>  - this one may not work outside IE? Not sure <li>Use firstChild or children array as previous poster noted. If it's just the text that needs to be changed, textContent is faster and less prone to XSS attacks (https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent)",
        "output": "<li><code>td.innerHTML = \"mytext\";</code> <li><code>td.textContent= \"mytext\";</code> <li><code>td.innerText= \"mytext\";</code>  - this one may not work outside IE? Not sure <li>Use firstChild or children array as previous poster noted.",
        "answer": "There are several options... assuming you found your TD by <code>var td = document.getElementyById('myTD_ID');</code> you can do: <li><code>td.innerHTML = \"mytext\";</code> <li><code>td.textContent= \"mytext\";</code> <li><code>td.innerText= \"mytext\";</code>  - this one may not work outside IE? Not sure <li>Use firstChild or children array as previous poster noted. If it's just the text that needs to be changed, textContent is faster and less prone to XSS attacks (https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent)",
        "summary": "<li><code>td.innerHTML = \"mytext\";</code> <li><code>td.textContent= \"mytext\";</code> <li><code>td.innerText= \"mytext\";</code>  - this one may not work outside IE? Not sure <li>Use firstChild or children array as previous poster noted."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In pure functional programming, there are no side-effects. For many types of software (for example, anything with user interaction) side-effects are necessary at some level. One way to get side-effect like behavior while still retaining a functional style is to use functional reactive programming. This is the combination of functional programming, and reactive programming. (The Wikipedia article you linked to is about the latter.) The basic idea behind reactive programming is that there are certain datatypes that represent a value \"over time\". Computations that involve these changing-over-time values will themselves have values that change over time. For example, you could represent the mouse coordinates as a pair of integer-over-time values. Let's say we had something like (this is pseudo-code): BIGBLOCK At any moment in time, x and y would have the coordinates of the mouse. Unlike non-reactive programming, we only need to make this assignment once, and the x and y variables will stay \"up to date\" automatically. This is why reactive programming and functional programming work so well together: reactive programming removes the need to mutate variables while still letting you do a lot of what you could accomplish with variable mutations. If we then do some computations based on this the resulting values will also be values that change over time. For example: BIGBLOCK In this example, <code>minX</code> will always be 16 less than the x coordinate of the mouse pointer. With reactive-aware libraries you could then say something like: BIGBLOCK And a 32x32 box will be drawn around the mouse pointer and will track it wherever it moves. Here is a pretty good paper on functional reactive programming.",
        "output": "One way to get side-effect like behavior while still retaining a functional style is to use functional reactive programming. This is the combination of functional programming, and reactive programming. The basic idea behind reactive programming is that there are certain datatypes that represent a value \"over time\". This is why reactive programming and functional programming work so well together: reactive programming removes the need to mutate variables while still letting you do a lot of what you could accomplish with variable mutations. Here is a pretty good paper on functional reactive programming.",
        "answer": "In pure functional programming, there are no side-effects. For many types of software (for example, anything with user interaction) side-effects are necessary at some level. One way to get side-effect like behavior while still retaining a functional style is to use functional reactive programming. This is the combination of functional programming, and reactive programming. (The Wikipedia article you linked to is about the latter.) The basic idea behind reactive programming is that there are certain datatypes that represent a value \"over time\". Computations that involve these changing-over-time values will themselves have values that change over time. For example, you could represent the mouse coordinates as a pair of integer-over-time values. Let's say we had something like (this is pseudo-code): BIGBLOCK At any moment in time, x and y would have the coordinates of the mouse. Unlike non-reactive programming, we only need to make this assignment once, and the x and y variables will stay \"up to date\" automatically. This is why reactive programming and functional programming work so well together: reactive programming removes the need to mutate variables while still letting you do a lot of what you could accomplish with variable mutations. If we then do some computations based on this the resulting values will also be values that change over time. For example: BIGBLOCK In this example, <code>minX</code> will always be 16 less than the x coordinate of the mouse pointer. With reactive-aware libraries you could then say something like: BIGBLOCK And a 32x32 box will be drawn around the mouse pointer and will track it wherever it moves. Here is a pretty good paper on functional reactive programming.",
        "summary": "One way to get side-effect like behavior while still retaining a functional style is to use functional reactive programming. This is the combination of functional programming, and reactive programming. The basic idea behind reactive programming is that there are certain datatypes that represent a value \"over time\". This is why reactive programming and functional programming work so well together: reactive programming removes the need to mutate variables while still letting you do a lot of what you could accomplish with variable mutations. Here is a pretty good paper on functional reactive programming."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Take a look at this short article. Solution paraphrased here: <strong>Create your table:</strong> <strong>Copy data from your CSV file to the table:</strong>",
        "output": "<strong>Create your table:</strong> <strong>Copy data from your CSV file to the table:</strong>",
        "answer": "Take a look at this short article. Solution paraphrased here: <strong>Create your table:</strong> <strong>Copy data from your CSV file to the table:</strong>",
        "summary": "<strong>Create your table:</strong> <strong>Copy data from your CSV file to the table:</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Public</strong> - If you can see the class, then you can see the method <strong>Private</strong> - If you are <em>part of</em> the class, then you can see the method, otherwise not. <strong>Protected</strong> - Same as Private, plus all <em>descendants</em> can also see the method. <strong>Static (class)</strong> - Remember the distinction between \"Class\" and \"Object\" ? Forget all that. They are the same with \"static\"... the class is the one-and-only instance of itself. <strong>Static (method)</strong> - Whenever you use this method, it will have a frame of reference independent of the actual instance of the class it is part of.",
        "output": "<strong>Public</strong> - If you can see the class, then you can see the method <strong>Private</strong> - If you are <em>part of</em> the class, then you can see the method, otherwise not. <strong>Protected</strong> - Same as Private, plus all <em>descendants</em> can also see the method. <strong>Static (class)</strong> - Remember the distinction between \"Class\" and \"Object\" ? <strong>Static (method)</strong> - Whenever you use this method, it will have a frame of reference independent of the actual instance of the class it is part of.",
        "answer": "<strong>Public</strong> - If you can see the class, then you can see the method <strong>Private</strong> - If you are <em>part of</em> the class, then you can see the method, otherwise not. <strong>Protected</strong> - Same as Private, plus all <em>descendants</em> can also see the method. <strong>Static (class)</strong> - Remember the distinction between \"Class\" and \"Object\" ? Forget all that. They are the same with \"static\"... the class is the one-and-only instance of itself. <strong>Static (method)</strong> - Whenever you use this method, it will have a frame of reference independent of the actual instance of the class it is part of.",
        "summary": "<strong>Public</strong> - If you can see the class, then you can see the method <strong>Private</strong> - If you are <em>part of</em> the class, then you can see the method, otherwise not. <strong>Protected</strong> - Same as Private, plus all <em>descendants</em> can also see the method. <strong>Static (class)</strong> - Remember the distinction between \"Class\" and \"Object\" ? <strong>Static (method)</strong> - Whenever you use this method, it will have a frame of reference independent of the actual instance of the class it is part of."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Stored procedures are a batch of SQL statements that can be executed in a couple of ways. Most major DBMs support stored procedures; however, not all do. You will need to verify with your particular DBMS help documentation for specifics. As I am most familiar with SQL Server I will use that as my samples. To create a stored procedure the syntax is fairly simple: So for example: A benefit of stored procedures is that you can centralize data access logic into a single place that is then easy for DBA's to optimize. Stored procedures also have a security benefit in that you can grant execute rights to a stored procedure but the user will not need to have read/write permissions on the underlying tables. This is a good first step against SQL injection. Stored procedures do come with downsides, basically the maintenance associated with your basic CRUD operation. Let's say for each table you have an Insert, Update, Delete and at least one select based on the primary key, that means each table will have 4 procedures. Now take a decent size database of 400 tables, and you have 1600 procedures! And that's assuming you don't have duplicates which you probably will. This is where using an ORM or some other method to auto generate your basic CRUD operations has a ton of merit.",
        "output": "Stored procedures are a batch of SQL statements that can be executed in a couple of ways.",
        "answer": "Stored procedures are a batch of SQL statements that can be executed in a couple of ways. Most major DBMs support stored procedures; however, not all do. You will need to verify with your particular DBMS help documentation for specifics. As I am most familiar with SQL Server I will use that as my samples. To create a stored procedure the syntax is fairly simple: So for example: A benefit of stored procedures is that you can centralize data access logic into a single place that is then easy for DBA's to optimize. Stored procedures also have a security benefit in that you can grant execute rights to a stored procedure but the user will not need to have read/write permissions on the underlying tables. This is a good first step against SQL injection. Stored procedures do come with downsides, basically the maintenance associated with your basic CRUD operation. Let's say for each table you have an Insert, Update, Delete and at least one select based on the primary key, that means each table will have 4 procedures. Now take a decent size database of 400 tables, and you have 1600 procedures! And that's assuming you don't have duplicates which you probably will. This is where using an ORM or some other method to auto generate your basic CRUD operations has a ton of merit.",
        "summary": "Stored procedures are a batch of SQL statements that can be executed in a couple of ways."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Alternatively, you can use the <code>CHAR</code> function:",
        "output": "Alternatively, you can use the <code>CHAR</code> function:",
        "answer": "Alternatively, you can use the <code>CHAR</code> function:",
        "summary": "Alternatively, you can use the <code>CHAR</code> function:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's a bit more than you're asking for, but I recommend Cocoatech's Path Finder for anyone who wishes the Finder had a bit more juice. It includes a toolbar button to open a Terminal window for the current directory, or a retractable pane with a Terminal command line at the bottom of each Finder window. Plus many other features that I now can't live without. Very mature, stable software. http://cocoatech.com/",
        "output": "It's a bit more than you're asking for, but I recommend Cocoatech's Path Finder for anyone who wishes the Finder had a bit more juice.",
        "answer": "It's a bit more than you're asking for, but I recommend Cocoatech's Path Finder for anyone who wishes the Finder had a bit more juice. It includes a toolbar button to open a Terminal window for the current directory, or a retractable pane with a Terminal command line at the bottom of each Finder window. Plus many other features that I now can't live without. Very mature, stable software. http://cocoatech.com/",
        "summary": "It's a bit more than you're asking for, but I recommend Cocoatech's Path Finder for anyone who wishes the Finder had a bit more juice."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try: And BTW, in C++ this is a compiler extension, the standard does not define long long, thats part of C99.",
        "output": "And BTW, in C++ this is a compiler extension, the standard does not define long long, thats part of C99.",
        "answer": "Try: And BTW, in C++ this is a compiler extension, the standard does not define long long, thats part of C99.",
        "summary": "And BTW, in C++ this is a compiler extension, the standard does not define long long, thats part of C99."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to double escape any RegExp characters (once for the slash in the string and once for the regexp): BIGBLOCK Otherwise, it looks for the end of the line and 'TESTONE' (which it never finds). Personally, I'm not a big fan of building regexp's using strings for this reason. The level of escaping that's needed could lead you to drink. I'm sure others feel differently though and like drinking when writing regexes.",
        "output": "You need to double escape any RegExp characters (once for the slash in the string and once for the regexp): BIGBLOCK",
        "answer": "You need to double escape any RegExp characters (once for the slash in the string and once for the regexp): BIGBLOCK Otherwise, it looks for the end of the line and 'TESTONE' (which it never finds). Personally, I'm not a big fan of building regexp's using strings for this reason. The level of escaping that's needed could lead you to drink. I'm sure others feel differently though and like drinking when writing regexes.",
        "summary": "You need to double escape any RegExp characters (once for the slash in the string and once for the regexp): BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I had what at first seemed to be an identical problem, but it turned out to be due to an NHibernate/WPF compatibility issue. The problem was caused by the way WPF checks for object equality. I was able to get my stuff to work by using the object ID property in the SelectedValue and SelectedValuePath properties. See the blog post from Chester, The WPF ComboBox - SelectedItem, SelectedValue, and SelectedValuePath with NHibernate, for details.",
        "output": "The problem was caused by the way WPF checks for object equality. I was able to get my stuff to work by using the object ID property in the SelectedValue and SelectedValuePath properties.",
        "answer": "I had what at first seemed to be an identical problem, but it turned out to be due to an NHibernate/WPF compatibility issue. The problem was caused by the way WPF checks for object equality. I was able to get my stuff to work by using the object ID property in the SelectedValue and SelectedValuePath properties. See the blog post from Chester, The WPF ComboBox - SelectedItem, SelectedValue, and SelectedValuePath with NHibernate, for details.",
        "summary": "The problem was caused by the way WPF checks for object equality. I was able to get my stuff to work by using the object ID property in the SelectedValue and SelectedValuePath properties."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are a couple of other differences - Interfaces can't have any concrete implementations. Abstract base classes can. This allows you to provide concrete implementations there. This can allow an abstract base class to actually provide a more rigorous contract, wheras an interface really only describes how a class is used. (The abstract base class can have non-virtual members defining the behavior, which gives more control to the base class author.) More than one interface can be implemented on a class. A class can only derive from a single abstract base class. This allows for polymorphic hierarchy using interfaces, but not abstract base classes. This also allows for a pseudo-multi-inheritance using interfaces. Abstract base classes can be modified in v2+ without breaking the API. Changes to interfaces are breaking changes. [C#/.NET Specific] Interfaces, unlike abstract base classes, can be applied to value types (structs). Structs cannot inherit from abstract base classes. This allows behavioral contracts/usage guidelines to be applied on value types.",
        "output": "Interfaces can't have any concrete implementations. Abstract base classes can. More than one interface can be implemented on a class. A class can only derive from a single abstract base class. Abstract base classes can be modified in v2+ without breaking the API. Changes to interfaces are breaking changes.",
        "answer": "There are a couple of other differences - Interfaces can't have any concrete implementations. Abstract base classes can. This allows you to provide concrete implementations there. This can allow an abstract base class to actually provide a more rigorous contract, wheras an interface really only describes how a class is used. (The abstract base class can have non-virtual members defining the behavior, which gives more control to the base class author.) More than one interface can be implemented on a class. A class can only derive from a single abstract base class. This allows for polymorphic hierarchy using interfaces, but not abstract base classes. This also allows for a pseudo-multi-inheritance using interfaces. Abstract base classes can be modified in v2+ without breaking the API. Changes to interfaces are breaking changes. [C#/.NET Specific] Interfaces, unlike abstract base classes, can be applied to value types (structs). Structs cannot inherit from abstract base classes. This allows behavioral contracts/usage guidelines to be applied on value types.",
        "summary": "Interfaces can't have any concrete implementations. Abstract base classes can. More than one interface can be implemented on a class. A class can only derive from a single abstract base class. Abstract base classes can be modified in v2+ without breaking the API. Changes to interfaces are breaking changes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It seems like an <code>IllegalArgumentException</code> is called for if you don't want <code>null</code> to be an allowed value, and the <code>NullPointerException</code> would be thrown if you were trying to use a variable that turns out to be <code>null</code>.",
        "output": "It seems like an <code>IllegalArgumentException</code> is called for if you don't want <code>null</code> to be an allowed value, and the <code>NullPointerException</code> would be thrown if you were trying to use a variable that turns out to be <code>null</code>.",
        "answer": "It seems like an <code>IllegalArgumentException</code> is called for if you don't want <code>null</code> to be an allowed value, and the <code>NullPointerException</code> would be thrown if you were trying to use a variable that turns out to be <code>null</code>.",
        "summary": "It seems like an <code>IllegalArgumentException</code> is called for if you don't want <code>null</code> to be an allowed value, and the <code>NullPointerException</code> would be thrown if you were trying to use a variable that turns out to be <code>null</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use a vector: BIGBLOCK",
        "output": "Use a vector: BIGBLOCK",
        "answer": "Use a vector: BIGBLOCK",
        "summary": "Use a vector: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n On Windows, there are two differences between mutexes and binary semaphores: A mutex can only be released by the thread which has ownership, i.e. the thread which previously called the Wait function, (or which took ownership when creating it). A semaphore can be released by any thread. A thread can call a wait function repeatedly on a mutex without blocking. However, if you call a wait function twice on a binary semaphore without releasing the semaphore in between, the thread will block.",
        "output": "A mutex can only be released by the thread which has ownership, i.e. the thread which previously called the Wait function, (or which took ownership when creating it). A semaphore can be released by any thread. A thread can call a wait function repeatedly on a mutex without blocking. However, if you call a wait function twice on a binary semaphore without releasing the semaphore in between, the thread will block.",
        "answer": "On Windows, there are two differences between mutexes and binary semaphores: A mutex can only be released by the thread which has ownership, i.e. the thread which previously called the Wait function, (or which took ownership when creating it). A semaphore can be released by any thread. A thread can call a wait function repeatedly on a mutex without blocking. However, if you call a wait function twice on a binary semaphore without releasing the semaphore in between, the thread will block.",
        "summary": "A mutex can only be released by the thread which has ownership, i.e. the thread which previously called the Wait function, (or which took ownership when creating it). A semaphore can be released by any thread. A thread can call a wait function repeatedly on a mutex without blocking. However, if you call a wait function twice on a binary semaphore without releasing the semaphore in between, the thread will block."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Since a lot of people still do: BIGBLOCK I guess a lot of people still don't know that you can do: BIGBLOCK",
        "output": "I guess a lot of people still don't know that you can do: BIGBLOCK",
        "answer": "Since a lot of people still do: BIGBLOCK I guess a lot of people still don't know that you can do: BIGBLOCK",
        "summary": "I guess a lot of people still don't know that you can do: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This UnsupportedOperationException comes when you try to perform some operation on collection where its not allowed and in your case, When you call <code>Arrays.asList</code> it does not return a <code>java.util.ArrayList</code>. It returns a <code>java.util.Arrays$ArrayList</code> which is an immutable list. You cannot add to it and you cannot remove from it.",
        "output": "It returns a <code>java.util.Arrays$ArrayList</code> which is an immutable list. You cannot add to it and you cannot remove from it.",
        "answer": "This UnsupportedOperationException comes when you try to perform some operation on collection where its not allowed and in your case, When you call <code>Arrays.asList</code> it does not return a <code>java.util.ArrayList</code>. It returns a <code>java.util.Arrays$ArrayList</code> which is an immutable list. You cannot add to it and you cannot remove from it.",
        "summary": "It returns a <code>java.util.Arrays$ArrayList</code> which is an immutable list. You cannot add to it and you cannot remove from it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Since Oracle 9i there are two ways or declaring a directory for use with UTL_FILE. The older way is to set the INIT.ORA parameter UTL_FILE_DIR. We have to restart the database for a change to take affect. The value can like any other PATH variable; it accepts wildcards. Using this approach means passing the directory path... The alternative approach is to declare a directory object. Directory objects require the exact file path, and don't accept wildcards. In this approach we pass the directory object name... The UTL_FILE_DIR is deprecated because it is inherently insecure - all users have access to all the OS directories specified in the path, whereas read and write privileges can de granted discretely to individual users. Also, with Directory objects we can be add, remove or change directories without bouncing the database. In either case, the <code>oracle</code> OS user must have read and/or write privileges <em>on the OS directory</em>. In case it isn't obvious, this means <em>the directory must be visible from the database server</em>. So we cannot use either approach to expose a directory on our local PC to a process running on a remote database server. Files must be uploaded to the database server, or a shared network drive. If the <code>oracle</code> OS user does not have the appropriate privileges on the OS directory, or if the path specified in the database does not match to an actual path, the program will hurl this exception: The OERR text for this error is pretty clear:",
        "output": "Since Oracle 9i there are two ways or declaring a directory for use with UTL_FILE. The older way is to set the INIT.ORA parameter UTL_FILE_DIR. The value can like any other PATH variable; it accepts wildcards. The alternative approach is to declare a directory object. Directory objects require the exact file path, and don't accept wildcards. In either case, the <code>oracle</code> OS user must have read and/or write privileges <em>on the OS directory</em>. So we cannot use either approach to expose a directory on our local PC to a process running on a remote database server.",
        "answer": "Since Oracle 9i there are two ways or declaring a directory for use with UTL_FILE. The older way is to set the INIT.ORA parameter UTL_FILE_DIR. We have to restart the database for a change to take affect. The value can like any other PATH variable; it accepts wildcards. Using this approach means passing the directory path... The alternative approach is to declare a directory object. Directory objects require the exact file path, and don't accept wildcards. In this approach we pass the directory object name... The UTL_FILE_DIR is deprecated because it is inherently insecure - all users have access to all the OS directories specified in the path, whereas read and write privileges can de granted discretely to individual users. Also, with Directory objects we can be add, remove or change directories without bouncing the database. In either case, the <code>oracle</code> OS user must have read and/or write privileges <em>on the OS directory</em>. In case it isn't obvious, this means <em>the directory must be visible from the database server</em>. So we cannot use either approach to expose a directory on our local PC to a process running on a remote database server. Files must be uploaded to the database server, or a shared network drive. If the <code>oracle</code> OS user does not have the appropriate privileges on the OS directory, or if the path specified in the database does not match to an actual path, the program will hurl this exception: The OERR text for this error is pretty clear:",
        "summary": "Since Oracle 9i there are two ways or declaring a directory for use with UTL_FILE. The older way is to set the INIT.ORA parameter UTL_FILE_DIR. The value can like any other PATH variable; it accepts wildcards. The alternative approach is to declare a directory object. Directory objects require the exact file path, and don't accept wildcards. In either case, the <code>oracle</code> OS user must have read and/or write privileges <em>on the OS directory</em>. So we cannot use either approach to expose a directory on our local PC to a process running on a remote database server."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Perhaps this is what you are looking for:",
        "output": "Perhaps this is what you are looking for:",
        "answer": "Perhaps this is what you are looking for:",
        "summary": "Perhaps this is what you are looking for:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n CTRL + M + O will collapse all. CTRL + M + L will expand all. (in VS 2013 - Toggle All outlining) CTRL + M + P will expand all and disable outlining. CTRL + M + M will collapse/expand the current section. CTRL + M + A will collapse all even in Html files. These options are also in the context menu under Outlining. Right click in editor -> Outlining to find all options. (<em>After disabling outlining, use same steps to enable outlinging.</em>)",
        "output": "These options are also in the context menu under Outlining. Right click in editor -> Outlining to find all options. (<em>After disabling outlining, use same steps to enable outlinging.</em>)",
        "answer": "CTRL + M + O will collapse all. CTRL + M + L will expand all. (in VS 2013 - Toggle All outlining) CTRL + M + P will expand all and disable outlining. CTRL + M + M will collapse/expand the current section. CTRL + M + A will collapse all even in Html files. These options are also in the context menu under Outlining. Right click in editor -> Outlining to find all options. (<em>After disabling outlining, use same steps to enable outlinging.</em>)",
        "summary": "These options are also in the context menu under Outlining. Right click in editor -> Outlining to find all options. (<em>After disabling outlining, use same steps to enable outlinging.</em>)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I see this isn't answered yet, this is an exact quote from here: WSHttpBinding will try and perform an internal negotiate at the SSP layer. In order for this to be successful, you will need to allow anonymous in IIS for the VDir. WCF will then by default perfrom an SPNEGO for window credentials. Allowing anonymous at IIS layer is not allowing anyone in, it is deferring to the WCF stack. I found this via: http://fczaja.blogspot.com/2009/10/http-request-is-unauthorized-with.html After googling: http://www.google.tt/#hl=en&amp;source=hp&amp;q=+The+HTTP+request+is+unauthorized+with+client+authentication+scheme+%27Anonymous",
        "output": "Allowing anonymous at IIS layer is not allowing anyone in, it is deferring to the WCF stack.",
        "answer": "I see this isn't answered yet, this is an exact quote from here: WSHttpBinding will try and perform an internal negotiate at the SSP layer. In order for this to be successful, you will need to allow anonymous in IIS for the VDir. WCF will then by default perfrom an SPNEGO for window credentials. Allowing anonymous at IIS layer is not allowing anyone in, it is deferring to the WCF stack. I found this via: http://fczaja.blogspot.com/2009/10/http-request-is-unauthorized-with.html After googling: http://www.google.tt/#hl=en&amp;source=hp&amp;q=+The+HTTP+request+is+unauthorized+with+client+authentication+scheme+%27Anonymous",
        "summary": "Allowing anonymous at IIS layer is not allowing anyone in, it is deferring to the WCF stack."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A race condition is a situation on concurrent programming where two concurrent threads or processes and the resulting final state depends on who gets the resource first.",
        "output": "A race condition is a situation on concurrent programming where two concurrent threads or processes and the resulting final state depends on who gets the resource first.",
        "answer": "A race condition is a situation on concurrent programming where two concurrent threads or processes and the resulting final state depends on who gets the resource first.",
        "summary": "A race condition is a situation on concurrent programming where two concurrent threads or processes and the resulting final state depends on who gets the resource first."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It looks like you're using a mingw compile of Git on windows (or possibly another one I haven't heard about). There are ways to debug this: I believe all of the http proxy work for git is done by curl. Set this environment variable before running git: This should at least give you an idea of what is going on behind the scenes.",
        "output": "It looks like you're using a mingw compile of Git on windows (or possibly another one I haven't heard about). There are ways to debug this: I believe all of the http proxy work for git is done by curl. Set this environment variable before running git:",
        "answer": "It looks like you're using a mingw compile of Git on windows (or possibly another one I haven't heard about). There are ways to debug this: I believe all of the http proxy work for git is done by curl. Set this environment variable before running git: This should at least give you an idea of what is going on behind the scenes.",
        "summary": "It looks like you're using a mingw compile of Git on windows (or possibly another one I haven't heard about). There are ways to debug this: I believe all of the http proxy work for git is done by curl. Set this environment variable before running git:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>DATENAME</code> or <code>DATEPART</code>:",
        "output": "Use <code>DATENAME</code> or <code>DATEPART</code>:",
        "answer": "Use <code>DATENAME</code> or <code>DATEPART</code>:",
        "summary": "Use <code>DATENAME</code> or <code>DATEPART</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Edit: As of iOS 3.2, this functionality is built in. If you need to support pre-3.2, you can still use this solution.</strong> I created a simple module that extends <code>UILabel</code> and handles loading .ttf files. I released it opensource under the Apache license and put it on github Here. The important files are <code>FontLabel.h</code> and <code>FontLabel.m</code>. It uses some of the code from Genericrich's answer. Browse the source Here. OR <li>Copy your font file into resources <li>Add a key to your <code>Info.plist</code> file called UIAppFonts. (\"Fonts provided by application) <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the UIAppFonts array <li>Save <code>Info.plist</code> For More Information",
        "output": "<strong>Edit: As of iOS 3.2, this functionality is built in. If you need to support pre-3.2, you can still use this solution.</strong> I created a simple module that extends <code>UILabel</code> and handles loading .ttf files. <li>Copy your font file into resources <li>Add a key to your <code>Info.plist</code> file called UIAppFonts. (\"Fonts provided by application) <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the UIAppFonts array <li>Save <code>Info.plist</code> For More Information",
        "answer": "<strong>Edit: As of iOS 3.2, this functionality is built in. If you need to support pre-3.2, you can still use this solution.</strong> I created a simple module that extends <code>UILabel</code> and handles loading .ttf files. I released it opensource under the Apache license and put it on github Here. The important files are <code>FontLabel.h</code> and <code>FontLabel.m</code>. It uses some of the code from Genericrich's answer. Browse the source Here. OR <li>Copy your font file into resources <li>Add a key to your <code>Info.plist</code> file called UIAppFonts. (\"Fonts provided by application) <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the UIAppFonts array <li>Save <code>Info.plist</code> For More Information",
        "summary": "<strong>Edit: As of iOS 3.2, this functionality is built in. If you need to support pre-3.2, you can still use this solution.</strong> I created a simple module that extends <code>UILabel</code> and handles loading .ttf files. <li>Copy your font file into resources <li>Add a key to your <code>Info.plist</code> file called UIAppFonts. (\"Fonts provided by application) <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the UIAppFonts array <li>Save <code>Info.plist</code> For More Information"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Typically you see this error after you have already done a redirect and then try to output some more data to the output stream. In the cases where I have seen this in the past, it is often one of the filters that is trying to redirect the page, and then still forwards through to the servlet. The first step to diagnosing this problem is to ascertain exactly where the exception is being thrown. We are assuming that it is being thrown by the line BIGBLOCK But you might find that it is being thrown later in the code, where you are trying to output to the output stream after you have tried to do the forward. If it is coming from the above line, then it means that somewhere before this line you have either: <li>output data to the output stream, or <li>done another redirect beforehand. Good luck!",
        "output": "Typically you see this error after you have already done a redirect and then try to output some more data to the output stream. BIGBLOCK <li>output data to the output stream, or",
        "answer": "Typically you see this error after you have already done a redirect and then try to output some more data to the output stream. In the cases where I have seen this in the past, it is often one of the filters that is trying to redirect the page, and then still forwards through to the servlet. The first step to diagnosing this problem is to ascertain exactly where the exception is being thrown. We are assuming that it is being thrown by the line BIGBLOCK But you might find that it is being thrown later in the code, where you are trying to output to the output stream after you have tried to do the forward. If it is coming from the above line, then it means that somewhere before this line you have either: <li>output data to the output stream, or <li>done another redirect beforehand. Good luck!",
        "summary": "Typically you see this error after you have already done a redirect and then try to output some more data to the output stream. BIGBLOCK <li>output data to the output stream, or"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you are really about to work on multi-gigabyte text files then do not use PowerShell. Even if you find a way to read it faster processing of huge amount of lines will be slow in PowerShell anyway and you cannot avoid this. Even simple loops are expensive, say for 10 million iterations (quite real in your case) we have: BIGBLOCK <strong>UPDATE:</strong> If you are still not scared then try to use the .NET reader: BIGBLOCK <strong>UPDATE 2</strong> There are comments about possibly better / shorter code. There is nothing wrong with the original code with <code>for</code> and it is not pseudo-code. But the shorter (shortest?) variant of the reading loop is BIGBLOCK",
        "output": "If you are really about to work on multi-gigabyte text files then do not use PowerShell. Even if you find a way to read it faster processing of huge amount of lines will be slow in PowerShell anyway and you cannot avoid this. <strong>UPDATE:</strong> If you are still not scared then try to use the .NET reader: BIGBLOCK",
        "answer": "If you are really about to work on multi-gigabyte text files then do not use PowerShell. Even if you find a way to read it faster processing of huge amount of lines will be slow in PowerShell anyway and you cannot avoid this. Even simple loops are expensive, say for 10 million iterations (quite real in your case) we have: BIGBLOCK <strong>UPDATE:</strong> If you are still not scared then try to use the .NET reader: BIGBLOCK <strong>UPDATE 2</strong> There are comments about possibly better / shorter code. There is nothing wrong with the original code with <code>for</code> and it is not pseudo-code. But the shorter (shortest?) variant of the reading loop is BIGBLOCK",
        "summary": "If you are really about to work on multi-gigabyte text files then do not use PowerShell. Even if you find a way to read it faster processing of huge amount of lines will be slow in PowerShell anyway and you cannot avoid this. <strong>UPDATE:</strong> If you are still not scared then try to use the .NET reader: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Excellent solution! I noticed when I tried to implement it that if I returned a value in the success clause, it came back as undefined. I had to store it in a variable and return that variable. This is the method I came up with:",
        "output": "I noticed when I tried to implement it that if I returned a value in the success clause, it came back as undefined. I had to store it in a variable and return that variable.",
        "answer": "Excellent solution! I noticed when I tried to implement it that if I returned a value in the success clause, it came back as undefined. I had to store it in a variable and return that variable. This is the method I came up with:",
        "summary": "I noticed when I tried to implement it that if I returned a value in the success clause, it came back as undefined. I had to store it in a variable and return that variable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You call Library. Framework calls you.",
        "output": "You call Library. Framework calls you.",
        "answer": "You call Library. Framework calls you.",
        "summary": "You call Library. Framework calls you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes: implements <code>Runnable</code> is the preferred way to do it, IMO. You're not really specialising the thread's behaviour. You're just giving it something to run. That means composition is the <em>philosophically</em> \"purer\" way to go. In <em>practical</em> terms, it means you can implement <code>Runnable</code> and extend from another class as well.",
        "output": "Yes: implements <code>Runnable</code> is the preferred way to do it, IMO.",
        "answer": "Yes: implements <code>Runnable</code> is the preferred way to do it, IMO. You're not really specialising the thread's behaviour. You're just giving it something to run. That means composition is the <em>philosophically</em> \"purer\" way to go. In <em>practical</em> terms, it means you can implement <code>Runnable</code> and extend from another class as well.",
        "summary": "Yes: implements <code>Runnable</code> is the preferred way to do it, IMO."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Runnable because: <li>Leaves more flexibility for theRunnable implementation to extendanother class <li>Separates the code fromexecution <li>Allows you to run yourrunnable from a Thread Pool, theevent thread, or in any other way inthe future. Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.",
        "output": "Runnable because: <li>Leaves more flexibility for theRunnable implementation to extendanother class <li>Separates the code fromexecution <li>Allows you to run yourrunnable from a Thread Pool, theevent thread, or in any other way inthe future.",
        "answer": "Runnable because: <li>Leaves more flexibility for theRunnable implementation to extendanother class <li>Separates the code fromexecution <li>Allows you to run yourrunnable from a Thread Pool, theevent thread, or in any other way inthe future. Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.",
        "summary": "Runnable because: <li>Leaves more flexibility for theRunnable implementation to extendanother class <li>Separates the code fromexecution <li>Allows you to run yourrunnable from a Thread Pool, theevent thread, or in any other way inthe future."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you are using a strongly-typed dataset then you should do this: BIGBLOCK You are getting the error because a strongly-typed data set retrieves the underlying value and exposes the conversion through the property. For instance, here is essentially what is happening: BIGBLOCK The GetValue method is returning DBNull which cannot be converted to a short.",
        "output": "If you are using a strongly-typed dataset then you should do this: BIGBLOCK",
        "answer": "If you are using a strongly-typed dataset then you should do this: BIGBLOCK You are getting the error because a strongly-typed data set retrieves the underlying value and exposes the conversion through the property. For instance, here is essentially what is happening: BIGBLOCK The GetValue method is returning DBNull which cannot be converted to a short.",
        "summary": "If you are using a strongly-typed dataset then you should do this: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you use Express (high-performance, high-class web development for Node.js), you can do this: <strong>HTML:</strong> <strong>JavaScript:</strong> <strong>UPDATED on 1/June/2016:</strong> Method above is deprecated use now:",
        "output": "If you use Express (high-performance, high-class web development for Node.js), you can do this: <strong>HTML:</strong> <strong>JavaScript:</strong> <strong>UPDATED on 1/June/2016:</strong>",
        "answer": "If you use Express (high-performance, high-class web development for Node.js), you can do this: <strong>HTML:</strong> <strong>JavaScript:</strong> <strong>UPDATED on 1/June/2016:</strong> Method above is deprecated use now:",
        "summary": "If you use Express (high-performance, high-class web development for Node.js), you can do this: <strong>HTML:</strong> <strong>JavaScript:</strong> <strong>UPDATED on 1/June/2016:</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I forget where I saw this definition, but I think it's pretty nice. A library is a module that you call from your code, and a framework is a module which calls your code.",
        "output": "A library is a module that you call from your code, and a framework is a module which calls your code.",
        "answer": "I forget where I saw this definition, but I think it's pretty nice. A library is a module that you call from your code, and a framework is a module which calls your code.",
        "summary": "A library is a module that you call from your code, and a framework is a module which calls your code."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also, you can copy an item from the finder using command-C, jump into the Terminal (e.g. using Spotlight or QuickSilver) type 'cd ' and simply paste  with command-v",
        "output": "Also, you can copy an item from the finder using command-C, jump into the Terminal (e.g. using Spotlight or QuickSilver) type 'cd ' and simply paste  with command-v",
        "answer": "Also, you can copy an item from the finder using command-C, jump into the Terminal (e.g. using Spotlight or QuickSilver) type 'cd ' and simply paste  with command-v",
        "summary": "Also, you can copy an item from the finder using command-C, jump into the Terminal (e.g. using Spotlight or QuickSilver) type 'cd ' and simply paste  with command-v"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Though there have been considerable advancements in Java's GC technology, you still need to be mindful of your references. Numerous cases of seemingly trivial reference patterns that are actually rats nests under the hood come to mind. From your post it doesn't sound like you're trying to implement a reset method for the purpose of object reuse (true?). Are your objects holding any other type of resources that need to be cleaned up (i.e., streams that must be closed, any pooled or borrowed objects that must be returned)? If the only thing you're worried about is memory dealloc then I would reconsider my object structure and attempt to verify that my objects are self contained structures that will be cleaned up at GC time.",
        "output": "If the only thing you're worried about is memory dealloc then I would reconsider my object structure and attempt to verify that my objects are self contained structures that will be cleaned up at GC time.",
        "answer": "Though there have been considerable advancements in Java's GC technology, you still need to be mindful of your references. Numerous cases of seemingly trivial reference patterns that are actually rats nests under the hood come to mind. From your post it doesn't sound like you're trying to implement a reset method for the purpose of object reuse (true?). Are your objects holding any other type of resources that need to be cleaned up (i.e., streams that must be closed, any pooled or borrowed objects that must be returned)? If the only thing you're worried about is memory dealloc then I would reconsider my object structure and attempt to verify that my objects are self contained structures that will be cleaned up at GC time.",
        "summary": "If the only thing you're worried about is memory dealloc then I would reconsider my object structure and attempt to verify that my objects are self contained structures that will be cleaned up at GC time."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yeah, you'd need to have a javascript function triggered by an onclick that does an AJAX load of a page and then returns false, that way they won't be redirected in the browser. You could use the following in jQuery, if that's acceptable for your project: BIGBLOCK You could also do a post-back if you need to use form values (use the $.post() method).",
        "output": "You could use the following in jQuery, if that's acceptable for your project: BIGBLOCK",
        "answer": "Yeah, you'd need to have a javascript function triggered by an onclick that does an AJAX load of a page and then returns false, that way they won't be redirected in the browser. You could use the following in jQuery, if that's acceptable for your project: BIGBLOCK You could also do a post-back if you need to use form values (use the $.post() method).",
        "summary": "You could use the following in jQuery, if that's acceptable for your project: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You do not have <code>Gemfile</code> in a directory where you run that command.<code>Gemfile</code> is a file containing your <code>gem</code> settings for a <em>current</em> program.",
        "output": "You do not have <code>Gemfile</code> in a directory where you run that command.<code>Gemfile</code> is a file containing your <code>gem</code> settings for a <em>current</em> program.",
        "answer": "You do not have <code>Gemfile</code> in a directory where you run that command.<code>Gemfile</code> is a file containing your <code>gem</code> settings for a <em>current</em> program.",
        "summary": "You do not have <code>Gemfile</code> in a directory where you run that command.<code>Gemfile</code> is a file containing your <code>gem</code> settings for a <em>current</em> program."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n \"\\\\s+\" should do the trick",
        "output": "\"\\\\s+\" should do the trick",
        "answer": "\"\\\\s+\" should do the trick",
        "summary": "\"\\\\s+\" should do the trick"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n mod means the reaminder when divided by. So 2 divided by 4 is 0 with 2 remaining. Therefore 2 mod 4 is 2.",
        "output": "So 2 divided by 4 is 0 with 2 remaining. Therefore 2 mod 4 is 2.",
        "answer": "mod means the reaminder when divided by. So 2 divided by 4 is 0 with 2 remaining. Therefore 2 mod 4 is 2.",
        "summary": "So 2 divided by 4 is 0 with 2 remaining. Therefore 2 mod 4 is 2."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The only way to know is to read your implementation's documentation. In the C standard, section 6.10.2, paragraphs 2 to 4 state: A preprocessing directive of the form searches a sequence of implementation-defined places for a header identified uniquely by the specified sequence between the <code>&lt;</code> and <code>&gt;</code> delimiters, and causes the replacement of that directive by the entire contents of the header. How the places are specified or the header identified is implementation-defined. A preprocessing directive of the form causes the replacement of that directive by the entire contents of the source file identified by the specified sequence between the <code>\"</code> delimiters. The named source file is searched for in an implementation-defined manner. If this search is not supported, or if the search fails, the directive is reprocessed as if it read with the identical contained sequence (including <code>&gt;</code> characters, if any) from the original   directive. A preprocessing directive of the form (that does not match one of the two previous forms) is permitted. The preprocessing tokens after <code>include</code> in the directive are processed just as in normal text. (Each identifier currently defined as a macro name is replaced by its replacement list of preprocessing tokens.) The directive resulting after all replacements shall match one of the two previous forms. The method by which a sequence of preprocessing tokens between a <code>&lt;</code> and a <code>&gt;</code> preprocessing token pair or a pair of <code>\"</code> characters is combined into a single header name preprocessing token is implementation-defined.   Definitions: h-char: any member of the source character set except the new-line character and <code>&gt;</code> q-char: any member of the source character set except the new-line character and <code>\"</code>",
        "output": "A preprocessing directive of the form searches a sequence of implementation-defined places for a header identified uniquely by the specified sequence between the <code>&lt;</code> and <code>&gt;</code> delimiters, and causes the replacement of that directive by the entire contents of the header. A preprocessing directive of the form causes the replacement of that directive by the entire contents of the source file identified by the specified sequence between the <code>\"</code> delimiters. If this search is not supported, or if the search fails, the directive is reprocessed as if it read with the identical contained sequence (including <code>&gt;</code> characters, if any) from the original   directive.",
        "answer": "The only way to know is to read your implementation's documentation. In the C standard, section 6.10.2, paragraphs 2 to 4 state: A preprocessing directive of the form searches a sequence of implementation-defined places for a header identified uniquely by the specified sequence between the <code>&lt;</code> and <code>&gt;</code> delimiters, and causes the replacement of that directive by the entire contents of the header. How the places are specified or the header identified is implementation-defined. A preprocessing directive of the form causes the replacement of that directive by the entire contents of the source file identified by the specified sequence between the <code>\"</code> delimiters. The named source file is searched for in an implementation-defined manner. If this search is not supported, or if the search fails, the directive is reprocessed as if it read with the identical contained sequence (including <code>&gt;</code> characters, if any) from the original   directive. A preprocessing directive of the form (that does not match one of the two previous forms) is permitted. The preprocessing tokens after <code>include</code> in the directive are processed just as in normal text. (Each identifier currently defined as a macro name is replaced by its replacement list of preprocessing tokens.) The directive resulting after all replacements shall match one of the two previous forms. The method by which a sequence of preprocessing tokens between a <code>&lt;</code> and a <code>&gt;</code> preprocessing token pair or a pair of <code>\"</code> characters is combined into a single header name preprocessing token is implementation-defined.   Definitions: h-char: any member of the source character set except the new-line character and <code>&gt;</code> q-char: any member of the source character set except the new-line character and <code>\"</code>",
        "summary": "A preprocessing directive of the form searches a sequence of implementation-defined places for a header identified uniquely by the specified sequence between the <code>&lt;</code> and <code>&gt;</code> delimiters, and causes the replacement of that directive by the entire contents of the header. A preprocessing directive of the form causes the replacement of that directive by the entire contents of the source file identified by the specified sequence between the <code>\"</code> delimiters. If this search is not supported, or if the search fails, the directive is reprocessed as if it read with the identical contained sequence (including <code>&gt;</code> characters, if any) from the original   directive."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A daemon thread is a thread that does not prevent the JVM from exiting when the program finishes but the thread is still running. An example for a daemon thread is the garbage collection. You can use the <code>setDaemon(boolean)</code> method to change the <code>Thread</code> daemon properties before the thread starts.",
        "output": "A daemon thread is a thread that does not prevent the JVM from exiting when the program finishes but the thread is still running.",
        "answer": "A daemon thread is a thread that does not prevent the JVM from exiting when the program finishes but the thread is still running. An example for a daemon thread is the garbage collection. You can use the <code>setDaemon(boolean)</code> method to change the <code>Thread</code> daemon properties before the thread starts.",
        "summary": "A daemon thread is a thread that does not prevent the JVM from exiting when the program finishes but the thread is still running."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Why not iteratively divide by 2? I agree that this isn't the fastest, but \"best\" is somewhat ambiguous. I'd argue though that \"best\" should have an element of clarity",
        "output": "Why not iteratively divide by 2?",
        "answer": "Why not iteratively divide by 2? I agree that this isn't the fastest, but \"best\" is somewhat ambiguous. I'd argue though that \"best\" should have an element of clarity",
        "summary": "Why not iteratively divide by 2?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You must understand the difference between a class and an instance of that class. If you see a car on the street, you know immediately that it's a car even if you can't see which model or type. This is because you compare what you see with the class \"car\". The class contains which is similar to all cars. Think of it as a template or an idea. At the same time, the car you see is an instance of the class \"car\" since it has all the properties which you expect: There is someone driving it, it has an engine, wheels. So the class says \"all cars have a color\" and the instance says \"this specific car is red\". In the OO world, you define the class and inside the class, you define a field of type <code>Color</code>. When the class is instantiated (when you create a specific instance), memory is reserved for the color and you can give this specific instance a color. Since these attributes are specific, they are non-static. Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. For methods, this usually are global helper methods (like <code>Integer.parseInt()</code>). For fields, it's usually constants (like car types, i.e. something where you have a limited set which doesn't change often). To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want). In your case, try this code as a starting block: The new <code>main()</code> method creates an instance of the class it contains (sounds strange but since <code>main()</code> is created with the class instead of with the instance, it can do this) and then calls an instance method (<code>run()</code>).",
        "output": "Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want).",
        "answer": "You must understand the difference between a class and an instance of that class. If you see a car on the street, you know immediately that it's a car even if you can't see which model or type. This is because you compare what you see with the class \"car\". The class contains which is similar to all cars. Think of it as a template or an idea. At the same time, the car you see is an instance of the class \"car\" since it has all the properties which you expect: There is someone driving it, it has an engine, wheels. So the class says \"all cars have a color\" and the instance says \"this specific car is red\". In the OO world, you define the class and inside the class, you define a field of type <code>Color</code>. When the class is instantiated (when you create a specific instance), memory is reserved for the color and you can give this specific instance a color. Since these attributes are specific, they are non-static. Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. For methods, this usually are global helper methods (like <code>Integer.parseInt()</code>). For fields, it's usually constants (like car types, i.e. something where you have a limited set which doesn't change often). To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want). In your case, try this code as a starting block: The new <code>main()</code> method creates an instance of the class it contains (sounds strange but since <code>main()</code> is created with the class instead of with the instance, it can do this) and then calls an instance method (<code>run()</code>).",
        "summary": "Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>console.log</code> to add debugging information to your page. Many people use <code>alert(hasNinjas)</code> for this purpose but <code>console.log(hasNinjas)</code> is easier to work with. Using an alert pop-ups up a modal dialog box that blocks the user interface. Edit: I agree with Baptiste Pernet and Jan HanÃ¨ÂÂ·iÃ¨Â?that it is a very good idea to check if <code>window.console</code> is defined first so that your code doesn't break if there is no console available.",
        "output": "Use <code>console.log</code> to add debugging information to your page.",
        "answer": "Use <code>console.log</code> to add debugging information to your page. Many people use <code>alert(hasNinjas)</code> for this purpose but <code>console.log(hasNinjas)</code> is easier to work with. Using an alert pop-ups up a modal dialog box that blocks the user interface. Edit: I agree with Baptiste Pernet and Jan HanÃ¨ÂÂ·iÃ¨Â?that it is a very good idea to check if <code>window.console</code> is defined first so that your code doesn't break if there is no console available.",
        "summary": "Use <code>console.log</code> to add debugging information to your page."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's the trick: First, set your vi(m) session to allow pattern matching with special characters (ie: newline). It's probably worth putting this line in your .vimrc or .exrc file. Next, do: To get the <code>^M</code> character, type Control-v and hit Enter. Under Windows, do Control-q, Enter. The only way I can remember these is by remembering how little sense they make: A: <em>What would be the worst control-character to use to represent a newline?</em> B: <em>Either <code>q</code> (because it usually means \"Quit\") or <code>v</code> because it would be so easy to type Control-c by mistake and kill the editor.</em> A: <em>Make it so.</em>",
        "output": "First, set your vi(m) session to allow pattern matching with special characters (ie: newline). Next, do: To get the <code>^M</code> character, type Control-v and hit Enter. Under Windows, do Control-q, Enter. B: <em>Either <code>q</code> (because it usually means \"Quit\") or <code>v</code> because it would be so easy to type Control-c by mistake and kill the editor.</em>",
        "answer": "Here's the trick: First, set your vi(m) session to allow pattern matching with special characters (ie: newline). It's probably worth putting this line in your .vimrc or .exrc file. Next, do: To get the <code>^M</code> character, type Control-v and hit Enter. Under Windows, do Control-q, Enter. The only way I can remember these is by remembering how little sense they make: A: <em>What would be the worst control-character to use to represent a newline?</em> B: <em>Either <code>q</code> (because it usually means \"Quit\") or <code>v</code> because it would be so easy to type Control-c by mistake and kill the editor.</em> A: <em>Make it so.</em>",
        "summary": "First, set your vi(m) session to allow pattern matching with special characters (ie: newline). Next, do: To get the <code>^M</code> character, type Control-v and hit Enter. Under Windows, do Control-q, Enter. B: <em>Either <code>q</code> (because it usually means \"Quit\") or <code>v</code> because it would be so easy to type Control-c by mistake and kill the editor.</em>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It runs successfully the first time,   but if I run it again, I keep getting   a System.OutOfMemoryException. What   are some reasons this could be   happening? Regardless of what the others have said, the error has nothing to do with forgetting to dispose your DBCommand or DBConnection, and you will not fix your error by disposing of either of them. The error has everything to do with your dataset which contains nearly 600,000 rows of data. Apparently your dataset consumes more than 50% of the available memory on your machine. Clearly, you'll run out of memory when you return another dataset of the same size before the first one has been garbage collected. Simple as that. You can remedy this problem in a few ways: Consider returning fewer records. I personally can't imagine a time when returning 600K records has ever been useful to a user. To minimize the records returned, try: Limiting your query to the first 1000 records. If there are more than 1000 results returned from the query, inform the user to narrow their search results. If your users really insist on seeing that much data at once, try paging the data. Remember: Google never shows you all 22 bajillion results of a search at once, it shows you 20 or so records at a time. Google probably doesn't hold all 22 bajillion results in memory at once, it probably finds its more memory efficient to requery its database to generate a new page. If you just need to iterate through the data and you don't need random access, try returning a datareader instead. A datareader only loads one record into memory at a time. If none of those are an option, then you need to force .NET to free up the memory used by the dataset before calling your method using one of these methods: Remove all references to your old dataset. Anything holding on to a refenence of your dataset will prevent it from being reclaimed by memory. If you can't null all the references to your dataset, clear all of the rows from the dataset and any objects bound to those rows instead. This removes references to the datarows and allows them to be eaten by the garbage collector. I don't believe you'll need to call <code>GC.Collect()</code> to force a gen cycle. Not only is it generally a bad idea to call <code>GC.Collect()</code>, because sufficient memory pressure will cause .NET invoke the garbage collector on its own. Note: calling Dispose on your dataset does not free any memory, nor does it invoke the garbage collector, nor does it remove a reference to your dataset. Dispose is used to clean up unmanaged resources, but the DataSet does not have any unmanaged resources. It only implements IDispoable because it inherents from MarshalByValueComponent, so the Dispose method on the dataset is pretty much useless.",
        "output": "Regardless of what the others have said, the error has nothing to do with forgetting to dispose your DBCommand or DBConnection, and you will not fix your error by disposing of either of them. Apparently your dataset consumes more than 50% of the available memory on your machine. Clearly, you'll run out of memory when you return another dataset of the same size before the first one has been garbage collected. You can remedy this problem in a few ways:",
        "answer": "It runs successfully the first time,   but if I run it again, I keep getting   a System.OutOfMemoryException. What   are some reasons this could be   happening? Regardless of what the others have said, the error has nothing to do with forgetting to dispose your DBCommand or DBConnection, and you will not fix your error by disposing of either of them. The error has everything to do with your dataset which contains nearly 600,000 rows of data. Apparently your dataset consumes more than 50% of the available memory on your machine. Clearly, you'll run out of memory when you return another dataset of the same size before the first one has been garbage collected. Simple as that. You can remedy this problem in a few ways: Consider returning fewer records. I personally can't imagine a time when returning 600K records has ever been useful to a user. To minimize the records returned, try: Limiting your query to the first 1000 records. If there are more than 1000 results returned from the query, inform the user to narrow their search results. If your users really insist on seeing that much data at once, try paging the data. Remember: Google never shows you all 22 bajillion results of a search at once, it shows you 20 or so records at a time. Google probably doesn't hold all 22 bajillion results in memory at once, it probably finds its more memory efficient to requery its database to generate a new page. If you just need to iterate through the data and you don't need random access, try returning a datareader instead. A datareader only loads one record into memory at a time. If none of those are an option, then you need to force .NET to free up the memory used by the dataset before calling your method using one of these methods: Remove all references to your old dataset. Anything holding on to a refenence of your dataset will prevent it from being reclaimed by memory. If you can't null all the references to your dataset, clear all of the rows from the dataset and any objects bound to those rows instead. This removes references to the datarows and allows them to be eaten by the garbage collector. I don't believe you'll need to call <code>GC.Collect()</code> to force a gen cycle. Not only is it generally a bad idea to call <code>GC.Collect()</code>, because sufficient memory pressure will cause .NET invoke the garbage collector on its own. Note: calling Dispose on your dataset does not free any memory, nor does it invoke the garbage collector, nor does it remove a reference to your dataset. Dispose is used to clean up unmanaged resources, but the DataSet does not have any unmanaged resources. It only implements IDispoable because it inherents from MarshalByValueComponent, so the Dispose method on the dataset is pretty much useless.",
        "summary": "Regardless of what the others have said, the error has nothing to do with forgetting to dispose your DBCommand or DBConnection, and you will not fix your error by disposing of either of them. Apparently your dataset consumes more than 50% of the available memory on your machine. Clearly, you'll run out of memory when you return another dataset of the same size before the first one has been garbage collected. You can remedy this problem in a few ways:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The problem is in your JSP, most likely you are calling a method on an object that is null at runtime. It is happening in the _jspInit() call, which is a little more unusual... the problem code is probably a method declaration like <code>&lt;%! %&gt;</code> Update: I've only reproduced this by overriding the _jspInit() method. Is that what you're doing? If so, it's not recommended - that's why it starts with an _.",
        "output": "The problem is in your JSP, most likely you are calling a method on an object that is null at runtime. Is that what you're doing? If so, it's not recommended - that's why it starts with an _.",
        "answer": "The problem is in your JSP, most likely you are calling a method on an object that is null at runtime. It is happening in the _jspInit() call, which is a little more unusual... the problem code is probably a method declaration like <code>&lt;%! %&gt;</code> Update: I've only reproduced this by overriding the _jspInit() method. Is that what you're doing? If so, it's not recommended - that's why it starts with an _.",
        "summary": "The problem is in your JSP, most likely you are calling a method on an object that is null at runtime. Is that what you're doing? If so, it's not recommended - that's why it starts with an _."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <li>Improper use of <strong>eval</strong> opens up yourcode for injection attacks <li><strong>Debugging</strong> can be more challenging(no line numbers, etc.) <li>eval'd code executes slower (no opportunity to compile/cache eval'd code) Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.",
        "output": "<li>Improper use of <strong>eval</strong> opens up yourcode for injection attacks <li><strong>Debugging</strong> can be more challenging(no line numbers, etc.) <li>eval'd code executes slower (no opportunity to compile/cache eval'd code)",
        "answer": "<li>Improper use of <strong>eval</strong> opens up yourcode for injection attacks <li><strong>Debugging</strong> can be more challenging(no line numbers, etc.) <li>eval'd code executes slower (no opportunity to compile/cache eval'd code) Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.",
        "summary": "<li>Improper use of <strong>eval</strong> opens up yourcode for injection attacks <li><strong>Debugging</strong> can be more challenging(no line numbers, etc.) <li>eval'd code executes slower (no opportunity to compile/cache eval'd code)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The code works as best I can tell. I would fire up Sysinternals process explorer and find out what is holding the file open. It might very well be Visual Studio.",
        "output": "The code works as best I can tell.",
        "answer": "The code works as best I can tell. I would fire up Sysinternals process explorer and find out what is holding the file open. It might very well be Visual Studio.",
        "summary": "The code works as best I can tell."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They're not synonyms - <code>display: none</code> removes the element from the flow of the page, and rest of the page flows as if it weren't there. <code>visibility: hidden</code> hides the element from view but not the page flow, leaving space for it on the page.",
        "output": "They're not synonyms - <code>display: none</code> removes the element from the flow of the page, and rest of the page flows as if it weren't there. <code>visibility: hidden</code> hides the element from view but not the page flow, leaving space for it on the page.",
        "answer": "They're not synonyms - <code>display: none</code> removes the element from the flow of the page, and rest of the page flows as if it weren't there. <code>visibility: hidden</code> hides the element from view but not the page flow, leaving space for it on the page.",
        "summary": "They're not synonyms - <code>display: none</code> removes the element from the flow of the page, and rest of the page flows as if it weren't there. <code>visibility: hidden</code> hides the element from view but not the page flow, leaving space for it on the page."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Why not just do it in css? Take out the 'href' attribute in your anchor tag BIGBLOCK In your css, BIGBLOCK",
        "output": "In your css, BIGBLOCK",
        "answer": "Why not just do it in css? Take out the 'href' attribute in your anchor tag BIGBLOCK In your css, BIGBLOCK",
        "summary": "In your css, BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just for the record, another approach is to use the prime decomposition. If every factor of the decomposition is even, then the number is a perfect square. So what you want is to see if a number can be decomposed as a product of squares of prime numbers. Of course, you don't need to obtain such a decomposition, just to see if it exists. First build a table of squares of prime numbers which are lower than 2^32. This is far smaller than a table of all integers up to this limit. A solution would then be like this: BIGBLOCK I guess it's a bit cryptic. What it does is checking in every step that the square of a prime number divide the input number. If it does then it divides the number by the square as long as it is possible, to remove this square from the prime decomposition.If by this process, we came to 1, then the input number was a decomposition of square of prime numbers. If the square becomes larger than the number itself, then there is no way this square, or any larger squares, can divide it, so the number can not be a decomposition of squares of prime numbers. Given nowadays' sqrt done in hardware and the need to compute prime numbers here, I guess this solution is way slower. But it should give better results than solution with sqrt which won't work over 2^54, as says mrzl in his answer.",
        "output": "If every factor of the decomposition is even, then the number is a perfect square. First build a table of squares of prime numbers which are lower than 2^32. A solution would then be like this: BIGBLOCK Given nowadays' sqrt done in hardware and the need to compute prime numbers here, I guess this solution is way slower. But it should give better results than solution with sqrt which won't work over 2^54, as says mrzl in his answer.",
        "answer": "Just for the record, another approach is to use the prime decomposition. If every factor of the decomposition is even, then the number is a perfect square. So what you want is to see if a number can be decomposed as a product of squares of prime numbers. Of course, you don't need to obtain such a decomposition, just to see if it exists. First build a table of squares of prime numbers which are lower than 2^32. This is far smaller than a table of all integers up to this limit. A solution would then be like this: BIGBLOCK I guess it's a bit cryptic. What it does is checking in every step that the square of a prime number divide the input number. If it does then it divides the number by the square as long as it is possible, to remove this square from the prime decomposition.If by this process, we came to 1, then the input number was a decomposition of square of prime numbers. If the square becomes larger than the number itself, then there is no way this square, or any larger squares, can divide it, so the number can not be a decomposition of squares of prime numbers. Given nowadays' sqrt done in hardware and the need to compute prime numbers here, I guess this solution is way slower. But it should give better results than solution with sqrt which won't work over 2^54, as says mrzl in his answer.",
        "summary": "If every factor of the decomposition is even, then the number is a perfect square. First build a table of squares of prime numbers which are lower than 2^32. A solution would then be like this: BIGBLOCK Given nowadays' sqrt done in hardware and the need to compute prime numbers here, I guess this solution is way slower. But it should give better results than solution with sqrt which won't work over 2^54, as says mrzl in his answer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When using ADO.NET you can use the keywork for things like your connection object or reader object. That way when the code block completes it will automatically dispose of your connection.",
        "output": "When using ADO.NET you can use the keywork for things like your connection object or reader object.",
        "answer": "When using ADO.NET you can use the keywork for things like your connection object or reader object. That way when the code block completes it will automatically dispose of your connection.",
        "summary": "When using ADO.NET you can use the keywork for things like your connection object or reader object."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n extern \"C\" makes a function-name in C++ have 'C' linkage (compiler does not mangle the name) so that client C code can link to (i.e use) your function using a 'C' compatible header file that contains just the declaration of your function. Your function definition is contained in a binary format (that was compiled by your C++ compiler) that the client 'C' linker will then link to using the 'C' name. Since C++ has overloading of function names and C does not, the C++ compiler cannot just use the function name as a unique id to link to, so it mangles the name by adding information about the arguments. A C compiler does not need to mangle the name since you can not overload function names in C.  When you state that a function has extern \"C\" linkage in C++, the C++ compiler does not add argument/parameter type information to the name used for linkage. Just so you know, you can specify \"C\" linkage to each individual declaration/definition explicitly or use a block to group a sequence of declarations/definitions to have a certain linkage: If you care about the technicalities, they are listed in section 7.5 of the C++03 standard, here is a brief summary (with emphasis on extern \"C\"): <li>extern \"C\" is a linkage-specification <li>Every compiler is <em>required</em> to provide \"C\" linkage <li>a linkage specification shall occur only in namespace scope <li> all function types, function names and variable names have a language linkage  See Richard's Comment: Only function names and variable names with external linkage have a language linkage <li>two function types with distinct language linkages are distinct types even if otherwise identical <li>linkage specs nest, inner one determines the final linkage <li>extern \"C\" is ignored for class members <li>at most one function with a particular name can have \"C\" linkage (regardless of namespace) <li> extern \"C\" forces a function to have external linkage (cannot make it static)   See Richard's comment:    'static' inside 'extern \"C\"' is valid; an entity so declared has internal linkage, and so does not have a language linkage <li>Linkage from C++ to objects defined in other languages and to objects defined in C++ from other languages is implementation-defined and language-dependent. Only where the object layout strategies of two language implementations are similar enough can such linkage be achieved",
        "output": "extern \"C\" makes a function-name in C++ have 'C' linkage (compiler does not mangle the name) so that client C code can link to (i.e use) your function using a 'C' compatible header file that contains just the declaration of your function. Since C++ has overloading of function names and C does not, the C++ compiler cannot just use the function name as a unique id to link to, so it mangles the name by adding information about the arguments. If you care about the technicalities, they are listed in section 7.5 of the C++03 standard, here is a brief summary (with emphasis on extern \"C\"): <li>extern \"C\" is a linkage-specification <li>Every compiler is <em>required</em> to provide \"C\" linkage <li>a linkage specification shall occur only in namespace scope <li> all function types, function names and variable names have a language linkage  See Richard's Comment: Only function names and variable names with external linkage have a language linkage <li>two function types with distinct language linkages are distinct types even if otherwise identical <li>linkage specs nest, inner one determines the final linkage <li>extern \"C\" is ignored for class members <li>at most one function with a particular name can have \"C\" linkage (regardless of namespace) <li> extern \"C\" forces a function to have external linkage (cannot make it static)   See Richard's comment:    'static' inside 'extern \"C\"' is valid; an entity so declared has internal linkage, and so does not have a language linkage <li>Linkage from C++ to objects defined in other languages and to objects defined in C++ from other languages is implementation-defined and language-dependent.",
        "answer": "extern \"C\" makes a function-name in C++ have 'C' linkage (compiler does not mangle the name) so that client C code can link to (i.e use) your function using a 'C' compatible header file that contains just the declaration of your function. Your function definition is contained in a binary format (that was compiled by your C++ compiler) that the client 'C' linker will then link to using the 'C' name. Since C++ has overloading of function names and C does not, the C++ compiler cannot just use the function name as a unique id to link to, so it mangles the name by adding information about the arguments. A C compiler does not need to mangle the name since you can not overload function names in C.  When you state that a function has extern \"C\" linkage in C++, the C++ compiler does not add argument/parameter type information to the name used for linkage. Just so you know, you can specify \"C\" linkage to each individual declaration/definition explicitly or use a block to group a sequence of declarations/definitions to have a certain linkage: If you care about the technicalities, they are listed in section 7.5 of the C++03 standard, here is a brief summary (with emphasis on extern \"C\"): <li>extern \"C\" is a linkage-specification <li>Every compiler is <em>required</em> to provide \"C\" linkage <li>a linkage specification shall occur only in namespace scope <li> all function types, function names and variable names have a language linkage  See Richard's Comment: Only function names and variable names with external linkage have a language linkage <li>two function types with distinct language linkages are distinct types even if otherwise identical <li>linkage specs nest, inner one determines the final linkage <li>extern \"C\" is ignored for class members <li>at most one function with a particular name can have \"C\" linkage (regardless of namespace) <li> extern \"C\" forces a function to have external linkage (cannot make it static)   See Richard's comment:    'static' inside 'extern \"C\"' is valid; an entity so declared has internal linkage, and so does not have a language linkage <li>Linkage from C++ to objects defined in other languages and to objects defined in C++ from other languages is implementation-defined and language-dependent. Only where the object layout strategies of two language implementations are similar enough can such linkage be achieved",
        "summary": "extern \"C\" makes a function-name in C++ have 'C' linkage (compiler does not mangle the name) so that client C code can link to (i.e use) your function using a 'C' compatible header file that contains just the declaration of your function. Since C++ has overloading of function names and C does not, the C++ compiler cannot just use the function name as a unique id to link to, so it mangles the name by adding information about the arguments. If you care about the technicalities, they are listed in section 7.5 of the C++03 standard, here is a brief summary (with emphasis on extern \"C\"): <li>extern \"C\" is a linkage-specification <li>Every compiler is <em>required</em> to provide \"C\" linkage <li>a linkage specification shall occur only in namespace scope <li> all function types, function names and variable names have a language linkage  See Richard's Comment: Only function names and variable names with external linkage have a language linkage <li>two function types with distinct language linkages are distinct types even if otherwise identical <li>linkage specs nest, inner one determines the final linkage <li>extern \"C\" is ignored for class members <li>at most one function with a particular name can have \"C\" linkage (regardless of namespace) <li> extern \"C\" forces a function to have external linkage (cannot make it static)   See Richard's comment:    'static' inside 'extern \"C\"' is valid; an entity so declared has internal linkage, and so does not have a language linkage <li>Linkage from C++ to objects defined in other languages and to objects defined in C++ from other languages is implementation-defined and language-dependent."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, it is not possible to have fullscreen video in html 5. If you want to know reasons, you're lucky because the argument battle for fullscreen is fought right now. See WHATWG mailing list and look for the word \"video\". I personally hope that they provide fullscreen API in HTML 5.",
        "output": "No, it is not possible to have fullscreen video in html 5. See WHATWG mailing list and look for the word \"video\".",
        "answer": "No, it is not possible to have fullscreen video in html 5. If you want to know reasons, you're lucky because the argument battle for fullscreen is fought right now. See WHATWG mailing list and look for the word \"video\". I personally hope that they provide fullscreen API in HTML 5.",
        "summary": "No, it is not possible to have fullscreen video in html 5. See WHATWG mailing list and look for the word \"video\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>Str()</code> Function. It takes three arguments(the number, the number total characters to display, and the number of decimal places to display displays:  '   12345.679'  ( 3 spaces, 5 digits 12345, a decimal point, and three decimal digits (679). - it rounds if it has to truncate, (unless the integer part is too large for the total size, in which case asterisks are displayed instead.) for a Total of 12 characters, with 3 to the right of decimal point.",
        "output": "Use <code>Str()</code> Function. It takes three arguments(the number, the number total characters to display, and the number of decimal places to display",
        "answer": "Use <code>Str()</code> Function. It takes three arguments(the number, the number total characters to display, and the number of decimal places to display displays:  '   12345.679'  ( 3 spaces, 5 digits 12345, a decimal point, and three decimal digits (679). - it rounds if it has to truncate, (unless the integer part is too large for the total size, in which case asterisks are displayed instead.) for a Total of 12 characters, with 3 to the right of decimal point.",
        "summary": "Use <code>Str()</code> Function. It takes three arguments(the number, the number total characters to display, and the number of decimal places to display"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When you use ANNs, you rarely know about the internals of the systems you want to learn. Some things cannot be learned without a bias. E.g., have a look at the following data: (0, 1), (1, 1), (2, 1), basically a function that maps any x to 1. If you have a one layered network (or a linear mapping), you cannot find a solution. However, if you have a bias it's trivial! In an ideal setting, a bias could also map all points to the mean of the target points and let the hidden neurons model the differences from that point.",
        "output": "Some things cannot be learned without a bias. In an ideal setting, a bias could also map all points to the mean of the target points and let the hidden neurons model the differences from that point.",
        "answer": "When you use ANNs, you rarely know about the internals of the systems you want to learn. Some things cannot be learned without a bias. E.g., have a look at the following data: (0, 1), (1, 1), (2, 1), basically a function that maps any x to 1. If you have a one layered network (or a linear mapping), you cannot find a solution. However, if you have a bias it's trivial! In an ideal setting, a bias could also map all points to the mean of the target points and let the hidden neurons model the differences from that point.",
        "summary": "Some things cannot be learned without a bias. In an ideal setting, a bias could also map all points to the mean of the target points and let the hidden neurons model the differences from that point."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In .NET, the difference between <code>Dictionary&lt;,&gt;</code> and <code>HashTable</code> is primarily that the former  is a generic type, so you get all the benefits of generics in terms of static type checking (and reduced boxing, but this isn't as big as people tend to think in terms of performance - there is a definite memory cost to boxing, though).",
        "output": "In .NET, the difference between <code>Dictionary&lt;,&gt;</code> and <code>HashTable</code> is primarily that the former  is a generic type, so you get all the benefits of generics in terms of static type checking (and reduced boxing, but this isn't as big as people tend to think in terms of performance - there is a definite memory cost to boxing, though).",
        "answer": "In .NET, the difference between <code>Dictionary&lt;,&gt;</code> and <code>HashTable</code> is primarily that the former  is a generic type, so you get all the benefits of generics in terms of static type checking (and reduced boxing, but this isn't as big as people tend to think in terms of performance - there is a definite memory cost to boxing, though).",
        "summary": "In .NET, the difference between <code>Dictionary&lt;,&gt;</code> and <code>HashTable</code> is primarily that the former  is a generic type, so you get all the benefits of generics in terms of static type checking (and reduced boxing, but this isn't as big as people tend to think in terms of performance - there is a definite memory cost to boxing, though)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Basically they fake publicly accessible data attributes, which Ruby doesn't have.",
        "output": "Basically they fake publicly accessible data attributes, which Ruby doesn't have.",
        "answer": "Basically they fake publicly accessible data attributes, which Ruby doesn't have.",
        "summary": "Basically they fake publicly accessible data attributes, which Ruby doesn't have."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Why do you want to load a 4+ GB file into memory? Even if you find a text editor that can do that, does your machine have 4 GB of memory? And unless it has a lot more than 4 GB in physical memory, your machine will slow down a lot and go swap file crazy. So why do you want a 4+ GB file? If you want to transform it, or do a search and replace, you may be better off writing a small quick program to do it.",
        "output": "And unless it has a lot more than 4 GB in physical memory, your machine will slow down a lot and go swap file crazy. If you want to transform it, or do a search and replace, you may be better off writing a small quick program to do it.",
        "answer": "Why do you want to load a 4+ GB file into memory? Even if you find a text editor that can do that, does your machine have 4 GB of memory? And unless it has a lot more than 4 GB in physical memory, your machine will slow down a lot and go swap file crazy. So why do you want a 4+ GB file? If you want to transform it, or do a search and replace, you may be better off writing a small quick program to do it.",
        "summary": "And unless it has a lot more than 4 GB in physical memory, your machine will slow down a lot and go swap file crazy. If you want to transform it, or do a search and replace, you may be better off writing a small quick program to do it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Objects will be cleaned up when they are no longer being used and when the garbage collector sees fit. Sometimes, you may need to set an object to <code>null</code> in order to make it go out of scope (such as a static field whose value you no longer need), but overall there is usually no need to set to <code>null</code>. Regarding disposing objects, I agree with @Andre. If the object is <code>IDisposable</code> it is <strong>a good idea to dispose it</strong> when you no longer need it, especially if the object uses unmanaged resources. Not disposing unmanaged resources will <strong>lead to memory leaks</strong>. You can use the <code>using</code> statement to automatically dispose an object once your program leaves the scope of the <code>using</code> statement. BIGBLOCK Which is functionally equivalent to: BIGBLOCK",
        "output": "If the object is <code>IDisposable</code> it is <strong>a good idea to dispose it</strong> when you no longer need it, especially if the object uses unmanaged resources. Not disposing unmanaged resources will <strong>lead to memory leaks</strong>. BIGBLOCK BIGBLOCK",
        "answer": "Objects will be cleaned up when they are no longer being used and when the garbage collector sees fit. Sometimes, you may need to set an object to <code>null</code> in order to make it go out of scope (such as a static field whose value you no longer need), but overall there is usually no need to set to <code>null</code>. Regarding disposing objects, I agree with @Andre. If the object is <code>IDisposable</code> it is <strong>a good idea to dispose it</strong> when you no longer need it, especially if the object uses unmanaged resources. Not disposing unmanaged resources will <strong>lead to memory leaks</strong>. You can use the <code>using</code> statement to automatically dispose an object once your program leaves the scope of the <code>using</code> statement. BIGBLOCK Which is functionally equivalent to: BIGBLOCK",
        "summary": "If the object is <code>IDisposable</code> it is <strong>a good idea to dispose it</strong> when you no longer need it, especially if the object uses unmanaged resources. Not disposing unmanaged resources will <strong>lead to memory leaks</strong>. BIGBLOCK BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When PowerShell sees a command starting with a string it just evaluates the string, that is, it typically echos it to the screen, for example: If you want PowerShell to interpret the string as a command name then use the call operator (&amp;) like so: After that you probably only need to quote parameter/argument pairs that contain spaces and/or quotation chars. When you invoke an EXE file like this with complex command line arguments it is usually very helpful to have a tool that will show you how PowerShell sends the arguments to the EXE file. The PowerShell Community Extensions has such a tool. It is called echoargs. You just replace the EXE file with echoargs - leaving all the arguments in place, and it will show you how the EXE file will receive the arguments, for example: Using echoargs you can experiment until you get it right, for example: It turns out I was trying too hard before to maintain the double quotes around the connection string. Apparently that isn't necessary because even cmd.exe will strip those out. BTW, hats off to the PowerShell team. They were quite helpful in showing me the specific incantation of single &amp; double quotes to get the desired result - if you needed to keep the internal double quotes in place. :-)  They also realize this is an area of pain, but they are driven by the number of folks are affected by a particular issue. If this is an area of pain for you, then please vote up this PowerShell bug submission. For more information on how PowerShell parses, check out my Effective PowerShell blog series - specifically item 10 - \"Understanding PowerShell Parsing Modes\" UPDATE 4/4/2012: This situation gets much easier to handle in PowerShell V3. See this blog post for details.",
        "output": "If you want PowerShell to interpret the string as a command name then use the call operator (&amp;) like so: You just replace the EXE file with echoargs - leaving all the arguments in place, and it will show you how the EXE file will receive the arguments, for example:",
        "answer": "When PowerShell sees a command starting with a string it just evaluates the string, that is, it typically echos it to the screen, for example: If you want PowerShell to interpret the string as a command name then use the call operator (&amp;) like so: After that you probably only need to quote parameter/argument pairs that contain spaces and/or quotation chars. When you invoke an EXE file like this with complex command line arguments it is usually very helpful to have a tool that will show you how PowerShell sends the arguments to the EXE file. The PowerShell Community Extensions has such a tool. It is called echoargs. You just replace the EXE file with echoargs - leaving all the arguments in place, and it will show you how the EXE file will receive the arguments, for example: Using echoargs you can experiment until you get it right, for example: It turns out I was trying too hard before to maintain the double quotes around the connection string. Apparently that isn't necessary because even cmd.exe will strip those out. BTW, hats off to the PowerShell team. They were quite helpful in showing me the specific incantation of single &amp; double quotes to get the desired result - if you needed to keep the internal double quotes in place. :-)  They also realize this is an area of pain, but they are driven by the number of folks are affected by a particular issue. If this is an area of pain for you, then please vote up this PowerShell bug submission. For more information on how PowerShell parses, check out my Effective PowerShell blog series - specifically item 10 - \"Understanding PowerShell Parsing Modes\" UPDATE 4/4/2012: This situation gets much easier to handle in PowerShell V3. See this blog post for details.",
        "summary": "If you want PowerShell to interpret the string as a command name then use the call operator (&amp;) like so: You just replace the EXE file with echoargs - leaving all the arguments in place, and it will show you how the EXE file will receive the arguments, for example:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As others have suggested, use JavaScript to make an AJAX call. BIGBLOCK http://docs.jquery.com/Ajax/jQuery.ajax",
        "output": "As others have suggested, use JavaScript to make an AJAX call. BIGBLOCK",
        "answer": "As others have suggested, use JavaScript to make an AJAX call. BIGBLOCK http://docs.jquery.com/Ajax/jQuery.ajax",
        "summary": "As others have suggested, use JavaScript to make an AJAX call. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The difference between creating an array with the implicit array and the array constructor is subtle but important. When you create an array using You're telling the interpreter to create a new runtime array. No extra processing necessary at all. Done. If you use: You're telling the interpreter, I want to call the constructor \"<code>Array</code>\" and generate an object. It then looks up through your execution context to find the constructor to call, and calls it, creating your array. You may think \"Well, this doesn't matter at all. They're the same!\". Unfortunately you can't guarantee that. Take the following example: In the above example, the first call will alert 'SPARTA' as you'd expect. The second will not. You will end up seeing undefined. You'll also note that b contains all of the native Array object functions such as <code>push</code>, where the other does not. While you may expect this to happen, it just illustrates the fact that <code>[]</code> is not the same as <code>new Array()</code>. It's probably best to just use <code>[]</code> if you know you just want an array. I also do not suggest going around and redefining Array...",
        "output": "The difference between creating an array with the implicit array and the array constructor is subtle but important. When you create an array using You're telling the interpreter to create a new runtime array. Done. If you use:",
        "answer": "The difference between creating an array with the implicit array and the array constructor is subtle but important. When you create an array using You're telling the interpreter to create a new runtime array. No extra processing necessary at all. Done. If you use: You're telling the interpreter, I want to call the constructor \"<code>Array</code>\" and generate an object. It then looks up through your execution context to find the constructor to call, and calls it, creating your array. You may think \"Well, this doesn't matter at all. They're the same!\". Unfortunately you can't guarantee that. Take the following example: In the above example, the first call will alert 'SPARTA' as you'd expect. The second will not. You will end up seeing undefined. You'll also note that b contains all of the native Array object functions such as <code>push</code>, where the other does not. While you may expect this to happen, it just illustrates the fact that <code>[]</code> is not the same as <code>new Array()</code>. It's probably best to just use <code>[]</code> if you know you just want an array. I also do not suggest going around and redefining Array...",
        "summary": "The difference between creating an array with the implicit array and the array constructor is subtle but important. When you create an array using You're telling the interpreter to create a new runtime array. Done. If you use:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The two-line summary: Closures: Very useful. Learn them, use them, love them. Python's <code>lambda</code> keyword: unnecessary, occasionally useful. If you find yourself doing anything remotely complex with it, put it away and define a real function.",
        "output": "Python's <code>lambda</code> keyword: unnecessary, occasionally useful.",
        "answer": "The two-line summary: Closures: Very useful. Learn them, use them, love them. Python's <code>lambda</code> keyword: unnecessary, occasionally useful. If you find yourself doing anything remotely complex with it, put it away and define a real function.",
        "summary": "Python's <code>lambda</code> keyword: unnecessary, occasionally useful."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The answer seems to be to use the header more than once. That is, rather than sending send On Apache, you can do this in an <code>httpd.conf</code> <code>&lt;VirtualHost&gt;</code> section or <code>.htaccess</code> file using <code>mod_headers</code> and this syntax: The trick is to use <code>add</code> rather than <code>append</code> as the first argument.",
        "output": "On Apache, you can do this in an <code>httpd.conf</code> <code>&lt;VirtualHost&gt;</code> section or <code>.htaccess</code> file using <code>mod_headers</code> and this syntax: The trick is to use <code>add</code> rather than <code>append</code> as the first argument.",
        "answer": "The answer seems to be to use the header more than once. That is, rather than sending send On Apache, you can do this in an <code>httpd.conf</code> <code>&lt;VirtualHost&gt;</code> section or <code>.htaccess</code> file using <code>mod_headers</code> and this syntax: The trick is to use <code>add</code> rather than <code>append</code> as the first argument.",
        "summary": "On Apache, you can do this in an <code>httpd.conf</code> <code>&lt;VirtualHost&gt;</code> section or <code>.htaccess</code> file using <code>mod_headers</code> and this syntax: The trick is to use <code>add</code> rather than <code>append</code> as the first argument."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Specifically saying overloading or overriding doesn't give the full picture. Polymorphism is simply the ability of an object to specialize its behavior based on its type. I would disagree with some of the answers here in that overloading is a form of polymorphism (parametric polymorphism) in the case that a method with the same name can behave differently give different parameter types. A good example is operator overloading. You can define \"+\" to accept different types of parameters -- say strings or int's -- and based on those types, \"+\" will behave differently. Polymorphism also includes inheritance and overriding methods, though they can be abstract or virtual in the base type. In terms of inheritance-based polymorphism, Java only supports single class inheritance limiting it polymorphic behavior to that of a single chain of base types. Java does support implementation of multiple interfaces which is yet another form of polymorphic behavior.",
        "output": "Polymorphism is simply the ability of an object to specialize its behavior based on its type. Polymorphism also includes inheritance and overriding methods, though they can be abstract or virtual in the base type.",
        "answer": "Specifically saying overloading or overriding doesn't give the full picture. Polymorphism is simply the ability of an object to specialize its behavior based on its type. I would disagree with some of the answers here in that overloading is a form of polymorphism (parametric polymorphism) in the case that a method with the same name can behave differently give different parameter types. A good example is operator overloading. You can define \"+\" to accept different types of parameters -- say strings or int's -- and based on those types, \"+\" will behave differently. Polymorphism also includes inheritance and overriding methods, though they can be abstract or virtual in the base type. In terms of inheritance-based polymorphism, Java only supports single class inheritance limiting it polymorphic behavior to that of a single chain of base types. Java does support implementation of multiple interfaces which is yet another form of polymorphic behavior.",
        "summary": "Polymorphism is simply the ability of an object to specialize its behavior based on its type. Polymorphism also includes inheritance and overriding methods, though they can be abstract or virtual in the base type."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is what I think is missing from the answers so far: If you need one instance of this object per process address space (and you are as confident as you can be that this requirement will not change), you should make it a singleton. Otherwise, it's not a singleton. This is a very odd requirement, hardly ever of interest to the user. Processes and address space isolation are an implementation detail. They only impact on the user when they want to stop your application using <code>kill</code> or Task Manager. Apart from building a caching system, there aren't that many reasons why you'd be so certain that there should only be on instance of something per process. How about a logging system? Might be better for that to be per-thread or more fine-grained so you can trace the origin of messages more automatically. How about the application's main window? It depends; maybe you'll want all the user's documents to be managed by the same process for some reason, in which case there would be multiple \"main windows\" in that process.",
        "output": "If you need one instance of this object per process address space (and you are as confident as you can be that this requirement will not change), you should make it a singleton.",
        "answer": "This is what I think is missing from the answers so far: If you need one instance of this object per process address space (and you are as confident as you can be that this requirement will not change), you should make it a singleton. Otherwise, it's not a singleton. This is a very odd requirement, hardly ever of interest to the user. Processes and address space isolation are an implementation detail. They only impact on the user when they want to stop your application using <code>kill</code> or Task Manager. Apart from building a caching system, there aren't that many reasons why you'd be so certain that there should only be on instance of something per process. How about a logging system? Might be better for that to be per-thread or more fine-grained so you can trace the origin of messages more automatically. How about the application's main window? It depends; maybe you'll want all the user's documents to be managed by the same process for some reason, in which case there would be multiple \"main windows\" in that process.",
        "summary": "If you need one instance of this object per process address space (and you are as confident as you can be that this requirement will not change), you should make it a singleton."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In terms of direct values a regular char is used when the values are known to be between <code>CHAR_MIN</code> and <code>CHAR_MAX</code> while an unsigned char provides double the range on the positive end. For example, if <code>CHAR_BIT</code> is 8, the range of regular <code>char</code> is only guaranteed to be [0, 127] (because it can be signed or unsigned) while <code>unsigned char</code> will be [0, 255] and <code>signed char</code> will be [-127, 127]. In terms of what it's used for, the standards allow objects of POD (plain old data) to be directly converted to an array of unsigned char. This allows you to examine the representation and bit patterns of the object. The same guarantee of safe type punning doesn't exist for char or signed char.",
        "output": "In terms of direct values a regular char is used when the values are known to be between <code>CHAR_MIN</code> and <code>CHAR_MAX</code> while an unsigned char provides double the range on the positive end. For example, if <code>CHAR_BIT</code> is 8, the range of regular <code>char</code> is only guaranteed to be [0, 127] (because it can be signed or unsigned) while <code>unsigned char</code> will be [0, 255] and <code>signed char</code> will be [-127, 127].",
        "answer": "In terms of direct values a regular char is used when the values are known to be between <code>CHAR_MIN</code> and <code>CHAR_MAX</code> while an unsigned char provides double the range on the positive end. For example, if <code>CHAR_BIT</code> is 8, the range of regular <code>char</code> is only guaranteed to be [0, 127] (because it can be signed or unsigned) while <code>unsigned char</code> will be [0, 255] and <code>signed char</code> will be [-127, 127]. In terms of what it's used for, the standards allow objects of POD (plain old data) to be directly converted to an array of unsigned char. This allows you to examine the representation and bit patterns of the object. The same guarantee of safe type punning doesn't exist for char or signed char.",
        "summary": "In terms of direct values a regular char is used when the values are known to be between <code>CHAR_MIN</code> and <code>CHAR_MAX</code> while an unsigned char provides double the range on the positive end. For example, if <code>CHAR_BIT</code> is 8, the range of regular <code>char</code> is only guaranteed to be [0, 127] (because it can be signed or unsigned) while <code>unsigned char</code> will be [0, 255] and <code>signed char</code> will be [-127, 127]."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>edit: This answer is defunct as of iOS3.2; use UIAppFonts</strong> The only way I've been able to successfully load custom <code>UIFont</code>s is via the private GraphicsServices framework. The following will load all the <code>.ttf</code> fonts in the application's main bundle: BIGBLOCK Once fonts are loaded, they can be used just like the Apple-provided fonts: BIGBLOCK GraphicsServices can even be loaded at runtime in case the API disappears in the future: BIGBLOCK",
        "output": "The only way I've been able to successfully load custom <code>UIFont</code>s is via the private GraphicsServices framework. The following will load all the <code>.ttf</code> fonts in the application's main bundle: BIGBLOCK",
        "answer": "<strong>edit: This answer is defunct as of iOS3.2; use UIAppFonts</strong> The only way I've been able to successfully load custom <code>UIFont</code>s is via the private GraphicsServices framework. The following will load all the <code>.ttf</code> fonts in the application's main bundle: BIGBLOCK Once fonts are loaded, they can be used just like the Apple-provided fonts: BIGBLOCK GraphicsServices can even be loaded at runtime in case the API disappears in the future: BIGBLOCK",
        "summary": "The only way I've been able to successfully load custom <code>UIFont</code>s is via the private GraphicsServices framework. The following will load all the <code>.ttf</code> fonts in the application's main bundle: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Either hand divisions, or use the SimpleDateFormat API. Edit by Bombe: It has been shown in the comments that this approach only works for smaller durations (i.e. less than a day).",
        "output": "Either hand divisions, or use the SimpleDateFormat API.",
        "answer": "Either hand divisions, or use the SimpleDateFormat API. Edit by Bombe: It has been shown in the comments that this approach only works for smaller durations (i.e. less than a day).",
        "summary": "Either hand divisions, or use the SimpleDateFormat API."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Several ways to do it, this one's my favorite: BIGBLOCK",
        "output": "Several ways to do it, this one's my favorite: BIGBLOCK",
        "answer": "Several ways to do it, this one's my favorite: BIGBLOCK",
        "summary": "Several ways to do it, this one's my favorite: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Put the text/value in the first cell, then copy the cell, mark the whole colum and 'paste' the copied text/value. This works in Excel 97 - sorry no other version available on my side...",
        "output": "Put the text/value in the first cell, then copy the cell, mark the whole colum and 'paste' the copied text/value.",
        "answer": "Put the text/value in the first cell, then copy the cell, mark the whole colum and 'paste' the copied text/value. This works in Excel 97 - sorry no other version available on my side...",
        "summary": "Put the text/value in the first cell, then copy the cell, mark the whole colum and 'paste' the copied text/value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can create <code>$i</code> outside the loop and do <code>$i++</code> at the bottom of the loop.",
        "output": "You can create <code>$i</code> outside the loop and do <code>$i++</code> at the bottom of the loop.",
        "answer": "You can create <code>$i</code> outside the loop and do <code>$i++</code> at the bottom of the loop.",
        "summary": "You can create <code>$i</code> outside the loop and do <code>$i++</code> at the bottom of the loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n modulus division is simply this : divide two numbers and return the remainder only 27 / 16 = 1 with 11 left over, therefore 27 % 16 = 11 ditto 43 / 16 = 2 with 11 left over so 43 % 16 = 11 too",
        "output": "modulus division is simply this : divide two numbers and return the remainder only",
        "answer": "modulus division is simply this : divide two numbers and return the remainder only 27 / 16 = 1 with 11 left over, therefore 27 % 16 = 11 ditto 43 / 16 = 2 with 11 left over so 43 % 16 = 11 too",
        "summary": "modulus division is simply this : divide two numbers and return the remainder only"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What everyone here is missing is Java's guarantee of definite assignment for final member variables. For a class C with final member variable V, every possible execution path through every constructor of C must assign V exactly once - failing to assign V or assigning V two or more times will result in an error. C#'s readonly keyword has no such guarantee - the compiler is more than happy to leave readonly members unassigned or allow you to assign them multiple times within a constructor. So, final and readonly (at least with respect to member variables) are definitely not equivalent - final is much more strict.",
        "output": "What everyone here is missing is Java's guarantee of definite assignment for final member variables. So, final and readonly (at least with respect to member variables) are definitely not equivalent - final is much more strict.",
        "answer": "What everyone here is missing is Java's guarantee of definite assignment for final member variables. For a class C with final member variable V, every possible execution path through every constructor of C must assign V exactly once - failing to assign V or assigning V two or more times will result in an error. C#'s readonly keyword has no such guarantee - the compiler is more than happy to leave readonly members unassigned or allow you to assign them multiple times within a constructor. So, final and readonly (at least with respect to member variables) are definitely not equivalent - final is much more strict.",
        "summary": "What everyone here is missing is Java's guarantee of definite assignment for final member variables. So, final and readonly (at least with respect to member variables) are definitely not equivalent - final is much more strict."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>str</code> object doesn't have an <code>__iter__</code> attribute so you can do a check and this will also raise a nice <code>AssertionError</code> for any other non-iterable object too. Edit: As Tim mentions in the comments, this will only work in python 2.x, not 3.x",
        "output": "so you can do a check",
        "answer": "The <code>str</code> object doesn't have an <code>__iter__</code> attribute so you can do a check and this will also raise a nice <code>AssertionError</code> for any other non-iterable object too. Edit: As Tim mentions in the comments, this will only work in python 2.x, not 3.x",
        "summary": "so you can do a check"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Windows/DOS batch files: This prints a nice <code>\"Press any key to continue . . . \"</code> message Or, if you don't want the <code>\"Press any key to continue . . . \"</code> message, do this instead:",
        "output": "In Windows/DOS batch files: \"</code> message, do this instead:",
        "answer": "In Windows/DOS batch files: This prints a nice <code>\"Press any key to continue . . . \"</code> message Or, if you don't want the <code>\"Press any key to continue . . . \"</code> message, do this instead:",
        "summary": "In Windows/DOS batch files: \"</code> message, do this instead:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n >= ES6: &lt;= ES5 From the reference:",
        "output": ">= ES6: &lt;= ES5",
        "answer": ">= ES6: &lt;= ES5 From the reference:",
        "summary": ">= ES6: &lt;= ES5"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>onload</code> event can only be used on the <code>document(body)</code> itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it's loaded as part of the body, so the <code>onload</code> event doesn't apply there.",
        "output": "The div is not an external resource and it's loaded as part of the body, so the <code>onload</code> event doesn't apply there.",
        "answer": "The <code>onload</code> event can only be used on the <code>document(body)</code> itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it's loaded as part of the body, so the <code>onload</code> event doesn't apply there.",
        "summary": "The div is not an external resource and it's loaded as part of the body, so the <code>onload</code> event doesn't apply there."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n SQL self-join simply is a normal join which is used to join a table to itself. Example:",
        "output": "SQL self-join simply is a normal join which is used to join a table to itself.",
        "answer": "SQL self-join simply is a normal join which is used to join a table to itself. Example:",
        "summary": "SQL self-join simply is a normal join which is used to join a table to itself."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes; the Objective-C method syntax is like this for a couple of reasons; one of these is so that it is clear what the parameters you are specifying are. For example, if you are adding an object to an <code>NSMutableArray</code> at a certain index, you would do it using the method: BIGBLOCK This method is called <code>insertObject:atIndex:</code> and it is clear that an object is being inserted at a specified index. In practice, adding a string \"Hello, World!\" at index 5 of an <code>NSMutableArray</code> called <code>array</code> would be called as follows: BIGBLOCK This also reduces ambiguity between the order of the method parameters, ensuring that you pass the object parameter first, <em>then</em> the index parameter. This becomes more useful when using functions that take a large number of arguments, and reduces error in passing the arguments. Furthermore, the method naming convention is such because Objective-C doesn't support overloading; however, if you want to write a method that does the same job, but takes different data-types, this can be accomplished; take, for instance, the <code>NSNumber</code> class; this has several object creation methods, including: <li><code>+ (id)numberWithBool:(BOOL)value;</code> <li><code>+ (id)numberWithFloat:(float)value;</code> <li><code>+ (id)numberWithDouble:(double)value;</code> In a language such as C++, you would simply overload the number method to allow different data types to be passed as the argument; however, in Objective-C, this syntax allows several different variants of the same function to be implemented, by changing the name of the method for each variant of the function.",
        "output": "Yes; the Objective-C method syntax is like this for a couple of reasons; one of these is so that it is clear what the parameters you are specifying are. This also reduces ambiguity between the order of the method parameters, ensuring that you pass the object parameter first, <em>then</em> the index parameter. In a language such as C++, you would simply overload the number method to allow different data types to be passed as the argument; however, in Objective-C, this syntax allows several different variants of the same function to be implemented, by changing the name of the method for each variant of the function.",
        "answer": "Yes; the Objective-C method syntax is like this for a couple of reasons; one of these is so that it is clear what the parameters you are specifying are. For example, if you are adding an object to an <code>NSMutableArray</code> at a certain index, you would do it using the method: BIGBLOCK This method is called <code>insertObject:atIndex:</code> and it is clear that an object is being inserted at a specified index. In practice, adding a string \"Hello, World!\" at index 5 of an <code>NSMutableArray</code> called <code>array</code> would be called as follows: BIGBLOCK This also reduces ambiguity between the order of the method parameters, ensuring that you pass the object parameter first, <em>then</em> the index parameter. This becomes more useful when using functions that take a large number of arguments, and reduces error in passing the arguments. Furthermore, the method naming convention is such because Objective-C doesn't support overloading; however, if you want to write a method that does the same job, but takes different data-types, this can be accomplished; take, for instance, the <code>NSNumber</code> class; this has several object creation methods, including: <li><code>+ (id)numberWithBool:(BOOL)value;</code> <li><code>+ (id)numberWithFloat:(float)value;</code> <li><code>+ (id)numberWithDouble:(double)value;</code> In a language such as C++, you would simply overload the number method to allow different data types to be passed as the argument; however, in Objective-C, this syntax allows several different variants of the same function to be implemented, by changing the name of the method for each variant of the function.",
        "summary": "Yes; the Objective-C method syntax is like this for a couple of reasons; one of these is so that it is clear what the parameters you are specifying are. This also reduces ambiguity between the order of the method parameters, ensuring that you pass the object parameter first, <em>then</em> the index parameter. In a language such as C++, you would simply overload the number method to allow different data types to be passed as the argument; however, in Objective-C, this syntax allows several different variants of the same function to be implemented, by changing the name of the method for each variant of the function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I would either: Try to <code>ssh</code> from the command line and accept the public key (the host will be added to <code>~/.ssh/known_hosts</code> and everything should then work fine from Jsch) -OR- Configure JSch to not use \"StrictHostKeyChecking\" (this introduces insecurities and should only be used for testing purposes), using the following code: Option #1 (adding the host to the <code>~/.ssh/known_hosts</code> file) has my preference.",
        "output": "I would either:",
        "answer": "I would either: Try to <code>ssh</code> from the command line and accept the public key (the host will be added to <code>~/.ssh/known_hosts</code> and everything should then work fine from Jsch) -OR- Configure JSch to not use \"StrictHostKeyChecking\" (this introduces insecurities and should only be used for testing purposes), using the following code: Option #1 (adding the host to the <code>~/.ssh/known_hosts</code> file) has my preference.",
        "summary": "I would either:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The standard way is <code>cin.get()</code> before your return statement. BIGBLOCK",
        "output": "The standard way is <code>cin.get()</code> before your return statement.",
        "answer": "The standard way is <code>cin.get()</code> before your return statement. BIGBLOCK",
        "summary": "The standard way is <code>cin.get()</code> before your return statement."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's why <code>isinstance</code> is better than <code>type</code>: in this case, a truck object is a Vehicle, but you'll get this: In other words, <code>isinstance</code> is true for subclasses, too. Also see: How to compare type of an object in Python?",
        "output": "Here's why <code>isinstance</code> is better than <code>type</code>:",
        "answer": "Here's why <code>isinstance</code> is better than <code>type</code>: in this case, a truck object is a Vehicle, but you'll get this: In other words, <code>isinstance</code> is true for subclasses, too. Also see: How to compare type of an object in Python?",
        "summary": "Here's why <code>isinstance</code> is better than <code>type</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use boost lexical cast: BIGBLOCK Note: boost::lexical_cast throws exception so you should be prepared to deal with it when you pass invalid value, try passing string(\"xxx\")",
        "output": "You can use boost lexical cast: BIGBLOCK",
        "answer": "You can use boost lexical cast: BIGBLOCK Note: boost::lexical_cast throws exception so you should be prepared to deal with it when you pass invalid value, try passing string(\"xxx\")",
        "summary": "You can use boost lexical cast: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unless your collection can return the index of the object via some method, the only way is to use a counter like in your example. However, when working with indexes, the only reasonable answer to the problem is to use a for loop. Anything else introduces code complexity, not to mention time and space complexity.",
        "output": "Unless your collection can return the index of the object via some method, the only way is to use a counter like in your example. Anything else introduces code complexity, not to mention time and space complexity.",
        "answer": "Unless your collection can return the index of the object via some method, the only way is to use a counter like in your example. However, when working with indexes, the only reasonable answer to the problem is to use a for loop. Anything else introduces code complexity, not to mention time and space complexity.",
        "summary": "Unless your collection can return the index of the object via some method, the only way is to use a counter like in your example. Anything else introduces code complexity, not to mention time and space complexity."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Regarding the second part of your question, Serialization is a persistence mechanism used to store objects as a sequence of signed bytes. Put less formally, it stores the state of an object so you can retrieve it later, by de-serialization.",
        "output": "Regarding the second part of your question, Serialization is a persistence mechanism used to store objects as a sequence of signed bytes. Put less formally, it stores the state of an object so you can retrieve it later, by de-serialization.",
        "answer": "Regarding the second part of your question, Serialization is a persistence mechanism used to store objects as a sequence of signed bytes. Put less formally, it stores the state of an object so you can retrieve it later, by de-serialization.",
        "summary": "Regarding the second part of your question, Serialization is a persistence mechanism used to store objects as a sequence of signed bytes. Put less formally, it stores the state of an object so you can retrieve it later, by de-serialization."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n First you connect to your database. Then you build the query string. Then you launch the query and store the result, and finally you fetch what rows you want from the result by using one of the fetch methods. BIGBLOCK Edit: So sorry, forgot the database connection. Added it now",
        "output": "First you connect to your database. Then you build the query string. Then you launch the query and store the result, and finally you fetch what rows you want from the result by using one of the fetch methods.",
        "answer": "First you connect to your database. Then you build the query string. Then you launch the query and store the result, and finally you fetch what rows you want from the result by using one of the fetch methods. BIGBLOCK Edit: So sorry, forgot the database connection. Added it now",
        "summary": "First you connect to your database. Then you build the query string. Then you launch the query and store the result, and finally you fetch what rows you want from the result by using one of the fetch methods."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you are working RESTfully, GET should be used for requests where you are only getting data, and POST should be used for requests where you are making something happen. Some examples: <li>GET the page showing a particular SO question <li>POST a comment <li>Send a POST request by clicking the \"Add to cart\" button.",
        "output": "If you are working RESTfully, GET should be used for requests where you are only getting data, and POST should be used for requests where you are making something happen.",
        "answer": "If you are working RESTfully, GET should be used for requests where you are only getting data, and POST should be used for requests where you are making something happen. Some examples: <li>GET the page showing a particular SO question <li>POST a comment <li>Send a POST request by clicking the \"Add to cart\" button.",
        "summary": "If you are working RESTfully, GET should be used for requests where you are only getting data, and POST should be used for requests where you are making something happen."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Mainly, it's a lot harder to maintain and debug. It's like a <code>goto</code>. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.",
        "output": "You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.",
        "answer": "Mainly, it's a lot harder to maintain and debug. It's like a <code>goto</code>. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.",
        "summary": "You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>NOT IN</code> returns 0 records when compared against an unknown value Since <code>NULL</code> is an unknown, a <code>NOT IN</code> query containing a <code>NULL</code> or <code>NULL</code>s in the list of possible values will always return <code>0</code> records since there is no way to be sure that the <code>NULL</code> value is not the value being tested.",
        "output": "<code>NOT IN</code> returns 0 records when compared against an unknown value",
        "answer": "<code>NOT IN</code> returns 0 records when compared against an unknown value Since <code>NULL</code> is an unknown, a <code>NOT IN</code> query containing a <code>NULL</code> or <code>NULL</code>s in the list of possible values will always return <code>0</code> records since there is no way to be sure that the <code>NULL</code> value is not the value being tested.",
        "summary": "<code>NOT IN</code> returns 0 records when compared against an unknown value"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm trying to use variables and settings from that file, not to invoke a separate process. Well, simply importing the file with <code>import filename</code> (minus .py, needs to be in the same directory or on your <code>PYTHONPATH</code>) will run the file, making its variables, functions, classes, etc. available in the <code>filename.variable</code> namespace. So if you have <code>cheddar.py</code> with the variable spam and the function eggs Ã¨ÂÂÃ©Â©Â´?you can import them with <code>import cheddar</code>, access the variable with <code>cheddar.spam</code> and run the function by calling <code>cheddar.eggs()</code> If you have code in <code>cheddar.py</code> that is outside a function, it will be run immediately, but building applications that runs stuff on import is going to make it hard to reuse your code. If a all possible, put everything inside functions or classes.",
        "output": "Well, simply importing the file with <code>import filename</code> (minus .py, needs to be in the same directory or on your <code>PYTHONPATH</code>) will run the file, making its variables, functions, classes, etc.",
        "answer": "I'm trying to use variables and settings from that file, not to invoke a separate process. Well, simply importing the file with <code>import filename</code> (minus .py, needs to be in the same directory or on your <code>PYTHONPATH</code>) will run the file, making its variables, functions, classes, etc. available in the <code>filename.variable</code> namespace. So if you have <code>cheddar.py</code> with the variable spam and the function eggs Ã¨ÂÂÃ©Â©Â´?you can import them with <code>import cheddar</code>, access the variable with <code>cheddar.spam</code> and run the function by calling <code>cheddar.eggs()</code> If you have code in <code>cheddar.py</code> that is outside a function, it will be run immediately, but building applications that runs stuff on import is going to make it hard to reuse your code. If a all possible, put everything inside functions or classes.",
        "summary": "Well, simply importing the file with <code>import filename</code> (minus .py, needs to be in the same directory or on your <code>PYTHONPATH</code>) will run the file, making its variables, functions, classes, etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is actually a pretty good tree structure implemented in the JDK. Have a look at javax.swing.tree, TreeModel, and TreeNode. They are designed to be used with the <code>JTreePanel</code> but they are, in fact, a pretty good tree implementation and there is nothing stopping you from using it with out a swing interface. Note that as of Java 9 you may wish not to use these classes as they will not be present in the 'Compact profiles'.",
        "output": "They are designed to be used with the <code>JTreePanel</code> but they are, in fact, a pretty good tree implementation and there is nothing stopping you from using it with out a swing interface.",
        "answer": "There is actually a pretty good tree structure implemented in the JDK. Have a look at javax.swing.tree, TreeModel, and TreeNode. They are designed to be used with the <code>JTreePanel</code> but they are, in fact, a pretty good tree implementation and there is nothing stopping you from using it with out a swing interface. Note that as of Java 9 you may wish not to use these classes as they will not be present in the 'Compact profiles'.",
        "summary": "They are designed to be used with the <code>JTreePanel</code> but they are, in fact, a pretty good tree implementation and there is nothing stopping you from using it with out a swing interface."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The correct solution that i get is BIGBLOCK Here the new url is given inside the single quote.",
        "output": "The correct solution that i get is BIGBLOCK",
        "answer": "The correct solution that i get is BIGBLOCK Here the new url is given inside the single quote.",
        "summary": "The correct solution that i get is BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's code that may give you ideas: JSFiddle I suspect that Espo's solution may be inconvenient because it requires you to position both images absolutely. You may want the first one to position itself in the flow. Usually, there is a natural way to do that is CSS. You put position: relative on the container element, and then absolutely position children inside it. Unfortunately, you cannot put one image inside another. That's why I needed container div. Notice that I made it a float to make it autofit to its contents. Making it display: inline-block should theoretically work as well, but browser support is poor there. EDIT: I deleted size attributes from the images to illustrate my point better. If you want the container image to have its default sizes and you don't know the size beforehand, you cannot use the background trick. If you do, it is a better way to go.",
        "output": "You put position: relative on the container element, and then absolutely position children inside it. Unfortunately, you cannot put one image inside another. That's why I needed container div.",
        "answer": "Here's code that may give you ideas: JSFiddle I suspect that Espo's solution may be inconvenient because it requires you to position both images absolutely. You may want the first one to position itself in the flow. Usually, there is a natural way to do that is CSS. You put position: relative on the container element, and then absolutely position children inside it. Unfortunately, you cannot put one image inside another. That's why I needed container div. Notice that I made it a float to make it autofit to its contents. Making it display: inline-block should theoretically work as well, but browser support is poor there. EDIT: I deleted size attributes from the images to illustrate my point better. If you want the container image to have its default sizes and you don't know the size beforehand, you cannot use the background trick. If you do, it is a better way to go.",
        "summary": "You put position: relative on the container element, and then absolutely position children inside it. Unfortunately, you cannot put one image inside another. That's why I needed container div."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Consider using <code>System.Windows.Forms.Timer</code> instead of <code>System.Threading.Timer</code> for a GUI application, for timers that are based on the Windows message queue instead of on dedicated threads or the thread pool. In your scenario, for the purpose of periodic updates of UI, it seems particularly appropriate since you don't really have a background work or long calculation to perform. You just want to do periodic small tasks that have to happen on the UI thread anyway.",
        "output": "Consider using <code>System.Windows.Forms.Timer</code> instead of <code>System.Threading.Timer</code> for a GUI application, for timers that are based on the Windows message queue instead of on dedicated threads or the thread pool.",
        "answer": "Consider using <code>System.Windows.Forms.Timer</code> instead of <code>System.Threading.Timer</code> for a GUI application, for timers that are based on the Windows message queue instead of on dedicated threads or the thread pool. In your scenario, for the purpose of periodic updates of UI, it seems particularly appropriate since you don't really have a background work or long calculation to perform. You just want to do periodic small tasks that have to happen on the UI thread anyway.",
        "summary": "Consider using <code>System.Windows.Forms.Timer</code> instead of <code>System.Threading.Timer</code> for a GUI application, for timers that are based on the Windows message queue instead of on dedicated threads or the thread pool."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n glib has functions for base64 encoding: https://developer.gnome.org/glib/stable/glib-Base64-Encoding.html",
        "output": "glib has functions for base64 encoding: https://developer.gnome.org/glib/stable/glib-Base64-Encoding.html",
        "answer": "glib has functions for base64 encoding: https://developer.gnome.org/glib/stable/glib-Base64-Encoding.html",
        "summary": "glib has functions for base64 encoding: https://developer.gnome.org/glib/stable/glib-Base64-Encoding.html"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your byte array must have some encoding. The encoding cannot be ASCII if you've got negative values. Once you figure that out, you can convert a set of bytes to a String using: There are a bunch of encodings you can use, look at the Charset class in the Sun javadocs.",
        "output": "Once you figure that out, you can convert a set of bytes to a String using:",
        "answer": "Your byte array must have some encoding. The encoding cannot be ASCII if you've got negative values. Once you figure that out, you can convert a set of bytes to a String using: There are a bunch of encodings you can use, look at the Charset class in the Sun javadocs.",
        "summary": "Once you figure that out, you can convert a set of bytes to a String using:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The clearest way to express polymorphism is via an abstract base class (or interface) BIGBLOCK This class is abstract because the <code>goPee()</code> method is not definable for Humans. It is only definable for the subclasses Male and Female. Also, Human is an abstract concept &mdash; You cannot create a human that is neither Male nor Female. ItÃ©ÂÂ¥Ã¦ÂªÂ got to be one or the other. So we defer the implementation by using the abstract class. BIGBLOCK and BIGBLOCK Now we can tell an entire room full of Humans to go pee. BIGBLOCK Running this would yield: BIGBLOCK",
        "output": "The clearest way to express polymorphism is via an abstract base class (or interface) So we defer the implementation by using the abstract class.",
        "answer": "The clearest way to express polymorphism is via an abstract base class (or interface) BIGBLOCK This class is abstract because the <code>goPee()</code> method is not definable for Humans. It is only definable for the subclasses Male and Female. Also, Human is an abstract concept &mdash; You cannot create a human that is neither Male nor Female. ItÃ©ÂÂ¥Ã¦ÂªÂ got to be one or the other. So we defer the implementation by using the abstract class. BIGBLOCK and BIGBLOCK Now we can tell an entire room full of Humans to go pee. BIGBLOCK Running this would yield: BIGBLOCK",
        "summary": "The clearest way to express polymorphism is via an abstract base class (or interface) So we defer the implementation by using the abstract class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'd take a different approach to that question and probe the interviewer for more details about the larger problem he's trying to solve. Depending on the problem and the requirements surrounding it, the obvious set-based solution might be the right thing and the generate-a-list-and-pick-through-it-afterward approach might not. For example, it might be that the interviewer is going to dispatch <code>n</code> messages and needs to know the <code>k</code> that didn't result in a reply and needs to know it in as little wall clock time as possible after the <code>n-k</code>th reply arrives. Let's also say that the message channel's nature is such that even running at full bore, there's enough time to do some processing between messages without having any impact on how long it takes to produce the end result after the last reply arrives. That time can be put to use inserting some identifying facet of each sent message into a set and deleting it as each corresponding reply arrives. Once the last reply has arrived, the only thing to be done is to remove its identifier from the set, which in typical implementations takes <code>O(log k+1)</code>. After that, the set contains the list of <code>k</code> missing elements and there's no additional processing to be done. This certainly isn't the fastest approach for batch processing pre-generated bags of numbers because the whole thing runs <code>O((log 1 + log 2 + ... + log n) + (log n + log n-1 + ... + log k))</code>. But it does work for any value of <code>k</code> (even if it's not known ahead of time) and in the example above it was applied in a way that minimizes the most critical interval.",
        "output": "Depending on the problem and the requirements surrounding it, the obvious set-based solution might be the right thing and the generate-a-list-and-pick-through-it-afterward approach might not. This certainly isn't the fastest approach for batch processing pre-generated bags of numbers because the whole thing runs <code>O((log 1 + log 2 + ... + log n) + (log n + log n-1 + ... + log k))</code>. But it does work for any value of <code>k</code> (even if it's not known ahead of time) and in the example above it was applied in a way that minimizes the most critical interval.",
        "answer": "I'd take a different approach to that question and probe the interviewer for more details about the larger problem he's trying to solve. Depending on the problem and the requirements surrounding it, the obvious set-based solution might be the right thing and the generate-a-list-and-pick-through-it-afterward approach might not. For example, it might be that the interviewer is going to dispatch <code>n</code> messages and needs to know the <code>k</code> that didn't result in a reply and needs to know it in as little wall clock time as possible after the <code>n-k</code>th reply arrives. Let's also say that the message channel's nature is such that even running at full bore, there's enough time to do some processing between messages without having any impact on how long it takes to produce the end result after the last reply arrives. That time can be put to use inserting some identifying facet of each sent message into a set and deleting it as each corresponding reply arrives. Once the last reply has arrived, the only thing to be done is to remove its identifier from the set, which in typical implementations takes <code>O(log k+1)</code>. After that, the set contains the list of <code>k</code> missing elements and there's no additional processing to be done. This certainly isn't the fastest approach for batch processing pre-generated bags of numbers because the whole thing runs <code>O((log 1 + log 2 + ... + log n) + (log n + log n-1 + ... + log k))</code>. But it does work for any value of <code>k</code> (even if it's not known ahead of time) and in the example above it was applied in a way that minimizes the most critical interval.",
        "summary": "Depending on the problem and the requirements surrounding it, the obvious set-based solution might be the right thing and the generate-a-list-and-pick-through-it-afterward approach might not. This certainly isn't the fastest approach for batch processing pre-generated bags of numbers because the whole thing runs <code>O((log 1 + log 2 + ... + log n) + (log n + log n-1 + ... + log k))</code>. But it does work for any value of <code>k</code> (even if it's not known ahead of time) and in the example above it was applied in a way that minimizes the most critical interval."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is a pretty hacky solution, but it's at least something(?). The idea is to use a CSS transform to rotate the contents of your page to quasi-portrait mode. Here's JavaScript (expressed in jQuery) code to get you started: BIGBLOCK The code expects the entire contents of your page to live inside a div just inside the body element. It rotates that div 90 degrees in landscape mode - back to portrait. Left as an exercise to the reader: the div rotates around its centerpoint, so its position will probably need to be adjusted unless it's perfectly square. Also, there's an unappealing visual problem. When you change orientation, Safari rotates slowly, then the top-level div snaps to 90degrees different. For even more fun, add BIGBLOCK to your CSS. When the device rotates, then Safari does, then the content of your page does. Beguiling!",
        "output": "The idea is to use a CSS transform to rotate the contents of your page to quasi-portrait mode. Here's JavaScript (expressed in jQuery) code to get you started: BIGBLOCK Also, there's an unappealing visual problem. When you change orientation, Safari rotates slowly, then the top-level div snaps to 90degrees different.",
        "answer": "This is a pretty hacky solution, but it's at least something(?). The idea is to use a CSS transform to rotate the contents of your page to quasi-portrait mode. Here's JavaScript (expressed in jQuery) code to get you started: BIGBLOCK The code expects the entire contents of your page to live inside a div just inside the body element. It rotates that div 90 degrees in landscape mode - back to portrait. Left as an exercise to the reader: the div rotates around its centerpoint, so its position will probably need to be adjusted unless it's perfectly square. Also, there's an unappealing visual problem. When you change orientation, Safari rotates slowly, then the top-level div snaps to 90degrees different. For even more fun, add BIGBLOCK to your CSS. When the device rotates, then Safari does, then the content of your page does. Beguiling!",
        "summary": "The idea is to use a CSS transform to rotate the contents of your page to quasi-portrait mode. Here's JavaScript (expressed in jQuery) code to get you started: BIGBLOCK Also, there's an unappealing visual problem. When you change orientation, Safari rotates slowly, then the top-level div snaps to 90degrees different."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n We have a piece of software (webapp with Tomcat) using Apache commons connection pooling, and worked great for years. In the last month I had to update the libraries due to an old bug we were encountering. The bug had been fixed in a recent version. Shortly after deploying this, we started getting exactly these messages. Out of the thousands of connections we'd get a day, a handful (under 10, usually) would get this error message. There was no real pattern, except they would sometimes cluster in little groups of 2 to 5. I changed the options to on the pool to validate the connection every time one is taken from or put back in the pool (if one is found bad, a new one is generated instead) and the problem went away. Have you updated your MySQL jar lately? It seems like there may be a new setting that didn't used to be there in our (admittedly very old) jar. I agree with BalusC to try some other options on your config, such as those you're passing to MySQL (in addition to the connection timeout). If this failure is transient like mine was, instead of permanent, then you could use a simple try/catch and a loop to keep trying until things succeed or use a connection pool to handle that detail for you. Other random idea: I don't know what happens why you try to use a closed connection (which exception you get). Could you be accidentally closing the connection somewhere?",
        "output": "It seems like there may be a new setting that didn't used to be there in our (admittedly very old) jar. If this failure is transient like mine was, instead of permanent, then you could use a simple try/catch and a loop to keep trying until things succeed or use a connection pool to handle that detail for you.",
        "answer": "We have a piece of software (webapp with Tomcat) using Apache commons connection pooling, and worked great for years. In the last month I had to update the libraries due to an old bug we were encountering. The bug had been fixed in a recent version. Shortly after deploying this, we started getting exactly these messages. Out of the thousands of connections we'd get a day, a handful (under 10, usually) would get this error message. There was no real pattern, except they would sometimes cluster in little groups of 2 to 5. I changed the options to on the pool to validate the connection every time one is taken from or put back in the pool (if one is found bad, a new one is generated instead) and the problem went away. Have you updated your MySQL jar lately? It seems like there may be a new setting that didn't used to be there in our (admittedly very old) jar. I agree with BalusC to try some other options on your config, such as those you're passing to MySQL (in addition to the connection timeout). If this failure is transient like mine was, instead of permanent, then you could use a simple try/catch and a loop to keep trying until things succeed or use a connection pool to handle that detail for you. Other random idea: I don't know what happens why you try to use a closed connection (which exception you get). Could you be accidentally closing the connection somewhere?",
        "summary": "It seems like there may be a new setting that didn't used to be there in our (admittedly very old) jar. If this failure is transient like mine was, instead of permanent, then you could use a simple try/catch and a loop to keep trying until things succeed or use a connection pool to handle that detail for you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Traditionally daemon processes in UNIX were those that were constantly running in background, much like services in Windows. A daemon thread in Java is one that doesn't prevent the JVM from exiting. Specifically the JVM will exit when only daemon threads remain. You create one by calling the <code>setDaemon()</code> method on <code>Thread</code>. Have a read of Daemon threads.",
        "output": "A daemon thread in Java is one that doesn't prevent the JVM from exiting.",
        "answer": "Traditionally daemon processes in UNIX were those that were constantly running in background, much like services in Windows. A daemon thread in Java is one that doesn't prevent the JVM from exiting. Specifically the JVM will exit when only daemon threads remain. You create one by calling the <code>setDaemon()</code> method on <code>Thread</code>. Have a read of Daemon threads.",
        "summary": "A daemon thread in Java is one that doesn't prevent the JVM from exiting."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You will find it by reading the couple of pages of <em>Muthukrishnan - Data Stream Algorithms: Puzzle 1: Finding Missing Numbers</em>. <strong>It shows exactly the generalization you are looking for</strong>. Probably this is what your interviewer read and why he posed these questions. Now, if only people would start deleting the answers that are subsumed or superseded by Muthukrishnan's treatment, and make this text easier to find. :) <strong>Also see sdcvvc's directly related answer</strong>, which also includes pseudocode (hurray! no need to read those tricky math formulations :)) (thanks, great work! ).",
        "output": "You will find it by reading the couple of pages of <em>Muthukrishnan - Data Stream Algorithms: Puzzle 1: Finding Missing Numbers</em>.",
        "answer": "You will find it by reading the couple of pages of <em>Muthukrishnan - Data Stream Algorithms: Puzzle 1: Finding Missing Numbers</em>. <strong>It shows exactly the generalization you are looking for</strong>. Probably this is what your interviewer read and why he posed these questions. Now, if only people would start deleting the answers that are subsumed or superseded by Muthukrishnan's treatment, and make this text easier to find. :) <strong>Also see sdcvvc's directly related answer</strong>, which also includes pseudocode (hurray! no need to read those tricky math formulations :)) (thanks, great work! ).",
        "summary": "You will find it by reading the couple of pages of <em>Muthukrishnan - Data Stream Algorithms: Puzzle 1: Finding Missing Numbers</em>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This might sound stupid, but, in the first problem presented to you, you would have to see all the remaining numbers in the bag to actually add them up to find the missing number using that equation. So, since you get to see all the numbers, just look for the number that's missing. The same goes for when two numbers are missing. Pretty simple I think. No point in using an equation when you get to see the numbers remaining in the bag.",
        "output": "So, since you get to see all the numbers, just look for the number that's missing.",
        "answer": "This might sound stupid, but, in the first problem presented to you, you would have to see all the remaining numbers in the bag to actually add them up to find the missing number using that equation. So, since you get to see all the numbers, just look for the number that's missing. The same goes for when two numbers are missing. Pretty simple I think. No point in using an equation when you get to see the numbers remaining in the bag.",
        "summary": "So, since you get to see all the numbers, just look for the number that's missing."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Thanks to the comments below, I will clean this post up a bit (I shouldn't have used the words 'garbage collection' at the time, apologies): When you use using, it will call the Dispose() method on the object at the end of the using's scope. So you can have quite a bit of great cleanup code in your Dispose() method. A bullet point here which will hopefully maybe get this un-markeddown: If you implement IDisposable, make sure you call GC.SuppressFinalize() in your Dispose() implementation, as otherwise automatic garbage collection will try to come along and Finalize it at some point, which at the least would be a waste of resources if you've already Dispose()d of it.",
        "output": "When you use using, it will call the Dispose() method on the object at the end of the using's scope.",
        "answer": "Thanks to the comments below, I will clean this post up a bit (I shouldn't have used the words 'garbage collection' at the time, apologies): When you use using, it will call the Dispose() method on the object at the end of the using's scope. So you can have quite a bit of great cleanup code in your Dispose() method. A bullet point here which will hopefully maybe get this un-markeddown: If you implement IDisposable, make sure you call GC.SuppressFinalize() in your Dispose() implementation, as otherwise automatic garbage collection will try to come along and Finalize it at some point, which at the least would be a waste of resources if you've already Dispose()d of it.",
        "summary": "When you use using, it will call the Dispose() method on the object at the end of the using's scope."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n REST is almost always going to be faster. The main advantage of SOAP is that it provides a mechanism for services to describe themselves to clients, and to advertise their existence. REST is much more lightweight and can be implemented using almost any tool, leading to lower bandwidth and shorter learning curve. However, the clients have to know what to send and what to expect. In general, When you're publishing an API to the outside world that is either complex or likely to change, SOAP will be more useful. Other than that, REST is usually the better option.",
        "output": "REST is almost always going to be faster. REST is much more lightweight and can be implemented using almost any tool, leading to lower bandwidth and shorter learning curve. In general, When you're publishing an API to the outside world that is either complex or likely to change, SOAP will be more useful.",
        "answer": "REST is almost always going to be faster. The main advantage of SOAP is that it provides a mechanism for services to describe themselves to clients, and to advertise their existence. REST is much more lightweight and can be implemented using almost any tool, leading to lower bandwidth and shorter learning curve. However, the clients have to know what to send and what to expect. In general, When you're publishing an API to the outside world that is either complex or likely to change, SOAP will be more useful. Other than that, REST is usually the better option.",
        "summary": "REST is almost always going to be faster. REST is much more lightweight and can be implemented using almost any tool, leading to lower bandwidth and shorter learning curve. In general, When you're publishing an API to the outside world that is either complex or likely to change, SOAP will be more useful."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Ok, after some time, here's what I landed on: <code>.parent { position: relative; top: 0; left: 0; } .image1 { position: relative; top: 0; left: 0; } .image2 { position: absolute; top: 30px; left: 70px; }</code> <code>&lt;div class=\"parent\"&gt; &lt;img class=\"image1\" src=\"https://placehold.it/50\" /&gt; &lt;img class=\"image2\" src=\"https://placehold.it/100\" /&gt; &lt;/div&gt;</code> As the simplest solution. That is: Create a relative div that is placed in the flow of the page; place the base image first as relative so that the div knows how big it should be; place the overlays as absolutes relative to the upper left of the first image. The trick is to get the relatives and absolutes correct.",
        "output": "Create a relative div that is placed in the flow of the page; place the base image first as relative so that the div knows how big it should be; place the overlays as absolutes relative to the upper left of the first image.",
        "answer": "Ok, after some time, here's what I landed on: <code>.parent { position: relative; top: 0; left: 0; } .image1 { position: relative; top: 0; left: 0; } .image2 { position: absolute; top: 30px; left: 70px; }</code> <code>&lt;div class=\"parent\"&gt; &lt;img class=\"image1\" src=\"https://placehold.it/50\" /&gt; &lt;img class=\"image2\" src=\"https://placehold.it/100\" /&gt; &lt;/div&gt;</code> As the simplest solution. That is: Create a relative div that is placed in the flow of the page; place the base image first as relative so that the div knows how big it should be; place the overlays as absolutes relative to the upper left of the first image. The trick is to get the relatives and absolutes correct.",
        "summary": "Create a relative div that is placed in the flow of the page; place the base image first as relative so that the div knows how big it should be; place the overlays as absolutes relative to the upper left of the first image."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Short answer: for both PUT and DELETE, you should send either 200 (OK) or 204 (No Content). Long answer: here's a complete decision diagram (click to magnify). Source: https://github.com/for-GET/http-decision-diagram",
        "output": "Short answer: for both PUT and DELETE, you should send either 200 (OK) or 204 (No Content).",
        "answer": "Short answer: for both PUT and DELETE, you should send either 200 (OK) or 204 (No Content). Long answer: here's a complete decision diagram (click to magnify). Source: https://github.com/for-GET/http-decision-diagram",
        "summary": "Short answer: for both PUT and DELETE, you should send either 200 (OK) or 204 (No Content)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n .close() is mor general and can be used in reference to more objects. .dialog('close') can only be used with dialogs",
        "output": ".close() is mor general and can be used in reference to more objects. .dialog('close') can only be used with dialogs",
        "answer": ".close() is mor general and can be used in reference to more objects. .dialog('close') can only be used with dialogs",
        "summary": ".close() is mor general and can be used in reference to more objects. .dialog('close') can only be used with dialogs"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is not necessarily a clear dividing line. Nowadays, many programs combine elements of both - serving http requests (web server) and handling business logic (app server)",
        "output": "Nowadays, many programs combine elements of both - serving http requests (web server) and handling business logic (app server)",
        "answer": "There is not necessarily a clear dividing line. Nowadays, many programs combine elements of both - serving http requests (web server) and handling business logic (app server)",
        "summary": "Nowadays, many programs combine elements of both - serving http requests (web server) and handling business logic (app server)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As for example usages of unsigned char: unsigend char is often used in computer graphics which very often (though not always) assigns a single byte to each colour component. It is common to see an RGB (or RGBA) colour represented as 24 (or 32) bits, each an unsigned char. Since unsigned char values fall in the range [0,255], the values are typically interpreted as 0 meaning a total lack of a given colour component 255 meaning 100% of a given colour pigment So you would end up with RGB red as (255,0,0) -> (100% red, 0% green, 0% blue). Why not use a signed char? Arithmetic and bit shifting becomes problematic. As explained already, a signed char's range is essentially shifted by -128. A very simple and naive (mostly unused) method for converting RGB to grayscale is to average all three colour components, but this runs into problems when the values of the colour components are negative. Red (255, 0, 0) averages to (85, 85, 85) when using unsigned char arithmetic. However, if the values were signed chars (127,-128,-128), we would end up with (-99, -99, -99), which would be (29, 29, 29) in our unsigned char space, which is incorrect.",
        "output": "Since unsigned char values fall in the range [0,255], the values are typically interpreted as As explained already, a signed char's range is essentially shifted by -128.",
        "answer": "As for example usages of unsigned char: unsigend char is often used in computer graphics which very often (though not always) assigns a single byte to each colour component. It is common to see an RGB (or RGBA) colour represented as 24 (or 32) bits, each an unsigned char. Since unsigned char values fall in the range [0,255], the values are typically interpreted as 0 meaning a total lack of a given colour component 255 meaning 100% of a given colour pigment So you would end up with RGB red as (255,0,0) -> (100% red, 0% green, 0% blue). Why not use a signed char? Arithmetic and bit shifting becomes problematic. As explained already, a signed char's range is essentially shifted by -128. A very simple and naive (mostly unused) method for converting RGB to grayscale is to average all three colour components, but this runs into problems when the values of the colour components are negative. Red (255, 0, 0) averages to (85, 85, 85) when using unsigned char arithmetic. However, if the values were signed chars (127,-128,-128), we would end up with (-99, -99, -99), which would be (29, 29, 29) in our unsigned char space, which is incorrect.",
        "summary": "Since unsigned char values fall in the range [0,255], the values are typically interpreted as As explained already, a signed char's range is essentially shifted by -128."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The example is using Java reflection to create an array. Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all.",
        "output": "Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all.",
        "answer": "The example is using Java reflection to create an array. Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all.",
        "summary": "Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The term overloading refers to having multiple versions of something with the same name, usually methods with different parameter lists BIGBLOCK So these functions might do the same thing but you have the option to call it with an ID, or a name. Has nothing to do with inheritance, abstract classes, etc. Overriding usually refers to polymorphism, as you described in your question",
        "output": "The term overloading refers to having multiple versions of something with the same name, usually methods with different parameter lists Overriding usually refers to polymorphism, as you described in your question",
        "answer": "The term overloading refers to having multiple versions of something with the same name, usually methods with different parameter lists BIGBLOCK So these functions might do the same thing but you have the option to call it with an ID, or a name. Has nothing to do with inheritance, abstract classes, etc. Overriding usually refers to polymorphism, as you described in your question",
        "summary": "The term overloading refers to having multiple versions of something with the same name, usually methods with different parameter lists Overriding usually refers to polymorphism, as you described in your question"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n @S-Lott gives the right procedure, but expanding on the <em>Unicode</em> issues, the <em>Python</em> interpreter can provide more insights. Jon Skeet is right (unusual) about the <code>codecs</code> module - it contains byte strings: BIGBLOCK Picking another nit, the <code>BOM</code> has a standard <em>Unicode</em> name, and it can be entered as: BIGBLOCK It is also accessible via <code>unicodedata</code>: BIGBLOCK",
        "output": "@S-Lott gives the right procedure, but expanding on the <em>Unicode</em> issues, the <em>Python</em> interpreter can provide more insights.",
        "answer": "@S-Lott gives the right procedure, but expanding on the <em>Unicode</em> issues, the <em>Python</em> interpreter can provide more insights. Jon Skeet is right (unusual) about the <code>codecs</code> module - it contains byte strings: BIGBLOCK Picking another nit, the <code>BOM</code> has a standard <em>Unicode</em> name, and it can be entered as: BIGBLOCK It is also accessible via <code>unicodedata</code>: BIGBLOCK",
        "summary": "@S-Lott gives the right procedure, but expanding on the <em>Unicode</em> issues, the <em>Python</em> interpreter can provide more insights."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One more answer: since you said you need to validate files you are <strong>generating</strong> (writing), you might want to validate content while you are writing, instead of first writing, then reading back for validation. You can probably do that with JDK API for Xml validation, if you use SAX-based writer: if so, just link in validator by calling 'Validator.validate(source, result)', where source comes from your writer, and result is where output needs to go. Alternatively if you use Stax for writing content (or a library that uses or can use stax), Woodstox can also directly support validation when using XMLStreamWriter. Here's a blog entry showing how that is done:",
        "output": "One more answer: since you said you need to validate files you are <strong>generating</strong> (writing), you might want to validate content while you are writing, instead of first writing, then reading back for validation. You can probably do that with JDK API for Xml validation, if you use SAX-based writer: if so, just link in validator by calling 'Validator.validate(source, result)', where source comes from your writer, and result is where output needs to go. Alternatively if you use Stax for writing content (or a library that uses or can use stax), Woodstox can also directly support validation when using XMLStreamWriter.",
        "answer": "One more answer: since you said you need to validate files you are <strong>generating</strong> (writing), you might want to validate content while you are writing, instead of first writing, then reading back for validation. You can probably do that with JDK API for Xml validation, if you use SAX-based writer: if so, just link in validator by calling 'Validator.validate(source, result)', where source comes from your writer, and result is where output needs to go. Alternatively if you use Stax for writing content (or a library that uses or can use stax), Woodstox can also directly support validation when using XMLStreamWriter. Here's a blog entry showing how that is done:",
        "summary": "One more answer: since you said you need to validate files you are <strong>generating</strong> (writing), you might want to validate content while you are writing, instead of first writing, then reading back for validation. You can probably do that with JDK API for Xml validation, if you use SAX-based writer: if so, just link in validator by calling 'Validator.validate(source, result)', where source comes from your writer, and result is where output needs to go. Alternatively if you use Stax for writing content (or a library that uses or can use stax), Woodstox can also directly support validation when using XMLStreamWriter."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I thought one of the main differences was that in MVC, your V reads your M directly, and goes via the C to manipulate the data, whereas in MVVM, your VM acts as an M proxy, as well as providing the available functionality to you V. If I'm not full of junk, I'm surprised no one has created a hybrid, where your VM is merely a M proxy, and C provides all functionality.",
        "output": "I thought one of the main differences was that in MVC, your V reads your M directly, and goes via the C to manipulate the data, whereas in MVVM, your VM acts as an M proxy, as well as providing the available functionality to you V.",
        "answer": "I thought one of the main differences was that in MVC, your V reads your M directly, and goes via the C to manipulate the data, whereas in MVVM, your VM acts as an M proxy, as well as providing the available functionality to you V. If I'm not full of junk, I'm surprised no one has created a hybrid, where your VM is merely a M proxy, and C provides all functionality.",
        "summary": "I thought one of the main differences was that in MVC, your V reads your M directly, and goes via the C to manipulate the data, whereas in MVVM, your VM acts as an M proxy, as well as providing the available functionality to you V."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, the problem is that <code>*</code> is a reserved character in regexes, so you need to escape it. <code>*</code> means \"zero or more of the previous expression\" (see the <code>Pattern</code> Javadocs), and you weren't giving it any previous expression, making your split expression illegal. This is why the error was a <code>PatternSyntaxException</code>.",
        "output": "No, the problem is that <code>*</code> is a reserved character in regexes, so you need to escape it.",
        "answer": "No, the problem is that <code>*</code> is a reserved character in regexes, so you need to escape it. <code>*</code> means \"zero or more of the previous expression\" (see the <code>Pattern</code> Javadocs), and you weren't giving it any previous expression, making your split expression illegal. This is why the error was a <code>PatternSyntaxException</code>.",
        "summary": "No, the problem is that <code>*</code> is a reserved character in regexes, so you need to escape it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n will simply rethrow the exception you've caught (obviously the surrounding method has to permit this via its signature etc.). The exception will maintain the original stack trace.",
        "output": "will simply rethrow the exception you've caught (obviously the surrounding method has to permit this via its signature etc.).",
        "answer": "will simply rethrow the exception you've caught (obviously the surrounding method has to permit this via its signature etc.). The exception will maintain the original stack trace.",
        "summary": "will simply rethrow the exception you've caught (obviously the surrounding method has to permit this via its signature etc.)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A daemon thread is a thread that is considered doing some tasks in the background like handling requests or various chronjobs that can exist in an application. When your program only have daemon threads remaining it will exit. That's because usually these threads work together with normal threads and provide background handling of events. You can specify that a <code>Thread</code> is a daemon one by using <code>setDaemon</code> method, they usually don't exit, neither they are interrupted.. they just stop when application stops.",
        "output": "A daemon thread is a thread that is considered doing some tasks in the background like handling requests or various chronjobs that can exist in an application.",
        "answer": "A daemon thread is a thread that is considered doing some tasks in the background like handling requests or various chronjobs that can exist in an application. When your program only have daemon threads remaining it will exit. That's because usually these threads work together with normal threads and provide background handling of events. You can specify that a <code>Thread</code> is a daemon one by using <code>setDaemon</code> method, they usually don't exit, neither they are interrupted.. they just stop when application stops.",
        "summary": "A daemon thread is a thread that is considered doing some tasks in the background like handling requests or various chronjobs that can exist in an application."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are you talking about lambda functions? Like Those things are actually quite useful. Python supports a style of programming called functional programming where you can pass functions to other functions to do stuff. Example: sets <code>mult3</code> to <code>[3, 6, 9]</code>, those elements of the original list that are multiples of 3. This is shorter (and, one could argue, clearer) than Of course, in this particular case, you could do the same thing as a list comprehension: (or even as <code>range(3,10,3)</code>), but there are many other, more sophisticated use cases where you can't use a list comprehension and a lambda function may be the shortest way to write something out. Returning a function from another function This is often used to create function wrappers, such as Python's decorators. Combining elements of an iterable sequence with <code>reduce()</code> Sorting by an alternate key I use lambda functions on a regular basis. It took me a while to get used to them, but eventually I came to understand that they're a very valuable part of the language.",
        "output": "Python supports a style of programming called functional programming where you can pass functions to other functions to do stuff. (or even as <code>range(3,10,3)</code>), but there are many other, more sophisticated use cases where you can't use a list comprehension and a lambda function may be the shortest way to write something out.",
        "answer": "Are you talking about lambda functions? Like Those things are actually quite useful. Python supports a style of programming called functional programming where you can pass functions to other functions to do stuff. Example: sets <code>mult3</code> to <code>[3, 6, 9]</code>, those elements of the original list that are multiples of 3. This is shorter (and, one could argue, clearer) than Of course, in this particular case, you could do the same thing as a list comprehension: (or even as <code>range(3,10,3)</code>), but there are many other, more sophisticated use cases where you can't use a list comprehension and a lambda function may be the shortest way to write something out. Returning a function from another function This is often used to create function wrappers, such as Python's decorators. Combining elements of an iterable sequence with <code>reduce()</code> Sorting by an alternate key I use lambda functions on a regular basis. It took me a while to get used to them, but eventually I came to understand that they're a very valuable part of the language.",
        "summary": "Python supports a style of programming called functional programming where you can pass functions to other functions to do stuff. (or even as <code>range(3,10,3)</code>), but there are many other, more sophisticated use cases where you can't use a list comprehension and a lambda function may be the shortest way to write something out."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Well, I figured it out. Apparently there is a builtin (?) function called rand: If someone answers with a more detailed answer, I'll mark that as the correct answer.",
        "output": "Apparently there is a builtin (?) function called rand:",
        "answer": "Well, I figured it out. Apparently there is a builtin (?) function called rand: If someone answers with a more detailed answer, I'll mark that as the correct answer.",
        "summary": "Apparently there is a builtin (?) function called rand:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n your code compiles here fine (even with that line uncommented. had to change it to to start getting the warning.",
        "output": "your code compiles here fine (even with that line uncommented. had to change it to",
        "answer": "your code compiles here fine (even with that line uncommented. had to change it to to start getting the warning.",
        "summary": "your code compiles here fine (even with that line uncommented. had to change it to"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Well, for me it's a thousand tiny things. Some of the macros, the GUI layout in general in Eclipse I find awful. I can't open multiple projects in different windows in Eclipse. I can open multiple projects, but then it's view based system swaps a bunch of things around on me when I switch files. IntelliJ's code inspections seem better. Its popup helpers to fix common issues is nice. Lots of simple usability things like the side bar where I can hover over a hot spot and it'll tell me every implementing subclass of a method or the method I'm implementing and from where. Whenever I've had to use, or watch someone use, Eclipse it seems like they can do most of the things I can do in IntelliJ, but it takes them longer and it's clunkier.",
        "output": "IntelliJ's code inspections seem better.",
        "answer": "Well, for me it's a thousand tiny things. Some of the macros, the GUI layout in general in Eclipse I find awful. I can't open multiple projects in different windows in Eclipse. I can open multiple projects, but then it's view based system swaps a bunch of things around on me when I switch files. IntelliJ's code inspections seem better. Its popup helpers to fix common issues is nice. Lots of simple usability things like the side bar where I can hover over a hot spot and it'll tell me every implementing subclass of a method or the method I'm implementing and from where. Whenever I've had to use, or watch someone use, Eclipse it seems like they can do most of the things I can do in IntelliJ, but it takes them longer and it's clunkier.",
        "summary": "IntelliJ's code inspections seem better."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Where to use an ID versus a class The simple difference between the two is that while a class can be used repeatedly on a page, an ID must only be used once per page. Therefore, it is appropriate to use an ID on the div element that is marking up the main content on the page, as there will only be one main content section. In contrast, you must use a class to set up alternating row colors on a table, as they are by definition going to be used more than once. IDs are an incredibly powerful tool. An element with an ID can be the target of a piece of JavaScript that manipulates the element or its contents in some way. The ID attribute can be used as the target of an internal link, replacing anchor tags with name attributes. Finally, if you make your IDs clear and logical, they can serve as a sort of Ã©ÂÂ¥Ã¦Â¸Âelf documentationÃ©Â?within the document. For example, you do not necessarily need to add a comment before a block stating that a block of code will contain the main content if the opening tag of the block has an ID of, say, \"main\", \"header\", \"footer\", etc.",
        "output": "The simple difference between the two is that while a class can be used repeatedly on a page, an ID must only be used once per page. In contrast, you must use a class to set up alternating row colors on a table, as they are by definition going to be used more than once. An element with an ID can be the target of a piece of JavaScript that manipulates the element or its contents in some way. Finally, if you make your IDs clear and logical, they can serve as a sort of Ã©ÂÂ¥Ã¦Â¸Âelf documentationÃ©Â?within the document.",
        "answer": "Where to use an ID versus a class The simple difference between the two is that while a class can be used repeatedly on a page, an ID must only be used once per page. Therefore, it is appropriate to use an ID on the div element that is marking up the main content on the page, as there will only be one main content section. In contrast, you must use a class to set up alternating row colors on a table, as they are by definition going to be used more than once. IDs are an incredibly powerful tool. An element with an ID can be the target of a piece of JavaScript that manipulates the element or its contents in some way. The ID attribute can be used as the target of an internal link, replacing anchor tags with name attributes. Finally, if you make your IDs clear and logical, they can serve as a sort of Ã©ÂÂ¥Ã¦Â¸Âelf documentationÃ©Â?within the document. For example, you do not necessarily need to add a comment before a block stating that a block of code will contain the main content if the opening tag of the block has an ID of, say, \"main\", \"header\", \"footer\", etc.",
        "summary": "The simple difference between the two is that while a class can be used repeatedly on a page, an ID must only be used once per page. In contrast, you must use a class to set up alternating row colors on a table, as they are by definition going to be used more than once. An element with an ID can be the target of a piece of JavaScript that manipulates the element or its contents in some way. Finally, if you make your IDs clear and logical, they can serve as a sort of Ã©ÂÂ¥Ã¦Â¸Âelf documentationÃ©Â?within the document."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Under Visual Studio 2008, it defaults to an <code>__int64</code> unless you define <code>_USE_32BIT_TIME_T</code>. You're better off just pretending that you don't know what it's defined as, since it can (and will) change from platform to platform.",
        "output": "Under Visual Studio 2008, it defaults to an <code>__int64</code> unless you define <code>_USE_32BIT_TIME_T</code>.",
        "answer": "Under Visual Studio 2008, it defaults to an <code>__int64</code> unless you define <code>_USE_32BIT_TIME_T</code>. You're better off just pretending that you don't know what it's defined as, since it can (and will) change from platform to platform.",
        "summary": "Under Visual Studio 2008, it defaults to an <code>__int64</code> unless you define <code>_USE_32BIT_TIME_T</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism simply means \"Many Forms\". It does not REQUIRE inheritance to achieve...as interface implementation, which is not inheritance at all, serves polymorphic needs. Arguably, interface implementation serves polymorphic needs \"Better\" than inheritance. For example, would you create a super-class to describe all things that can fly? I should think not. You would be be best served to create an interface that describes flight and leave it at that. So, since interfaces describe behavior, and method names describe behavior (to the programmer), it is not too far of a stretch to consider method overloading as a lesser form of polymorphism.",
        "output": "Polymorphism simply means \"Many Forms\". So, since interfaces describe behavior, and method names describe behavior (to the programmer), it is not too far of a stretch to consider method overloading as a lesser form of polymorphism.",
        "answer": "Polymorphism simply means \"Many Forms\". It does not REQUIRE inheritance to achieve...as interface implementation, which is not inheritance at all, serves polymorphic needs. Arguably, interface implementation serves polymorphic needs \"Better\" than inheritance. For example, would you create a super-class to describe all things that can fly? I should think not. You would be be best served to create an interface that describes flight and leave it at that. So, since interfaces describe behavior, and method names describe behavior (to the programmer), it is not too far of a stretch to consider method overloading as a lesser form of polymorphism.",
        "summary": "Polymorphism simply means \"Many Forms\". So, since interfaces describe behavior, and method names describe behavior (to the programmer), it is not too far of a stretch to consider method overloading as a lesser form of polymorphism."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Rather than dragging Boost into the equation, you could keep your string (temporarily) as a <code>char[]</code> and use <code>sprintf()</code>. But of course if you're using Boost anyway, it's really not too much of an issue.",
        "output": "Rather than dragging Boost into the equation, you could keep your string (temporarily) as a <code>char[]</code> and use <code>sprintf()</code>.",
        "answer": "Rather than dragging Boost into the equation, you could keep your string (temporarily) as a <code>char[]</code> and use <code>sprintf()</code>. But of course if you're using Boost anyway, it's really not too much of an issue.",
        "summary": "Rather than dragging Boost into the equation, you could keep your string (temporarily) as a <code>char[]</code> and use <code>sprintf()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You should iterate over keys with:",
        "output": "You should iterate over keys with:",
        "answer": "You should iterate over keys with:",
        "summary": "You should iterate over keys with:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The letters 100000000000 make up a literal integer constant, but the value is too large for the type <code>int</code>. You need to use a suffix to change the type of the literal, i.e. The suffix <code>LL</code> makes the literal into type <code>long long</code>. C is not \"smart\" enough to conclude this from the type on the left, the type is a property of the literal itself, not the context in which it is being used.",
        "output": "You need to use a suffix to change the type of the literal, i.e. The suffix <code>LL</code> makes the literal into type <code>long long</code>. C is not \"smart\" enough to conclude this from the type on the left, the type is a property of the literal itself, not the context in which it is being used.",
        "answer": "The letters 100000000000 make up a literal integer constant, but the value is too large for the type <code>int</code>. You need to use a suffix to change the type of the literal, i.e. The suffix <code>LL</code> makes the literal into type <code>long long</code>. C is not \"smart\" enough to conclude this from the type on the left, the type is a property of the literal itself, not the context in which it is being used.",
        "summary": "You need to use a suffix to change the type of the literal, i.e. The suffix <code>LL</code> makes the literal into type <code>long long</code>. C is not \"smart\" enough to conclude this from the type on the left, the type is a property of the literal itself, not the context in which it is being used."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Taking the answer from Ignacio, this works with Python 2.6: Example output: JQUBT2",
        "output": "Taking the answer from Ignacio, this works with Python 2.6:",
        "answer": "Taking the answer from Ignacio, this works with Python 2.6: Example output: JQUBT2",
        "summary": "Taking the answer from Ignacio, this works with Python 2.6:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes. For VB6, VBA (Excel), and VB.NET",
        "output": "For VB6, VBA (Excel), and VB.NET",
        "answer": "Yes. For VB6, VBA (Excel), and VB.NET",
        "summary": "For VB6, VBA (Excel), and VB.NET"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Turn <code>echo</code> off using <code>stty</code>, then back on again after.",
        "output": "Turn <code>echo</code> off using <code>stty</code>, then back on again after.",
        "answer": "Turn <code>echo</code> off using <code>stty</code>, then back on again after.",
        "summary": "Turn <code>echo</code> off using <code>stty</code>, then back on again after."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>! !</code> converts the value to the right of it to its equivalent boolean value. (Think poor man's way of \"type-casting\"). Its intent is usually to convey to the reader that the code does not care what value is in the variable, but what it's \"truth\" value is.",
        "output": "<code>! !</code> converts the value to the right of it to its equivalent boolean value.",
        "answer": "<code>! !</code> converts the value to the right of it to its equivalent boolean value. (Think poor man's way of \"type-casting\"). Its intent is usually to convey to the reader that the code does not care what value is in the variable, but what it's \"truth\" value is.",
        "summary": "<code>! !</code> converts the value to the right of it to its equivalent boolean value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your <code>countLines(String filename)</code> method throws IOException. You can't use it in a member declaration. You'll need to perform the operation in a <code>main(String[] args)</code> method. Your <code>main(String[] args)</code> method will get the IOException thrown to it by countLines and it will need to handle or declare it. Try this to just throw the IOException from main or this to handle it and wrap it in an unchecked IllegalArgumentException:",
        "output": "Your <code>countLines(String filename)</code> method throws IOException. You can't use it in a member declaration. You'll need to perform the operation in a <code>main(String[] args)</code> method.",
        "answer": "Your <code>countLines(String filename)</code> method throws IOException. You can't use it in a member declaration. You'll need to perform the operation in a <code>main(String[] args)</code> method. Your <code>main(String[] args)</code> method will get the IOException thrown to it by countLines and it will need to handle or declare it. Try this to just throw the IOException from main or this to handle it and wrap it in an unchecked IllegalArgumentException:",
        "summary": "Your <code>countLines(String filename)</code> method throws IOException. You can't use it in a member declaration. You'll need to perform the operation in a <code>main(String[] args)</code> method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I suggest the Timer, it allows you to schedule a method to be called on a very specific interval. This will not block your UI, and keep your app resonsive while the method is being executed. The other option, is the wait(); method, this will block the current thread for the specified length of time. This will cause your UI to stop responding if you do this on the UI thread.",
        "output": "I suggest the Timer, it allows you to schedule a method to be called on a very specific interval. The other option, is the wait(); method, this will block the current thread for the specified length of time.",
        "answer": "I suggest the Timer, it allows you to schedule a method to be called on a very specific interval. This will not block your UI, and keep your app resonsive while the method is being executed. The other option, is the wait(); method, this will block the current thread for the specified length of time. This will cause your UI to stop responding if you do this on the UI thread.",
        "summary": "I suggest the Timer, it allows you to schedule a method to be called on a very specific interval. The other option, is the wait(); method, this will block the current thread for the specified length of time."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Both are patterns trying to separate presentation and business logic, decoupling business logic from UI aspects Architecturally, MVP is Page Controller based approach where MVC is Front Controller based approach. That means that in MVP standard web form page life cycle is just enhanced by extracting the business logic from code behind. In other words, page is the one servicing http request. In other words, MVP IMHO is web form evolutionary type of enhancement. MVC on other hand changes completely the game because the request gets intercepted by controller class before page is loaded, the business logic is executed there and then at the end result of controller processing the data just dumped to the page (\"view\") In that sense, MVC looks (at least to me) a lot to Supervising Controller flavor of MVP enhanced with routing engine Both of them enable TDD and have downsides and upsides. Decision on how to choose one of them IMHO should be based on how much time one invested in ASP NET web form type of web development. If one would consider himself good in web forms, I would suggest MVP. If one would feel not so comfortable in things such as page life cycle etc MVC could be a way to go here. Here's yet another blog post link giving a little bit more details on this topic http://blog.vuscode.com/malovicn/archive/2007/12/18/model-view-presenter-mvp-vs-model-view-controller-mvc.aspx",
        "output": "Both are patterns trying to separate presentation and business logic, decoupling business logic from UI aspects Architecturally, MVP is Page Controller based approach where MVC is Front Controller based approach.",
        "answer": "Both are patterns trying to separate presentation and business logic, decoupling business logic from UI aspects Architecturally, MVP is Page Controller based approach where MVC is Front Controller based approach. That means that in MVP standard web form page life cycle is just enhanced by extracting the business logic from code behind. In other words, page is the one servicing http request. In other words, MVP IMHO is web form evolutionary type of enhancement. MVC on other hand changes completely the game because the request gets intercepted by controller class before page is loaded, the business logic is executed there and then at the end result of controller processing the data just dumped to the page (\"view\") In that sense, MVC looks (at least to me) a lot to Supervising Controller flavor of MVP enhanced with routing engine Both of them enable TDD and have downsides and upsides. Decision on how to choose one of them IMHO should be based on how much time one invested in ASP NET web form type of web development. If one would consider himself good in web forms, I would suggest MVP. If one would feel not so comfortable in things such as page life cycle etc MVC could be a way to go here. Here's yet another blog post link giving a little bit more details on this topic http://blog.vuscode.com/malovicn/archive/2007/12/18/model-view-presenter-mvp-vs-model-view-controller-mvc.aspx",
        "summary": "Both are patterns trying to separate presentation and business logic, decoupling business logic from UI aspects Architecturally, MVP is Page Controller based approach where MVC is Front Controller based approach."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>stdClass</code> is PHP's generic empty class, kind of like <code>Object</code> in Java or <code>object</code> in Python (Edit: but not actually used as universal base class; thanks @Ciaran for pointing this out). It is useful for anonymous objects, dynamic properties, etc. An easy way to consider the StdClass is as an alternative to associative array. See this example below that shows how <code>json_decode()</code> allows to get an StdClass instance or an associative array. Also but not shown in this example, <code>SoapClient::__soapCall</code> returns an StdClass instance. See Dynamic Properties in PHP and StdClass for more examples.",
        "output": "<code>stdClass</code> is PHP's generic empty class, kind of like <code>Object</code> in Java or <code>object</code> in Python (Edit: but not actually used as universal base class; thanks @Ciaran for pointing this out).",
        "answer": "<code>stdClass</code> is PHP's generic empty class, kind of like <code>Object</code> in Java or <code>object</code> in Python (Edit: but not actually used as universal base class; thanks @Ciaran for pointing this out). It is useful for anonymous objects, dynamic properties, etc. An easy way to consider the StdClass is as an alternative to associative array. See this example below that shows how <code>json_decode()</code> allows to get an StdClass instance or an associative array. Also but not shown in this example, <code>SoapClient::__soapCall</code> returns an StdClass instance. See Dynamic Properties in PHP and StdClass for more examples.",
        "summary": "<code>stdClass</code> is PHP's generic empty class, kind of like <code>Object</code> in Java or <code>object</code> in Python (Edit: but not actually used as universal base class; thanks @Ciaran for pointing this out)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You cant run PHP when a user clicks on a link without leaving the page unless you use AJAX. PHP is a serverside scripting language, meaning the second that the browser sees the page, there is no PHP in it. Unlike Javascript, PHP is ran completely on the server, and browser wouldn't know how to interpret it if it bit them on the rear. The only way to invoke PHP code is to make a Page request, by either refreshing the page, or using javascript to go fetch a page. In an AJAX Solution, basically the page uses javascript to send a page request to another page on your domain. Javascript then gets whatever you decide to <code>echo</code> in the response, and it can parse it and do what it wants from there. When you are creating the response, you can also do any backend stuff like updating databases.",
        "output": "You cant run PHP when a user clicks on a link without leaving the page unless you use AJAX. PHP is a serverside scripting language, meaning the second that the browser sees the page, there is no PHP in it. In an AJAX Solution, basically the page uses javascript to send a page request to another page on your domain. Javascript then gets whatever you decide to <code>echo</code> in the response, and it can parse it and do what it wants from there.",
        "answer": "You cant run PHP when a user clicks on a link without leaving the page unless you use AJAX. PHP is a serverside scripting language, meaning the second that the browser sees the page, there is no PHP in it. Unlike Javascript, PHP is ran completely on the server, and browser wouldn't know how to interpret it if it bit them on the rear. The only way to invoke PHP code is to make a Page request, by either refreshing the page, or using javascript to go fetch a page. In an AJAX Solution, basically the page uses javascript to send a page request to another page on your domain. Javascript then gets whatever you decide to <code>echo</code> in the response, and it can parse it and do what it wants from there. When you are creating the response, you can also do any backend stuff like updating databases.",
        "summary": "You cant run PHP when a user clicks on a link without leaving the page unless you use AJAX. PHP is a serverside scripting language, meaning the second that the browser sees the page, there is no PHP in it. In an AJAX Solution, basically the page uses javascript to send a page request to another page on your domain. Javascript then gets whatever you decide to <code>echo</code> in the response, and it can parse it and do what it wants from there."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Big O describes the fundamental scaling nature of an algorithm.</strong> There is a lot of information that Big O does not tell you about a given algorithm. It cuts to the bone and gives only information about the scaling nature of an algorithm, specifically how the resource use (think time or memory) of an algorithm scales in response to the \"input size\". Consider the difference between a steam engine and a rocket. They are not merely different varieties of the same thing (as, say, a Prius engine vs. a Lamborghini engine) but they are dramatically different kinds of propulsion systems, at their core. A steam engine may be faster than a toy rocket, but no steam piston engine will be able to achieve the speeds of an orbital launch vehicle. This is because these systems have different scaling characteristics with regards to the relation of fuel required (\"resource usage\") to reach a given speed (\"input size\"). Why is this so important? Because software deals with problems that may differ in size by factors up to a trillion. Consider that for a moment. The ratio between the speed necessary to travel to the Moon and human walking speed is less than 10,000:1, and that is absolutely tiny compared to the range in input sizes software may face. And because software may face an astronomical range in input sizes there is the potential for the Big O complexity of an algorithm, it's fundamental scaling nature, to trump any implementation details. Consider the canonical sorting example. Bubble-sort is O(n2) while merge-sort is O(n log n). Let's say you have two sorting applications, application A which uses bubble-sort and application B which uses merge-sort, and let's say that for input sizes of around 30 elements application A is 1,000x faster than application B at sorting. If you never have to sort much more than 30 elements then it's obvious that you should prefer application A, as it is much faster at these input sizes. However, if you find that you may have to sort ten million items then what you'd expect is that application B actually ends up being thousands of times faster than application A in this case, entirely due to the way each algorithm scales.",
        "output": "<strong>Big O describes the fundamental scaling nature of an algorithm.</strong> It cuts to the bone and gives only information about the scaling nature of an algorithm, specifically how the resource use (think time or memory) of an algorithm scales in response to the \"input size\". Because software deals with problems that may differ in size by factors up to a trillion.",
        "answer": "<strong>Big O describes the fundamental scaling nature of an algorithm.</strong> There is a lot of information that Big O does not tell you about a given algorithm. It cuts to the bone and gives only information about the scaling nature of an algorithm, specifically how the resource use (think time or memory) of an algorithm scales in response to the \"input size\". Consider the difference between a steam engine and a rocket. They are not merely different varieties of the same thing (as, say, a Prius engine vs. a Lamborghini engine) but they are dramatically different kinds of propulsion systems, at their core. A steam engine may be faster than a toy rocket, but no steam piston engine will be able to achieve the speeds of an orbital launch vehicle. This is because these systems have different scaling characteristics with regards to the relation of fuel required (\"resource usage\") to reach a given speed (\"input size\"). Why is this so important? Because software deals with problems that may differ in size by factors up to a trillion. Consider that for a moment. The ratio between the speed necessary to travel to the Moon and human walking speed is less than 10,000:1, and that is absolutely tiny compared to the range in input sizes software may face. And because software may face an astronomical range in input sizes there is the potential for the Big O complexity of an algorithm, it's fundamental scaling nature, to trump any implementation details. Consider the canonical sorting example. Bubble-sort is O(n2) while merge-sort is O(n log n). Let's say you have two sorting applications, application A which uses bubble-sort and application B which uses merge-sort, and let's say that for input sizes of around 30 elements application A is 1,000x faster than application B at sorting. If you never have to sort much more than 30 elements then it's obvious that you should prefer application A, as it is much faster at these input sizes. However, if you find that you may have to sort ten million items then what you'd expect is that application B actually ends up being thousands of times faster than application A in this case, entirely due to the way each algorithm scales.",
        "summary": "<strong>Big O describes the fundamental scaling nature of an algorithm.</strong> It cuts to the bone and gives only information about the scaling nature of an algorithm, specifically how the resource use (think time or memory) of an algorithm scales in response to the \"input size\". Because software deals with problems that may differ in size by factors up to a trillion."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another cause for this exception is when you include a related table in an ObjectQuery, but type in the wrong navigation property name. Example:",
        "output": "Another cause for this exception is when you include a related table in an ObjectQuery, but type in the wrong navigation property name.",
        "answer": "Another cause for this exception is when you include a related table in an ObjectQuery, but type in the wrong navigation property name. Example:",
        "summary": "Another cause for this exception is when you include a related table in an ObjectQuery, but type in the wrong navigation property name."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I actually have a similar problem. I have a page with multiple radio buttons; each button will set the title and description meta tags of the page, via JavaScript upon change. For example, if users select the first button, the meta tags will say: BIGBLOCK If the user select the second button, this changes the meta tags to: BIGBLOCK ... and so on. I have confirmed that the code is working fine via Firebug (i.e. I can see that those two tags were properly changed). Apparently, Facebook Share only pulls in the title and description meta tags that are available upon page load. The changes to those two tags post page load are completely ignored. Does anybody have any ideas on how to solve this? That is, to force Facebook to get the latest values that are change after the page loads.",
        "output": "Apparently, Facebook Share only pulls in the title and description meta tags that are available upon page load. The changes to those two tags post page load are completely ignored.",
        "answer": "I actually have a similar problem. I have a page with multiple radio buttons; each button will set the title and description meta tags of the page, via JavaScript upon change. For example, if users select the first button, the meta tags will say: BIGBLOCK If the user select the second button, this changes the meta tags to: BIGBLOCK ... and so on. I have confirmed that the code is working fine via Firebug (i.e. I can see that those two tags were properly changed). Apparently, Facebook Share only pulls in the title and description meta tags that are available upon page load. The changes to those two tags post page load are completely ignored. Does anybody have any ideas on how to solve this? That is, to force Facebook to get the latest values that are change after the page loads.",
        "summary": "Apparently, Facebook Share only pulls in the title and description meta tags that are available upon page load. The changes to those two tags post page load are completely ignored."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As an addendum to Don's answer, not only does groovy add a <code>.toInteger()</code> method to <code>String</code>s, it also adds <code>toBigDecimal()</code>, <code>toBigInteger()</code>, <code>toBoolean()</code>, <code>toCharacter()</code>, <code>toDouble()</code>, <code>toFloat()</code>, <code>toList()</code>, and <code>toLong()</code>. In the same vein, groovy also adds <code>is*</code> eqivalents to all of those that return <code>true</code> if the <code>String</code> in question can be parsed into the format in question. The relevant GDK page is here.",
        "output": "As an addendum to Don's answer, not only does groovy add a <code>.toInteger()</code> method to <code>String</code>s, it also adds <code>toBigDecimal()</code>, <code>toBigInteger()</code>, <code>toBoolean()</code>, <code>toCharacter()</code>, <code>toDouble()</code>, <code>toFloat()</code>, <code>toList()</code>, and <code>toLong()</code>.",
        "answer": "As an addendum to Don's answer, not only does groovy add a <code>.toInteger()</code> method to <code>String</code>s, it also adds <code>toBigDecimal()</code>, <code>toBigInteger()</code>, <code>toBoolean()</code>, <code>toCharacter()</code>, <code>toDouble()</code>, <code>toFloat()</code>, <code>toList()</code>, and <code>toLong()</code>. In the same vein, groovy also adds <code>is*</code> eqivalents to all of those that return <code>true</code> if the <code>String</code> in question can be parsed into the format in question. The relevant GDK page is here.",
        "summary": "As an addendum to Don's answer, not only does groovy add a <code>.toInteger()</code> method to <code>String</code>s, it also adds <code>toBigDecimal()</code>, <code>toBigInteger()</code>, <code>toBoolean()</code>, <code>toCharacter()</code>, <code>toDouble()</code>, <code>toFloat()</code>, <code>toList()</code>, and <code>toLong()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The connection string is <strong>not</strong> in <strong><em>AppSettings</em></strong>. What you're looking for is in:",
        "output": "The connection string is <strong>not</strong> in <strong><em>AppSettings</em></strong>.",
        "answer": "The connection string is <strong>not</strong> in <strong><em>AppSettings</em></strong>. What you're looking for is in:",
        "summary": "The connection string is <strong>not</strong> in <strong><em>AppSettings</em></strong>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Newtang's observation about the security rules aside, how are you going to know that anyone who views your page will have the correct images at <code>c:\\localfile.jpg</code>? You can't. Even if you think you can, you can't. It presupposes a windows environment, for one thing.",
        "output": "It presupposes a windows environment, for one thing.",
        "answer": "Newtang's observation about the security rules aside, how are you going to know that anyone who views your page will have the correct images at <code>c:\\localfile.jpg</code>? You can't. Even if you think you can, you can't. It presupposes a windows environment, for one thing.",
        "summary": "It presupposes a windows environment, for one thing."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>instanceof</code> can only be used with reference types, not primitive types. <code>isAssignableFrom()</code> can be used with any class objects: BIGBLOCK See http://java.sun.com/javase/6/docs/api/java/lang/Class.html#isAssignableFrom(java.lang.Class).",
        "output": "<code>instanceof</code> can only be used with reference types, not primitive types. <code>isAssignableFrom()</code> can be used with any class objects: BIGBLOCK",
        "answer": "<code>instanceof</code> can only be used with reference types, not primitive types. <code>isAssignableFrom()</code> can be used with any class objects: BIGBLOCK See http://java.sun.com/javase/6/docs/api/java/lang/Class.html#isAssignableFrom(java.lang.Class).",
        "summary": "<code>instanceof</code> can only be used with reference types, not primitive types. <code>isAssignableFrom()</code> can be used with any class objects: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Put a breakpoint on the <code>return</code> line. You are running it in the debugger, right?",
        "output": "Put a breakpoint on the <code>return</code> line.",
        "answer": "Put a breakpoint on the <code>return</code> line. You are running it in the debugger, right?",
        "summary": "Put a breakpoint on the <code>return</code> line."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have a Joomla Module that displays stuff... and I want to be able to share that stuff on facebook and not the Page's Title Meta Description... so my workaround is to have a secret .php file on the server that gets executed when it detects the FB's BIGBLOCK and pass variables with the URL that formats that particular page with the title and meta desciption of the item I want to share from my joomla module... a <code>name=\"fb_share\" share_url=\"MYURL/sharer.php?title=TITLE&amp;desc=DESC\"</code> hope this helps...",
        "output": "I have a Joomla Module that displays stuff... and I want to be able to share that stuff on facebook and not the Page's Title Meta Description... so my workaround is to have a secret .php file on the server that gets executed when it detects the FB's BIGBLOCK and pass variables with the URL that formats that particular page with the title and meta desciption of the item I want to share from my joomla module...",
        "answer": "I have a Joomla Module that displays stuff... and I want to be able to share that stuff on facebook and not the Page's Title Meta Description... so my workaround is to have a secret .php file on the server that gets executed when it detects the FB's BIGBLOCK and pass variables with the URL that formats that particular page with the title and meta desciption of the item I want to share from my joomla module... a <code>name=\"fb_share\" share_url=\"MYURL/sharer.php?title=TITLE&amp;desc=DESC\"</code> hope this helps...",
        "summary": "I have a Joomla Module that displays stuff... and I want to be able to share that stuff on facebook and not the Page's Title Meta Description... so my workaround is to have a secret .php file on the server that gets executed when it detects the FB's BIGBLOCK and pass variables with the URL that formats that particular page with the title and meta desciption of the item I want to share from my joomla module..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n glogg could also be considered, for a different usage: Caveat (reported by Simon Tewsi in the comments, Feb. 2013) One caveat - has two search functions, <code>Main Search</code> and <code>Quick Find</code>. The lower one, which I assume is <code>Quick Find</code>, is at least an order of magnitude slower than the upper one, which is fast.",
        "output": "Caveat (reported by Simon Tewsi in the comments, Feb. 2013) One caveat - has two search functions, <code>Main Search</code> and <code>Quick Find</code>.",
        "answer": "glogg could also be considered, for a different usage: Caveat (reported by Simon Tewsi in the comments, Feb. 2013) One caveat - has two search functions, <code>Main Search</code> and <code>Quick Find</code>. The lower one, which I assume is <code>Quick Find</code>, is at least an order of magnitude slower than the upper one, which is fast.",
        "summary": "Caveat (reported by Simon Tewsi in the comments, Feb. 2013) One caveat - has two search functions, <code>Main Search</code> and <code>Quick Find</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <li>Go to the Build Path settings in the project properties.<code>Windows -&gt; Preferences -&gt; Java Compiler</code> <li>Remove the JRE System Library <li>Add another JRE with a \"perfect match\" <li>clean and build your project again. It worked for me.",
        "output": "<li>Go to the Build Path settings in the project properties.<code>Windows -&gt; Preferences -&gt; Java Compiler</code> <li>Remove the JRE System Library <li>Add another JRE with a \"perfect match\" <li>clean and build your project again.",
        "answer": "<li>Go to the Build Path settings in the project properties.<code>Windows -&gt; Preferences -&gt; Java Compiler</code> <li>Remove the JRE System Library <li>Add another JRE with a \"perfect match\" <li>clean and build your project again. It worked for me.",
        "summary": "<li>Go to the Build Path settings in the project properties.<code>Windows -&gt; Preferences -&gt; Java Compiler</code> <li>Remove the JRE System Library <li>Add another JRE with a \"perfect match\" <li>clean and build your project again."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The compiler actually adds an argument to non-static methods. It adds a <code>this pointer/reference. This is also the reason why a static method can not use this</code>, because there is no object.",
        "output": "The compiler actually adds an argument to non-static methods. It adds a <code>this pointer/reference.",
        "answer": "The compiler actually adds an argument to non-static methods. It adds a <code>this pointer/reference. This is also the reason why a static method can not use this</code>, because there is no object.",
        "summary": "The compiler actually adds an argument to non-static methods. It adds a <code>this pointer/reference."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n EOF is -1 because that's how it's defined. The name is provided by the standard library headers that you <code>#include</code>. They make it equal to -1 because it has to be something that can't be mistaken for an actual byte read by <code>getchar()</code>. <code>getchar()</code> reports the values of actual bytes using positive number (0 up to 255 inclusive), so -1 works fine for this. The <code>!=</code> operator means \"not equal\". 0 stands for false, and anything else stands for true. So what happens is, we call the <code>getchar()</code> function, and compare the result to -1 (EOF). If the result was not equal to EOF, then the result is true, because things that are not equal are not equal. If the result was equal to EOF, then the result is false, because things that are equal are not (not equal). The call to <code>getchar()</code> returns EOF when you reach the \"end of file\". As far as C is concerned, the 'standard input' (the data you are giving to your program by typing in the command window) is just like a file. Of course, you can always type more, so you need an explicit way to say \"I'm done\". On Windows systems, this is control-Z. On Unix systems, this is control-D. The example in the book is not \"wrong\". It depends on <strong>what you actually want to do</strong>. Reading until EOF means that you read everything, until the user says \"I'm done\", and then you can't read any more. Reading until '\\n' means that you read a line of input. Reading until '\\0' is a bad idea if you expect the user to type the input, because it is either hard or impossible to produce this byte with a keyboard at the command prompt :)",
        "output": "EOF is -1 because that's how it's defined. They make it equal to -1 because it has to be something that can't be mistaken for an actual byte read by <code>getchar()</code>. The <code>!=</code> operator means \"not equal\". 0 stands for false, and anything else stands for true. Of course, you can always type more, so you need an explicit way to say \"I'm done\". On Windows systems, this is control-Z. On Unix systems, this is control-D. Reading until EOF means that you read everything, until the user says \"I'm done\", and then you can't read any more. Reading until '\\n' means that you read a line of input. Reading until '\\0' is a bad idea if you expect the user to type the input, because it is either hard or impossible to produce this byte with a keyboard at the command prompt :)",
        "answer": "EOF is -1 because that's how it's defined. The name is provided by the standard library headers that you <code>#include</code>. They make it equal to -1 because it has to be something that can't be mistaken for an actual byte read by <code>getchar()</code>. <code>getchar()</code> reports the values of actual bytes using positive number (0 up to 255 inclusive), so -1 works fine for this. The <code>!=</code> operator means \"not equal\". 0 stands for false, and anything else stands for true. So what happens is, we call the <code>getchar()</code> function, and compare the result to -1 (EOF). If the result was not equal to EOF, then the result is true, because things that are not equal are not equal. If the result was equal to EOF, then the result is false, because things that are equal are not (not equal). The call to <code>getchar()</code> returns EOF when you reach the \"end of file\". As far as C is concerned, the 'standard input' (the data you are giving to your program by typing in the command window) is just like a file. Of course, you can always type more, so you need an explicit way to say \"I'm done\". On Windows systems, this is control-Z. On Unix systems, this is control-D. The example in the book is not \"wrong\". It depends on <strong>what you actually want to do</strong>. Reading until EOF means that you read everything, until the user says \"I'm done\", and then you can't read any more. Reading until '\\n' means that you read a line of input. Reading until '\\0' is a bad idea if you expect the user to type the input, because it is either hard or impossible to produce this byte with a keyboard at the command prompt :)",
        "summary": "EOF is -1 because that's how it's defined. They make it equal to -1 because it has to be something that can't be mistaken for an actual byte read by <code>getchar()</code>. The <code>!=</code> operator means \"not equal\". 0 stands for false, and anything else stands for true. Of course, you can always type more, so you need an explicit way to say \"I'm done\". On Windows systems, this is control-Z. On Unix systems, this is control-D. Reading until EOF means that you read everything, until the user says \"I'm done\", and then you can't read any more. Reading until '\\n' means that you read a line of input. Reading until '\\0' is a bad idea if you expect the user to type the input, because it is either hard or impossible to produce this byte with a keyboard at the command prompt :)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To be honest, as other posters have mentioned, Wikipedia has a very good article on this so have a look there. This type of error is very common and often called other things such as Access Violation or General Protection Fault. They are no different in C, C++ or any other language that allows pointers. These kinds of errors are usually caused by pointers that are Used before being properly initialised Used after the memory they point to has been realloced or deleted. Used in an indexed array where the index is outside of the array bounds. This is generally only when you're doing pointer math on traditional arrays or c-strings, not STL / Boost based collections (in C++.)",
        "output": "They are no different in C, C++ or any other language that allows pointers.",
        "answer": "To be honest, as other posters have mentioned, Wikipedia has a very good article on this so have a look there. This type of error is very common and often called other things such as Access Violation or General Protection Fault. They are no different in C, C++ or any other language that allows pointers. These kinds of errors are usually caused by pointers that are Used before being properly initialised Used after the memory they point to has been realloced or deleted. Used in an indexed array where the index is outside of the array bounds. This is generally only when you're doing pointer math on traditional arrays or c-strings, not STL / Boost based collections (in C++.)",
        "summary": "They are no different in C, C++ or any other language that allows pointers."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You want the <code>resetForm()</code> method: BIGBLOCK I grabbed it from the source of one of their demos. Note: This code won't work for Bootstrap 3.",
        "output": "You want the <code>resetForm()</code> method: BIGBLOCK",
        "answer": "You want the <code>resetForm()</code> method: BIGBLOCK I grabbed it from the source of one of their demos. Note: This code won't work for Bootstrap 3.",
        "summary": "You want the <code>resetForm()</code> method: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language (the way objects are built in JavaScript). As stated in the MDN, some JavaScript is not JSON, and some JSON is not JavaScript. An example of  where this is used is web services responses. In the 'old' days, web services used XML as their primary data format for transmitting back data, but since JSON appeared (The JSON format is specified in RFC 4627 by Douglas Crockford), it has been the preferred format because it is much more lightweight You can find a lot more info on the official JSON web site. JSON is built on two structures: A collection of name/value pairs. In various languages, this is realized as an object, record, struct, dictionary, hash table, keyed list, or associative array. An ordered list of values. In most languages, this is realized as an array, vector, list, or sequence. JSON Structure Here is an example of JSON data: JSON in JavaScript JSON (in Javascript) is a string! People often assume all Javascript objects are JSON and that JSON is a Javascript object. This is incorrect. In Javascript <code>var x = {x:y}</code> is not JSON, this is a Javascript object. The two are not the same thing. The JSON equivalent (represented in the Javascript language) would be <code>var x = '{\"x\":\"y\"}'</code>. <code>x</code> is an object of type string not an object in it's own right. To turn this into a fully fledged Javascript object you must first parse it, <code>var x = JSON.parse('{\"x\":\"y\"}');</code>, <code>x</code> is now an object but this is not JSON anymore. See Javascript object Vs JSON When working with JSON and JavaScript, you may be tempted to use the <code>eval</code> function to evaluate the result returned in the callback, but this is not suggested since there are two characters (U+2028 &amp; U+2029) valid in JSON but not in JavaScript (read more of this here). Therefore, one must always try to use Crockford's script that checks for a valid JSON before evaluating it. Link to the script explanation is found here and here is a direct link to the js file. Every major browser nowadays has its own implementation for this. Example on how to use the JSON parser (with the json from the above code snippet): The JSON parser also offers another very useful method, <code>stringify</code>. This method accepts a JavaScript object as a parameter, and outputs back a string with JSON format. This is useful for when you want to send data back to the server: The above two methods (<code>parse</code> and <code>stringify</code>) also take a second parameter, which is a function that will be called for every key and value at every level of the final result, and each value will be replaced by result of your inputted function. (More on this here) Btw, for all of you out there who think JSON is just for JavaScript, check out this post that explains and confirms otherwise. References JSON.org Wikipedia Json in 3 minutes (Thanks mson) Using JSON with Yahoo! Web Services (Thanks gljivar) JSON to CSV Converter Alternative JSON to CSV Converter JSON Lint (JSON validator)",
        "output": "JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language (the way objects are built in JavaScript).",
        "answer": "JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language (the way objects are built in JavaScript). As stated in the MDN, some JavaScript is not JSON, and some JSON is not JavaScript. An example of  where this is used is web services responses. In the 'old' days, web services used XML as their primary data format for transmitting back data, but since JSON appeared (The JSON format is specified in RFC 4627 by Douglas Crockford), it has been the preferred format because it is much more lightweight You can find a lot more info on the official JSON web site. JSON is built on two structures: A collection of name/value pairs. In various languages, this is realized as an object, record, struct, dictionary, hash table, keyed list, or associative array. An ordered list of values. In most languages, this is realized as an array, vector, list, or sequence. JSON Structure Here is an example of JSON data: JSON in JavaScript JSON (in Javascript) is a string! People often assume all Javascript objects are JSON and that JSON is a Javascript object. This is incorrect. In Javascript <code>var x = {x:y}</code> is not JSON, this is a Javascript object. The two are not the same thing. The JSON equivalent (represented in the Javascript language) would be <code>var x = '{\"x\":\"y\"}'</code>. <code>x</code> is an object of type string not an object in it's own right. To turn this into a fully fledged Javascript object you must first parse it, <code>var x = JSON.parse('{\"x\":\"y\"}');</code>, <code>x</code> is now an object but this is not JSON anymore. See Javascript object Vs JSON When working with JSON and JavaScript, you may be tempted to use the <code>eval</code> function to evaluate the result returned in the callback, but this is not suggested since there are two characters (U+2028 &amp; U+2029) valid in JSON but not in JavaScript (read more of this here). Therefore, one must always try to use Crockford's script that checks for a valid JSON before evaluating it. Link to the script explanation is found here and here is a direct link to the js file. Every major browser nowadays has its own implementation for this. Example on how to use the JSON parser (with the json from the above code snippet): The JSON parser also offers another very useful method, <code>stringify</code>. This method accepts a JavaScript object as a parameter, and outputs back a string with JSON format. This is useful for when you want to send data back to the server: The above two methods (<code>parse</code> and <code>stringify</code>) also take a second parameter, which is a function that will be called for every key and value at every level of the final result, and each value will be replaced by result of your inputted function. (More on this here) Btw, for all of you out there who think JSON is just for JavaScript, check out this post that explains and confirms otherwise. References JSON.org Wikipedia Json in 3 minutes (Thanks mson) Using JSON with Yahoo! Web Services (Thanks gljivar) JSON to CSV Converter Alternative JSON to CSV Converter JSON Lint (JSON validator)",
        "summary": "JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language (the way objects are built in JavaScript)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n All you have to do is to remove the table row (<code>&lt;tr&gt;</code>) tag from your table. For example here is the code to remove the last row from the table: <code>$('#myTable tr:last').remove();</code> *Code above was taken from this jQuery Howto post.",
        "output": "All you have to do is to remove the table row (<code>&lt;tr&gt;</code>) tag from your table.",
        "answer": "All you have to do is to remove the table row (<code>&lt;tr&gt;</code>) tag from your table. For example here is the code to remove the last row from the table: <code>$('#myTable tr:last').remove();</code> *Code above was taken from this jQuery Howto post.",
        "summary": "All you have to do is to remove the table row (<code>&lt;tr&gt;</code>) tag from your table."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You may want to double check the authorized_keys file permissions: BIGBLOCK Newer SSH server versions are very picky on this respect.",
        "output": "You may want to double check the authorized_keys file permissions: BIGBLOCK",
        "answer": "You may want to double check the authorized_keys file permissions: BIGBLOCK Newer SSH server versions are very picky on this respect.",
        "summary": "You may want to double check the authorized_keys file permissions: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One solution that worked for me was to delete the bin/ and obj/ folders and rebuild the solution.",
        "output": "One solution that worked for me was to delete the bin/ and obj/ folders and rebuild the solution.",
        "answer": "One solution that worked for me was to delete the bin/ and obj/ folders and rebuild the solution.",
        "summary": "One solution that worked for me was to delete the bin/ and obj/ folders and rebuild the solution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n So, you have a com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure   java.net.ConnectException: Connection refused I'm quoting from this answer which also contains a step-by-step MySQL+JDBC tutorial: If you get a <code>SQLException: Connection refused</code> or <code>Connection timed out</code> or a MySQL specific , then it means that the DB isn't reachable at all. This can have one or more of the following causes:   IP address or hostname in JDBC URL is wrong.   Hostname in JDBC URL is not recognized by local DNS server.   Port number is missing or wrong in JDBC URL.   DB server is down.   DB server doesn't accept TCP/IP connections.   DB server has run out of connections.   Something in between Java and DB is blocking connections, e.g. a firewall or proxy. To solve the one or the other, follow the following advices:   Verify and test them with <code>ping</code>.   Refresh DNS or use IP address in JDBC URL instead.   Verify it based on <code>my.cnf</code> of MySQL DB.   Start the DB.   Verify if mysqld is started without the <code>--skip-networking option</code>.   Restart the DB and fix your code accordingly that it closes connections in <code>finally</code>.   Disable firewall and/or configure firewall/proxy to allow/forward the port. See also: How should I connect to JDBC database / datasource in a servlet based application? Is it safe to use a static java.sql.Connection instance in a multithreaded system?",
        "output": "I'm quoting from this answer which also contains a step-by-step MySQL+JDBC tutorial:",
        "answer": "So, you have a com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure   java.net.ConnectException: Connection refused I'm quoting from this answer which also contains a step-by-step MySQL+JDBC tutorial: If you get a <code>SQLException: Connection refused</code> or <code>Connection timed out</code> or a MySQL specific , then it means that the DB isn't reachable at all. This can have one or more of the following causes:   IP address or hostname in JDBC URL is wrong.   Hostname in JDBC URL is not recognized by local DNS server.   Port number is missing or wrong in JDBC URL.   DB server is down.   DB server doesn't accept TCP/IP connections.   DB server has run out of connections.   Something in between Java and DB is blocking connections, e.g. a firewall or proxy. To solve the one or the other, follow the following advices:   Verify and test them with <code>ping</code>.   Refresh DNS or use IP address in JDBC URL instead.   Verify it based on <code>my.cnf</code> of MySQL DB.   Start the DB.   Verify if mysqld is started without the <code>--skip-networking option</code>.   Restart the DB and fix your code accordingly that it closes connections in <code>finally</code>.   Disable firewall and/or configure firewall/proxy to allow/forward the port. See also: How should I connect to JDBC database / datasource in a servlet based application? Is it safe to use a static java.sql.Connection instance in a multithreaded system?",
        "summary": "I'm quoting from this answer which also contains a step-by-step MySQL+JDBC tutorial:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n if what you need is the width and height of the frame in the circle, why not pass the DrawFrame width and height into the DrawCircle constructor: BIGBLOCK you could also add a couple new methods to DrawCircle: BIGBLOCK or even: BIGBLOCK if you go down this route, you will need to update DrawFrame to make a local var of the DrawCircle on which to call these methods. <strong>edit:</strong> when changing the DrawCircle constructor as described at the top of my post, dont forget to add the width and height to the call to the constructor in DrawFrame: BIGBLOCK",
        "output": "BIGBLOCK BIGBLOCK when changing the DrawCircle constructor as described at the top of my post, dont forget to add the width and height to the call to the constructor in DrawFrame: BIGBLOCK",
        "answer": "if what you need is the width and height of the frame in the circle, why not pass the DrawFrame width and height into the DrawCircle constructor: BIGBLOCK you could also add a couple new methods to DrawCircle: BIGBLOCK or even: BIGBLOCK if you go down this route, you will need to update DrawFrame to make a local var of the DrawCircle on which to call these methods. <strong>edit:</strong> when changing the DrawCircle constructor as described at the top of my post, dont forget to add the width and height to the call to the constructor in DrawFrame: BIGBLOCK",
        "summary": "BIGBLOCK BIGBLOCK when changing the DrawCircle constructor as described at the top of my post, dont forget to add the width and height to the call to the constructor in DrawFrame: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK This needs to be called on the video tag ele­ment, for example, to full­screen the first video tag on the page use: BIGBLOCK <strong>Notice: this is outdated answer and no longer relevant.</strong>",
        "output": "This needs to be called on the video tag ele­ment, for example, to full­screen the first video tag on the page use: BIGBLOCK",
        "answer": "BIGBLOCK This needs to be called on the video tag ele­ment, for example, to full­screen the first video tag on the page use: BIGBLOCK <strong>Notice: this is outdated answer and no longer relevant.</strong>",
        "summary": "This needs to be called on the video tag ele­ment, for example, to full­screen the first video tag on the page use: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.",
        "output": "if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.",
        "answer": "if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.",
        "summary": "if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To the database, they end up being the same. For you, though, you'll have to use that second syntax in some situations. For the sake of editing queries that end up having to use it (finding out you needed a left join where you had a straight join), and for consistency, I'd pattern only on the 2nd method. It'll make reading queries easier.",
        "output": "To the database, they end up being the same. For the sake of editing queries that end up having to use it (finding out you needed a left join where you had a straight join), and for consistency, I'd pattern only on the 2nd method.",
        "answer": "To the database, they end up being the same. For you, though, you'll have to use that second syntax in some situations. For the sake of editing queries that end up having to use it (finding out you needed a left join where you had a straight join), and for consistency, I'd pattern only on the 2nd method. It'll make reading queries easier.",
        "summary": "To the database, they end up being the same. For the sake of editing queries that end up having to use it (finding out you needed a left join where you had a straight join), and for consistency, I'd pattern only on the 2nd method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can have a look at <code>scipy.stats</code>: BIGBLOCK",
        "output": "You can have a look at <code>scipy.stats</code>: BIGBLOCK",
        "answer": "You can have a look at <code>scipy.stats</code>: BIGBLOCK",
        "summary": "You can have a look at <code>scipy.stats</code>: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Generally you can define the precision of a number in SQL by defining it with parameters. For most cases this will be <code>NUMERIC(10,2)</code> or <code>Decimal(10,2)</code> - will define a column as a Number with 10 total digits with a precision of 2 (decimal places). <em>Edited for clarity</em>",
        "output": "For most cases this will be <code>NUMERIC(10,2)</code> or <code>Decimal(10,2)</code> - will define a column as a Number with 10 total digits with a precision of 2 (decimal places).",
        "answer": "Generally you can define the precision of a number in SQL by defining it with parameters. For most cases this will be <code>NUMERIC(10,2)</code> or <code>Decimal(10,2)</code> - will define a column as a Number with 10 total digits with a precision of 2 (decimal places). <em>Edited for clarity</em>",
        "summary": "For most cases this will be <code>NUMERIC(10,2)</code> or <code>Decimal(10,2)</code> - will define a column as a Number with 10 total digits with a precision of 2 (decimal places)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Bar</code> is guaranteed not to change the object it is being invoked on. See the section about const correctness in the C++ FAQ, for example.",
        "output": "<code>Bar</code> is guaranteed not to change the object it is being invoked on.",
        "answer": "<code>Bar</code> is guaranteed not to change the object it is being invoked on. See the section about const correctness in the C++ FAQ, for example.",
        "summary": "<code>Bar</code> is guaranteed not to change the object it is being invoked on."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To make a bash script that will cd to a select directory : Create the script file Then create an alias in your startup file. I created a startup file where I dump all my aliases and custom functions. Then I source this file into my .bashrc to have it set on each boot. For example, create a master aliases/functions file: /scripts/mastercode.sh (Put the alias in this file.) Then at the end of your .bashrc file: Now its easy to cd to your java directory, just type cdjava and you are there.",
        "output": "To make a bash script that will cd to a select directory :",
        "answer": "To make a bash script that will cd to a select directory : Create the script file Then create an alias in your startup file. I created a startup file where I dump all my aliases and custom functions. Then I source this file into my .bashrc to have it set on each boot. For example, create a master aliases/functions file: /scripts/mastercode.sh (Put the alias in this file.) Then at the end of your .bashrc file: Now its easy to cd to your java directory, just type cdjava and you are there.",
        "summary": "To make a bash script that will cd to a select directory :"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could try using the <code>&lt;col&gt;</code> tag manage table styling for all rows but you will need to set the <code>table-layout:fixed</code> style on the <code>&lt;table&gt;</code> or the tables css class and set the <code>overflow</code> style for the cells https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col and this be your CSS",
        "output": "You could try using the <code>&lt;col&gt;</code> tag manage table styling for all rows but you will need to set the <code>table-layout:fixed</code> style on the <code>&lt;table&gt;</code> or the tables css class and set the <code>overflow</code> style for the cells",
        "answer": "You could try using the <code>&lt;col&gt;</code> tag manage table styling for all rows but you will need to set the <code>table-layout:fixed</code> style on the <code>&lt;table&gt;</code> or the tables css class and set the <code>overflow</code> style for the cells https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col and this be your CSS",
        "summary": "You could try using the <code>&lt;col&gt;</code> tag manage table styling for all rows but you will need to set the <code>table-layout:fixed</code> style on the <code>&lt;table&gt;</code> or the tables css class and set the <code>overflow</code> style for the cells"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's sample code. This is inspired from code found on the Python Cookbook site (can't find the exact link) BIGBLOCK",
        "output": "Here's sample code. BIGBLOCK",
        "answer": "Here's sample code. This is inspired from code found on the Python Cookbook site (can't find the exact link) BIGBLOCK",
        "summary": "Here's sample code. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To be clear about what is going on here: <li>The recommended way to set the temporary directory location is to set the System property called \"java.io.tmpdir\", e.g. by giving the option <code>-Djava.io.tmpdir=/mytempdir</code> to the <code>java</code> command. The property can also be changed from within a program by calling <code>System.setProperty(\"java.io.tmpdir\", \"/mytempdir)</code> ... modulo sandbox security issues. <li>If you don't explicitly set the \"java.io.tmpdir\" property on startup, the JVM initializes it to a <em>platform specific</em> default value. For Windows, the default is obtained by a call to a Win32 API method. For Linux / Solaris the default is apparently hard-wired. For other JVMs it could be something else. Empirically, the \"TMP\" environment variable works on Windows (with current JVMs), but not on other platforms. If you care about portability you should explicitly set the system property.",
        "output": "<li>The recommended way to set the temporary directory location is to set the System property called \"java.io.tmpdir\", e.g. by giving the option <code>-Djava.io.tmpdir=/mytempdir</code> to the <code>java</code> command. <li>If you don't explicitly set the \"java.io.tmpdir\" property on startup, the JVM initializes it to a <em>platform specific</em> default value. If you care about portability you should explicitly set the system property.",
        "answer": "To be clear about what is going on here: <li>The recommended way to set the temporary directory location is to set the System property called \"java.io.tmpdir\", e.g. by giving the option <code>-Djava.io.tmpdir=/mytempdir</code> to the <code>java</code> command. The property can also be changed from within a program by calling <code>System.setProperty(\"java.io.tmpdir\", \"/mytempdir)</code> ... modulo sandbox security issues. <li>If you don't explicitly set the \"java.io.tmpdir\" property on startup, the JVM initializes it to a <em>platform specific</em> default value. For Windows, the default is obtained by a call to a Win32 API method. For Linux / Solaris the default is apparently hard-wired. For other JVMs it could be something else. Empirically, the \"TMP\" environment variable works on Windows (with current JVMs), but not on other platforms. If you care about portability you should explicitly set the system property.",
        "summary": "<li>The recommended way to set the temporary directory location is to set the System property called \"java.io.tmpdir\", e.g. by giving the option <code>-Djava.io.tmpdir=/mytempdir</code> to the <code>java</code> command. <li>If you don't explicitly set the \"java.io.tmpdir\" property on startup, the JVM initializes it to a <em>platform specific</em> default value. If you care about portability you should explicitly set the system property."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As all the above comments have mentioned is the fact that its the remainder. i just wanted to put my 2 pence on where i use the \"mod\" keyword alot in xsl To get a html table with rows that have alternative colours (Red, Blue, Red, Blue, Red etc...) i use BIGBLOCK",
        "output": "i just wanted to put my 2 pence on where i use the \"mod\" keyword alot in xsl",
        "answer": "As all the above comments have mentioned is the fact that its the remainder. i just wanted to put my 2 pence on where i use the \"mod\" keyword alot in xsl To get a html table with rows that have alternative colours (Red, Blue, Red, Blue, Red etc...) i use BIGBLOCK",
        "summary": "i just wanted to put my 2 pence on where i use the \"mod\" keyword alot in xsl"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This can also be the result of using reflection. If you have code that reflects on a class and extracts a method by name (eg: with <code>Class.getDeclaredMethod(\"someMethodName\", .....)</code>) then any time that method name changes, such as during a refactor, you will need to remember to update the parameters to the reflection method to match the new method signature, or the <code>getDeclaredMethod</code> call will throw a <code>NoSuchMethodException</code>. If this is the reason, then the stack trace should show the point that the reflection method is invoked, and you'll just need to update the parameters to match the actual method signature. In my experience, this comes up occasionally when unit testing private methods/fields, and using a <code>TestUtilities</code> class to extract fields for test verification. (Generally with legacy code that wasn't designed with unit testing in mind.)",
        "output": "If you have code that reflects on a class and extracts a method by name (eg: with <code>Class.getDeclaredMethod(\"someMethodName\", .....)</code>) then any time that method name changes, such as during a refactor, you will need to remember to update the parameters to the reflection method to match the new method signature, or the <code>getDeclaredMethod</code> call will throw a <code>NoSuchMethodException</code>. If this is the reason, then the stack trace should show the point that the reflection method is invoked, and you'll just need to update the parameters to match the actual method signature.",
        "answer": "This can also be the result of using reflection. If you have code that reflects on a class and extracts a method by name (eg: with <code>Class.getDeclaredMethod(\"someMethodName\", .....)</code>) then any time that method name changes, such as during a refactor, you will need to remember to update the parameters to the reflection method to match the new method signature, or the <code>getDeclaredMethod</code> call will throw a <code>NoSuchMethodException</code>. If this is the reason, then the stack trace should show the point that the reflection method is invoked, and you'll just need to update the parameters to match the actual method signature. In my experience, this comes up occasionally when unit testing private methods/fields, and using a <code>TestUtilities</code> class to extract fields for test verification. (Generally with legacy code that wasn't designed with unit testing in mind.)",
        "summary": "If you have code that reflects on a class and extracts a method by name (eg: with <code>Class.getDeclaredMethod(\"someMethodName\", .....)</code>) then any time that method name changes, such as during a refactor, you will need to remember to update the parameters to the reflection method to match the new method signature, or the <code>getDeclaredMethod</code> call will throw a <code>NoSuchMethodException</code>. If this is the reason, then the stack trace should show the point that the reflection method is invoked, and you'll just need to update the parameters to match the actual method signature."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.",
        "output": "Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.",
        "answer": "Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.",
        "summary": "Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can do this from Javascript 1.7 onwards using \"destructuring assignments\". Note that these are not available in older Javascript versions (meaning __________________________ÃÂ¢________________________________ neither with ECMAScript 3rd nor 5th editions). It allows you to assign to 1+ variables simultaneously: You can also use object destructuring combined with property value shorthand to name the return values in an object and pick out the ones you want: And by the way, don't be fooled by the fact that ECMAScript allows you to <code>return 1, 2, ...</code>. What really happens there is not what might seem. An expression in return statement __________________________ÃÂ¢________________________________ <code>1, 2, 3</code> __________________________ÃÂ¢________________________________ is nothing but a comma operator applied to numeric literals (<code>1</code> , <code>2</code>, and <code>3</code>) sequentially, which eventually evaluates to the value of its last expression __________________________ÃÂ¢________________________________ <code>3</code>. That's why <code>return 1, 2, 3</code> is functionally identical to nothing more but <code>return 3</code>.",
        "output": "You can do this from Javascript 1.7 onwards using \"destructuring assignments\". You can also use object destructuring combined with property value shorthand to name the return values in an object and pick out the ones you want:",
        "answer": "You can do this from Javascript 1.7 onwards using \"destructuring assignments\". Note that these are not available in older Javascript versions (meaning __________________________ÃÂ¢________________________________ neither with ECMAScript 3rd nor 5th editions). It allows you to assign to 1+ variables simultaneously: You can also use object destructuring combined with property value shorthand to name the return values in an object and pick out the ones you want: And by the way, don't be fooled by the fact that ECMAScript allows you to <code>return 1, 2, ...</code>. What really happens there is not what might seem. An expression in return statement __________________________ÃÂ¢________________________________ <code>1, 2, 3</code> __________________________ÃÂ¢________________________________ is nothing but a comma operator applied to numeric literals (<code>1</code> , <code>2</code>, and <code>3</code>) sequentially, which eventually evaluates to the value of its last expression __________________________ÃÂ¢________________________________ <code>3</code>. That's why <code>return 1, 2, 3</code> is functionally identical to nothing more but <code>return 3</code>.",
        "summary": "You can do this from Javascript 1.7 onwards using \"destructuring assignments\". You can also use object destructuring combined with property value shorthand to name the return values in an object and pick out the ones you want:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try <code>os.chdir</code>         Change the current working directory to path. Availability: Unix, Windows.",
        "output": "Try <code>os.chdir</code>",
        "answer": "Try <code>os.chdir</code>         Change the current working directory to path. Availability: Unix, Windows.",
        "summary": "Try <code>os.chdir</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just <code>awk</code>, no need combination of tools.",
        "output": "Just <code>awk</code>, no need combination of tools.",
        "answer": "Just <code>awk</code>, no need combination of tools.",
        "summary": "Just <code>awk</code>, no need combination of tools."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The keyword self does <strong>NOT</strong> refer merely to the 'current class', at least not in a way that restricts you to static members. Within the context of a non-static member, <code>self</code> also provides a way of bypassing the vtable (see wiki on vtable) for the current object. Just as you can use <code>parent::methodName()</code> to call the parents version of a function, so you can call <code>self::methodName()</code> to call the current classes implementation of a method. This will output: Hello, I'm Ludwig the geek Goodbye from Ludwig the person <code>sayHello()</code> uses the <code>$this</code> pointer, so the vtable is invoked to call <code>Geek::getTitle()</code>.<code>sayGoodbye()</code> uses <code>self::getTitle()</code>, so the vtable is not used, and <code>Person::getTitle()</code> is called. In both cases, we are dealing with the method of an instantiated object, and have access to the <code>$this</code> pointer within the called functions.",
        "output": "The keyword self does <strong>NOT</strong> refer merely to the 'current class', at least not in a way that restricts you to static members. Within the context of a non-static member, <code>self</code> also provides a way of bypassing the vtable (see wiki on vtable) for the current object. Just as you can use <code>parent::methodName()</code> to call the parents version of a function, so you can call <code>self::methodName()</code> to call the current classes implementation of a method.",
        "answer": "The keyword self does <strong>NOT</strong> refer merely to the 'current class', at least not in a way that restricts you to static members. Within the context of a non-static member, <code>self</code> also provides a way of bypassing the vtable (see wiki on vtable) for the current object. Just as you can use <code>parent::methodName()</code> to call the parents version of a function, so you can call <code>self::methodName()</code> to call the current classes implementation of a method. This will output: Hello, I'm Ludwig the geek Goodbye from Ludwig the person <code>sayHello()</code> uses the <code>$this</code> pointer, so the vtable is invoked to call <code>Geek::getTitle()</code>.<code>sayGoodbye()</code> uses <code>self::getTitle()</code>, so the vtable is not used, and <code>Person::getTitle()</code> is called. In both cases, we are dealing with the method of an instantiated object, and have access to the <code>$this</code> pointer within the called functions.",
        "summary": "The keyword self does <strong>NOT</strong> refer merely to the 'current class', at least not in a way that restricts you to static members. Within the context of a non-static member, <code>self</code> also provides a way of bypassing the vtable (see wiki on vtable) for the current object. Just as you can use <code>parent::methodName()</code> to call the parents version of a function, so you can call <code>self::methodName()</code> to call the current classes implementation of a method."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK However, if you're using Qt: BIGBLOCK",
        "output": "BIGBLOCK However, if you're using Qt: BIGBLOCK",
        "answer": "BIGBLOCK However, if you're using Qt: BIGBLOCK",
        "summary": "BIGBLOCK However, if you're using Qt: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Usually this means that your schema and mapping files are not in synch and there is a renamed or missing column someplace.",
        "output": "Usually this means that your schema and mapping files are not in synch and there is a renamed or missing column someplace.",
        "answer": "Usually this means that your schema and mapping files are not in synch and there is a renamed or missing column someplace.",
        "summary": "Usually this means that your schema and mapping files are not in synch and there is a renamed or missing column someplace."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you already have java on your PC, and the bin directory is in your path (in most cases), you can use the command line: or if not in your path: Complete set of options for the jar tool available here. Examples:",
        "output": "If you already have java on your PC, and the bin directory is in your path (in most cases), you can use the command line:",
        "answer": "If you already have java on your PC, and the bin directory is in your path (in most cases), you can use the command line: or if not in your path: Complete set of options for the jar tool available here. Examples:",
        "summary": "If you already have java on your PC, and the bin directory is in your path (in most cases), you can use the command line:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A pattern emerges when several people (or teams) arrives at similar or identical solutions. A lot of people still use singletons in their original form or using factory templates (good discussion in Alexandrescu's Modern C++ Design). Concurrency and difficulty in managing the lifetime of the object are the main obstacles, with the former easily managed as you suggest. Like all choices, Singleton has its fair share of ups and downs. I think they can be used in moderation, especially for objects that survive the application life span. The fact that they resemble (and probably are) globals have presumably set off the purists.",
        "output": "Concurrency and difficulty in managing the lifetime of the object are the main obstacles, with the former easily managed as you suggest. I think they can be used in moderation, especially for objects that survive the application life span.",
        "answer": "A pattern emerges when several people (or teams) arrives at similar or identical solutions. A lot of people still use singletons in their original form or using factory templates (good discussion in Alexandrescu's Modern C++ Design). Concurrency and difficulty in managing the lifetime of the object are the main obstacles, with the former easily managed as you suggest. Like all choices, Singleton has its fair share of ups and downs. I think they can be used in moderation, especially for objects that survive the application life span. The fact that they resemble (and probably are) globals have presumably set off the purists.",
        "summary": "Concurrency and difficulty in managing the lifetime of the object are the main obstacles, with the former easily managed as you suggest. I think they can be used in moderation, especially for objects that survive the application life span."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n jQuery stores events in the following: BIGBLOCK Doing a <code>console.log($(\"a#somefoo\").data(\"events\"))</code> should list the events attached to that element.",
        "output": "Doing a <code>console.log($(\"a#somefoo\").data(\"events\"))</code> should list the events attached to that element.",
        "answer": "jQuery stores events in the following: BIGBLOCK Doing a <code>console.log($(\"a#somefoo\").data(\"events\"))</code> should list the events attached to that element.",
        "summary": "Doing a <code>console.log($(\"a#somefoo\").data(\"events\"))</code> should list the events attached to that element."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To list installed Python packages, you can use <code>yolk -l</code>. You'll need to use <code>easy_install yolk</code> first though.",
        "output": "To list installed Python packages, you can use <code>yolk -l</code>.",
        "answer": "To list installed Python packages, you can use <code>yolk -l</code>. You'll need to use <code>easy_install yolk</code> first though.",
        "summary": "To list installed Python packages, you can use <code>yolk -l</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A library implements functionality for a narrowly-scoped purpose whereas a framework tends to be a collection of libraries providing support for a wider range of features. For example, the library System.Drawing.dll handles drawing functionality, but is only one part of the overall .NET framework.",
        "output": "A library implements functionality for a narrowly-scoped purpose whereas a framework tends to be a collection of libraries providing support for a wider range of features.",
        "answer": "A library implements functionality for a narrowly-scoped purpose whereas a framework tends to be a collection of libraries providing support for a wider range of features. For example, the library System.Drawing.dll handles drawing functionality, but is only one part of the overall .NET framework.",
        "summary": "A library implements functionality for a narrowly-scoped purpose whereas a framework tends to be a collection of libraries providing support for a wider range of features."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>stdClass</code> is just a generic 'empty' class that's used when casting other types to objects. Despite what the other two answers say, <code>stdClass</code> is not the base class for objects in PHP. This can be demonstrated fairly easily: I don't believe there's a concept of a base object in PHP",
        "output": "<code>stdClass</code> is just a generic 'empty' class that's used when casting other types to objects.",
        "answer": "<code>stdClass</code> is just a generic 'empty' class that's used when casting other types to objects. Despite what the other two answers say, <code>stdClass</code> is not the base class for objects in PHP. This can be demonstrated fairly easily: I don't believe there's a concept of a base object in PHP",
        "summary": "<code>stdClass</code> is just a generic 'empty' class that's used when casting other types to objects."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Owen has a good answer. If you want just the key, and you are working with an array this might also be useful.",
        "output": "If you want just the key, and you are working with an array this might also be useful.",
        "answer": "Owen has a good answer. If you want just the key, and you are working with an array this might also be useful.",
        "summary": "If you want just the key, and you are working with an array this might also be useful."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've been using Python for a few years and I've never run in to a case where I've needed lambda. Really, as the tutorial states, it's just for syntactic sugar.",
        "output": "Really, as the tutorial states, it's just for syntactic sugar.",
        "answer": "I've been using Python for a few years and I've never run in to a case where I've needed lambda. Really, as the tutorial states, it's just for syntactic sugar.",
        "summary": "Really, as the tutorial states, it's just for syntactic sugar."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The classic example, Dogs and cats are animals, animals have the method makeNoise. I can iterate through an array of animals calling makeNoise on them and expect that they would do there respective implementation. The calling code does not have to know what specific animal they are. Thats what I think of as polymorphism.",
        "output": "The classic example, Dogs and cats are animals, animals have the method makeNoise. I can iterate through an array of animals calling makeNoise on them and expect that they would do there respective implementation. The calling code does not have to know what specific animal they are.",
        "answer": "The classic example, Dogs and cats are animals, animals have the method makeNoise. I can iterate through an array of animals calling makeNoise on them and expect that they would do there respective implementation. The calling code does not have to know what specific animal they are. Thats what I think of as polymorphism.",
        "summary": "The classic example, Dogs and cats are animals, animals have the method makeNoise. I can iterate through an array of animals calling makeNoise on them and expect that they would do there respective implementation. The calling code does not have to know what specific animal they are."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n That depends on what you mean. If you just want to get rid of them, do this: <em>(Update: Apparently you want to keep digits as well, use the second lines in that case)</em> BIGBLOCK or the equivalent: BIGBLOCK (All of these can be significantly improved by precompiling the regex pattern and storing it in a constant) Or, with Guava: BIGBLOCK But if you want to turn accented characters into something sensible that's still ascii, look at these questions: <li>Converting Java String to ASCII <li>Java change Ã¨Â°Â©Ã¨ÂÂÃ¨ÂÂÃ§ÂÂÃ§Â?to aeouu <li>Ã¨Â?Ã¦Â?Ã¨Â?Ã¥Â¸?Ã¥Â³?Ã¨Â?Ã¥Â³?Ã¥Â³?Ã¥Â³?Ã¨Â?Ã¥Â?Ã¨Â?Ã¥Â²?Ã¦Â²?Ã©Â¹?--> n or Remove diacritical marks from unicode chars",
        "output": "If you just want to get rid of them, do this: BIGBLOCK or the equivalent: BIGBLOCK But if you want to turn accented characters into something sensible that's still ascii, look at these questions: <li>Converting Java String to ASCII <li>Java change Ã¨Â°Â©Ã¨ÂÂÃ¨ÂÂÃ§ÂÂÃ§Â?to aeouu <li>Ã¨Â?Ã¦Â?Ã¨Â?Ã¥Â¸?Ã¥Â³?Ã¨Â?Ã¥Â³?Ã¥Â³?Ã¥Â³?Ã¨Â?Ã¥Â?Ã¨Â?Ã¥Â²?Ã¦Â²?Ã©Â¹?--> n or Remove diacritical marks from unicode chars",
        "answer": "That depends on what you mean. If you just want to get rid of them, do this: <em>(Update: Apparently you want to keep digits as well, use the second lines in that case)</em> BIGBLOCK or the equivalent: BIGBLOCK (All of these can be significantly improved by precompiling the regex pattern and storing it in a constant) Or, with Guava: BIGBLOCK But if you want to turn accented characters into something sensible that's still ascii, look at these questions: <li>Converting Java String to ASCII <li>Java change Ã¨Â°Â©Ã¨ÂÂÃ¨ÂÂÃ§ÂÂÃ§Â?to aeouu <li>Ã¨Â?Ã¦Â?Ã¨Â?Ã¥Â¸?Ã¥Â³?Ã¨Â?Ã¥Â³?Ã¥Â³?Ã¥Â³?Ã¨Â?Ã¥Â?Ã¨Â?Ã¥Â²?Ã¦Â²?Ã©Â¹?--> n or Remove diacritical marks from unicode chars",
        "summary": "If you just want to get rid of them, do this: BIGBLOCK or the equivalent: BIGBLOCK But if you want to turn accented characters into something sensible that's still ascii, look at these questions: <li>Converting Java String to ASCII <li>Java change Ã¨Â°Â©Ã¨ÂÂÃ¨ÂÂÃ§ÂÂÃ§Â?to aeouu <li>Ã¨Â?Ã¦Â?Ã¨Â?Ã¥Â¸?Ã¥Â³?Ã¨Â?Ã¥Â³?Ã¥Â³?Ã¥Â³?Ã¨Â?Ã¥Â?Ã¨Â?Ã¥Â²?Ã¦Â²?Ã©Â¹?--> n or Remove diacritical marks from unicode chars"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As an alternative to <code>sun.misc.BASE64Decoder</code> or non-core libraries, look at <code>javax.mail.internet.MimeUtility.decode()</code>. Link with full code: Encode/Decode to/from Base64",
        "output": "As an alternative to <code>sun.misc.BASE64Decoder</code> or non-core libraries, look at <code>javax.mail.internet.MimeUtility.decode()</code>.",
        "answer": "As an alternative to <code>sun.misc.BASE64Decoder</code> or non-core libraries, look at <code>javax.mail.internet.MimeUtility.decode()</code>. Link with full code: Encode/Decode to/from Base64",
        "summary": "As an alternative to <code>sun.misc.BASE64Decoder</code> or non-core libraries, look at <code>javax.mail.internet.MimeUtility.decode()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have already included common-logging1.1.1.jar and ... Are you sure you spelled the name of the JAR file exactly right? I think it should probably be <code>commons-logging-1.1.1.jar</code> (note the extra <code>-</code> in the name). Also check if the directory name is correct. <code>NoClassDefFoundError</code> always means that a class cannot be found, so most likely your class path is not correct.",
        "output": "I think it should probably be <code>commons-logging-1.1.1.jar</code> (note the extra <code>-</code> in the name). Also check if the directory name is correct.",
        "answer": "I have already included common-logging1.1.1.jar and ... Are you sure you spelled the name of the JAR file exactly right? I think it should probably be <code>commons-logging-1.1.1.jar</code> (note the extra <code>-</code> in the name). Also check if the directory name is correct. <code>NoClassDefFoundError</code> always means that a class cannot be found, so most likely your class path is not correct.",
        "summary": "I think it should probably be <code>commons-logging-1.1.1.jar</code> (note the extra <code>-</code> in the name). Also check if the directory name is correct."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's only going to work for a List and not any IEnumerable, but in LINQ there's this: @Jonathan I didn't say it was a great answer, I just said it was just showing it was possible to do what he asked :) @Graphain I wouldn't expect it to be fast - I'm not entirely sure how it works, it could reiterate through the entire list each time to find a matching object, which would be a helluvalot of compares. That said, List might keep an index of each object along with the count. Jonathan seems to have a better idea, if he would elaborate? It would be better to just keep a count of where you're up to in the foreach though, simpler, and more adaptable.",
        "output": "It's only going to work for a List and not any IEnumerable, but in LINQ there's this: That said, List might keep an index of each object along with the count. It would be better to just keep a count of where you're up to in the foreach though, simpler, and more adaptable.",
        "answer": "It's only going to work for a List and not any IEnumerable, but in LINQ there's this: @Jonathan I didn't say it was a great answer, I just said it was just showing it was possible to do what he asked :) @Graphain I wouldn't expect it to be fast - I'm not entirely sure how it works, it could reiterate through the entire list each time to find a matching object, which would be a helluvalot of compares. That said, List might keep an index of each object along with the count. Jonathan seems to have a better idea, if he would elaborate? It would be better to just keep a count of where you're up to in the foreach though, simpler, and more adaptable.",
        "summary": "It's only going to work for a List and not any IEnumerable, but in LINQ there's this: That said, List might keep an index of each object along with the count. It would be better to just keep a count of where you're up to in the foreach though, simpler, and more adaptable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This version <li>accounts for escaped quotes <li>controls backtracking BIGBLOCK",
        "output": "<li>accounts for escaped quotes <li>controls backtracking BIGBLOCK",
        "answer": "This version <li>accounts for escaped quotes <li>controls backtracking BIGBLOCK",
        "summary": "<li>accounts for escaped quotes <li>controls backtracking BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I found that I had bound jFormattedCheckBox1.foreground to jCheckBox1[${selected}].... this was the problem. Thank you for your help. It seems that a color should not be able to be bound to a boolean. I guess bindings are an \"advance feature\"? I found the problem by deleting all of the controls, then running, then undoing and then deleting one at a time. When I found the offending control, i examined the properties.",
        "output": "I found that I had bound jFormattedCheckBox1.foreground to jCheckBox1[${selected}].... this was the problem.",
        "answer": "I found that I had bound jFormattedCheckBox1.foreground to jCheckBox1[${selected}].... this was the problem. Thank you for your help. It seems that a color should not be able to be bound to a boolean. I guess bindings are an \"advance feature\"? I found the problem by deleting all of the controls, then running, then undoing and then deleting one at a time. When I found the offending control, i examined the properties.",
        "summary": "I found that I had bound jFormattedCheckBox1.foreground to jCheckBox1[${selected}].... this was the problem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Aside from suggesting you read the docs for <code>retrieve()</code> carefully (http://docs.python.org/library/urllib.html#urllib.URLopener.retrieve), I would suggest actually calling <code>read()</code> on the content of the response, and then saving it into a file of your choosing rather than leaving it in the temporary file that retrieve creates.",
        "output": "Aside from suggesting you read the docs for <code>retrieve()</code> carefully (http://docs.python.org/library/urllib.html#urllib.URLopener.retrieve), I would suggest actually calling <code>read()</code> on the content of the response, and then saving it into a file of your choosing rather than leaving it in the temporary file that retrieve creates.",
        "answer": "Aside from suggesting you read the docs for <code>retrieve()</code> carefully (http://docs.python.org/library/urllib.html#urllib.URLopener.retrieve), I would suggest actually calling <code>read()</code> on the content of the response, and then saving it into a file of your choosing rather than leaving it in the temporary file that retrieve creates.",
        "summary": "Aside from suggesting you read the docs for <code>retrieve()</code> carefully (http://docs.python.org/library/urllib.html#urllib.URLopener.retrieve), I would suggest actually calling <code>read()</code> on the content of the response, and then saving it into a file of your choosing rather than leaving it in the temporary file that retrieve creates."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you use the enumerable mixin (as Rails does) you can do something similar to the php snippet listed. Just use the each_slice method and flatten the hash. Less monkey-patching required. However, this does cause problems when you have a recursive array or a hash with array values. In ruby 1.9 this problem is solved with a parameter to the flatten method that specifies how deep to recurse. As for the question of whether this is a code smell, I'm not sure. Usually when I have to bend over backwards to iterate over something I step back and realize I'm attacking the problem wrong.",
        "output": "If you use the enumerable mixin (as Rails does) you can do something similar to the php snippet listed. Just use the each_slice method and flatten the hash.",
        "answer": "If you use the enumerable mixin (as Rails does) you can do something similar to the php snippet listed. Just use the each_slice method and flatten the hash. Less monkey-patching required. However, this does cause problems when you have a recursive array or a hash with array values. In ruby 1.9 this problem is solved with a parameter to the flatten method that specifies how deep to recurse. As for the question of whether this is a code smell, I'm not sure. Usually when I have to bend over backwards to iterate over something I step back and realize I'm attacking the problem wrong.",
        "summary": "If you use the enumerable mixin (as Rails does) you can do something similar to the php snippet listed. Just use the each_slice method and flatten the hash."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is matching because it is finding \"a match\" not a match of the full string. You can fix this by changing your regexp to specifically look for the beginning and end of the string.",
        "output": "You can fix this by changing your regexp to specifically look for the beginning and end of the string.",
        "answer": "It is matching because it is finding \"a match\" not a match of the full string. You can fix this by changing your regexp to specifically look for the beginning and end of the string.",
        "summary": "You can fix this by changing your regexp to specifically look for the beginning and end of the string."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They're there to allow for different levels of encapsulation",
        "output": "They're there to allow for different levels of encapsulation",
        "answer": "They're there to allow for different levels of encapsulation",
        "summary": "They're there to allow for different levels of encapsulation"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Thoughts (based on pain in the past): <li>do you have DNS and line-of-sight to the server? <li>are you using the correct name from the certificate? <li>is the certificate still valid? <li>is a badly configured load balancer messing things up? <li>does the new server machine have the clock set correctly (i.e. so that the UTC time is correct [ignore local time, it is largely irrelevent]) - this certainly matters for WCF, so may impact regular SOAP? <li>is there a certificate trust chain issue? if you browse from the server to the soap service, can you get SSL? <li>related to the above - has the certificate been installed to the correct location? (you may need a copy in Trusted Root Certification Authorities) <li>is the server's machine-level proxy set correctly? (which different to the user's proxy); see proxycfg for XP / 2003 (not sure about Vista etc)",
        "output": "<li>do you have DNS and line-of-sight to the server? <li>are you using the correct name from the certificate? <li>is the certificate still valid? <li>is a badly configured load balancer messing things up? <li>does the new server machine have the clock set correctly (i.e. so that the UTC time is correct [ignore local time, it is largely irrelevent]) - this certainly matters for WCF, so may impact regular SOAP? <li>is there a certificate trust chain issue? if you browse from the server to the soap service, can you get SSL? <li>related to the above - has the certificate been installed to the correct location? (you may need a copy in Trusted Root Certification Authorities) <li>is the server's machine-level proxy set correctly?",
        "answer": "Thoughts (based on pain in the past): <li>do you have DNS and line-of-sight to the server? <li>are you using the correct name from the certificate? <li>is the certificate still valid? <li>is a badly configured load balancer messing things up? <li>does the new server machine have the clock set correctly (i.e. so that the UTC time is correct [ignore local time, it is largely irrelevent]) - this certainly matters for WCF, so may impact regular SOAP? <li>is there a certificate trust chain issue? if you browse from the server to the soap service, can you get SSL? <li>related to the above - has the certificate been installed to the correct location? (you may need a copy in Trusted Root Certification Authorities) <li>is the server's machine-level proxy set correctly? (which different to the user's proxy); see proxycfg for XP / 2003 (not sure about Vista etc)",
        "summary": "<li>do you have DNS and line-of-sight to the server? <li>are you using the correct name from the certificate? <li>is the certificate still valid? <li>is a badly configured load balancer messing things up? <li>does the new server machine have the clock set correctly (i.e. so that the UTC time is correct [ignore local time, it is largely irrelevent]) - this certainly matters for WCF, so may impact regular SOAP? <li>is there a certificate trust chain issue? if you browse from the server to the soap service, can you get SSL? <li>related to the above - has the certificate been installed to the correct location? (you may need a copy in Trusted Root Certification Authorities) <li>is the server's machine-level proxy set correctly?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To compare the current branch against <code>master</code> To compare any pair of branches That should do what you need, if I understand you correctly.",
        "output": "To compare the current branch against <code>master</code> To compare any pair of branches",
        "answer": "To compare the current branch against <code>master</code> To compare any pair of branches That should do what you need, if I understand you correctly.",
        "summary": "To compare the current branch against <code>master</code> To compare any pair of branches"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An unsigned char uses the bit that is reserved for the sign of a regular char as another number. This changes the range to [0 - 255] as opposed to [-128 - 127]. Generally unsigned chars are used when you don't want a sign. This will make a difference when doing things like shifting bits (shift extends the sign) and other things when dealing with a char as a byte rather than using it as a number.",
        "output": "An unsigned char uses the bit that is reserved for the sign of a regular char as another number. This changes the range to [0 - 255] as opposed to [-128 - 127]. Generally unsigned chars are used when you don't want a sign.",
        "answer": "An unsigned char uses the bit that is reserved for the sign of a regular char as another number. This changes the range to [0 - 255] as opposed to [-128 - 127]. Generally unsigned chars are used when you don't want a sign. This will make a difference when doing things like shifting bits (shift extends the sign) and other things when dealing with a char as a byte rather than using it as a number.",
        "summary": "An unsigned char uses the bit that is reserved for the sign of a regular char as another number. This changes the range to [0 - 255] as opposed to [-128 - 127]. Generally unsigned chars are used when you don't want a sign."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It depends on what you mean. Do you want actual tab characters in your file to <em>appear</em> 4 spaces wide, or by \"tab\" do you actually mean an <em>indent</em>, generated by pressing the tab key, which would result in the file literally containing (up to) 4 space characters for each \"tab\" you type? Depending on your answer, one of the following sets ofsettings should work for you: <li><strong>For tab characters that appear 4-spaces-wide</strong>: If you're using actual tab character in your source code you probably also want these settings (these are actually the defaults, but you may want to set them defensively): Finally, if you want an indent to correspond to a single tab, you should also use: <li><strong>For indents that consist of 4 space characters</strong> but are entered with the tab key: <strong>To make the above settings permanent addthese lines to your vimrc.</strong> In case you need to make adjustments, or would simply like to understand what these options all mean, here's a breakdown of what each option means: The width of a hard tabstop measured in \"spaces\" -- effectively the (maximum) width of an actual tab character. The size of an \"indent\". It's also measured in spaces, so if your code base indents with tab characters then you want <code>shiftwidth</code> to equal the number of tab characters times <code>tabstop</code>. This is also used by things like the <code>=</code>, <code>&gt;</code> and <code>&lt;</code> commands. Setting this to a non-zero value other than <code>tabstop</code> will make the tab key (in insert mode)   insert a combination of spaces (and possibly tabs) to <em>simulate</em> tab stops at this width. Enabling this will make the tab key (in insert mode) insert spaces instead of   tab characters. This also affects the behavior of the <code>retab</code> command. Enabling this will make the tab key (in insert mode) insert spaces or tabs to  go to the next indent  of the next tabstop when the cursor is at the beginning of a line (i.e. the  only preceding characters are whitespace). For more details on any of these see <code>:help '<em>optionname</em>'</code> in vim (e.g. <code>:help 'tabstop'</code>)",
        "output": "<li><strong>For tab characters that appear 4-spaces-wide</strong>: <li><strong>For indents that consist of 4 space characters</strong> but are entered with the tab key: <strong>To make the above settings permanent addthese lines to your vimrc.</strong>",
        "answer": "It depends on what you mean. Do you want actual tab characters in your file to <em>appear</em> 4 spaces wide, or by \"tab\" do you actually mean an <em>indent</em>, generated by pressing the tab key, which would result in the file literally containing (up to) 4 space characters for each \"tab\" you type? Depending on your answer, one of the following sets ofsettings should work for you: <li><strong>For tab characters that appear 4-spaces-wide</strong>: If you're using actual tab character in your source code you probably also want these settings (these are actually the defaults, but you may want to set them defensively): Finally, if you want an indent to correspond to a single tab, you should also use: <li><strong>For indents that consist of 4 space characters</strong> but are entered with the tab key: <strong>To make the above settings permanent addthese lines to your vimrc.</strong> In case you need to make adjustments, or would simply like to understand what these options all mean, here's a breakdown of what each option means: The width of a hard tabstop measured in \"spaces\" -- effectively the (maximum) width of an actual tab character. The size of an \"indent\". It's also measured in spaces, so if your code base indents with tab characters then you want <code>shiftwidth</code> to equal the number of tab characters times <code>tabstop</code>. This is also used by things like the <code>=</code>, <code>&gt;</code> and <code>&lt;</code> commands. Setting this to a non-zero value other than <code>tabstop</code> will make the tab key (in insert mode)   insert a combination of spaces (and possibly tabs) to <em>simulate</em> tab stops at this width. Enabling this will make the tab key (in insert mode) insert spaces instead of   tab characters. This also affects the behavior of the <code>retab</code> command. Enabling this will make the tab key (in insert mode) insert spaces or tabs to  go to the next indent  of the next tabstop when the cursor is at the beginning of a line (i.e. the  only preceding characters are whitespace). For more details on any of these see <code>:help '<em>optionname</em>'</code> in vim (e.g. <code>:help 'tabstop'</code>)",
        "summary": "<li><strong>For tab characters that appear 4-spaces-wide</strong>: <li><strong>For indents that consist of 4 space characters</strong> but are entered with the tab key: <strong>To make the above settings permanent addthese lines to your vimrc.</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You may want to read this: \"__ut Of MemoryÃ¨ÂÂÃ©Â©Â´?Does Not Refer to Physical Memory\" by Eric Lippert. In short, and very simplified, \"Out of memory\" does not really mean that the amount of available memory is too small. The most common reason is that within the current address space, there is no contiguous portion of memory that is large enough to serve the wanted allocation. If you have 100 blocks, each 4 MB large, that is not going to help you when you need one 5 MB block. Key Points: the data storage that we call __rocess memoryÃ¨ÂÂÃ©Â©Â´?is in my opinion best visualized as a massive file on disk. RAM can be seen as merely a performance optimization Total amount of virtual memory your program consumes is really not hugely relevant to its performance \"running out of RAM\" seldom results in an __ut of memoryÃ¨ÂÂÃ©Â©Â´?error. Instead of an error, it results in bad performance because the full cost of the fact that storage is actually on disk suddenly becomes relevant.",
        "output": "In short, and very simplified, \"Out of memory\" does not really mean that the amount of available memory is too small. The most common reason is that within the current address space, there is no contiguous portion of memory that is large enough to serve the wanted allocation.",
        "answer": "You may want to read this: \"__ut Of MemoryÃ¨ÂÂÃ©Â©Â´?Does Not Refer to Physical Memory\" by Eric Lippert. In short, and very simplified, \"Out of memory\" does not really mean that the amount of available memory is too small. The most common reason is that within the current address space, there is no contiguous portion of memory that is large enough to serve the wanted allocation. If you have 100 blocks, each 4 MB large, that is not going to help you when you need one 5 MB block. Key Points: the data storage that we call __rocess memoryÃ¨ÂÂÃ©Â©Â´?is in my opinion best visualized as a massive file on disk. RAM can be seen as merely a performance optimization Total amount of virtual memory your program consumes is really not hugely relevant to its performance \"running out of RAM\" seldom results in an __ut of memoryÃ¨ÂÂÃ©Â©Â´?error. Instead of an error, it results in bad performance because the full cost of the fact that storage is actually on disk suddenly becomes relevant.",
        "summary": "In short, and very simplified, \"Out of memory\" does not really mean that the amount of available memory is too small. The most common reason is that within the current address space, there is no contiguous portion of memory that is large enough to serve the wanted allocation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Hejthis is a modified version which works OK in FF @least for me and inserts at the carets position BIGBLOCK",
        "output": "Hejthis is a modified version which works OK in FF @least for me and inserts at the carets position",
        "answer": "Hejthis is a modified version which works OK in FF @least for me and inserts at the carets position BIGBLOCK",
        "summary": "Hejthis is a modified version which works OK in FF @least for me and inserts at the carets position"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Not that it is ultra important, but using can also be used to change resources on the fly. Yes disposable as mentioned earlier, but perhaps specifically you don't want the resources they mismatch with other resources during the rest of your execution. So you want to dispose of it so it doesn't interfere elsewhere.",
        "output": "Not that it is ultra important, but using can also be used to change resources on the fly. Yes disposable as mentioned earlier, but perhaps specifically you don't want the resources they mismatch with other resources during the rest of your execution.",
        "answer": "Not that it is ultra important, but using can also be used to change resources on the fly. Yes disposable as mentioned earlier, but perhaps specifically you don't want the resources they mismatch with other resources during the rest of your execution. So you want to dispose of it so it doesn't interfere elsewhere.",
        "summary": "Not that it is ultra important, but using can also be used to change resources on the fly. Yes disposable as mentioned earlier, but perhaps specifically you don't want the resources they mismatch with other resources during the rest of your execution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Rewrite of a now-deleted answer by VonC. Robert Gamble's succinct answer deals directly with the question. This one amplifies on some issues with filenames containing spaces. See also: ${1:+\"$@\"} in /bin/sh Basic thesis: <code>\"$@\"</code> is correct, and <code>$*</code> (unquoted) is almost always wrong. This is because <code>\"$@\"</code> works fine when arguments contain spaces, and works the same as <code>$*</code> when they don't. In some circumstances, <code>\"$*\"</code> is OK too, but <code>\"$@\"</code> usually (but not always) works in the same places. Unquoted, <code>$@</code> and <code>$*</code> are equivalent (and almost always wrong). So, what is the difference between <code>$*</code>, <code>$@</code>, <code>\"$*\"</code>, and <code>\"$@\"</code>? They are all related to 'all the arguments to the shell', but they do different things. When unquoted, <code>$*</code> and <code>$@</code> do the same thing. They treat each 'word' (sequence of non-whitespace) as a separate argument. The quoted forms are quite different, though: <code>\"$*\"</code> treats the argument list as a single space-separated string, whereas <code>\"$@\"</code> treats the arguments almost exactly as they were when specified on the command line. <code>\"$@\"</code> expands to nothing at all when there are no positional arguments; <code>\"$*\"</code> expands to an empty string &mdash; and yes, there's a difference, though it can be hard to perceive it. See more information below, after the introduction of the (non-standard) command <code>al</code>. Secondary thesis: if you need to process arguments with spaces and then pass them on to other commands, then you sometimes need non-standard tools to assist. (Or you should use arrays, carefully: <code>\"${array[@]}\"</code> behaves analogously to <code>\"$@\"</code>.) Example: Why doesn't that work? It doesn't work because the shell processes quotes before it expands variables. So, to get the shell to pay attention to the quotes embedded in <code>$var</code>, you have to use <code>eval</code>: This gets really tricky when you have file names such as \" \" (with quotes and double quotes and spaces). The shells (all of them) do not make it particularly easy to handle such stuff, so (funnily enough) many Unix programs do not do a good job of handling them. On Unix, a filename (single component) can contain any characters except slash and NUL <code>'\\0'</code>. However, the shells strongly encourage no spaces or newlines or tabs anywhere in a path names. It is also why standard Unix file names do not contain spaces, etc. When dealing with file names that may contain spaces and other troublesome characters, you have to be extremely careful, and I found long ago that I needed a program that is not standard on Unix. I call it <code>escape</code> (version 1.1 was dated 1989-08-23T16:01:45Z). Here is an example of <code>escape</code> in use - with the SCCS control system. It is a cover script that does both a <code>delta</code> (think check-in) and a <code>get</code> (think check-out). Various arguments, especially <code>-y</code> (the reason why you made the change) would contain blanks and newlines. Note that the script dates from 1992, so it uses back-ticks instead of <code>$(cmd ...)</code> notation and does not use <code>#!/bin/sh</code> on the first line. (I would probably not use escape quite so thoroughly these days - it is not needed with the <code>-e</code> argument, for example - but overall, this is one of my simpler scripts using <code>escape</code>.) The <code>escape</code> program simply outputs its arguments, rather like <code>echo</code> does, but it ensures that the arguments are protected for use with <code>eval</code> (one level of <code>eval</code>; I do have a program which did remote shell execution, and that needed to escape the output of <code>escape</code>). I have another program called <code>al</code> that lists its arguments one per line (and it is even more ancient: version 1.1 dated 1987-01-27T14:35:49). It is most useful when debugging scripts, as it can be plugged into a command line to see what arguments are actually passed to the command. [Added: And now to show the difference between the various <code>\"$@\"</code> notations, here is one more example: Notice that nothing preserves the original blanks between the <code>*</code> and <code>*/*</code> on the command line. Also, note that you can change the 'command line arguments' in the shell by using: This sets 4 options, '<code>-new</code>', '<code>-opt</code>', '<code>and</code>', and '<code>arg with space</code>'. ] Hmm, that's quite a long answer - perhaps exegesis is the better term. Source code for <code>escape</code> available on request (email to firstname dot lastname at gmail dot com). The source code for <code>al</code> is incredibly simple: That's all. It is equivalent to the <code>test.sh</code> script that Robert Gamble showed, and could be written as a shell function (but shell functions didn't exist in the local version of Bourne shell when I first wrote <code>al</code>). Also note that you can write <code>al</code> as a simple shell script: The conditional is needed so that it produces no output when passed no arguments. The <code>printf</code> command will produce a blank line with only the format string argument, but the C program produces nothing.",
        "output": "Basic thesis: <code>\"$@\"</code> is correct, and <code>$*</code> (unquoted) is almost always wrong.",
        "answer": "Rewrite of a now-deleted answer by VonC. Robert Gamble's succinct answer deals directly with the question. This one amplifies on some issues with filenames containing spaces. See also: ${1:+\"$@\"} in /bin/sh Basic thesis: <code>\"$@\"</code> is correct, and <code>$*</code> (unquoted) is almost always wrong. This is because <code>\"$@\"</code> works fine when arguments contain spaces, and works the same as <code>$*</code> when they don't. In some circumstances, <code>\"$*\"</code> is OK too, but <code>\"$@\"</code> usually (but not always) works in the same places. Unquoted, <code>$@</code> and <code>$*</code> are equivalent (and almost always wrong). So, what is the difference between <code>$*</code>, <code>$@</code>, <code>\"$*\"</code>, and <code>\"$@\"</code>? They are all related to 'all the arguments to the shell', but they do different things. When unquoted, <code>$*</code> and <code>$@</code> do the same thing. They treat each 'word' (sequence of non-whitespace) as a separate argument. The quoted forms are quite different, though: <code>\"$*\"</code> treats the argument list as a single space-separated string, whereas <code>\"$@\"</code> treats the arguments almost exactly as they were when specified on the command line. <code>\"$@\"</code> expands to nothing at all when there are no positional arguments; <code>\"$*\"</code> expands to an empty string &mdash; and yes, there's a difference, though it can be hard to perceive it. See more information below, after the introduction of the (non-standard) command <code>al</code>. Secondary thesis: if you need to process arguments with spaces and then pass them on to other commands, then you sometimes need non-standard tools to assist. (Or you should use arrays, carefully: <code>\"${array[@]}\"</code> behaves analogously to <code>\"$@\"</code>.) Example: Why doesn't that work? It doesn't work because the shell processes quotes before it expands variables. So, to get the shell to pay attention to the quotes embedded in <code>$var</code>, you have to use <code>eval</code>: This gets really tricky when you have file names such as \" \" (with quotes and double quotes and spaces). The shells (all of them) do not make it particularly easy to handle such stuff, so (funnily enough) many Unix programs do not do a good job of handling them. On Unix, a filename (single component) can contain any characters except slash and NUL <code>'\\0'</code>. However, the shells strongly encourage no spaces or newlines or tabs anywhere in a path names. It is also why standard Unix file names do not contain spaces, etc. When dealing with file names that may contain spaces and other troublesome characters, you have to be extremely careful, and I found long ago that I needed a program that is not standard on Unix. I call it <code>escape</code> (version 1.1 was dated 1989-08-23T16:01:45Z). Here is an example of <code>escape</code> in use - with the SCCS control system. It is a cover script that does both a <code>delta</code> (think check-in) and a <code>get</code> (think check-out). Various arguments, especially <code>-y</code> (the reason why you made the change) would contain blanks and newlines. Note that the script dates from 1992, so it uses back-ticks instead of <code>$(cmd ...)</code> notation and does not use <code>#!/bin/sh</code> on the first line. (I would probably not use escape quite so thoroughly these days - it is not needed with the <code>-e</code> argument, for example - but overall, this is one of my simpler scripts using <code>escape</code>.) The <code>escape</code> program simply outputs its arguments, rather like <code>echo</code> does, but it ensures that the arguments are protected for use with <code>eval</code> (one level of <code>eval</code>; I do have a program which did remote shell execution, and that needed to escape the output of <code>escape</code>). I have another program called <code>al</code> that lists its arguments one per line (and it is even more ancient: version 1.1 dated 1987-01-27T14:35:49). It is most useful when debugging scripts, as it can be plugged into a command line to see what arguments are actually passed to the command. [Added: And now to show the difference between the various <code>\"$@\"</code> notations, here is one more example: Notice that nothing preserves the original blanks between the <code>*</code> and <code>*/*</code> on the command line. Also, note that you can change the 'command line arguments' in the shell by using: This sets 4 options, '<code>-new</code>', '<code>-opt</code>', '<code>and</code>', and '<code>arg with space</code>'. ] Hmm, that's quite a long answer - perhaps exegesis is the better term. Source code for <code>escape</code> available on request (email to firstname dot lastname at gmail dot com). The source code for <code>al</code> is incredibly simple: That's all. It is equivalent to the <code>test.sh</code> script that Robert Gamble showed, and could be written as a shell function (but shell functions didn't exist in the local version of Bourne shell when I first wrote <code>al</code>). Also note that you can write <code>al</code> as a simple shell script: The conditional is needed so that it produces no output when passed no arguments. The <code>printf</code> command will produce a blank line with only the format string argument, but the C program produces nothing.",
        "summary": "Basic thesis: <code>\"$@\"</code> is correct, and <code>$*</code> (unquoted) is almost always wrong."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Simple Use of __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ The simplest use is to declare a named constant. To do this, one declares a constant as if it was a variable but add __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ before it. One has to initialise it immediately in the constructor because, of course, one cannot set the value later as that would be altering it. For example, will create an integer constant, unimaginatively called __________________________ÃÂ¢________________________________Constant1__________________________ÃÂ¢________________________________, with the value 96. Such constants are useful for parameters which are used in the program but are do not need to be changed after the program is compiled. It has an advantage for programmers over the C preprocessor __________________________ÃÂ¢________________________________#define__________________________ÃÂ¢________________________________ command in that it is understood &amp; used by the compiler itself, not just substituted into the program text by the preprocessor before reaching the main compiler, so error messages are much more helpful. It also works with pointers but one has to be careful where __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ to determine whether the pointer or what it points to is constant or both. For example, declares that Constant2 is variable pointer to a constant integer and is an alternative syntax which does the same, whereas declares that Constant3 is constant pointer to a variable integer and declares that Constant4 is constant pointer to a constant integer. Basically __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ applies to whatever is on its immediate left (other than if there is nothing there in which case it applies to whatever is its immediate right). ref: http://duramecho.com/ComputerInformation/WhyHowCppConst.html",
        "output": "The simplest use is to declare a named constant. It also works with pointers but one has to be careful where __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ to determine whether the pointer or what it points to is constant or both. Basically __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ applies to whatever is on its immediate left (other than if there is nothing there in which case it applies to whatever is its immediate right).",
        "answer": "Simple Use of __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ The simplest use is to declare a named constant. To do this, one declares a constant as if it was a variable but add __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ before it. One has to initialise it immediately in the constructor because, of course, one cannot set the value later as that would be altering it. For example, will create an integer constant, unimaginatively called __________________________ÃÂ¢________________________________Constant1__________________________ÃÂ¢________________________________, with the value 96. Such constants are useful for parameters which are used in the program but are do not need to be changed after the program is compiled. It has an advantage for programmers over the C preprocessor __________________________ÃÂ¢________________________________#define__________________________ÃÂ¢________________________________ command in that it is understood &amp; used by the compiler itself, not just substituted into the program text by the preprocessor before reaching the main compiler, so error messages are much more helpful. It also works with pointers but one has to be careful where __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ to determine whether the pointer or what it points to is constant or both. For example, declares that Constant2 is variable pointer to a constant integer and is an alternative syntax which does the same, whereas declares that Constant3 is constant pointer to a variable integer and declares that Constant4 is constant pointer to a constant integer. Basically __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ applies to whatever is on its immediate left (other than if there is nothing there in which case it applies to whatever is its immediate right). ref: http://duramecho.com/ComputerInformation/WhyHowCppConst.html",
        "summary": "The simplest use is to declare a named constant. It also works with pointers but one has to be careful where __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ to determine whether the pointer or what it points to is constant or both. Basically __________________________ÃÂ¢________________________________const__________________________ÃÂ¢________________________________ applies to whatever is on its immediate left (other than if there is nothing there in which case it applies to whatever is its immediate right)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also note that the class context when initializing can create that exception. If you have an object which is coded as INPROC_SERVER but you try to CoCreateInstance as CLSCTX_LOCAL_SERVER, you will also get that error. You need to ensure the object is registered and the CoCreateInstance is creating an instance with the correct class context.",
        "output": "You need to ensure the object is registered and the CoCreateInstance is creating an instance with the correct class context.",
        "answer": "Also note that the class context when initializing can create that exception. If you have an object which is coded as INPROC_SERVER but you try to CoCreateInstance as CLSCTX_LOCAL_SERVER, you will also get that error. You need to ensure the object is registered and the CoCreateInstance is creating an instance with the correct class context.",
        "summary": "You need to ensure the object is registered and the CoCreateInstance is creating an instance with the correct class context."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's Just the space make the things look funny, <code>--</code> decrements and <code>&gt;</code> compares.",
        "output": "It's Just the space make the things look funny, <code>--</code> decrements and <code>&gt;</code> compares.",
        "answer": "It's Just the space make the things look funny, <code>--</code> decrements and <code>&gt;</code> compares.",
        "summary": "It's Just the space make the things look funny, <code>--</code> decrements and <code>&gt;</code> compares."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They can be used as a quick way to sort data. Insert data into a binary search tree at O(log(n)). Then traverse the tree in order to sort them.",
        "output": "They can be used as a quick way to sort data. Insert data into a binary search tree at O(log(n)). Then traverse the tree in order to sort them.",
        "answer": "They can be used as a quick way to sort data. Insert data into a binary search tree at O(log(n)). Then traverse the tree in order to sort them.",
        "summary": "They can be used as a quick way to sort data. Insert data into a binary search tree at O(log(n)). Then traverse the tree in order to sort them."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See the Integer class and the static <code>parseInt()</code> method: http://developer.android.com/reference/java/lang/Integer.html You will need to catch <code>NumberFormatException</code> though in case of problems whilst parsing, so:",
        "output": "See the Integer class and the static <code>parseInt()</code> method:",
        "answer": "See the Integer class and the static <code>parseInt()</code> method: http://developer.android.com/reference/java/lang/Integer.html You will need to catch <code>NumberFormatException</code> though in case of problems whilst parsing, so:",
        "summary": "See the Integer class and the static <code>parseInt()</code> method:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For one thing, MVVM is a progression of the MVC pattern which uses XAML to handle the display. This article outlines some of the facets of the two. The main thrust of the Model/View/ViewModel architecture seems to be that on top of the data (__he ModelÃ¨ÂÂÃ©Â©Â´?, there__ another layer of non-visual components (__he ViewModelÃ¨ÂÂÃ©Â©Â´? that map the concepts of the data more closely to the concepts of the view of the data (__he ViewÃ¨ÂÂÃ©Â©Â´?. It__ the ViewModel that the View binds to, not the Model directly.",
        "output": "For one thing, MVVM is a progression of the MVC pattern which uses XAML to handle the display.",
        "answer": "For one thing, MVVM is a progression of the MVC pattern which uses XAML to handle the display. This article outlines some of the facets of the two. The main thrust of the Model/View/ViewModel architecture seems to be that on top of the data (__he ModelÃ¨ÂÂÃ©Â©Â´?, there__ another layer of non-visual components (__he ViewModelÃ¨ÂÂÃ©Â©Â´? that map the concepts of the data more closely to the concepts of the view of the data (__he ViewÃ¨ÂÂÃ©Â©Â´?. It__ the ViewModel that the View binds to, not the Model directly.",
        "summary": "For one thing, MVVM is a progression of the MVC pattern which uses XAML to handle the display."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Modulo (mod, %) is the Remainder operator. BIGBLOCK",
        "output": "Modulo (mod, %) is the Remainder operator.",
        "answer": "Modulo (mod, %) is the Remainder operator. BIGBLOCK",
        "summary": "Modulo (mod, %) is the Remainder operator."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Function can't change its parameters via the pointer/reference you gave it. I go to this page every time I need to think about it: http://www.parashift.com/c++-faq-lite/const-correctness.html I believe there's also a good chapter in Meyers' \"More Effective C++\".",
        "output": "Function can't change its parameters via the pointer/reference you gave it.",
        "answer": "Function can't change its parameters via the pointer/reference you gave it. I go to this page every time I need to think about it: http://www.parashift.com/c++-faq-lite/const-correctness.html I believe there's also a good chapter in Meyers' \"More Effective C++\".",
        "summary": "Function can't change its parameters via the pointer/reference you gave it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From the help (<code>if /?</code>): The ELSE clause must occur on the same line as the command after the IF. Forexample:    IF EXIST filename. (        del filename.    ) ELSE (        echo filename. missing. )The following would NOT work because the del command needs to be terminatedby a newline:    IF EXIST filename. del filename. ELSE echo filename. missingNor would the following work, since the ELSE command must be on the same lineas the end of the IF command:    IF EXIST filename. del filename. ELSE echo filename. missing",
        "output": "The ELSE clause must occur on the same line as the command after the IF.",
        "answer": "From the help (<code>if /?</code>): The ELSE clause must occur on the same line as the command after the IF. Forexample:    IF EXIST filename. (        del filename.    ) ELSE (        echo filename. missing. )The following would NOT work because the del command needs to be terminatedby a newline:    IF EXIST filename. del filename. ELSE echo filename. missingNor would the following work, since the ELSE command must be on the same lineas the end of the IF command:    IF EXIST filename. del filename. ELSE echo filename. missing",
        "summary": "The ELSE clause must occur on the same line as the command after the IF."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n why not just backup the data before your work with it, then restore when you want it to be refreshed? if you must generate inserts try: http://vyaskn.tripod.com/code.htm#inserts",
        "output": "why not just backup the data before your work with it, then restore when you want it to be refreshed?",
        "answer": "why not just backup the data before your work with it, then restore when you want it to be refreshed? if you must generate inserts try: http://vyaskn.tripod.com/code.htm#inserts",
        "summary": "why not just backup the data before your work with it, then restore when you want it to be refreshed?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've written an article that explains how to extend the Distinct function so that you can do as follows: Here's the article: <em>Extending LINQ - Specifying a Property in the Distinct Function</em>",
        "output": "Here's the article: <em>Extending LINQ - Specifying a Property in the Distinct Function</em>",
        "answer": "I've written an article that explains how to extend the Distinct function so that you can do as follows: Here's the article: <em>Extending LINQ - Specifying a Property in the Distinct Function</em>",
        "summary": "Here's the article: <em>Extending LINQ - Specifying a Property in the Distinct Function</em>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 7-Zip, it's open source, free and supports a wide range of formats.",
        "output": "7-Zip, it's open source, free and supports a wide range of formats.",
        "answer": "7-Zip, it's open source, free and supports a wide range of formats.",
        "summary": "7-Zip, it's open source, free and supports a wide range of formats."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is nothing in .net for this that I am aware of - here is my version which adds \"...\": BIGBLOCK",
        "output": "There is nothing in .net for this that I am aware of - here is my version which adds \"...\": BIGBLOCK",
        "answer": "There is nothing in .net for this that I am aware of - here is my version which adds \"...\": BIGBLOCK",
        "summary": "There is nothing in .net for this that I am aware of - here is my version which adds \"...\": BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to change the <code>sshd_config</code> file in the remote server (probably in <code>/etc/ssh/sshd_config</code>). Change BIGBLOCK to BIGBLOCK And then restart the <code>sshd</code> daemon.",
        "output": "Change BIGBLOCK to BIGBLOCK And then restart the <code>sshd</code> daemon.",
        "answer": "You need to change the <code>sshd_config</code> file in the remote server (probably in <code>/etc/ssh/sshd_config</code>). Change BIGBLOCK to BIGBLOCK And then restart the <code>sshd</code> daemon.",
        "summary": "Change BIGBLOCK to BIGBLOCK And then restart the <code>sshd</code> daemon."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>HTTP_HOST</code> is obtained from the HTTP request header and this is what the client actually used as \"target host\" of the request. The <code>SERVER_NAME</code> is defined in server config. Which one to use depends on what you need it for. You should now however realize that the one is a client-controlled value which may thus not be reliable for use in business logic and the other is a server-controlled value which is more reliable. You however need to ensure that the webserver in question has the <code>SERVER_NAME</code> correctly configured. Taking Apache HTTPD as an example, here's an extract from its documentation: If no <code>ServerName</code> is specified, then the server attempts to deduce the hostname by performing a reverse lookup on the IP address. If no port is specified in the <code>ServerName</code>, then the server will use the port from the incoming request. For optimal reliability and predictability, you should specify an explicit hostname and port using the <code>ServerName</code> directive. Update: after checking the answer of Pekka on your question which contains a link to bobince's answer that PHP would always return <code>HTTP_HOST</code>'s value for <code>SERVER_NAME</code>, which goes against my own PHP 4.x + Apache HTTPD 1.2.x experiences from a couple of years ago, I blew some dust from my current XAMPP environment on Windows XP (Apache HTTPD 2.2.1 with PHP 5.2.8), started it, created a PHP page which prints the both values, created a Java test application using <code>URLConnection</code> to modify the <code>Host</code> header and tests taught me that this is indeed (incorrectly) the case. After first suspecting PHP and digging in some PHP bug reports regarding the subject, I learned that the root of the problem is in web server used, that it incorrectly returned HTTP <code>Host</code> header when <code>SERVER_NAME</code> was requested. So I dug into Apache HTTPD bug reports using various keywords regarding the subject and I finally found a related bug. This behaviour was introduced since around Apache HTTPD 1.3. You need to set <code>UseCanonicalName</code> directive to <code>on</code> in the <code>&lt;VirtualHost&gt;</code> entry of the <code>ServerName</code> in <code>httpd.conf</code> (also check the warning at the bottom of the document! ). This worked for me. Summarized, <code>SERVER_NAME</code> is more reliable, but you're dependent on the server config!",
        "output": "The <code>HTTP_HOST</code> is obtained from the HTTP request header and this is what the client actually used as \"target host\" of the request. The <code>SERVER_NAME</code> is defined in server config.",
        "answer": "The <code>HTTP_HOST</code> is obtained from the HTTP request header and this is what the client actually used as \"target host\" of the request. The <code>SERVER_NAME</code> is defined in server config. Which one to use depends on what you need it for. You should now however realize that the one is a client-controlled value which may thus not be reliable for use in business logic and the other is a server-controlled value which is more reliable. You however need to ensure that the webserver in question has the <code>SERVER_NAME</code> correctly configured. Taking Apache HTTPD as an example, here's an extract from its documentation: If no <code>ServerName</code> is specified, then the server attempts to deduce the hostname by performing a reverse lookup on the IP address. If no port is specified in the <code>ServerName</code>, then the server will use the port from the incoming request. For optimal reliability and predictability, you should specify an explicit hostname and port using the <code>ServerName</code> directive. Update: after checking the answer of Pekka on your question which contains a link to bobince's answer that PHP would always return <code>HTTP_HOST</code>'s value for <code>SERVER_NAME</code>, which goes against my own PHP 4.x + Apache HTTPD 1.2.x experiences from a couple of years ago, I blew some dust from my current XAMPP environment on Windows XP (Apache HTTPD 2.2.1 with PHP 5.2.8), started it, created a PHP page which prints the both values, created a Java test application using <code>URLConnection</code> to modify the <code>Host</code> header and tests taught me that this is indeed (incorrectly) the case. After first suspecting PHP and digging in some PHP bug reports regarding the subject, I learned that the root of the problem is in web server used, that it incorrectly returned HTTP <code>Host</code> header when <code>SERVER_NAME</code> was requested. So I dug into Apache HTTPD bug reports using various keywords regarding the subject and I finally found a related bug. This behaviour was introduced since around Apache HTTPD 1.3. You need to set <code>UseCanonicalName</code> directive to <code>on</code> in the <code>&lt;VirtualHost&gt;</code> entry of the <code>ServerName</code> in <code>httpd.conf</code> (also check the warning at the bottom of the document! ). This worked for me. Summarized, <code>SERVER_NAME</code> is more reliable, but you're dependent on the server config!",
        "summary": "The <code>HTTP_HOST</code> is obtained from the HTTP request header and this is what the client actually used as \"target host\" of the request. The <code>SERVER_NAME</code> is defined in server config."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In your Manifest file write this before <code>&lt;/application &gt;</code> and tell me if it solves your issue :)",
        "output": "In your Manifest file write this before <code>&lt;/application &gt;</code>",
        "answer": "In your Manifest file write this before <code>&lt;/application &gt;</code> and tell me if it solves your issue :)",
        "summary": "In your Manifest file write this before <code>&lt;/application &gt;</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Java 8 (2014) solves this problem using streams and lambdas in one line of code: Here's a tutorial. Use <code>Collection#removeIf</code> to modify the collection in place. (Notice: In this case, the predicate will remove objects who satisfy the predicate): lambdaj allows filtering collections without writing loops or inner classes: Can you imagine something more readable? Disclaimer: I am a contributor on lambdaj",
        "output": "Use <code>Collection#removeIf</code> to modify the collection in place.",
        "answer": "Java 8 (2014) solves this problem using streams and lambdas in one line of code: Here's a tutorial. Use <code>Collection#removeIf</code> to modify the collection in place. (Notice: In this case, the predicate will remove objects who satisfy the predicate): lambdaj allows filtering collections without writing loops or inner classes: Can you imagine something more readable? Disclaimer: I am a contributor on lambdaj",
        "summary": "Use <code>Collection#removeIf</code> to modify the collection in place."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A great way to find out: BIGBLOCK Try to compile.",
        "output": "A great way to find out: BIGBLOCK",
        "answer": "A great way to find out: BIGBLOCK Try to compile.",
        "summary": "A great way to find out: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Consider following situation. Suppose you want to check whether type A is a super class of the type of obj, you can go either ...A.class.isAssignableFrom(obj.getClass())... OR ...obj instanceof A... But the isAssignableFrom solution requires that the type of obj be visible here. If this is not the case (e.g., the type of obj might be of a private inner class), this option is out. However, the instanceof solution would always work.",
        "output": "But the isAssignableFrom solution requires that the type of obj be visible here. However, the instanceof solution would always work.",
        "answer": "Consider following situation. Suppose you want to check whether type A is a super class of the type of obj, you can go either ...A.class.isAssignableFrom(obj.getClass())... OR ...obj instanceof A... But the isAssignableFrom solution requires that the type of obj be visible here. If this is not the case (e.g., the type of obj might be of a private inner class), this option is out. However, the instanceof solution would always work.",
        "summary": "But the isAssignableFrom solution requires that the type of obj be visible here. However, the instanceof solution would always work."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have to set a default value. BIGBLOCK",
        "output": "You have to set a default value. BIGBLOCK",
        "answer": "You have to set a default value. BIGBLOCK",
        "summary": "You have to set a default value. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n VBA does not have an internal implementation of a dictionary, but from VBA you can still use the dictionary object from MS Scripting Runtime Library. BIGBLOCK",
        "output": "VBA does not have an internal implementation of a dictionary, but from VBA you can still use the dictionary object from MS Scripting Runtime Library.",
        "answer": "VBA does not have an internal implementation of a dictionary, but from VBA you can still use the dictionary object from MS Scripting Runtime Library. BIGBLOCK",
        "summary": "VBA does not have an internal implementation of a dictionary, but from VBA you can still use the dictionary object from MS Scripting Runtime Library."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It would be nice if there were some way of turning off \"throw on non-success code\" but if you catch WebException you can at least use the response: You might like to encapsulate the \"get me a response even if it's not a success code\" bit in a separate method. (I'd suggest you still throw if there isn't a response, e.g. if you couldn't connect.) If the error response may be large (which is unusual) you may want to tweak <code>HttpWebRequest.DefaultMaximumErrorResponseLength</code> to make sure you get the whole error.",
        "output": "It would be nice if there were some way of turning off \"throw on non-success code\" but if you catch WebException you can at least use the response:",
        "answer": "It would be nice if there were some way of turning off \"throw on non-success code\" but if you catch WebException you can at least use the response: You might like to encapsulate the \"get me a response even if it's not a success code\" bit in a separate method. (I'd suggest you still throw if there isn't a response, e.g. if you couldn't connect.) If the error response may be large (which is unusual) you may want to tweak <code>HttpWebRequest.DefaultMaximumErrorResponseLength</code> to make sure you get the whole error.",
        "summary": "It would be nice if there were some way of turning off \"throw on non-success code\" but if you catch WebException you can at least use the response:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As @Glen mentioned in a comment,  you basically have two ways around this: <li>use an \"out of bound\" value. For instance, if \"data\" can never be negative in normal use, return a negative value to indicate it's invalid. <li>Use an Integer. Just make sure the \"check\" method returns an Integer, and you assign it to an Integer not an int. Because if an \"int\" gets involved along the way, the automatic boxing and unboxing can cause problems.",
        "output": "<li>use an \"out of bound\" value. <li>Use an Integer.",
        "answer": "As @Glen mentioned in a comment,  you basically have two ways around this: <li>use an \"out of bound\" value. For instance, if \"data\" can never be negative in normal use, return a negative value to indicate it's invalid. <li>Use an Integer. Just make sure the \"check\" method returns an Integer, and you assign it to an Integer not an int. Because if an \"int\" gets involved along the way, the automatic boxing and unboxing can cause problems.",
        "summary": "<li>use an \"out of bound\" value. <li>Use an Integer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes. Use <code>os.path.splitext</code>(see Python 2.X documentation or Python 3.X documentation):",
        "output": "Use <code>os.path.splitext</code>(see Python 2.X documentation or Python 3.X documentation):",
        "answer": "Yes. Use <code>os.path.splitext</code>(see Python 2.X documentation or Python 3.X documentation):",
        "summary": "Use <code>os.path.splitext</code>(see Python 2.X documentation or Python 3.X documentation):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could perhaps <em>emulate</em> a text-stroke, using the css <code>text-shadow</code> (or <code>-webkit-text-shadow</code>/<code>-moz-text-shadow</code>) and a very low blur: But while this is more widely available than the <code>-webkit-text-stroke</code> property, I doubt that it's available to the majority of your users, but that might not be a problem (graceful degradation, and all that).",
        "output": "You could perhaps <em>emulate</em> a text-stroke, using the css <code>text-shadow</code> (or <code>-webkit-text-shadow</code>/<code>-moz-text-shadow</code>) and a very low blur: But while this is more widely available than the <code>-webkit-text-stroke</code> property, I doubt that it's available to the majority of your users, but that might not be a problem (graceful degradation, and all that).",
        "answer": "You could perhaps <em>emulate</em> a text-stroke, using the css <code>text-shadow</code> (or <code>-webkit-text-shadow</code>/<code>-moz-text-shadow</code>) and a very low blur: But while this is more widely available than the <code>-webkit-text-stroke</code> property, I doubt that it's available to the majority of your users, but that might not be a problem (graceful degradation, and all that).",
        "summary": "You could perhaps <em>emulate</em> a text-stroke, using the css <code>text-shadow</code> (or <code>-webkit-text-shadow</code>/<code>-moz-text-shadow</code>) and a very low blur: But while this is more widely available than the <code>-webkit-text-stroke</code> property, I doubt that it's available to the majority of your users, but that might not be a problem (graceful degradation, and all that)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor. There is an inherited method called <code>finalize</code>, but this is called entirely at the discretion of the garbage collector. So for classes that need to explicitly tidy up, the convention is to define a close method and use finalize only for sanity checking (i.e. if close has not been called do it now and log an error). There was a question that spawned in-depth discussion of finalize recently, so that should provide more depth if required...",
        "output": "Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor.",
        "answer": "Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor. There is an inherited method called <code>finalize</code>, but this is called entirely at the discretion of the garbage collector. So for classes that need to explicitly tidy up, the convention is to define a close method and use finalize only for sanity checking (i.e. if close has not been called do it now and log an error). There was a question that spawned in-depth discussion of finalize recently, so that should provide more depth if required...",
        "summary": "Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The success callback takes two arguments: BIGBLOCK Also make sure that the <code>submit1.php</code> sets the proper content-type header: <code>application/json</code>",
        "output": "The success callback takes two arguments: BIGBLOCK Also make sure that the <code>submit1.php</code> sets the proper content-type header: <code>application/json</code>",
        "answer": "The success callback takes two arguments: BIGBLOCK Also make sure that the <code>submit1.php</code> sets the proper content-type header: <code>application/json</code>",
        "summary": "The success callback takes two arguments: BIGBLOCK Also make sure that the <code>submit1.php</code> sets the proper content-type header: <code>application/json</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is just a method that defines getter and setter methods for instance variables. An example implementation would be:",
        "output": "It is just a method that defines getter and setter methods for instance variables.",
        "answer": "It is just a method that defines getter and setter methods for instance variables. An example implementation would be:",
        "summary": "It is just a method that defines getter and setter methods for instance variables."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class. Edit: This originally said \"Implementing an interface requires less resources.\" as well, but you need to create a new Thread instance either way, so this was wrong.",
        "output": "I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.",
        "answer": "I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class. Edit: This originally said \"Implementing an interface requires less resources.\" as well, but you need to create a new Thread instance either way, so this was wrong.",
        "summary": "I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have to change the format of the date string you are supplying in order to be able to insert it using the STRFTIME function. Reason being, there is no option for a month abbreviation: The alternative is to format the date/time into an already accepted format: <li>YYYY-MM-DD <li>YYYY-MM-DD HH:MM <li>YYYY-MM-DD HH:MM:SS <li>YYYY-MM-DD HH:MM:SS.SSS <li>YYYY-MM-DDTHH:MM <li>YYYY-MM-DDTHH:MM:SS <li>YYYY-MM-DDTHH:MM:SS.SSS <li>HH:MM <li>HH:MM:SS <li>HH:MM:SS.SSS <li>now Reference: SQLite Date &amp; Time functions",
        "output": "The alternative is to format the date/time into an already accepted format: <li>YYYY-MM-DD <li>YYYY-MM-DD HH:MM <li>YYYY-MM-DD HH:MM:SS <li>YYYY-MM-DD HH:MM:SS.SSS <li>YYYY-MM-DDTHH:MM <li>YYYY-MM-DDTHH:MM:SS <li>YYYY-MM-DDTHH:MM:SS.SSS <li>HH:MM <li>HH:MM:SS <li>HH:MM:SS.SSS <li>now",
        "answer": "You have to change the format of the date string you are supplying in order to be able to insert it using the STRFTIME function. Reason being, there is no option for a month abbreviation: The alternative is to format the date/time into an already accepted format: <li>YYYY-MM-DD <li>YYYY-MM-DD HH:MM <li>YYYY-MM-DD HH:MM:SS <li>YYYY-MM-DD HH:MM:SS.SSS <li>YYYY-MM-DDTHH:MM <li>YYYY-MM-DDTHH:MM:SS <li>YYYY-MM-DDTHH:MM:SS.SSS <li>HH:MM <li>HH:MM:SS <li>HH:MM:SS.SSS <li>now Reference: SQLite Date &amp; Time functions",
        "summary": "The alternative is to format the date/time into an already accepted format: <li>YYYY-MM-DD <li>YYYY-MM-DD HH:MM <li>YYYY-MM-DD HH:MM:SS <li>YYYY-MM-DD HH:MM:SS.SSS <li>YYYY-MM-DDTHH:MM <li>YYYY-MM-DDTHH:MM:SS <li>YYYY-MM-DDTHH:MM:SS.SSS <li>HH:MM <li>HH:MM:SS <li>HH:MM:SS.SSS <li>now"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Metaclasses</strong> of course :-) What is a metaclass in Python?",
        "output": "<strong>Metaclasses</strong>",
        "answer": "<strong>Metaclasses</strong> of course :-) What is a metaclass in Python?",
        "summary": "<strong>Metaclasses</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want speed, given that your integers are of finite size, I suspect that the quickest way would involve (a) partitioning the parameters by size (e.g. into categories by largest bit set), then checking the value against an array of perfect squares within that range.",
        "output": "If you want speed, given that your integers are of finite size, I suspect that the quickest way would involve (a) partitioning the parameters by size (e.g.",
        "answer": "If you want speed, given that your integers are of finite size, I suspect that the quickest way would involve (a) partitioning the parameters by size (e.g. into categories by largest bit set), then checking the value against an array of perfect squares within that range.",
        "summary": "If you want speed, given that your integers are of finite size, I suspect that the quickest way would involve (a) partitioning the parameters by size (e.g."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Two possible solutions: You are compiling in Release mode but deploying an older compiled version from your Debug directory (or vise versa). You don't have the correct version of the .NET Framework installed in your test environment.",
        "output": "Two possible solutions:",
        "answer": "Two possible solutions: You are compiling in Release mode but deploying an older compiled version from your Debug directory (or vise versa). You don't have the correct version of the .NET Framework installed in your test environment.",
        "summary": "Two possible solutions:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In your last example: BIGBLOCK Yes it does. If you try to use <code>SingleOrDefault()</code> and the query results in more than record you would get and exception. The only time you can safely use <code>SingleOrDefault()</code> is when you are expecting only 1 and only 1 result...",
        "output": "If you try to use <code>SingleOrDefault()</code> and the query results in more than record you would get and exception. The only time you can safely use <code>SingleOrDefault()</code> is when you are expecting only 1 and only 1 result...",
        "answer": "In your last example: BIGBLOCK Yes it does. If you try to use <code>SingleOrDefault()</code> and the query results in more than record you would get and exception. The only time you can safely use <code>SingleOrDefault()</code> is when you are expecting only 1 and only 1 result...",
        "summary": "If you try to use <code>SingleOrDefault()</code> and the query results in more than record you would get and exception. The only time you can safely use <code>SingleOrDefault()</code> is when you are expecting only 1 and only 1 result..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A view uses a query to pull data from the underlying tables. A materialized view is a table on disk that contains the result set of a query. Materialized views are primarily used to increase application performance when it isn't feasible or desirable to use a standard view with indexes applied to it. Materialized views can be updated on a regular basis either through triggers or by using the <code>ON COMMIT REFRESH</code> option. This does require a few extra permissions, but it's nothing complex. <code>ON COMMIT REFRESH</code> has been in place since at least Oracle 10.",
        "output": "A view uses a query to pull data from the underlying tables. A materialized view is a table on disk that contains the result set of a query. Materialized views are primarily used to increase application performance when it isn't feasible or desirable to use a standard view with indexes applied to it. Materialized views can be updated on a regular basis either through triggers or by using the <code>ON COMMIT REFRESH</code> option.",
        "answer": "A view uses a query to pull data from the underlying tables. A materialized view is a table on disk that contains the result set of a query. Materialized views are primarily used to increase application performance when it isn't feasible or desirable to use a standard view with indexes applied to it. Materialized views can be updated on a regular basis either through triggers or by using the <code>ON COMMIT REFRESH</code> option. This does require a few extra permissions, but it's nothing complex. <code>ON COMMIT REFRESH</code> has been in place since at least Oracle 10.",
        "summary": "A view uses a query to pull data from the underlying tables. A materialized view is a table on disk that contains the result set of a query. Materialized views are primarily used to increase application performance when it isn't feasible or desirable to use a standard view with indexes applied to it. Materialized views can be updated on a regular basis either through triggers or by using the <code>ON COMMIT REFRESH</code> option."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you require your keys to be be any object rather than just strings then you could use my jshashtable.",
        "output": "If you require your keys to be be any object rather than just strings then you could use my jshashtable.",
        "answer": "If you require your keys to be be any object rather than just strings then you could use my jshashtable.",
        "summary": "If you require your keys to be be any object rather than just strings then you could use my jshashtable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've heard vague rumours that this is  terifically slow. Anyone know? Ã©Â?Orion  Edwards Oct 15 '08 at 1:31 7 I think caching the array would speed it up considerably. It looks like you're getting a new array (through reflection) every time. Rather: That's at least a little faster, ja?",
        "output": "I think caching the array would speed it up considerably.",
        "answer": "I've heard vague rumours that this is  terifically slow. Anyone know? Ã©Â?Orion  Edwards Oct 15 '08 at 1:31 7 I think caching the array would speed it up considerably. It looks like you're getting a new array (through reflection) every time. Rather: That's at least a little faster, ja?",
        "summary": "I think caching the array would speed it up considerably."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Limiting the visibility of inheritance will make code not able to see that some class inherits another class: Implicit conversions from the derived to the base won't work, and <code>static_cast</code> from the base to the derived won't work either. Only members/friends of a class can see private inheritance, and only members/friends and derived classes can see protected inheritance. <strong>public</strong> inheritance <li>IS-A inheritance. A button is-a window, and anywhere where a window is needed, a button can be passed too. <strong>protected</strong> inheritance <li>Protected implemented-in-terms-of. Rarely useful. Used in <code>boost::compressed_pair</code> to derive from empty classes and save memory using empty base class optimization (example below doesn't use template to keep being at the point): <strong>private</strong> inheritance <li>Implemented-in-terms-of. The usage of the base class is only for implementing the derived class. Useful with traits and if size matters (empty traits that only contain functions will make use of the empty base class optimization). Often <em>containment</em> is the better solution, though. The size for strings is critical, so it's an often seen usage here <strong>public</strong> member <li>Aggregate <li>Accessors <strong>protected</strong> member <li>Providing enhanced access for derived classes <strong>private</strong> member <li>Keep implementation details Note that C-style casts purposely allows casting a derived class to a protected or private base class in a defined and safe manner and to cast into the other direction too. This should be avoided at all costs, because it can make code dependent on implementation details - but if necessary, you can make use of this technique.",
        "output": "<strong>public</strong> member <li>Aggregate <li>Accessors <strong>protected</strong> member <li>Providing enhanced access for derived classes <strong>private</strong> member <li>Keep implementation details",
        "answer": "Limiting the visibility of inheritance will make code not able to see that some class inherits another class: Implicit conversions from the derived to the base won't work, and <code>static_cast</code> from the base to the derived won't work either. Only members/friends of a class can see private inheritance, and only members/friends and derived classes can see protected inheritance. <strong>public</strong> inheritance <li>IS-A inheritance. A button is-a window, and anywhere where a window is needed, a button can be passed too. <strong>protected</strong> inheritance <li>Protected implemented-in-terms-of. Rarely useful. Used in <code>boost::compressed_pair</code> to derive from empty classes and save memory using empty base class optimization (example below doesn't use template to keep being at the point): <strong>private</strong> inheritance <li>Implemented-in-terms-of. The usage of the base class is only for implementing the derived class. Useful with traits and if size matters (empty traits that only contain functions will make use of the empty base class optimization). Often <em>containment</em> is the better solution, though. The size for strings is critical, so it's an often seen usage here <strong>public</strong> member <li>Aggregate <li>Accessors <strong>protected</strong> member <li>Providing enhanced access for derived classes <strong>private</strong> member <li>Keep implementation details Note that C-style casts purposely allows casting a derived class to a protected or private base class in a defined and safe manner and to cast into the other direction too. This should be avoided at all costs, because it can make code dependent on implementation details - but if necessary, you can make use of this technique.",
        "summary": "<strong>public</strong> member <li>Aggregate <li>Accessors <strong>protected</strong> member <li>Providing enhanced access for derived classes <strong>private</strong> member <li>Keep implementation details"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n By using getText():",
        "output": "By using getText():",
        "answer": "By using getText():",
        "summary": "By using getText():"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, <code>java.lang.Object#finalize</code> is the closest you can get. However, when (and if) it is called, is not guaranteed. See: <code>java.lang.Runtime#runFinalizersOnExit(boolean)</code>",
        "output": "No, <code>java.lang.Object#finalize</code> is the closest you can get.",
        "answer": "No, <code>java.lang.Object#finalize</code> is the closest you can get. However, when (and if) it is called, is not guaranteed. See: <code>java.lang.Runtime#runFinalizersOnExit(boolean)</code>",
        "summary": "No, <code>java.lang.Object#finalize</code> is the closest you can get."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Most likely there is an error somewhere in the get_profile() call. In your view, before you return the request object, put this line: It should raise the error, and give you a more detailed traceback, which you can then use to further debug.",
        "output": "Most likely there is an error somewhere in the get_profile() call.",
        "answer": "Most likely there is an error somewhere in the get_profile() call. In your view, before you return the request object, put this line: It should raise the error, and give you a more detailed traceback, which you can then use to further debug.",
        "summary": "Most likely there is an error somewhere in the get_profile() call."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's not necessarily that bad provided you know what context you're using it in. If your application is using <code>eval()</code> to create an object from some JSON which has come back from an XMLHttpRequest to your own site, created by your trusted server-side code, it's probably not a problem. Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing <code>eval()</code> on has come from a reasonable source, you're fine.",
        "output": "If your application is using <code>eval()</code> to create an object from some JSON which has come back from an XMLHttpRequest to your own site, created by your trusted server-side code, it's probably not a problem. Provided the thing you're executing <code>eval()</code> on has come from a reasonable source, you're fine.",
        "answer": "It's not necessarily that bad provided you know what context you're using it in. If your application is using <code>eval()</code> to create an object from some JSON which has come back from an XMLHttpRequest to your own site, created by your trusted server-side code, it's probably not a problem. Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing <code>eval()</code> on has come from a reasonable source, you're fine.",
        "summary": "If your application is using <code>eval()</code> to create an object from some JSON which has come back from an XMLHttpRequest to your own site, created by your trusted server-side code, it's probably not a problem. Provided the thing you're executing <code>eval()</code> on has come from a reasonable source, you're fine."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n you can simply pass the 2 commits to git diff like :",
        "output": "you can simply pass the 2 commits to git diff like :",
        "answer": "you can simply pass the 2 commits to git diff like :",
        "summary": "you can simply pass the 2 commits to git diff like :"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's how I'd do it - For Schemas: For Tables: For Columns:",
        "output": "For Schemas: For Tables: For Columns:",
        "answer": "Here's how I'd do it - For Schemas: For Tables: For Columns:",
        "summary": "For Schemas: For Tables: For Columns:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The format you need is: i.e. yyyy-MM-dd HH:mm:ss If possible, however, use a parameterised query as this frees you from worrying about the formatting details.",
        "output": "The format you need is: If possible, however, use a parameterised query as this frees you from worrying about the formatting details.",
        "answer": "The format you need is: i.e. yyyy-MM-dd HH:mm:ss If possible, however, use a parameterised query as this frees you from worrying about the formatting details.",
        "summary": "The format you need is: If possible, however, use a parameterised query as this frees you from worrying about the formatting details."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I wrote a production website that has the path /dev/random/ return 4 because of this comic.",
        "output": "I wrote a production website that has the path /dev/random/ return 4 because of this comic.",
        "answer": "I wrote a production website that has the path /dev/random/ return 4 because of this comic.",
        "summary": "I wrote a production website that has the path /dev/random/ return 4 because of this comic."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVC/MVVM is not an either/or choice. The two patterns crop up, in different ways, in both ASP.Net and Silverlight/WPF development. For ASP.Net, MVVM is used to two-way bind data within views. This is usually a client-side implementation (e.g. using Knockout.js). MVC on the other hand is a way of separating concerns on the server-side. For Silverlight and WPF, the MVVM pattern is more encompassing and can appear to act as a replacement for MVC (or other patterns of organising software into separate responsibilities). One assumption, that frequently came out of this pattern, was that the <code>ViewModel</code> simply replaced the controller in <code>MVC</code> (as if you could just  substitute <code>VM</code> for <code>C</code> in the acronym and all would be forgiven)... The ViewModel does not necessarily replace the need for separate Controllers. The problem is: that to be independently testable*, and especially reusable when needed, a view-model has no idea what view is displaying it, but more importantly no idea where its data is coming from. *Note: in practice Controllers remove most of the logic, from the ViewModel, that requires unit testing. The VM then becomes a dumb container that requires little, if any, testing. This is a good thing as the VM is just a bridge, between the designer and the coder, so should be kept simple. Even in MVVM, controllers will typically contain all processing logic and decide what data to display in which views using which view models. From what we have seen so far the main benefit of the ViewModel pattern to remove code from XAML code-behind to make XAML editing a more independent task. We still create controllers, as and when needed, to control (no pun intended) the overall logic of our applications. The basic MVCVM guidelines we follow are: Views display a certain shape of data. They have no idea where the data comes from. ViewModels hold a certain shape of data and commands, they do not know where the data, or code, comes from or how it is displayed. Models hold the actual data (various context, store or other methods) Controllers listen for, and publish, events. Controllers provide the logic that controls what data is seen and where. Controllers provide the command code to the ViewModel so that the ViewModel is actually reusable. We also noted that the Sculpture code-gen framework implements MVVM and a pattern similar to Prism AND it also makes extensive use of controllers to separate all use-case logic. Don't assume controllers are made obsolete by View-models. I have started a blog on this topic which I will add to as and when I can. There are issues with combining MVCVM with the common navigation systems, as most navigation systems just use Views and VMs, but I will go into that in later articles. An additional benefit of using an MVCVM model is that only the controller objects need to exist in memory for the life of the application and the controllers contain mainly code and little state data (i.e. tiny memory overhead). This makes for much less memory-intensive apps than solutions where view-models have to be retained and it is ideal for certain types of mobile development (e.g. Windows Mobile using Silverlight/Prism/MEF). This does of course depend on the type of application as you may still need to retain the occasional cached VMs for responsiveness. Note: This post has been edited numerous times, and did not specifically target the narrow question asked, so I have updated the first part to now cover that too. Much of the discussion, in comments below, relates only to ASP.Net and not the broader picture. This post was intended to cover the broader use of MVVM in Silverlight, WPF and ASP.Net and try avoid people replacing controllers with ViewModels.",
        "output": "MVC/MVVM is not an either/or choice. The two patterns crop up, in different ways, in both ASP.Net and Silverlight/WPF development. For ASP.Net, MVVM is used to two-way bind data within views. MVC on the other hand is a way of separating concerns on the server-side. For Silverlight and WPF, the MVVM pattern is more encompassing and can appear to act as a replacement for MVC (or other patterns of organising software into separate responsibilities).",
        "answer": "MVC/MVVM is not an either/or choice. The two patterns crop up, in different ways, in both ASP.Net and Silverlight/WPF development. For ASP.Net, MVVM is used to two-way bind data within views. This is usually a client-side implementation (e.g. using Knockout.js). MVC on the other hand is a way of separating concerns on the server-side. For Silverlight and WPF, the MVVM pattern is more encompassing and can appear to act as a replacement for MVC (or other patterns of organising software into separate responsibilities). One assumption, that frequently came out of this pattern, was that the <code>ViewModel</code> simply replaced the controller in <code>MVC</code> (as if you could just  substitute <code>VM</code> for <code>C</code> in the acronym and all would be forgiven)... The ViewModel does not necessarily replace the need for separate Controllers. The problem is: that to be independently testable*, and especially reusable when needed, a view-model has no idea what view is displaying it, but more importantly no idea where its data is coming from. *Note: in practice Controllers remove most of the logic, from the ViewModel, that requires unit testing. The VM then becomes a dumb container that requires little, if any, testing. This is a good thing as the VM is just a bridge, between the designer and the coder, so should be kept simple. Even in MVVM, controllers will typically contain all processing logic and decide what data to display in which views using which view models. From what we have seen so far the main benefit of the ViewModel pattern to remove code from XAML code-behind to make XAML editing a more independent task. We still create controllers, as and when needed, to control (no pun intended) the overall logic of our applications. The basic MVCVM guidelines we follow are: Views display a certain shape of data. They have no idea where the data comes from. ViewModels hold a certain shape of data and commands, they do not know where the data, or code, comes from or how it is displayed. Models hold the actual data (various context, store or other methods) Controllers listen for, and publish, events. Controllers provide the logic that controls what data is seen and where. Controllers provide the command code to the ViewModel so that the ViewModel is actually reusable. We also noted that the Sculpture code-gen framework implements MVVM and a pattern similar to Prism AND it also makes extensive use of controllers to separate all use-case logic. Don't assume controllers are made obsolete by View-models. I have started a blog on this topic which I will add to as and when I can. There are issues with combining MVCVM with the common navigation systems, as most navigation systems just use Views and VMs, but I will go into that in later articles. An additional benefit of using an MVCVM model is that only the controller objects need to exist in memory for the life of the application and the controllers contain mainly code and little state data (i.e. tiny memory overhead). This makes for much less memory-intensive apps than solutions where view-models have to be retained and it is ideal for certain types of mobile development (e.g. Windows Mobile using Silverlight/Prism/MEF). This does of course depend on the type of application as you may still need to retain the occasional cached VMs for responsiveness. Note: This post has been edited numerous times, and did not specifically target the narrow question asked, so I have updated the first part to now cover that too. Much of the discussion, in comments below, relates only to ASP.Net and not the broader picture. This post was intended to cover the broader use of MVVM in Silverlight, WPF and ASP.Net and try avoid people replacing controllers with ViewModels.",
        "summary": "MVC/MVVM is not an either/or choice. The two patterns crop up, in different ways, in both ASP.Net and Silverlight/WPF development. For ASP.Net, MVVM is used to two-way bind data within views. MVC on the other hand is a way of separating concerns on the server-side. For Silverlight and WPF, the MVVM pattern is more encompassing and can appear to act as a replacement for MVC (or other patterns of organising software into separate responsibilities)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Do you mean brightness? Perceived brightness? Luminance? <li>Luminance (standard for certain colour spaces): <code>(0.2126*R + 0.7152*G + 0.0722*B)</code> [1] <li>Luminance (perceived option 1): <code>(0.299*R + 0.587*G + 0.114*B)</code> [2] <li>Luminance (perceived option 2, slower to calculate):  <code>sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 )</code> Ã©Â?<code>sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 )</code> (thanks to @MatthewHerbst) [3]",
        "output": "<li>Luminance (standard for certain colour spaces): <code>(0.2126*R + 0.7152*G + 0.0722*B)</code> [1] <li>Luminance (perceived option 1): <code>(0.299*R + 0.587*G + 0.114*B)</code> [2] <li>Luminance (perceived option 2, slower to calculate):  <code>sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 )</code> Ã©Â?<code>sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 )</code> (thanks to @MatthewHerbst) [3]",
        "answer": "Do you mean brightness? Perceived brightness? Luminance? <li>Luminance (standard for certain colour spaces): <code>(0.2126*R + 0.7152*G + 0.0722*B)</code> [1] <li>Luminance (perceived option 1): <code>(0.299*R + 0.587*G + 0.114*B)</code> [2] <li>Luminance (perceived option 2, slower to calculate):  <code>sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 )</code> Ã©Â?<code>sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 )</code> (thanks to @MatthewHerbst) [3]",
        "summary": "<li>Luminance (standard for certain colour spaces): <code>(0.2126*R + 0.7152*G + 0.0722*B)</code> [1] <li>Luminance (perceived option 1): <code>(0.299*R + 0.587*G + 0.114*B)</code> [2] <li>Luminance (perceived option 2, slower to calculate):  <code>sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 )</code> Ã©Â?<code>sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 )</code> (thanks to @MatthewHerbst) [3]"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the <code>java.util.concurrent.TimeUnit</code> class: Note: <code>TimeUnit</code> is part of the Java 1.5 specification, but <code>toMinutes</code> was added as of Java 1.6. To add a leading zero for values 0-9, just do: If <code>TimeUnit</code> or <code>toMinutes</code> are unsupported (such as on Android before API version 9), use the following equations:",
        "output": "Use the <code>java.util.concurrent.TimeUnit</code> class:",
        "answer": "Use the <code>java.util.concurrent.TimeUnit</code> class: Note: <code>TimeUnit</code> is part of the Java 1.5 specification, but <code>toMinutes</code> was added as of Java 1.6. To add a leading zero for values 0-9, just do: If <code>TimeUnit</code> or <code>toMinutes</code> are unsupported (such as on Android before API version 9), use the following equations:",
        "summary": "Use the <code>java.util.concurrent.TimeUnit</code> class:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use \"read()\" instead o fscanf: DESCRIPTION The read() function shall attempt to read <code>nbyte</code> bytes from the file associated with the open file descriptor, <code>fildes</code>, into the buffer pointed to by <code>buf</code>. Here is an example: http://cmagical.blogspot.com/2010/01/c-programming-on-unix-implementing-cat.html Working part from that example: An alternate approach is to use <code>getc</code>/<code>putc</code> to read/write 1 char at a time. A lot less efficient. A good example: http://www.eskimo.com/~scs/cclass/notes/sx13.html",
        "output": "Use \"read()\" instead o fscanf:",
        "answer": "Use \"read()\" instead o fscanf: DESCRIPTION The read() function shall attempt to read <code>nbyte</code> bytes from the file associated with the open file descriptor, <code>fildes</code>, into the buffer pointed to by <code>buf</code>. Here is an example: http://cmagical.blogspot.com/2010/01/c-programming-on-unix-implementing-cat.html Working part from that example: An alternate approach is to use <code>getc</code>/<code>putc</code> to read/write 1 char at a time. A lot less efficient. A good example: http://www.eskimo.com/~scs/cclass/notes/sx13.html",
        "summary": "Use \"read()\" instead o fscanf:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One gotcha I have found is where two objects contain references to each other (one example being a parent/child relationship with a convenience method on the parent to get all children). These sorts of things are fairly common when doing Hibernate mappings for example. If you include both ends of the relationship in your hashCode or equals tests it's possible to get into a recursive loop which ends in a StackOverflowException. The simplest solution is to not include the getChildren collection in the methods.",
        "output": "If you include both ends of the relationship in your hashCode or equals tests it's possible to get into a recursive loop which ends in a StackOverflowException.",
        "answer": "One gotcha I have found is where two objects contain references to each other (one example being a parent/child relationship with a convenience method on the parent to get all children). These sorts of things are fairly common when doing Hibernate mappings for example. If you include both ends of the relationship in your hashCode or equals tests it's possible to get into a recursive loop which ends in a StackOverflowException. The simplest solution is to not include the getChildren collection in the methods.",
        "summary": "If you include both ends of the relationship in your hashCode or equals tests it's possible to get into a recursive loop which ends in a StackOverflowException."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If your <code>&lt;td&gt;</code> is not empty, one popular trick is to insert a non breaking space <code>&amp;nbsp;</code> in it, such that: BIGBLOCK Then you will be able to use: BIGBLOCK Otherwise, if you do not fancy adding the meaningless <code>&amp;nbsp</code> you can use the solution that Jonathan Fingland described in the other answer.",
        "output": "If your <code>&lt;td&gt;</code> is not empty, one popular trick is to insert a non breaking space <code>&amp;nbsp;</code> in it, such that: Otherwise, if you do not fancy adding the meaningless <code>&amp;nbsp</code> you can use the solution that Jonathan Fingland described in the other answer.",
        "answer": "If your <code>&lt;td&gt;</code> is not empty, one popular trick is to insert a non breaking space <code>&amp;nbsp;</code> in it, such that: BIGBLOCK Then you will be able to use: BIGBLOCK Otherwise, if you do not fancy adding the meaningless <code>&amp;nbsp</code> you can use the solution that Jonathan Fingland described in the other answer.",
        "summary": "If your <code>&lt;td&gt;</code> is not empty, one popular trick is to insert a non breaking space <code>&amp;nbsp;</code> in it, such that: Otherwise, if you do not fancy adding the meaningless <code>&amp;nbsp</code> you can use the solution that Jonathan Fingland described in the other answer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You are missing a field annotated with <code>@Id</code>. Each <code>@Entity</code> needs an <code>@Id</code> - this is the primary key in the database. If you don't want your entity to be persisted in a separate table, but rather be a part of other entities, you can use <code>@Embeddable</code> instead of <code>@Entity</code>. If you want simply a data transfer object to hold some data from the hibernate entity, use no annotations on it whatsoever - leave it a simple pojo. Update: In regards to SQL views, Hibernate docs write: There is no difference between a view and a base table for a Hibernate mapping. This is transparent at the database level",
        "output": "You are missing a field annotated with <code>@Id</code>.",
        "answer": "You are missing a field annotated with <code>@Id</code>. Each <code>@Entity</code> needs an <code>@Id</code> - this is the primary key in the database. If you don't want your entity to be persisted in a separate table, but rather be a part of other entities, you can use <code>@Embeddable</code> instead of <code>@Entity</code>. If you want simply a data transfer object to hold some data from the hibernate entity, use no annotations on it whatsoever - leave it a simple pojo. Update: In regards to SQL views, Hibernate docs write: There is no difference between a view and a base table for a Hibernate mapping. This is transparent at the database level",
        "summary": "You are missing a field annotated with <code>@Id</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To a first order approximation, a method (in C++ style OO) is another word for a member function, that is a function that is part of a class. In languages like C/C++ you can have functions which are not members of a class; you don't call a function not associated with a class a method.",
        "output": "To a first order approximation, a method (in C++ style OO) is another word for a member function, that is a function that is part of a class.",
        "answer": "To a first order approximation, a method (in C++ style OO) is another word for a member function, that is a function that is part of a class. In languages like C/C++ you can have functions which are not members of a class; you don't call a function not associated with a class a method.",
        "summary": "To a first order approximation, a method (in C++ style OO) is another word for a member function, that is a function that is part of a class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>attr_accessor</code> is (as @pst stated) just a method. What it does is create more methods for you. So this code here: is equivalent to this code: You can write this sort of method yourself in Ruby:",
        "output": "<code>attr_accessor</code> is (as @pst stated) just a method. What it does is create more methods for you.",
        "answer": "<code>attr_accessor</code> is (as @pst stated) just a method. What it does is create more methods for you. So this code here: is equivalent to this code: You can write this sort of method yourself in Ruby:",
        "summary": "<code>attr_accessor</code> is (as @pst stated) just a method. What it does is create more methods for you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n 1.List allows duplicate values and  set does'nt allow duplicates 2.List maintains the order in which you inserted elements in to the list Set does'nt maintain order. 3.List is an ordered sequence of elements whereas Set is a distinct list of elements which is unordered.",
        "output": "1.List allows duplicate values and  set does'nt allow duplicates 2.List maintains the order in which you inserted elements in to the list Set does'nt maintain order. 3.List is an ordered sequence of elements whereas Set is a distinct list of elements which is unordered.",
        "answer": "1.List allows duplicate values and  set does'nt allow duplicates 2.List maintains the order in which you inserted elements in to the list Set does'nt maintain order. 3.List is an ordered sequence of elements whereas Set is a distinct list of elements which is unordered.",
        "summary": "1.List allows duplicate values and  set does'nt allow duplicates 2.List maintains the order in which you inserted elements in to the list Set does'nt maintain order. 3.List is an ordered sequence of elements whereas Set is a distinct list of elements which is unordered."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Perhaps you're not disposing of the previous connection/ result classes from the previous run which means their still hanging around in memory.",
        "output": "Perhaps you're not disposing of the previous connection/ result classes from the previous run which means their still hanging around in memory.",
        "answer": "Perhaps you're not disposing of the previous connection/ result classes from the previous run which means their still hanging around in memory.",
        "summary": "Perhaps you're not disposing of the previous connection/ result classes from the previous run which means their still hanging around in memory."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Nothing. They both do the same, both perform about equally. The only reason you should choose one over the other is if you help out with a project that already uses one.. The other possible reason for choosing one is an application or service which only supports one of the system.. For example, I pretty much chose to learn git because of github..",
        "output": "They both do the same, both perform about equally. The only reason you should choose one over the other is if you help out with a project that already uses one..",
        "answer": "Nothing. They both do the same, both perform about equally. The only reason you should choose one over the other is if you help out with a project that already uses one.. The other possible reason for choosing one is an application or service which only supports one of the system.. For example, I pretty much chose to learn git because of github..",
        "summary": "They both do the same, both perform about equally. The only reason you should choose one over the other is if you help out with a project that already uses one.."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Maybe the author forgot to give the font a Mac FOND name? <li>Open the font in FontForge then go to Element>Font Info <li>There is a \"Mac\" Option where you can set the FOND name. <li>Under File>Export Font you can create a new ttf You could also give the \"Apple\" option in the export dialog a try. <strong>DISCLAIMER</strong>: I'm not a IPhone developer!",
        "output": "Maybe the author forgot to give the font a Mac FOND name? You could also give the \"Apple\" option in the export dialog a try.",
        "answer": "Maybe the author forgot to give the font a Mac FOND name? <li>Open the font in FontForge then go to Element>Font Info <li>There is a \"Mac\" Option where you can set the FOND name. <li>Under File>Export Font you can create a new ttf You could also give the \"Apple\" option in the export dialog a try. <strong>DISCLAIMER</strong>: I'm not a IPhone developer!",
        "summary": "Maybe the author forgot to give the font a Mac FOND name? You could also give the \"Apple\" option in the export dialog a try."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Several ways. From the shell From inside IDLE, hit F5. If you're typing interactively, try this.",
        "output": "From the shell From inside IDLE, hit F5.",
        "answer": "Several ways. From the shell From inside IDLE, hit F5. If you're typing interactively, try this.",
        "summary": "From the shell From inside IDLE, hit F5."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use: BIGBLOCK Here's reference documentation for <code>QString</code>.",
        "output": "You can use: BIGBLOCK",
        "answer": "You can use: BIGBLOCK Here's reference documentation for <code>QString</code>.",
        "summary": "You can use: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n http://en.csharp-online.net/CSharp_FAQ:_What_are_the_differences_between_CSharp_and_Java_constant_declarations C# constants are declared using the const keyword for compile time constants or the readonly keyword for runtime constants. The semantics of constants is the same in both the C# and Java languages.",
        "output": "The semantics of constants is the same in both the C# and Java languages.",
        "answer": "http://en.csharp-online.net/CSharp_FAQ:_What_are_the_differences_between_CSharp_and_Java_constant_declarations C# constants are declared using the const keyword for compile time constants or the readonly keyword for runtime constants. The semantics of constants is the same in both the C# and Java languages.",
        "summary": "The semantics of constants is the same in both the C# and Java languages."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have used both MVP and MVC and although we as developers tend to focus on the technical differences of both patterns the point for MVP in IMHO is much more related to ease of adoption than anything else. If I__________________________ÃÂ¢________________________________m working in a team that already as a good background on web forms development style it__________________________ÃÂ¢________________________________s far easier to introduce MVP than MVC. I would say that MVP in this scenario is a quick win. My experience tells me that moving  a team from web forms to MVP and then from MVP to MVC is relatively easy; moving from web forms to MVC is more difficult. I leave here a link to a series of articles a friend of mine has published about MVP and MVC. http://www.qsoft.be/post/Building-the-MVP-StoreFront-Gutthrie-style.aspx",
        "output": "If I__________________________ÃÂ¢________________________________m working in a team that already as a good background on web forms development style it__________________________ÃÂ¢________________________________s far easier to introduce MVP than MVC.",
        "answer": "I have used both MVP and MVC and although we as developers tend to focus on the technical differences of both patterns the point for MVP in IMHO is much more related to ease of adoption than anything else. If I__________________________ÃÂ¢________________________________m working in a team that already as a good background on web forms development style it__________________________ÃÂ¢________________________________s far easier to introduce MVP than MVC. I would say that MVP in this scenario is a quick win. My experience tells me that moving  a team from web forms to MVP and then from MVP to MVC is relatively easy; moving from web forms to MVC is more difficult. I leave here a link to a series of articles a friend of mine has published about MVP and MVC. http://www.qsoft.be/post/Building-the-MVP-StoreFront-Gutthrie-style.aspx",
        "summary": "If I__________________________ÃÂ¢________________________________m working in a team that already as a good background on web forms development style it__________________________ÃÂ¢________________________________s far easier to introduce MVP than MVC."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See if this works for you. All your data is in column A (beginning at row 1). In column B, row 1, enter      =A1&amp;\",\" This will make cell B1 equal A1 with a comma appended. Now select cell B1 and drag from the bottom right of cell down through all your rows (this copies the formula and uses the corresponding column A value. That's It!",
        "output": "See if this works for you.",
        "answer": "See if this works for you. All your data is in column A (beginning at row 1). In column B, row 1, enter      =A1&amp;\",\" This will make cell B1 equal A1 with a comma appended. Now select cell B1 and drag from the bottom right of cell down through all your rows (this copies the formula and uses the corresponding column A value. That's It!",
        "summary": "See if this works for you."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Html Agility Pack This is an agile HTML parser that builds a read/write DOM and supports plain XPATH or XSLT (you actually don't HAVE to understand XPATH nor XSLT to use it, don't worry...). It is a .NET code library that allows you to parse \"out of the web\" HTML files. The parser is very tolerant with \"real world\" malformed HTML. The object model is very similar to what proposes System.Xml, but for HTML documents (or streams).",
        "output": "Html Agility Pack",
        "answer": "Html Agility Pack This is an agile HTML parser that builds a read/write DOM and supports plain XPATH or XSLT (you actually don't HAVE to understand XPATH nor XSLT to use it, don't worry...). It is a .NET code library that allows you to parse \"out of the web\" HTML files. The parser is very tolerant with \"real world\" malformed HTML. The object model is very similar to what proposes System.Xml, but for HTML documents (or streams).",
        "summary": "Html Agility Pack"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n How about something like this? Note that myDelimitedString may be null if myEnumerable is empty.",
        "output": "Note that myDelimitedString may be null if myEnumerable is empty.",
        "answer": "How about something like this? Note that myDelimitedString may be null if myEnumerable is empty.",
        "summary": "Note that myDelimitedString may be null if myEnumerable is empty."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From another answer of mine, mostly dealing with when to use one versus the other: In my experience, interfaces are best  used when you have several classes  which each need to respond to the same  method or methods so that they can be  used interchangeably by other code  which will be written against those  classes' common interface. The best  use of an interface is when the  protocol is important but the  underlying logic may be different for  each class. If you would otherwise be  duplicating logic, consider abstract  classes or standard class inheritance  instead.",
        "output": "In my experience, interfaces are best  used when you have several classes  which each need to respond to the same  method or methods so that they can be  used interchangeably by other code  which will be written against those  classes' common interface. The best  use of an interface is when the  protocol is important but the  underlying logic may be different for  each class.",
        "answer": "From another answer of mine, mostly dealing with when to use one versus the other: In my experience, interfaces are best  used when you have several classes  which each need to respond to the same  method or methods so that they can be  used interchangeably by other code  which will be written against those  classes' common interface. The best  use of an interface is when the  protocol is important but the  underlying logic may be different for  each class. If you would otherwise be  duplicating logic, consider abstract  classes or standard class inheritance  instead.",
        "summary": "In my experience, interfaces are best  used when you have several classes  which each need to respond to the same  method or methods so that they can be  used interchangeably by other code  which will be written against those  classes' common interface. The best  use of an interface is when the  protocol is important but the  underlying logic may be different for  each class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Straight from the API Specifications for the <code>ClassCastException</code>: Thrown to indicate that the code has   attempted to cast an object to a   subclass of which it is not an   instance. So, for example, when one tries to cast an <code>Integer</code> to a <code>String</code>, <code>String</code> is not an subclass of <code>Integer</code>, so a <code>ClassCastException</code> will be thrown.",
        "output": "Thrown to indicate that the code has   attempted to cast an object to a   subclass of which it is not an   instance.",
        "answer": "Straight from the API Specifications for the <code>ClassCastException</code>: Thrown to indicate that the code has   attempted to cast an object to a   subclass of which it is not an   instance. So, for example, when one tries to cast an <code>Integer</code> to a <code>String</code>, <code>String</code> is not an subclass of <code>Integer</code>, so a <code>ClassCastException</code> will be thrown.",
        "summary": "Thrown to indicate that the code has   attempted to cast an object to a   subclass of which it is not an   instance."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The problem is that you're calling <code>List&lt;T&gt;.Reverse()</code> which returns <code>void</code>. You could either do: BIGBLOCK or: BIGBLOCK The latter is more expensive, as reversing an arbitrary <code>IEnumerable&lt;T&gt;</code> involves buffering all of the data and then yielding it all - whereas <code>List&lt;T&gt;</code> can do all the reversing \"in-place\". (The difference here is that it's calling the <code>Enumerable.Reverse&lt;T&gt;()</code> extension method, instead of the <code>List&lt;T&gt;.Reverse()</code> instance method.) More efficient yet, you could use: BIGBLOCK This avoids creating any buffers of an inappropriate size - at the cost of taking four statements where one will do... As ever, weigh up readability against performance in the real use case.",
        "output": "The problem is that you're calling <code>List&lt;T&gt;.Reverse()</code> which returns <code>void</code>. BIGBLOCK BIGBLOCK More efficient yet, you could use: BIGBLOCK",
        "answer": "The problem is that you're calling <code>List&lt;T&gt;.Reverse()</code> which returns <code>void</code>. You could either do: BIGBLOCK or: BIGBLOCK The latter is more expensive, as reversing an arbitrary <code>IEnumerable&lt;T&gt;</code> involves buffering all of the data and then yielding it all - whereas <code>List&lt;T&gt;</code> can do all the reversing \"in-place\". (The difference here is that it's calling the <code>Enumerable.Reverse&lt;T&gt;()</code> extension method, instead of the <code>List&lt;T&gt;.Reverse()</code> instance method.) More efficient yet, you could use: BIGBLOCK This avoids creating any buffers of an inappropriate size - at the cost of taking four statements where one will do... As ever, weigh up readability against performance in the real use case.",
        "summary": "The problem is that you're calling <code>List&lt;T&gt;.Reverse()</code> which returns <code>void</code>. BIGBLOCK BIGBLOCK More efficient yet, you could use: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One gotcha is that the following is implementation dependent (according to the ANSI standard): x can now be 127 (01111111) or still -1 (11111111). In practice, it's usually the latter.",
        "output": "One gotcha is that the following is implementation dependent (according to the ANSI standard): x can now be 127 (01111111) or still -1 (11111111).",
        "answer": "One gotcha is that the following is implementation dependent (according to the ANSI standard): x can now be 127 (01111111) or still -1 (11111111). In practice, it's usually the latter.",
        "summary": "One gotcha is that the following is implementation dependent (according to the ANSI standard): x can now be 127 (01111111) or still -1 (11111111)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In conclusion, when you use a local variable of a type that implements <code>IDisposable</code>, <em>always</em>, without exception, use <code>using</code>1. If you use nonlocal <code>IDisposable</code> variables, then <em>always</em> implement the <code>IDisposable</code> pattern. Two simple rules, no exception1. Preventing resource leaks otherwise is a real pain in the *ss. 1): The only exception is Ã©ÂÂ¥Ã¦ÂÂ¬xa0when you're handling exceptions. It might then be less code to call <code>Dispose</code> explicitly in the <code>finally</code> block.",
        "output": "In conclusion, when you use a local variable of a type that implements <code>IDisposable</code>, <em>always</em>, without exception, use <code>using</code>1. If you use nonlocal <code>IDisposable</code> variables, then <em>always</em> implement the <code>IDisposable</code> pattern. 1): The only exception is Ã©ÂÂ¥Ã¦ÂÂ¬xa0when you're handling exceptions.",
        "answer": "In conclusion, when you use a local variable of a type that implements <code>IDisposable</code>, <em>always</em>, without exception, use <code>using</code>1. If you use nonlocal <code>IDisposable</code> variables, then <em>always</em> implement the <code>IDisposable</code> pattern. Two simple rules, no exception1. Preventing resource leaks otherwise is a real pain in the *ss. 1): The only exception is Ã©ÂÂ¥Ã¦ÂÂ¬xa0when you're handling exceptions. It might then be less code to call <code>Dispose</code> explicitly in the <code>finally</code> block.",
        "summary": "In conclusion, when you use a local variable of a type that implements <code>IDisposable</code>, <em>always</em>, without exception, use <code>using</code>1. If you use nonlocal <code>IDisposable</code> variables, then <em>always</em> implement the <code>IDisposable</code> pattern. 1): The only exception is Ã©ÂÂ¥Ã¦ÂÂ¬xa0when you're handling exceptions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's been pointed out that the last <code>d</code> digits of a perfect square can only take on certain values. The last <code>d</code> digits (in base <code>b</code>) of a number <code>n</code> is the same as the remainder when <code>n</code> is divided by <code>b</code><code>d</code>, ie. in C notation <code>n % pow(b, d)</code>. This can be generalized to any modulus <code>m</code>, ie. <code>n % m</code> can be used to rule out some percentage of numbers from being perfect squares. The modulus you are currently using is 64, which allows 12, ie. 19% of remainders, as possible squares. With a little coding I found the modulus 110880, which allows only 2016, ie. 1.8% of remainders as possible squares. So depending on the cost of a modulus operation (ie. division) and a table lookup versus a square root on your machine, using this modulus might be faster. By the way if Java has a way to store a packed array of bits for the lookup table, don't use it. 110880 32-bit words is not much RAM these days and fetching a machine word is going to be faster than fetching a single bit.",
        "output": "The last <code>d</code> digits (in base <code>b</code>) of a number <code>n</code> is the same as the remainder when <code>n</code> is divided by <code>b</code><code>d</code>, ie. in C notation <code>n % pow(b, d)</code>. 1.8% of remainders as possible squares. So depending on the cost of a modulus operation (ie. division) and a table lookup versus a square root on your machine, using this modulus might be faster. 110880 32-bit words is not much RAM these days and fetching a machine word is going to be faster than fetching a single bit.",
        "answer": "It's been pointed out that the last <code>d</code> digits of a perfect square can only take on certain values. The last <code>d</code> digits (in base <code>b</code>) of a number <code>n</code> is the same as the remainder when <code>n</code> is divided by <code>b</code><code>d</code>, ie. in C notation <code>n % pow(b, d)</code>. This can be generalized to any modulus <code>m</code>, ie. <code>n % m</code> can be used to rule out some percentage of numbers from being perfect squares. The modulus you are currently using is 64, which allows 12, ie. 19% of remainders, as possible squares. With a little coding I found the modulus 110880, which allows only 2016, ie. 1.8% of remainders as possible squares. So depending on the cost of a modulus operation (ie. division) and a table lookup versus a square root on your machine, using this modulus might be faster. By the way if Java has a way to store a packed array of bits for the lookup table, don't use it. 110880 32-bit words is not much RAM these days and fetching a machine word is going to be faster than fetching a single bit.",
        "summary": "The last <code>d</code> digits (in base <code>b</code>) of a number <code>n</code> is the same as the remainder when <code>n</code> is divided by <code>b</code><code>d</code>, ie. in C notation <code>n % pow(b, d)</code>. 1.8% of remainders as possible squares. So depending on the cost of a modulus operation (ie. division) and a table lookup versus a square root on your machine, using this modulus might be faster. 110880 32-bit words is not much RAM these days and fetching a machine word is going to be faster than fetching a single bit."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The sequence of characters between &lt; and > uniquely refer to a header, which isn't necessarily a file. Implementations are pretty much free to use the character sequence as they wish. (Mostly, however, just treat it as a file name and do a search in the include path, as the other posts state.) If the <code>#include \"file\"</code> form is used, the implementation first looks for a file of the given name, if supported. If not (supported), or if the search fails, the implementation behaves as though the other (<code>#include &lt;file&gt;</code>) form was used. Also, a third form exists and is used when the <code>#include</code> directive doesn't match either of the forms above. In this form, some basic preprocessing (such as macro expansion) is done on the \"operands\" of the <code>#include</code> directive, and the result is expected to match one of the two other forms.",
        "output": "The sequence of characters between &lt; and > uniquely refer to a header, which isn't necessarily a file. If the <code>#include \"file\"</code> form is used, the implementation first looks for a file of the given name, if supported. If not (supported), or if the search fails, the implementation behaves as though the other (<code>#include &lt;file&gt;</code>) form was used.",
        "answer": "The sequence of characters between &lt; and > uniquely refer to a header, which isn't necessarily a file. Implementations are pretty much free to use the character sequence as they wish. (Mostly, however, just treat it as a file name and do a search in the include path, as the other posts state.) If the <code>#include \"file\"</code> form is used, the implementation first looks for a file of the given name, if supported. If not (supported), or if the search fails, the implementation behaves as though the other (<code>#include &lt;file&gt;</code>) form was used. Also, a third form exists and is used when the <code>#include</code> directive doesn't match either of the forms above. In this form, some basic preprocessing (such as macro expansion) is done on the \"operands\" of the <code>#include</code> directive, and the result is expected to match one of the two other forms.",
        "summary": "The sequence of characters between &lt; and > uniquely refer to a header, which isn't necessarily a file. If the <code>#include \"file\"</code> form is used, the implementation first looks for a file of the given name, if supported. If not (supported), or if the search fails, the implementation behaves as though the other (<code>#include &lt;file&gt;</code>) form was used."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You've asked how to shoot yourself in the foot and I'm here to provide the ammo: You could use <code>tr -d '{}'</code> instead of <code>sed</code>. But leaving them out completely seems to have the desired effect as well. If you want to strip off the outer quotes, pipe the result of the above through <code>sed 's/\\(^\"\\|\"$\\)//g'</code> I think others have sounded sufficient alarm. I'll be standing by with a cell phone to call an ambulance. Fire when ready.",
        "output": "You could use <code>tr -d '{}'</code> instead of <code>sed</code>. If you want to strip off the outer quotes, pipe the result of the above through <code>sed 's/\\(^\"\\|\"$\\)//g'</code>",
        "answer": "You've asked how to shoot yourself in the foot and I'm here to provide the ammo: You could use <code>tr -d '{}'</code> instead of <code>sed</code>. But leaving them out completely seems to have the desired effect as well. If you want to strip off the outer quotes, pipe the result of the above through <code>sed 's/\\(^\"\\|\"$\\)//g'</code> I think others have sounded sufficient alarm. I'll be standing by with a cell phone to call an ambulance. Fire when ready.",
        "summary": "You could use <code>tr -d '{}'</code> instead of <code>sed</code>. If you want to strip off the outer quotes, pipe the result of the above through <code>sed 's/\\(^\"\\|\"$\\)//g'</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n the common short answer is: if you are using AJAX to make data requests, you can easily send and return objects as JSON strings. Available extensions for Javascript support toJSON() calls on all javascript types for sending data to the server in an AJAX request. AJAX responses can return objects as JSON strings which can be converted into Javascript objects by a simple eval call, e.g. if the AJAX function someAjaxFunctionCallReturningJson returned you could write in Javascript JSON can also be used for web service payloads et al, but it is really convenient for AJAX results.",
        "output": "the common short answer is: if you are using AJAX to make data requests, you can easily send and return objects as JSON strings. JSON can also be used for web service payloads et al, but it is really convenient for AJAX results.",
        "answer": "the common short answer is: if you are using AJAX to make data requests, you can easily send and return objects as JSON strings. Available extensions for Javascript support toJSON() calls on all javascript types for sending data to the server in an AJAX request. AJAX responses can return objects as JSON strings which can be converted into Javascript objects by a simple eval call, e.g. if the AJAX function someAjaxFunctionCallReturningJson returned you could write in Javascript JSON can also be used for web service payloads et al, but it is really convenient for AJAX results.",
        "summary": "the common short answer is: if you are using AJAX to make data requests, you can easily send and return objects as JSON strings. JSON can also be used for web service payloads et al, but it is really convenient for AJAX results."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The behaviour is not really that strange. Looking into the implementation of the classes, it is caused by: <li>Charset.defaultCharset() is not caching the determined character set in Java 5. <li>Setting the system property \"file.encoding\" and invoking Charset.defaultCharset() again causes a second evaluation of the system property, no character set with the name \"Latin-1\" is found, so Charset.defaultCharset defaults to \"UTF-8\". <li>The OutputStreamWriter is however caching the default character set and is probably used already during VM initialization, so that its default character set diverts from Charset.defaultCharset() if the system property \"file.encoding\" has been changed at runtime. As already pointed out, it is not documented how the VM must behave in such a situation. The Charset.defaultCharset() API documentation is not very precise on how the default character set is determined, only mentioning that it is usually done on VM startup, based on factors like the OS default character set or default locale.",
        "output": "Looking into the implementation of the classes, it is caused by: <li>Charset.defaultCharset() is not caching the determined character set in Java 5. <li>Setting the system property \"file.encoding\" and invoking Charset.defaultCharset() again causes a second evaluation of the system property, no character set with the name \"Latin-1\" is found, so Charset.defaultCharset defaults to \"UTF-8\". <li>The OutputStreamWriter is however caching the default character set and is probably used already during VM initialization, so that its default character set diverts from Charset.defaultCharset() if the system property \"file.encoding\" has been changed at runtime.",
        "answer": "The behaviour is not really that strange. Looking into the implementation of the classes, it is caused by: <li>Charset.defaultCharset() is not caching the determined character set in Java 5. <li>Setting the system property \"file.encoding\" and invoking Charset.defaultCharset() again causes a second evaluation of the system property, no character set with the name \"Latin-1\" is found, so Charset.defaultCharset defaults to \"UTF-8\". <li>The OutputStreamWriter is however caching the default character set and is probably used already during VM initialization, so that its default character set diverts from Charset.defaultCharset() if the system property \"file.encoding\" has been changed at runtime. As already pointed out, it is not documented how the VM must behave in such a situation. The Charset.defaultCharset() API documentation is not very precise on how the default character set is determined, only mentioning that it is usually done on VM startup, based on factors like the OS default character set or default locale.",
        "summary": "Looking into the implementation of the classes, it is caused by: <li>Charset.defaultCharset() is not caching the determined character set in Java 5. <li>Setting the system property \"file.encoding\" and invoking Charset.defaultCharset() again causes a second evaluation of the system property, no character set with the name \"Latin-1\" is found, so Charset.defaultCharset defaults to \"UTF-8\". <li>The OutputStreamWriter is however caching the default character set and is probably used already during VM initialization, so that its default character set diverts from Charset.defaultCharset() if the system property \"file.encoding\" has been changed at runtime."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You must cast your integers as string when trying to concatenate them into a varchar. i.e. In SQL Server 2008, you can use the <code>STR</code> function:",
        "output": "You must cast your integers as string when trying to concatenate them into a varchar.",
        "answer": "You must cast your integers as string when trying to concatenate them into a varchar. i.e. In SQL Server 2008, you can use the <code>STR</code> function:",
        "summary": "You must cast your integers as string when trying to concatenate them into a varchar."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just to add another alternative: Java 6 does have a solution for type-safe database queries using the javax.persistence.criteria package. Though i must say that this is not really LINQ, because with LINQ you can query any IEnumerable.",
        "output": "Just to add another alternative: Java 6 does have a solution for type-safe database queries using the javax.persistence.criteria package.",
        "answer": "Just to add another alternative: Java 6 does have a solution for type-safe database queries using the javax.persistence.criteria package. Though i must say that this is not really LINQ, because with LINQ you can query any IEnumerable.",
        "summary": "Just to add another alternative: Java 6 does have a solution for type-safe database queries using the javax.persistence.criteria package."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>math.ceil</code> to round up: NOTE: The input should be float. If you need an integer, call <code>int</code> to convert it: BTW, use <code>math.floor</code> to round down and <code>round</code> to round to nearest integer.",
        "output": "Use <code>math.ceil</code> to round up:",
        "answer": "Use <code>math.ceil</code> to round up: NOTE: The input should be float. If you need an integer, call <code>int</code> to convert it: BTW, use <code>math.floor</code> to round down and <code>round</code> to round to nearest integer.",
        "summary": "Use <code>math.ceil</code> to round up:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You <em>declared</em> them, but you didn't initialize them. Initializing them is setting them equal to a value: You get the error because you haven't initialized the variables, but you increment them (e.g., <code>a++</code>) in the <code>for</code> loop.",
        "output": "You <em>declared</em> them, but you didn't initialize them. You get the error because you haven't initialized the variables, but you increment them (e.g., <code>a++</code>) in the <code>for</code> loop.",
        "answer": "You <em>declared</em> them, but you didn't initialize them. Initializing them is setting them equal to a value: You get the error because you haven't initialized the variables, but you increment them (e.g., <code>a++</code>) in the <code>for</code> loop.",
        "summary": "You <em>declared</em> them, but you didn't initialize them. You get the error because you haven't initialized the variables, but you increment them (e.g., <code>a++</code>) in the <code>for</code> loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It shows how an algorithm scales. <strong>O(n2)</strong>:  known as <strong>Quadratic complexity</strong> <li>1 item: 1 second <li>10 items: 100 seconds <li>100 items: 10000 seconds Notice that the number of items increases by a factor of 10, but the time increases by a factor of 102. Basically, n=10 and so O(n2) gives us the scaling factor n2 which is 102. <strong>O(n)</strong>:  known as <strong>Linear complexity</strong> <li>1 item: 1 second <li>10 items: 10 seconds <li>100 items: 100 seconds This time the number of items increases by a factor of 10, and so does the time. n=10 and so O(n)'s scaling factor is 10. <strong>O(1)</strong>:  known as <strong>Constant complexity</strong> <li>1 item: 1 second <li>10 items: 1 second <li>100 items: 1 second The number of items is still increasing by a factor of 10, but the scaling factor of O(1) is always 1. <strong>O(log n)</strong>:  known as <strong>Logarithmic complexity</strong> <li>1 item: 1 second <li>10 items: 2 seconds <li>100 items: 3 seconds <li>1000 items: 4 seconds <li>10000 items: 5 seconds The number of computations is only increased by a log of the input value. So in this case, assuming each computation takes 1 second, the log of the input <code>n</code> is the time required, hence <code>log n</code>. That's the gist of it. They reduce the maths down so it might not be exactly n2 or whatever they say it is, but that'll be the dominating factor in the scaling.",
        "output": "It shows how an algorithm scales.",
        "answer": "It shows how an algorithm scales. <strong>O(n2)</strong>:  known as <strong>Quadratic complexity</strong> <li>1 item: 1 second <li>10 items: 100 seconds <li>100 items: 10000 seconds Notice that the number of items increases by a factor of 10, but the time increases by a factor of 102. Basically, n=10 and so O(n2) gives us the scaling factor n2 which is 102. <strong>O(n)</strong>:  known as <strong>Linear complexity</strong> <li>1 item: 1 second <li>10 items: 10 seconds <li>100 items: 100 seconds This time the number of items increases by a factor of 10, and so does the time. n=10 and so O(n)'s scaling factor is 10. <strong>O(1)</strong>:  known as <strong>Constant complexity</strong> <li>1 item: 1 second <li>10 items: 1 second <li>100 items: 1 second The number of items is still increasing by a factor of 10, but the scaling factor of O(1) is always 1. <strong>O(log n)</strong>:  known as <strong>Logarithmic complexity</strong> <li>1 item: 1 second <li>10 items: 2 seconds <li>100 items: 3 seconds <li>1000 items: 4 seconds <li>10000 items: 5 seconds The number of computations is only increased by a log of the input value. So in this case, assuming each computation takes 1 second, the log of the input <code>n</code> is the time required, hence <code>log n</code>. That's the gist of it. They reduce the maths down so it might not be exactly n2 or whatever they say it is, but that'll be the dominating factor in the scaling.",
        "summary": "It shows how an algorithm scales."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It looks like whichever program or process you're trying to initialize either isn't installed on your machine, has a damaged installation or needs to be registered. Either install it, repair it (via Add/Remove Programs) or register it (via Regsvr32.exe). You haven't provided enough information for us to help you any more than this.",
        "output": "Either install it, repair it (via Add/Remove Programs) or register it (via Regsvr32.exe).",
        "answer": "It looks like whichever program or process you're trying to initialize either isn't installed on your machine, has a damaged installation or needs to be registered. Either install it, repair it (via Add/Remove Programs) or register it (via Regsvr32.exe). You haven't provided enough information for us to help you any more than this.",
        "summary": "Either install it, repair it (via Add/Remove Programs) or register it (via Regsvr32.exe)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To avoid this error you could either: <li>Load the assembly dynamically, or <li>Sign the third-party assembly. You will find instructions on signing third-party assemblies in <em>.NET-fu: Signing an Unsigned Assembly (Without Delay Signing)</em>. Signing Third-Party Assemblies The basic principle to sign a thirp-party is to <li>Disassemble the assembly using <code>ildasm.exe</code> and save the intermediate language (IL): BIGBLOCK <li>Rebuild and sign the assembly: BIGBLOCK Fixing Additional References The above steps work fine unless your third-party assembly (<em>A.dll</em>) references another library (<em>B.dll</em>) which also has to be signed. You can disassemble, rebuild and sign both <em>A.dll</em> and <em>B.dll</em> using the commands above, but at runtime, loading of <em>B.dll</em> will fail because <em>A.dll</em> was originally built with a reference to the <em>unsigned</em> version of <em>B.dll</em>. The fix to this issue is to patch the IL file generated in step 1 above. You will need to add the public key token of B.dll to the reference. You get this token by calling BIGBLOCK which will give you the following output: BIGBLOCK The last line contains the public key token. You then have to search the IL of <em>A.dll</em> for the reference to <em>B.dll</em> and add the token as follows: BIGBLOCK",
        "output": "To avoid this error you could either: <li>Load the assembly dynamically, or <li>Sign the third-party assembly. <li>Disassemble the assembly using <code>ildasm.exe</code> and save the intermediate language (IL): BIGBLOCK <li>Rebuild and sign the assembly: BIGBLOCK The above steps work fine unless your third-party assembly (<em>A.dll</em>) references another library (<em>B.dll</em>) which also has to be signed. The fix to this issue is to patch the IL file generated in step 1 above.",
        "answer": "To avoid this error you could either: <li>Load the assembly dynamically, or <li>Sign the third-party assembly. You will find instructions on signing third-party assemblies in <em>.NET-fu: Signing an Unsigned Assembly (Without Delay Signing)</em>. Signing Third-Party Assemblies The basic principle to sign a thirp-party is to <li>Disassemble the assembly using <code>ildasm.exe</code> and save the intermediate language (IL): BIGBLOCK <li>Rebuild and sign the assembly: BIGBLOCK Fixing Additional References The above steps work fine unless your third-party assembly (<em>A.dll</em>) references another library (<em>B.dll</em>) which also has to be signed. You can disassemble, rebuild and sign both <em>A.dll</em> and <em>B.dll</em> using the commands above, but at runtime, loading of <em>B.dll</em> will fail because <em>A.dll</em> was originally built with a reference to the <em>unsigned</em> version of <em>B.dll</em>. The fix to this issue is to patch the IL file generated in step 1 above. You will need to add the public key token of B.dll to the reference. You get this token by calling BIGBLOCK which will give you the following output: BIGBLOCK The last line contains the public key token. You then have to search the IL of <em>A.dll</em> for the reference to <em>B.dll</em> and add the token as follows: BIGBLOCK",
        "summary": "To avoid this error you could either: <li>Load the assembly dynamically, or <li>Sign the third-party assembly. <li>Disassemble the assembly using <code>ildasm.exe</code> and save the intermediate language (IL): BIGBLOCK <li>Rebuild and sign the assembly: BIGBLOCK The above steps work fine unless your third-party assembly (<em>A.dll</em>) references another library (<em>B.dll</em>) which also has to be signed. The fix to this issue is to patch the IL file generated in step 1 above."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I hope my encoding here is right ;D To make it faster just use the ugly getInstance() call of GregorianCalendar instead of constructor call:",
        "output": "To make it faster just use the ugly getInstance() call of GregorianCalendar instead of constructor call:",
        "answer": "I hope my encoding here is right ;D To make it faster just use the ugly getInstance() call of GregorianCalendar instead of constructor call:",
        "summary": "To make it faster just use the ugly getInstance() call of GregorianCalendar instead of constructor call:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One thing that I'm surprised hasn't been mentioned yet is that implementing <code>Runnable</code> makes your class more flexible. If you extend thread then the action you're doing is always going to be in a thread. However, if you implement <code>Runnable</code> it doesn't have to be. You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread). The options are a lot more open if you just use <code>Runnable</code> than if you bind yourself to <code>Thread</code>.",
        "output": "One thing that I'm surprised hasn't been mentioned yet is that implementing <code>Runnable</code> makes your class more flexible. If you extend thread then the action you're doing is always going to be in a thread.",
        "answer": "One thing that I'm surprised hasn't been mentioned yet is that implementing <code>Runnable</code> makes your class more flexible. If you extend thread then the action you're doing is always going to be in a thread. However, if you implement <code>Runnable</code> it doesn't have to be. You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread). The options are a lot more open if you just use <code>Runnable</code> than if you bind yourself to <code>Thread</code>.",
        "summary": "One thing that I'm surprised hasn't been mentioned yet is that implementing <code>Runnable</code> makes your class more flexible. If you extend thread then the action you're doing is always going to be in a thread."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A few more points (Reference: Java Concurrency in Practice) When a new thread is created it inherits the daemon status of its parent. Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned: finally blocks are not executed, stacks are not unwound - the JVM just exits. Due to this reason daemon threads should be used sparingly and it is dangerous to use them for tasks that might perform any sort of I/O.",
        "output": "When a new thread is created it inherits the daemon status of its parent. Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned:",
        "answer": "A few more points (Reference: Java Concurrency in Practice) When a new thread is created it inherits the daemon status of its parent. Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned: finally blocks are not executed, stacks are not unwound - the JVM just exits. Due to this reason daemon threads should be used sparingly and it is dangerous to use them for tasks that might perform any sort of I/O.",
        "summary": "When a new thread is created it inherits the daemon status of its parent. Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could read the entire file with dynamic memory allocation, but isn't a good idea because if the file is too big, you could have memory problems. So is better read short parts of the file and print it.",
        "output": "So is better read short parts of the file and print it.",
        "answer": "You could read the entire file with dynamic memory allocation, but isn't a good idea because if the file is too big, you could have memory problems. So is better read short parts of the file and print it.",
        "summary": "So is better read short parts of the file and print it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVP: the view is in charge. The view, in most cases, creates its presenter. The presenter will interact with the model and manipulate the view through an interface. The view will sometimes interact with the presenter, usually through some interface. This comes down to implementation; do you want the view to call methods on the presenter or do you want the view to have events the presenter listens to? It boils down to this: The view knows about the presenter. The view delegates to the presenter. MVC: the controller is in charge. The controller is created or accessed based on some event/request. The controller then creates the appropriate view and interacts with the model to further configure the view. It boils down to: the controller creates and manages the view; the view is slave to the controller. The view does not know about the controller.",
        "output": "MVP: the view is in charge. MVC: the controller is in charge.",
        "answer": "MVP: the view is in charge. The view, in most cases, creates its presenter. The presenter will interact with the model and manipulate the view through an interface. The view will sometimes interact with the presenter, usually through some interface. This comes down to implementation; do you want the view to call methods on the presenter or do you want the view to have events the presenter listens to? It boils down to this: The view knows about the presenter. The view delegates to the presenter. MVC: the controller is in charge. The controller is created or accessed based on some event/request. The controller then creates the appropriate view and interacts with the model to further configure the view. It boils down to: the controller creates and manages the view; the view is slave to the controller. The view does not know about the controller.",
        "summary": "MVP: the view is in charge. MVC: the controller is in charge."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Too many people put objects which are not thread safe in a singleton pattern. I've seen examples of a DataContext (LINQ&nbsp;to&nbsp;SQL) done in a singleton pattern, despite the fact that the DataContext is not thread safe and is purely a unit-of-work object.",
        "output": "Too many people put objects which are not thread safe in a singleton pattern.",
        "answer": "Too many people put objects which are not thread safe in a singleton pattern. I've seen examples of a DataContext (LINQ&nbsp;to&nbsp;SQL) done in a singleton pattern, despite the fact that the DataContext is not thread safe and is purely a unit-of-work object.",
        "summary": "Too many people put objects which are not thread safe in a singleton pattern."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Singletons solve one (and only one) problem. Resource Contention. If you have some resource that (1) can only have a single instance, and (2) you need to manage that single instance, you need a singleton. There aren't many examples. A log file is the big one. You don't want to just abandon a single log file. You want to flush, sync and close it properly. This is an example of a single shared resource that has to be managed. It's rare that you need a singleton. The reason they're bad is that they feel like a global and they're a fully paid up member of the GoF Design Patterns book. When you think you need a global, you're probably making a terrible design mistake.",
        "output": "It's rare that you need a singleton. The reason they're bad is that they feel like a global and they're a fully paid up member of the GoF Design Patterns book.",
        "answer": "Singletons solve one (and only one) problem. Resource Contention. If you have some resource that (1) can only have a single instance, and (2) you need to manage that single instance, you need a singleton. There aren't many examples. A log file is the big one. You don't want to just abandon a single log file. You want to flush, sync and close it properly. This is an example of a single shared resource that has to be managed. It's rare that you need a singleton. The reason they're bad is that they feel like a global and they're a fully paid up member of the GoF Design Patterns book. When you think you need a global, you're probably making a terrible design mistake.",
        "summary": "It's rare that you need a singleton. The reason they're bad is that they feel like a global and they're a fully paid up member of the GoF Design Patterns book."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Consider Google Collections for an updated Collections framework that supports generics. UPDATE: The google collections library is now deprecated. You should use the latest release of Guava instead. It still has all the same extensions to the collections framework including a mechanism for filtering based on a predicate.",
        "output": "Consider Google Collections for an updated Collections framework that supports generics.",
        "answer": "Consider Google Collections for an updated Collections framework that supports generics. UPDATE: The google collections library is now deprecated. You should use the latest release of Guava instead. It still has all the same extensions to the collections framework including a mechanism for filtering based on a predicate.",
        "summary": "Consider Google Collections for an updated Collections framework that supports generics."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You should use a <code>Func&lt;string, int&gt;</code> delegate, that represents a function taking a <code>string</code> as argument and returning an <code>int</code>: Then use it:",
        "output": "You should use a <code>Func&lt;string, int&gt;</code> delegate, that represents a function taking a <code>string</code> as argument and returning an <code>int</code>: Then use it:",
        "answer": "You should use a <code>Func&lt;string, int&gt;</code> delegate, that represents a function taking a <code>string</code> as argument and returning an <code>int</code>: Then use it:",
        "summary": "You should use a <code>Func&lt;string, int&gt;</code> delegate, that represents a function taking a <code>string</code> as argument and returning an <code>int</code>: Then use it:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You cannot do this in C#. What you can do is have a <code>out</code> parameter or return your own class (or struct if you want it to be immutable). Using out parameter Using custom class (or struct)",
        "output": "What you can do is have a <code>out</code> parameter or return your own class (or struct if you want it to be immutable).",
        "answer": "You cannot do this in C#. What you can do is have a <code>out</code> parameter or return your own class (or struct if you want it to be immutable). Using out parameter Using custom class (or struct)",
        "summary": "What you can do is have a <code>out</code> parameter or return your own class (or struct if you want it to be immutable)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n use this:",
        "output": "use this:",
        "answer": "use this:",
        "summary": "use this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>There isn't a <code>Truncate()</code> method on string, unfortunately.</strong> You have to write this kind of logic yourself. What you can do, however, is wrap this in an extension method so you don't have to duplicate it everywhere: BIGBLOCK Now we can write: BIGBLOCK",
        "output": "<strong>There isn't a <code>Truncate()</code> method on string, unfortunately.</strong> You have to write this kind of logic yourself. Now we can write: BIGBLOCK",
        "answer": "<strong>There isn't a <code>Truncate()</code> method on string, unfortunately.</strong> You have to write this kind of logic yourself. What you can do, however, is wrap this in an extension method so you don't have to duplicate it everywhere: BIGBLOCK Now we can write: BIGBLOCK",
        "summary": "<strong>There isn't a <code>Truncate()</code> method on string, unfortunately.</strong> You have to write this kind of logic yourself. Now we can write: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is the solution but you have to set:",
        "output": "This is the solution but you have to set:",
        "answer": "This is the solution but you have to set:",
        "summary": "This is the solution but you have to set:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to have your DBA modify the init.ora file, adding the directory you want to access to the 'utl_file_dir' parameter. Your database instance will then need to be stopped and restarted because init.ora is only read when the database is brought up. You can view (but not change) this parameter by running the following query: Share and enjoy.",
        "output": "You need to have your DBA modify the init.ora file, adding the directory you want to access to the 'utl_file_dir' parameter. Your database instance will then need to be stopped and restarted because init.ora is only read when the database is brought up.",
        "answer": "You need to have your DBA modify the init.ora file, adding the directory you want to access to the 'utl_file_dir' parameter. Your database instance will then need to be stopped and restarted because init.ora is only read when the database is brought up. You can view (but not change) this parameter by running the following query: Share and enjoy.",
        "summary": "You need to have your DBA modify the init.ora file, adding the directory you want to access to the 'utl_file_dir' parameter. Your database instance will then need to be stopped and restarted because init.ora is only read when the database is brought up."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You don't have a continuous block of memory in order to allocate 762MB, your memory is fragmented and the allocator cannot find a big enough hole to allocate the needed memory. You can try to work with /3GB (as others had suggested) Or switch to 64 bit OS. Or modify the algorithm so it will not need a big chunk of memory. maybe allocate a few smaller (relatively) chunks of memory.",
        "output": "You don't have a continuous block of memory in order to allocate 762MB, your memory is fragmented and the allocator cannot find a big enough hole to allocate the needed memory.",
        "answer": "You don't have a continuous block of memory in order to allocate 762MB, your memory is fragmented and the allocator cannot find a big enough hole to allocate the needed memory. You can try to work with /3GB (as others had suggested) Or switch to 64 bit OS. Or modify the algorithm so it will not need a big chunk of memory. maybe allocate a few smaller (relatively) chunks of memory.",
        "summary": "You don't have a continuous block of memory in order to allocate 762MB, your memory is fragmented and the allocator cannot find a big enough hole to allocate the needed memory."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I was running into this error on my mac and found that I needed to upgrade from mysql 32bit to mysql 64 bit to get this error to go away. I was running OSX 10.6 on an intel macbook pro with ruby 1.9.2 and rails3.0.0 I also needed to install xcode in order to get unix utilities like \"make\" that are required to compile the gem. once this was done I was able to run gem install mysql and gem install mysql2 without error.",
        "output": "I was running into this error on my mac and found that I needed to upgrade from mysql 32bit to mysql 64 bit to get this error to go away. I was running OSX 10.6 on an intel macbook pro with ruby 1.9.2 and rails3.0.0 I also needed to install xcode in order to get unix utilities like \"make\" that are required to compile the gem.",
        "answer": "I was running into this error on my mac and found that I needed to upgrade from mysql 32bit to mysql 64 bit to get this error to go away. I was running OSX 10.6 on an intel macbook pro with ruby 1.9.2 and rails3.0.0 I also needed to install xcode in order to get unix utilities like \"make\" that are required to compile the gem. once this was done I was able to run gem install mysql and gem install mysql2 without error.",
        "summary": "I was running into this error on my mac and found that I needed to upgrade from mysql 32bit to mysql 64 bit to get this error to go away. I was running OSX 10.6 on an intel macbook pro with ruby 1.9.2 and rails3.0.0 I also needed to install xcode in order to get unix utilities like \"make\" that are required to compile the gem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use basic regular expressions on strings to find all special characters or use pattern and matcher classes to search/modify/delete user defined strings. This link has some simple and easy to understand examples for regular expressions: http://www.vogella.de/articles/JavaRegularExpressions/article.html",
        "output": "You can use basic regular expressions on strings to find all special characters or use pattern and matcher classes to search/modify/delete user defined strings.",
        "answer": "You can use basic regular expressions on strings to find all special characters or use pattern and matcher classes to search/modify/delete user defined strings. This link has some simple and easy to understand examples for regular expressions: http://www.vogella.de/articles/JavaRegularExpressions/article.html",
        "summary": "You can use basic regular expressions on strings to find all special characters or use pattern and matcher classes to search/modify/delete user defined strings."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Non-standard things are always strange :) for the long long portionunder GNU it's <code>L</code>, <code>ll</code> or <code>q</code> and under windows I believe it's <code>ll</code> only",
        "output": "for the long long portionunder GNU it's <code>L</code>, <code>ll</code> or <code>q</code> and under windows I believe it's <code>ll</code> only",
        "answer": "Non-standard things are always strange :) for the long long portionunder GNU it's <code>L</code>, <code>ll</code> or <code>q</code> and under windows I believe it's <code>ll</code> only",
        "summary": "for the long long portionunder GNU it's <code>L</code>, <code>ll</code> or <code>q</code> and under windows I believe it's <code>ll</code> only"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use the code from this question: How can I save a screenshot directly to a file in Windows? Just change <code>WIN32_API.GetDesktopWindow()</code> to the Handle property of the window you want to capture.",
        "output": "You can use the code from this question: How can I save a screenshot directly to a file in Windows? Just change <code>WIN32_API.GetDesktopWindow()</code> to the Handle property of the window you want to capture.",
        "answer": "You can use the code from this question: How can I save a screenshot directly to a file in Windows? Just change <code>WIN32_API.GetDesktopWindow()</code> to the Handle property of the window you want to capture.",
        "summary": "You can use the code from this question: How can I save a screenshot directly to a file in Windows? Just change <code>WIN32_API.GetDesktopWindow()</code> to the Handle property of the window you want to capture."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Alternatively, you could just return false from the click event: BIGBLOCK Which would stop the A-Href being triggered. Note however, for usability reasons, in an ideal world that href should still go somewhere, for the people whom want to open link in new tab ;)",
        "output": "Alternatively, you could just return false from the click event: BIGBLOCK",
        "answer": "Alternatively, you could just return false from the click event: BIGBLOCK Which would stop the A-Href being triggered. Note however, for usability reasons, in an ideal world that href should still go somewhere, for the people whom want to open link in new tab ;)",
        "summary": "Alternatively, you could just return false from the click event: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could translate spaces to newlines and then grep, e.g. :",
        "output": "You could translate spaces to newlines and then grep, e.g.",
        "answer": "You could translate spaces to newlines and then grep, e.g. :",
        "summary": "You could translate spaces to newlines and then grep, e.g."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It depends in what mode you are compiling. long long is not part of the C++ standard but only (usually) supported as extension. This affects the type of literals. Decimal integer literals without any suffix are always of type int <em>if int is big enough</em> to represent the number, long otherwise. If the number is even too big for long the result is implementation-defined (probably just a number of type long int that has been truncated for backward compatibility). In this case you have to explicitly use the LL suffix to enable the long long extension (on most compilers). The next C++ version will officially support long long in a way that you won't need any suffix unless you explicitly want the force the literal's type to be at least long long. If the number cannot be represented in long the compiler will automatically try to use long long even without LL suffix. I believe this is the behaviour of C99 as well.",
        "output": "long long is not part of the C++ standard but only (usually) supported as extension. If the number is even too big for long the result is implementation-defined (probably just a number of type long int that has been truncated for backward compatibility). In this case you have to explicitly use the LL suffix to enable the long long extension (on most compilers). If the number cannot be represented in long the compiler will automatically try to use long long even without LL suffix.",
        "answer": "It depends in what mode you are compiling. long long is not part of the C++ standard but only (usually) supported as extension. This affects the type of literals. Decimal integer literals without any suffix are always of type int <em>if int is big enough</em> to represent the number, long otherwise. If the number is even too big for long the result is implementation-defined (probably just a number of type long int that has been truncated for backward compatibility). In this case you have to explicitly use the LL suffix to enable the long long extension (on most compilers). The next C++ version will officially support long long in a way that you won't need any suffix unless you explicitly want the force the literal's type to be at least long long. If the number cannot be represented in long the compiler will automatically try to use long long even without LL suffix. I believe this is the behaviour of C99 as well.",
        "summary": "long long is not part of the C++ standard but only (usually) supported as extension. If the number is even too big for long the result is implementation-defined (probably just a number of type long int that has been truncated for backward compatibility). In this case you have to explicitly use the LL suffix to enable the long long extension (on most compilers). If the number cannot be represented in long the compiler will automatically try to use long long even without LL suffix."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In this case, IllegalArgumentException conveys clear information to the user using your API that the \" should not be null\". As other forum users pointed out you could use NPE if you want to as long as you convey the right information to the user using your API. GaryF and tweakt dropped \"Effective Java\" (which I swear by) references which recommends using NPE. And looking at how other good APIs are constructed is the best way to see how to construct your API. Another good example is to look at the Spring APIs. For example, org.springframework.beans.BeanUtils.instantiateClass(Constructor ctor, Object[] args) has a Assert.notNull(ctor, \"Constructor must not be null\") line. org.springframework.util.Assert.notNull(Object object, String message) method checks to see if the argument (object) passed in is null and if it is it throws a new IllegalArgumentException(message) which is then caught in the org.springframework.beans.BeanUtils.instantiateClass(...) method.",
        "output": "In this case, IllegalArgumentException conveys clear information to the user using your API that the \" should not be null\".",
        "answer": "In this case, IllegalArgumentException conveys clear information to the user using your API that the \" should not be null\". As other forum users pointed out you could use NPE if you want to as long as you convey the right information to the user using your API. GaryF and tweakt dropped \"Effective Java\" (which I swear by) references which recommends using NPE. And looking at how other good APIs are constructed is the best way to see how to construct your API. Another good example is to look at the Spring APIs. For example, org.springframework.beans.BeanUtils.instantiateClass(Constructor ctor, Object[] args) has a Assert.notNull(ctor, \"Constructor must not be null\") line. org.springframework.util.Assert.notNull(Object object, String message) method checks to see if the argument (object) passed in is null and if it is it throws a new IllegalArgumentException(message) which is then caught in the org.springframework.beans.BeanUtils.instantiateClass(...) method.",
        "summary": "In this case, IllegalArgumentException conveys clear information to the user using your API that the \" should not be null\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Can you check if every number exists? If yes you may try this: S = sum of all numbers in the bag (S &lt; 5050) Z = sum of the missing numbers 5050 - S if the missing numbers are <code>x</code> and <code>y</code> then: x = Z - y and max(x) = Z - 1 So you check the range from <code>1</code> to <code>max(x)</code> and find the number",
        "output": "Can you check if every number exists?",
        "answer": "Can you check if every number exists? If yes you may try this: S = sum of all numbers in the bag (S &lt; 5050) Z = sum of the missing numbers 5050 - S if the missing numbers are <code>x</code> and <code>y</code> then: x = Z - y and max(x) = Z - 1 So you check the range from <code>1</code> to <code>max(x)</code> and find the number",
        "summary": "Can you check if every number exists?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n scp file user@host:/path/on/host",
        "output": "scp file user@host:/path/on/host",
        "answer": "scp file user@host:/path/on/host",
        "summary": "scp file user@host:/path/on/host"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The transition component of this function worked really poorly for me in Chrome (didn't test elsewhere). I would resize the window a bunch and my element would sort of scoot around slowly, trying to catch up. So the following function comments that part out. In addition, I added parameters for passing in optional x &amp; y booleans, if you want to center vertically but not horizontally, for example:",
        "output": "So the following function comments that part out.",
        "answer": "The transition component of this function worked really poorly for me in Chrome (didn't test elsewhere). I would resize the window a bunch and my element would sort of scoot around slowly, trying to catch up. So the following function comments that part out. In addition, I added parameters for passing in optional x &amp; y booleans, if you want to center vertically but not horizontally, for example:",
        "summary": "So the following function comments that part out."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use console.log(...) directly in Firefox but not in IEs. In IEs you have to use window.console.",
        "output": "You can use console.log(...) directly in Firefox but not in IEs. In IEs you have to use window.console.",
        "answer": "You can use console.log(...) directly in Firefox but not in IEs. In IEs you have to use window.console.",
        "summary": "You can use console.log(...) directly in Firefox but not in IEs. In IEs you have to use window.console."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Jeff Atwood has a post on this here: http://www.codinghorror.com/blog/archives/000229.html He eventually went with Edit Pad Pro, because \"Based on my prior usage history, I felt that EditPad Pro was the best fit: it's quite fast on large text files, has best-of-breed regex support, and it doesn't pretend to be an IDE.\"",
        "output": "He eventually went with Edit Pad Pro, because \"Based on my prior usage history, I felt that EditPad Pro was the best fit: it's quite fast on large text files, has best-of-breed regex support, and it doesn't pretend to be an IDE.\"",
        "answer": "Jeff Atwood has a post on this here: http://www.codinghorror.com/blog/archives/000229.html He eventually went with Edit Pad Pro, because \"Based on my prior usage history, I felt that EditPad Pro was the best fit: it's quite fast on large text files, has best-of-breed regex support, and it doesn't pretend to be an IDE.\"",
        "summary": "He eventually went with Edit Pad Pro, because \"Based on my prior usage history, I felt that EditPad Pro was the best fit: it's quite fast on large text files, has best-of-breed regex support, and it doesn't pretend to be an IDE.\""
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For those interested, none of the methodologies above work if you wish to detect an installed library. I imagine you are left either with physically checking the path (potentially for header files and such), or something like this (if you are on a Debian-based distro): As you can see from the above, a \"0\" answer from the query means the package is not installed. This is a function of \"grep\" - a \"0\" means a match was found, a \"1\" means no match was found.",
        "output": "I imagine you are left either with physically checking the path (potentially for header files and such), or something like this (if you are on a Debian-based distro):",
        "answer": "For those interested, none of the methodologies above work if you wish to detect an installed library. I imagine you are left either with physically checking the path (potentially for header files and such), or something like this (if you are on a Debian-based distro): As you can see from the above, a \"0\" answer from the query means the package is not installed. This is a function of \"grep\" - a \"0\" means a match was found, a \"1\" means no match was found.",
        "summary": "I imagine you are left either with physically checking the path (potentially for header files and such), or something like this (if you are on a Debian-based distro):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Vim, use <code>:insert</code>. This will keep all your formatting and not do autoindenting. For more information <code>help :insert</code>.",
        "output": "In Vim, use <code>:insert</code>. For more information <code>help :insert</code>.",
        "answer": "In Vim, use <code>:insert</code>. This will keep all your formatting and not do autoindenting. For more information <code>help :insert</code>.",
        "summary": "In Vim, use <code>:insert</code>. For more information <code>help :insert</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have done this like this: Load the font: BIGBLOCK Now, in your <code>drawRect:</code>, do something like this: BIGBLOCK Basically you have to do some brute force looping through the text and futzing about with the magic number to find your offset (here, see me using 29) in the font, but it works. Also, you have to make sure the font is legally embeddable. Most aren't and there are lawyers who specialize in this sort of thing, so be warned.",
        "output": "Load the font: BIGBLOCK Now, in your <code>drawRect:</code>, do something like this: BIGBLOCK Basically you have to do some brute force looping through the text and futzing about with the magic number to find your offset (here, see me using 29) in the font, but it works. Also, you have to make sure the font is legally embeddable.",
        "answer": "I have done this like this: Load the font: BIGBLOCK Now, in your <code>drawRect:</code>, do something like this: BIGBLOCK Basically you have to do some brute force looping through the text and futzing about with the magic number to find your offset (here, see me using 29) in the font, but it works. Also, you have to make sure the font is legally embeddable. Most aren't and there are lawyers who specialize in this sort of thing, so be warned.",
        "summary": "Load the font: BIGBLOCK Now, in your <code>drawRect:</code>, do something like this: BIGBLOCK Basically you have to do some brute force looping through the text and futzing about with the magic number to find your offset (here, see me using 29) in the font, but it works. Also, you have to make sure the font is legally embeddable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A function can be in-lined into a SQL statement, e.g. BIGBLOCK Which cannot be done with a stored procedure. The architecture of the query optimiser limits what can be done with functions in this context, requiring that they are pure (i.e. the same inputs always produce the same output). This restricts what can be done in the function, but allows it to be used in-line in the query if it is defined to be \"pure\". Otherwise, a function (not necessarily deterministic) can return a variable or a result set. In the case of a function returning a result set, you can join it against some other selection in a query. However, you cannot use a non-deterministic function like this in a correlated subquery as the optimiser cannot predict what sort of result set will be returned (this is computationally intractable, like the halting problem).",
        "output": "A function can be in-lined into a SQL statement, e.g. BIGBLOCK Which cannot be done with a stored procedure. This restricts what can be done in the function, but allows it to be used in-line in the query if it is defined to be \"pure\". However, you cannot use a non-deterministic function like this in a correlated subquery as the optimiser cannot predict what sort of result set will be returned (this is computationally intractable, like the halting problem).",
        "answer": "A function can be in-lined into a SQL statement, e.g. BIGBLOCK Which cannot be done with a stored procedure. The architecture of the query optimiser limits what can be done with functions in this context, requiring that they are pure (i.e. the same inputs always produce the same output). This restricts what can be done in the function, but allows it to be used in-line in the query if it is defined to be \"pure\". Otherwise, a function (not necessarily deterministic) can return a variable or a result set. In the case of a function returning a result set, you can join it against some other selection in a query. However, you cannot use a non-deterministic function like this in a correlated subquery as the optimiser cannot predict what sort of result set will be returned (this is computationally intractable, like the halting problem).",
        "summary": "A function can be in-lined into a SQL statement, e.g. BIGBLOCK Which cannot be done with a stored procedure. This restricts what can be done in the function, but allows it to be used in-line in the query if it is defined to be \"pure\". However, you cannot use a non-deterministic function like this in a correlated subquery as the optimiser cannot predict what sort of result set will be returned (this is computationally intractable, like the halting problem)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use the <code>substr</code> function to return a substring starting from the 5th character: BIGBLOCK",
        "output": "You could use the <code>substr</code> function to return a substring starting from the 5th character: BIGBLOCK",
        "answer": "You could use the <code>substr</code> function to return a substring starting from the 5th character: BIGBLOCK",
        "summary": "You could use the <code>substr</code> function to return a substring starting from the 5th character: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Use jQuery</strong> Look how easy it would be if you did. <strong>Example:</strong> BIGBLOCK",
        "output": "<strong>Use jQuery</strong> BIGBLOCK",
        "answer": "<strong>Use jQuery</strong> Look how easy it would be if you did. <strong>Example:</strong> BIGBLOCK",
        "summary": "<strong>Use jQuery</strong> BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Read the following:  http://docs.python.org/library/codecs.html#module-encodings.utf_8_sig Do this BIGBLOCK The resulting file is UTF-8 with the expected BOM.",
        "output": "Read the following:  http://docs.python.org/library/codecs.html#module-encodings.utf_8_sig Do this BIGBLOCK",
        "answer": "Read the following:  http://docs.python.org/library/codecs.html#module-encodings.utf_8_sig Do this BIGBLOCK The resulting file is UTF-8 with the expected BOM.",
        "summary": "Read the following:  http://docs.python.org/library/codecs.html#module-encodings.utf_8_sig Do this BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is Java. You have to make your own tailored Pair class with descriptive class and field names, and not to mind that you will reinvent the wheel by writing hashCode()/equals() or implementing Comparable again and again.",
        "output": "You have to make your own tailored Pair class with descriptive class and field names, and not to mind that you will reinvent the wheel by writing hashCode()/equals() or implementing Comparable again and again.",
        "answer": "This is Java. You have to make your own tailored Pair class with descriptive class and field names, and not to mind that you will reinvent the wheel by writing hashCode()/equals() or implementing Comparable again and again.",
        "summary": "You have to make your own tailored Pair class with descriptive class and field names, and not to mind that you will reinvent the wheel by writing hashCode()/equals() or implementing Comparable again and again."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the trigger() method BIGBLOCK",
        "output": "Use the trigger() method BIGBLOCK",
        "answer": "Use the trigger() method BIGBLOCK",
        "summary": "Use the trigger() method BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n if a method is not static, that \"tells\" the compiler that the method requires access to instance-level data in the class, (like a non-static field). This data would not be available unless an instance of the class has been created. So the compiler throws an error if you try to call the method from a static method.. If in fact the method does NOT reference any non-static member of the class, make the method static. In Resharper, for example, just creating a non-static method that does NOT reference any static member of the class generates a warning message \"This method can be made static\"",
        "output": "if a method is not static, that \"tells\" the compiler that the method requires access to instance-level data in the class, (like a non-static field). This data would not be available unless an instance of the class has been created. If in fact the method does NOT reference any non-static member of the class, make the method static.",
        "answer": "if a method is not static, that \"tells\" the compiler that the method requires access to instance-level data in the class, (like a non-static field). This data would not be available unless an instance of the class has been created. So the compiler throws an error if you try to call the method from a static method.. If in fact the method does NOT reference any non-static member of the class, make the method static. In Resharper, for example, just creating a non-static method that does NOT reference any static member of the class generates a warning message \"This method can be made static\"",
        "summary": "if a method is not static, that \"tells\" the compiler that the method requires access to instance-level data in the class, (like a non-static field). This data would not be available unless an instance of the class has been created. If in fact the method does NOT reference any non-static member of the class, make the method static."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n That exception means that you are trying to unpack a tuple, but the tuple has too many values with respect to the number of target variables. For example: this work, and prints 1, then 2, then 3 But this raises your error raises Now, the reason why this happens in your case, I don't know, but maybe this answer will point you in the right direction.",
        "output": "That exception means that you are trying to unpack a tuple, but the tuple has too many values with respect to the number of target variables.",
        "answer": "That exception means that you are trying to unpack a tuple, but the tuple has too many values with respect to the number of target variables. For example: this work, and prints 1, then 2, then 3 But this raises your error raises Now, the reason why this happens in your case, I don't know, but maybe this answer will point you in the right direction.",
        "summary": "That exception means that you are trying to unpack a tuple, but the tuple has too many values with respect to the number of target variables."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Generally, I see <code>continue</code> (and <code>break</code>) as a warning that the code might use some refactoring, especially if the <code>while</code> or <code>for</code> loop declaration isn't immediately in sight. The same is true for <code>return</code> in the middle of a method, but for a slightly different reason. As others have already said, <code>continue</code> moves along to the next iteration of the loop, while <code>break</code> moves out of the enclosing loop. These can be maintenance timebombs because there is no immediate link between the <code>continue</code>/<code>break</code> and the loop it is continuing/breaking other than context; add an inner loop or move the \"guts\" of the loop into a separate method and you have a hidden effect of the <code>continue</code>/<code>break</code> failing. IMHO, it's best to use them as a measure of last resort, and then to make sure their use is grouped together tightly at the start or end of the loop so that the next developer can  see the \"bounds\" of the loop in one screen. <code>continue</code>, <code>break</code>, and <code>return</code> (other than the One True Return at the end of your method) all fall into the general category of \"hidden GOTOs\". They place loop and function control in unexpected places, which then eventually causes bugs.",
        "output": "As others have already said, <code>continue</code> moves along to the next iteration of the loop, while <code>break</code> moves out of the enclosing loop.",
        "answer": "Generally, I see <code>continue</code> (and <code>break</code>) as a warning that the code might use some refactoring, especially if the <code>while</code> or <code>for</code> loop declaration isn't immediately in sight. The same is true for <code>return</code> in the middle of a method, but for a slightly different reason. As others have already said, <code>continue</code> moves along to the next iteration of the loop, while <code>break</code> moves out of the enclosing loop. These can be maintenance timebombs because there is no immediate link between the <code>continue</code>/<code>break</code> and the loop it is continuing/breaking other than context; add an inner loop or move the \"guts\" of the loop into a separate method and you have a hidden effect of the <code>continue</code>/<code>break</code> failing. IMHO, it's best to use them as a measure of last resort, and then to make sure their use is grouped together tightly at the start or end of the loop so that the next developer can  see the \"bounds\" of the loop in one screen. <code>continue</code>, <code>break</code>, and <code>return</code> (other than the One True Return at the end of your method) all fall into the general category of \"hidden GOTOs\". They place loop and function control in unexpected places, which then eventually causes bugs.",
        "summary": "As others have already said, <code>continue</code> moves along to the next iteration of the loop, while <code>break</code> moves out of the enclosing loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think to answer this question definitively would require knowing the compiler name and version that you are using and the platform (CPU type, OS etc.) that it is compiling for.",
        "output": "I think to answer this question definitively would require knowing the compiler name and version that you are using and the platform (CPU type, OS etc.) that it is compiling for.",
        "answer": "I think to answer this question definitively would require knowing the compiler name and version that you are using and the platform (CPU type, OS etc.) that it is compiling for.",
        "summary": "I think to answer this question definitively would require knowing the compiler name and version that you are using and the platform (CPU type, OS etc.) that it is compiling for."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just got this problem on a development machine (production works just fine). I modify my config in IIS to allow anonymous access and put my name and password as credential. Not the best way I am sure but it works for testing purposes.",
        "output": "I modify my config in IIS to allow anonymous access and put my name and password as credential.",
        "answer": "Just got this problem on a development machine (production works just fine). I modify my config in IIS to allow anonymous access and put my name and password as credential. Not the best way I am sure but it works for testing purposes.",
        "summary": "I modify my config in IIS to allow anonymous access and put my name and password as credential."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The \"415 Unsupported Media Type\" error is telling you that the server will not accept your POST request. Your request is absolutely fine, it's the server that's mis-configured. <code>MappingJacksonHttpMessageConverter</code> will automatically set the request content-type header to <code>application/json</code>, and my guess is that your server is rejecting that. You haven't told us anything about your server setup, though, so I can't really advise you on that.",
        "output": "Your request is absolutely fine, it's the server that's mis-configured. <code>MappingJacksonHttpMessageConverter</code> will automatically set the request content-type header to <code>application/json</code>, and my guess is that your server is rejecting that.",
        "answer": "The \"415 Unsupported Media Type\" error is telling you that the server will not accept your POST request. Your request is absolutely fine, it's the server that's mis-configured. <code>MappingJacksonHttpMessageConverter</code> will automatically set the request content-type header to <code>application/json</code>, and my guess is that your server is rejecting that. You haven't told us anything about your server setup, though, so I can't really advise you on that.",
        "summary": "Your request is absolutely fine, it's the server that's mis-configured. <code>MappingJacksonHttpMessageConverter</code> will automatically set the request content-type header to <code>application/json</code>, and my guess is that your server is rejecting that."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have basically two options here: add the self-signed certificate to your JVM truststore or configure your client to Option 1 Export the certificate from your browser and import it in your JVM truststore (to establish a chain of trust): Option 2 Disable Certificate Validation: Note that <strong>I do not recommend the Option #2 at all</strong>. Disabling the trust manager defeats some parts of SSL and makes you vulnerable to man in the middle attacks. Prefer Option #1 or, even better, have the server use a \"real\" certificate signed by a well known CA.",
        "output": "You have basically two options here: add the self-signed certificate to your JVM truststore or configure your client to Option 1 Export the certificate from your browser and import it in your JVM truststore (to establish a chain of trust): Option 2 Disable Certificate Validation:",
        "answer": "You have basically two options here: add the self-signed certificate to your JVM truststore or configure your client to Option 1 Export the certificate from your browser and import it in your JVM truststore (to establish a chain of trust): Option 2 Disable Certificate Validation: Note that <strong>I do not recommend the Option #2 at all</strong>. Disabling the trust manager defeats some parts of SSL and makes you vulnerable to man in the middle attacks. Prefer Option #1 or, even better, have the server use a \"real\" certificate signed by a well known CA.",
        "summary": "You have basically two options here: add the self-signed certificate to your JVM truststore or configure your client to Option 1 Export the certificate from your browser and import it in your JVM truststore (to establish a chain of trust): Option 2 Disable Certificate Validation:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Initializer block is just like any bits of code; it's not \"attached\" to any field/method preceding it. To assign values to fields, you have to explicitly use the field as the lhs of an assignment statement. Also, your <code>countLines</code> can be made simpler: Based on my test, it looks like you can <code>getLineNumber()</code> after <code>close()</code>.",
        "output": "Initializer block is just like any bits of code; it's not \"attached\" to any field/method preceding it. To assign values to fields, you have to explicitly use the field as the lhs of an assignment statement.",
        "answer": "Initializer block is just like any bits of code; it's not \"attached\" to any field/method preceding it. To assign values to fields, you have to explicitly use the field as the lhs of an assignment statement. Also, your <code>countLines</code> can be made simpler: Based on my test, it looks like you can <code>getLineNumber()</code> after <code>close()</code>.",
        "summary": "Initializer block is just like any bits of code; it's not \"attached\" to any field/method preceding it. To assign values to fields, you have to explicitly use the field as the lhs of an assignment statement."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Recently Raymond Chen also ran an interesting series of articles on the yield keyword. <li>The implementation of iterators in C# and its consequences (part 1) <li>The implementation of iterators in C# and its consequences (part 2) <li>The implementation of iterators in C# and its consequences (part 3) <li>The implementation of iterators in C# and its consequences (part 4) While it's nominally used for easily implementing an iterator pattern, but can be generalized into a state machine. No point in quoting Raymond, the last part also links to other uses (but the example in Entin's blog is esp good, showing how to write async safe code).",
        "output": "While it's nominally used for easily implementing an iterator pattern, but can be generalized into a state machine.",
        "answer": "Recently Raymond Chen also ran an interesting series of articles on the yield keyword. <li>The implementation of iterators in C# and its consequences (part 1) <li>The implementation of iterators in C# and its consequences (part 2) <li>The implementation of iterators in C# and its consequences (part 3) <li>The implementation of iterators in C# and its consequences (part 4) While it's nominally used for easily implementing an iterator pattern, but can be generalized into a state machine. No point in quoting Raymond, the last part also links to other uses (but the example in Entin's blog is esp good, showing how to write async safe code).",
        "summary": "While it's nominally used for easily implementing an iterator pattern, but can be generalized into a state machine."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It usually is the directory from which the batch file is started, but if you start the batch file from a shortcut, a different starting directory could be given. Also, when you'r in cmd, and your current directory is <code>c:\\dir3</code>, you can still start the batch file using <code>c:\\dir1\\dir2\\batch.bat</code> in which case, the current directory will be <code>c:\\dir3</code>.",
        "output": "It usually is the directory from which the batch file is started, but if you start the batch file from a shortcut, a different starting directory could be given.",
        "answer": "It usually is the directory from which the batch file is started, but if you start the batch file from a shortcut, a different starting directory could be given. Also, when you'r in cmd, and your current directory is <code>c:\\dir3</code>, you can still start the batch file using <code>c:\\dir1\\dir2\\batch.bat</code> in which case, the current directory will be <code>c:\\dir3</code>.",
        "summary": "It usually is the directory from which the batch file is started, but if you start the batch file from a shortcut, a different starting directory could be given."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Their synchronization semantics are very different: mutexes allow serialization of access to a given resource i.e. multiple threads wait for a lock, one at a time and as previously said, the thread owns the lock until it is done: only this particular thread can unlock it. a binary semaphore is a counter with value 0 and 1: a task blocking on it until any task does a sem_post. The semaphore advertises that a resource is available, and it provides the mechanism to wait until it is signaled as being available. As such one can see a mutex as a token passed from task to tasks and a semaphore as traffic red-light (it signals someone that it can proceed).",
        "output": "As such one can see a mutex as a token passed from task to tasks and a semaphore as traffic red-light (it signals someone that it can proceed).",
        "answer": "Their synchronization semantics are very different: mutexes allow serialization of access to a given resource i.e. multiple threads wait for a lock, one at a time and as previously said, the thread owns the lock until it is done: only this particular thread can unlock it. a binary semaphore is a counter with value 0 and 1: a task blocking on it until any task does a sem_post. The semaphore advertises that a resource is available, and it provides the mechanism to wait until it is signaled as being available. As such one can see a mutex as a token passed from task to tasks and a semaphore as traffic red-light (it signals someone that it can proceed).",
        "summary": "As such one can see a mutex as a token passed from task to tasks and a semaphore as traffic red-light (it signals someone that it can proceed)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's not out yet, but the next version of cocos2d (2d game framework) will support variable length bitmap fonts as character maps. http://code.google.com/p/cocos2d-iphone/issues/detail?id=317 The author doesn't have a nailed down release date for this version, but I did see a posting that indicated it would be in the next month or two.",
        "output": "It's not out yet, but the next version of cocos2d (2d game framework) will support variable length bitmap fonts as character maps.",
        "answer": "It's not out yet, but the next version of cocos2d (2d game framework) will support variable length bitmap fonts as character maps. http://code.google.com/p/cocos2d-iphone/issues/detail?id=317 The author doesn't have a nailed down release date for this version, but I did see a posting that indicated it would be in the next month or two.",
        "summary": "It's not out yet, but the next version of cocos2d (2d game framework) will support variable length bitmap fonts as character maps."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Came across this question, while trying to uninstall the many random Python packages installed over time. Using information from this thread, this is what I came up with: The <code>package_list</code> is cleaned up (awk) from a <code>pip freeze</code> in a virtualenv. To remove almost all Python packages:",
        "output": "Using information from this thread, this is what I came up with:",
        "answer": "Came across this question, while trying to uninstall the many random Python packages installed over time. Using information from this thread, this is what I came up with: The <code>package_list</code> is cleaned up (awk) from a <code>pip freeze</code> in a virtualenv. To remove almost all Python packages:",
        "summary": "Using information from this thread, this is what I came up with:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Declare destructors virtual in polymorphic base classes. This is Item 7 in Scott Meyers' Effective C++. Meyers goes on to summarize that if a class has <em>any</em> virtual function, it should have a virtual destructor, and that classes not designed to be base classes or not designed to be used polymorphically should <em>not</em> declare virtual destructors.",
        "output": "Declare destructors virtual in polymorphic base classes.",
        "answer": "Declare destructors virtual in polymorphic base classes. This is Item 7 in Scott Meyers' Effective C++. Meyers goes on to summarize that if a class has <em>any</em> virtual function, it should have a virtual destructor, and that classes not designed to be base classes or not designed to be used polymorphically should <em>not</em> declare virtual destructors.",
        "summary": "Declare destructors virtual in polymorphic base classes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To uninstall an <code>.egg</code> you need to <code>rm -rf</code> the egg (it might be a directory) and remove the matching line from <code>site-packages/easy-install.pth</code>",
        "output": "To uninstall an <code>.egg</code> you need to <code>rm -rf</code> the egg (it might be a directory) and remove the matching line from <code>site-packages/easy-install.pth</code>",
        "answer": "To uninstall an <code>.egg</code> you need to <code>rm -rf</code> the egg (it might be a directory) and remove the matching line from <code>site-packages/easy-install.pth</code>",
        "summary": "To uninstall an <code>.egg</code> you need to <code>rm -rf</code> the egg (it might be a directory) and remove the matching line from <code>site-packages/easy-install.pth</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This can happen when invoking a method that doesn't exist.",
        "output": "This can happen when invoking a method that doesn't exist.",
        "answer": "This can happen when invoking a method that doesn't exist.",
        "summary": "This can happen when invoking a method that doesn't exist."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVVMC, or perhaps MVC+, seems to be a viable approach for enterprise as well as rapid application development. While it is nice to separate the UI from business and interaction logic, the 'pure' MVVM pattern and most available examples work best on singular views. Not sure about your designs, but most of my applications, however, contain pages and several (reusable) views and thus the ViewModels do need to interact to some degree. Using the page as controller would defeat the purpose of the MVVM altogether, so not using a \"VM-C\" approach for the underlying logic might result in .. well .. challenging constructs as the application matures. Even in VB-6 most of us probably stopped coding business logic into the Button event and started 'relaying' commands to a controller, right? I recently looked at many emerging framworks on that topic; my favorite clearly is the Magellan (at codeplex) approach. Happy coding! http://en.wikipedia.org/wiki/Model_View_ViewModel#References",
        "output": "MVVMC, or perhaps MVC+, seems to be a viable approach for enterprise as well as rapid application development.",
        "answer": "MVVMC, or perhaps MVC+, seems to be a viable approach for enterprise as well as rapid application development. While it is nice to separate the UI from business and interaction logic, the 'pure' MVVM pattern and most available examples work best on singular views. Not sure about your designs, but most of my applications, however, contain pages and several (reusable) views and thus the ViewModels do need to interact to some degree. Using the page as controller would defeat the purpose of the MVVM altogether, so not using a \"VM-C\" approach for the underlying logic might result in .. well .. challenging constructs as the application matures. Even in VB-6 most of us probably stopped coding business logic into the Button event and started 'relaying' commands to a controller, right? I recently looked at many emerging framworks on that topic; my favorite clearly is the Magellan (at codeplex) approach. Happy coding! http://en.wikipedia.org/wiki/Model_View_ViewModel#References",
        "summary": "MVVMC, or perhaps MVC+, seems to be a viable approach for enterprise as well as rapid application development."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Perhaps you can use a try ... finally block to finalize the object in the control flow at which you are using the object. Of course it doesn't happen automatically, but neither does destruction in C++. You often see closing of resources in the finally block.",
        "output": "Perhaps you can use a try ... finally block to finalize the object in the control flow at which you are using the object.",
        "answer": "Perhaps you can use a try ... finally block to finalize the object in the control flow at which you are using the object. Of course it doesn't happen automatically, but neither does destruction in C++. You often see closing of resources in the finally block.",
        "summary": "Perhaps you can use a try ... finally block to finalize the object in the control flow at which you are using the object."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I couldn't get one of the solutions to work, but after editing it a little I came up with this. Which works for me:",
        "output": "Which works for me:",
        "answer": "I couldn't get one of the solutions to work, but after editing it a little I came up with this. Which works for me:",
        "summary": "Which works for me:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Late response but you could just keep it simple and apply a CSS class to the htmlAttributes object. and then create a class in your stylesheet",
        "output": "Late response but you could just keep it simple and apply a CSS class to the htmlAttributes object.",
        "answer": "Late response but you could just keep it simple and apply a CSS class to the htmlAttributes object. and then create a class in your stylesheet",
        "summary": "Late response but you could just keep it simple and apply a CSS class to the htmlAttributes object."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One of the nice things about <code>lambda</code> that's in my opinion understated is that it's way of deferring an evaluation for simple forms till the value is needed. Let me explain. Many library routines are implemented so that they allow certain parameters to be callables (of whom lambda is one). The idea is that the actual value will be computed only at the time when it's going to be used (rather that when it's called). An (contrived) example might help to illustrate the point. Suppose you have a routine which which was going to do log a given timestamp. You want the routine to use the current time minus 30 minutes. You'd call it like so Now suppose the actual function is going to be called only when a certain event occurs and you want the timestamp to be computed only at that time. You can do this like so Assuming the <code>log_timestamp</code> can handle callables like this, it will evaluate this when it needs it and you'll get the timestamp at that time. There are of course alternate ways to do this (using the <code>operator</code> module for example) but I hope I've conveyed the point. Update: Here is a slightly more concrete real world example. Update 2: I think this is an example of what is called a thunk.",
        "output": "One of the nice things about <code>lambda</code> that's in my opinion understated is that it's way of deferring an evaluation for simple forms till the value is needed.",
        "answer": "One of the nice things about <code>lambda</code> that's in my opinion understated is that it's way of deferring an evaluation for simple forms till the value is needed. Let me explain. Many library routines are implemented so that they allow certain parameters to be callables (of whom lambda is one). The idea is that the actual value will be computed only at the time when it's going to be used (rather that when it's called). An (contrived) example might help to illustrate the point. Suppose you have a routine which which was going to do log a given timestamp. You want the routine to use the current time minus 30 minutes. You'd call it like so Now suppose the actual function is going to be called only when a certain event occurs and you want the timestamp to be computed only at that time. You can do this like so Assuming the <code>log_timestamp</code> can handle callables like this, it will evaluate this when it needs it and you'll get the timestamp at that time. There are of course alternate ways to do this (using the <code>operator</code> module for example) but I hope I've conveyed the point. Update: Here is a slightly more concrete real world example. Update 2: I think this is an example of what is called a thunk.",
        "summary": "One of the nice things about <code>lambda</code> that's in my opinion understated is that it's way of deferring an evaluation for simple forms till the value is needed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Things like this: BIGBLOCK This <code>SqlConnection</code> will be closed without needing to explicitly call the <code>.Close()</code> function, and this will happen <em>even if an exception is thrown</em>, without the need for a <code>try</code>/<code>catch</code>/<code>finally</code>.",
        "output": "This <code>SqlConnection</code> will be closed without needing to explicitly call the <code>.Close()</code> function, and this will happen <em>even if an exception is thrown</em>, without the need for a <code>try</code>/<code>catch</code>/<code>finally</code>.",
        "answer": "Things like this: BIGBLOCK This <code>SqlConnection</code> will be closed without needing to explicitly call the <code>.Close()</code> function, and this will happen <em>even if an exception is thrown</em>, without the need for a <code>try</code>/<code>catch</code>/<code>finally</code>.",
        "summary": "This <code>SqlConnection</code> will be closed without needing to explicitly call the <code>.Close()</code> function, and this will happen <em>even if an exception is thrown</em>, without the need for a <code>try</code>/<code>catch</code>/<code>finally</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Java (and many OOP languages, but I cannot speak for all; and some do not have static at all) all methods have a fixed signature - the parameters and types. In a virtual method, the first parameter is implied: a reference to the object itself and when called from within the object, the compiler automatically adds <code>this</code>. There is no difference for static methods - they still have a fixed signature. However, by declaring the method static you have explicitly stated that the compiler must not include the implied object parameter at the beginning of that signature. Therefore, any other code that calls this must <em>must not attempt to put a reference to an object on the stack</em>. If it did do that, then the method execution would not work since the parameters would be in the wrong place - shifted by one - on the stack. Because of this difference between the two; virtual methods always have a reference to the context object (i.e. <code>this</code>) so then it is possible to reference anything within the heap that belong to that instance of the object. But with static methods, since there is no reference passed, that method cannot access any object variables and methods since the context is not known. If you wish that Java would change the definition so that a object context is passed in for every method, static or virtual, then you would in essence have only virtual methods. As someone asked in a comment to the op - what is your reason and purpose for wanting this feature? I do not know Ruby much, as this was mentioned by the OP, I did some research. I see that in Ruby classes are really a special kind of object and one can create (even dynamically) new methods. Classes are full class objects in Ruby, they are not in Java. This is just something you will have to accept when working with Java (or C#). These are not dynamic languages, though C# is adding some forms of dynamic. In reality, Ruby does not have \"static\" methods as far as I could find - in that case these are methods on the singleton class object. You can then override this singleton with a new class and the methods in the previous class object will call those defined in the new class (correct?). So if you called a method in the context of the original class it still would only execute the original statics, but calling a method in the derived class, would call methods either from the parent or sub-class. Interesting and I can see some value in that. It takes a different thought pattern. Since you are working in Java, you will need to adjust to that way of doing things. Why they did this? Well, probably to improve performance at the time based on the technology and understanding that was available. Computer languages are constantly evolving. Go back far enough and there is no such thing as OOP. In the future, there will be other new ideas. <strong>EDIT</strong>: One other comment. Now that I see the differences and as I Java/C# developer myself, I can understand why the answers you get from Java developers may be confusing if you are coming from a language like Ruby. Java <code>static</code> methods are not the same as Ruby <code>class</code> methods. Java developers will have a hard time understanding this, as will conversely those who work mostly with a language like Ruby/Smalltalk. I can see how this would also be greatly confusing by the fact that Java also uses \"class method\" as another way to talk about static methods but this same term is used differently by Ruby. Java does not have Ruby style class methods (sorry); Ruby does not have Java style static methods which are really just old procedural style functions, as found in C. By the way - thanks for the question! I learned something new for me today about class methods (Ruby style).",
        "output": "In a virtual method, the first parameter is implied: a reference to the object itself and when called from within the object, the compiler automatically adds <code>this</code>. There is no difference for static methods - they still have a fixed signature. However, by declaring the method static you have explicitly stated that the compiler must not include the implied object parameter at the beginning of that signature. Because of this difference between the two; virtual methods always have a reference to the context object (i.e. <code>this</code>) so then it is possible to reference anything within the heap that belong to that instance of the object. But with static methods, since there is no reference passed, that method cannot access any object variables and methods since the context is not known. This is just something you will have to accept when working with Java (or C#).",
        "answer": "In Java (and many OOP languages, but I cannot speak for all; and some do not have static at all) all methods have a fixed signature - the parameters and types. In a virtual method, the first parameter is implied: a reference to the object itself and when called from within the object, the compiler automatically adds <code>this</code>. There is no difference for static methods - they still have a fixed signature. However, by declaring the method static you have explicitly stated that the compiler must not include the implied object parameter at the beginning of that signature. Therefore, any other code that calls this must <em>must not attempt to put a reference to an object on the stack</em>. If it did do that, then the method execution would not work since the parameters would be in the wrong place - shifted by one - on the stack. Because of this difference between the two; virtual methods always have a reference to the context object (i.e. <code>this</code>) so then it is possible to reference anything within the heap that belong to that instance of the object. But with static methods, since there is no reference passed, that method cannot access any object variables and methods since the context is not known. If you wish that Java would change the definition so that a object context is passed in for every method, static or virtual, then you would in essence have only virtual methods. As someone asked in a comment to the op - what is your reason and purpose for wanting this feature? I do not know Ruby much, as this was mentioned by the OP, I did some research. I see that in Ruby classes are really a special kind of object and one can create (even dynamically) new methods. Classes are full class objects in Ruby, they are not in Java. This is just something you will have to accept when working with Java (or C#). These are not dynamic languages, though C# is adding some forms of dynamic. In reality, Ruby does not have \"static\" methods as far as I could find - in that case these are methods on the singleton class object. You can then override this singleton with a new class and the methods in the previous class object will call those defined in the new class (correct?). So if you called a method in the context of the original class it still would only execute the original statics, but calling a method in the derived class, would call methods either from the parent or sub-class. Interesting and I can see some value in that. It takes a different thought pattern. Since you are working in Java, you will need to adjust to that way of doing things. Why they did this? Well, probably to improve performance at the time based on the technology and understanding that was available. Computer languages are constantly evolving. Go back far enough and there is no such thing as OOP. In the future, there will be other new ideas. <strong>EDIT</strong>: One other comment. Now that I see the differences and as I Java/C# developer myself, I can understand why the answers you get from Java developers may be confusing if you are coming from a language like Ruby. Java <code>static</code> methods are not the same as Ruby <code>class</code> methods. Java developers will have a hard time understanding this, as will conversely those who work mostly with a language like Ruby/Smalltalk. I can see how this would also be greatly confusing by the fact that Java also uses \"class method\" as another way to talk about static methods but this same term is used differently by Ruby. Java does not have Ruby style class methods (sorry); Ruby does not have Java style static methods which are really just old procedural style functions, as found in C. By the way - thanks for the question! I learned something new for me today about class methods (Ruby style).",
        "summary": "In a virtual method, the first parameter is implied: a reference to the object itself and when called from within the object, the compiler automatically adds <code>this</code>. There is no difference for static methods - they still have a fixed signature. However, by declaring the method static you have explicitly stated that the compiler must not include the implied object parameter at the beginning of that signature. Because of this difference between the two; virtual methods always have a reference to the context object (i.e. <code>this</code>) so then it is possible to reference anything within the heap that belong to that instance of the object. But with static methods, since there is no reference passed, that method cannot access any object variables and methods since the context is not known. This is just something you will have to accept when working with Java (or C#)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The time_t Wikipedia article article sheds some light on this. The bottom line is that the type of <code>time_t</code> is not guaranteed in the C specification. The <code>time_t</code> datatype is a data type in  the ISO C library defined for storing  system time values. Such values are  returned from the standard <code>time()</code>  library function. This type is a  typedef defined in the standard   header. <strong>ISO C defines  time_t as an arithmetic type, but does  not specify any particular type</strong>,  range, resolution, or encoding for it. Also unspecified are the meanings of  arithmetic operations applied to time  values. <strong>Unix and POSIX-compliant systems implement the <code>time_t</code> type as a <code>signed  integer</code> (typically 32 or 64 bits wide)  which represents the number of seconds  since the start of the Unix epoch</strong>:  midnight UTC of January 1, 1970 (not  counting leap seconds). Some systems  correctly handle negative time values,  while others do not. Systems using a  32-bit <code>time_t</code> type are susceptible to  the Year 2038 problem.",
        "output": "Such values are  returned from the standard <code>time()</code>  library function. <strong>ISO C defines  time_t as an arithmetic type, but does  not specify any particular type</strong>,  range, resolution, or encoding for it. Also unspecified are the meanings of  arithmetic operations applied to time  values. <strong>Unix and POSIX-compliant systems implement the <code>time_t</code> type as a <code>signed  integer</code> (typically 32 or 64 bits wide)  which represents the number of seconds  since the start of the Unix epoch</strong>:  midnight UTC of January 1, 1970 (not  counting leap seconds). Systems using a  32-bit <code>time_t</code> type are susceptible to  the Year 2038 problem.",
        "answer": "The time_t Wikipedia article article sheds some light on this. The bottom line is that the type of <code>time_t</code> is not guaranteed in the C specification. The <code>time_t</code> datatype is a data type in  the ISO C library defined for storing  system time values. Such values are  returned from the standard <code>time()</code>  library function. This type is a  typedef defined in the standard   header. <strong>ISO C defines  time_t as an arithmetic type, but does  not specify any particular type</strong>,  range, resolution, or encoding for it. Also unspecified are the meanings of  arithmetic operations applied to time  values. <strong>Unix and POSIX-compliant systems implement the <code>time_t</code> type as a <code>signed  integer</code> (typically 32 or 64 bits wide)  which represents the number of seconds  since the start of the Unix epoch</strong>:  midnight UTC of January 1, 1970 (not  counting leap seconds). Some systems  correctly handle negative time values,  while others do not. Systems using a  32-bit <code>time_t</code> type are susceptible to  the Year 2038 problem.",
        "summary": "Such values are  returned from the standard <code>time()</code>  library function. <strong>ISO C defines  time_t as an arithmetic type, but does  not specify any particular type</strong>,  range, resolution, or encoding for it. Also unspecified are the meanings of  arithmetic operations applied to time  values. <strong>Unix and POSIX-compliant systems implement the <code>time_t</code> type as a <code>signed  integer</code> (typically 32 or 64 bits wide)  which represents the number of seconds  since the start of the Unix epoch</strong>:  midnight UTC of January 1, 1970 (not  counting leap seconds). Systems using a  32-bit <code>time_t</code> type are susceptible to  the Year 2038 problem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I really like the philosophy of the ezSQL database library, which wraps the native SQL methods in an easier-to-use interface. Fetching a single value from the database is trivial: BIGBLOCK It also makes it easy to fetch a single row, column, or set of rows.",
        "output": "I really like the philosophy of the ezSQL database library, which wraps the native SQL methods in an easier-to-use interface. Fetching a single value from the database is trivial: BIGBLOCK It also makes it easy to fetch a single row, column, or set of rows.",
        "answer": "I really like the philosophy of the ezSQL database library, which wraps the native SQL methods in an easier-to-use interface. Fetching a single value from the database is trivial: BIGBLOCK It also makes it easy to fetch a single row, column, or set of rows.",
        "summary": "I really like the philosophy of the ezSQL database library, which wraps the native SQL methods in an easier-to-use interface. Fetching a single value from the database is trivial: BIGBLOCK It also makes it easy to fetch a single row, column, or set of rows."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Readable regular expressions</strong> In Python you can split a regular expression over multiple lines, name your matches and insert comments. Example verbose syntax (from Dive into Python): Example naming matches (from Regular Expression HOWTO) You can also verbosely write a regex without using <code>re.VERBOSE</code> thanks to string literal concatenation.",
        "output": "<strong>Readable regular expressions</strong>",
        "answer": "<strong>Readable regular expressions</strong> In Python you can split a regular expression over multiple lines, name your matches and insert comments. Example verbose syntax (from Dive into Python): Example naming matches (from Regular Expression HOWTO) You can also verbosely write a regex without using <code>re.VERBOSE</code> thanks to string literal concatenation.",
        "summary": "<strong>Readable regular expressions</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Have you tried escaping with a double-quote?",
        "output": "Have you tried escaping with a double-quote?",
        "answer": "Have you tried escaping with a double-quote?",
        "summary": "Have you tried escaping with a double-quote?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Segmentation fault is a specific kind of error caused by accessing memory that __oes not belong to you.Ã¨ÂÂÃ©Â©Â´?It__ a helper mechanism that keeps you from corrupting the memory and introducing hard-to-debug memory bugs. Whenever you get a segfault you know you are doing something wrong with memory Ã¨ÂÂÃ©Â©Â´?accessing variable that has already been freed, writing to a read-only portion of the memory, etc. Segmentation fault is essentially the same in most languages that let you mess with the memory management, there is no principial difference between segfaults in C and C++. There are many ways to get a segfault, at least in the lower-level languages such as C(++). A common way to get a segfault is to dereference a null pointer: Another segfault happens when you try to write to a portion of memory that was marked as read-only: Dangling pointer points to a thing that does not exist any more, like here: The pointer <code>p</code> dangles because it points to character variable <code>c</code> that ceased to exist after the block ended. And when you try to dereference dangling pointer (like <code>*p='A'</code>), you would probably get a segfault.",
        "output": "Segmentation fault is a specific kind of error caused by accessing memory that __oes not belong to you.Ã¨ÂÂÃ©Â©Â´?It__ a helper mechanism that keeps you from corrupting the memory and introducing hard-to-debug memory bugs. Segmentation fault is essentially the same in most languages that let you mess with the memory management, there is no principial difference between segfaults in C and C++. And when you try to dereference dangling pointer (like <code>*p='A'</code>), you would probably get a segfault.",
        "answer": "Segmentation fault is a specific kind of error caused by accessing memory that __oes not belong to you.Ã¨ÂÂÃ©Â©Â´?It__ a helper mechanism that keeps you from corrupting the memory and introducing hard-to-debug memory bugs. Whenever you get a segfault you know you are doing something wrong with memory Ã¨ÂÂÃ©Â©Â´?accessing variable that has already been freed, writing to a read-only portion of the memory, etc. Segmentation fault is essentially the same in most languages that let you mess with the memory management, there is no principial difference between segfaults in C and C++. There are many ways to get a segfault, at least in the lower-level languages such as C(++). A common way to get a segfault is to dereference a null pointer: Another segfault happens when you try to write to a portion of memory that was marked as read-only: Dangling pointer points to a thing that does not exist any more, like here: The pointer <code>p</code> dangles because it points to character variable <code>c</code> that ceased to exist after the block ended. And when you try to dereference dangling pointer (like <code>*p='A'</code>), you would probably get a segfault.",
        "summary": "Segmentation fault is a specific kind of error caused by accessing memory that __oes not belong to you.Ã¨ÂÂÃ©Â©Â´?It__ a helper mechanism that keeps you from corrupting the memory and introducing hard-to-debug memory bugs. Segmentation fault is essentially the same in most languages that let you mess with the memory management, there is no principial difference between segfaults in C and C++. And when you try to dereference dangling pointer (like <code>*p='A'</code>), you would probably get a segfault."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I would go for: BIGBLOCK The [^\"] is regex for any character except '\"' The reason I use this over the non greedy many operator is that I have to keep looking that up just to make sure I get it correct.",
        "output": "The [^\"] is regex for any character except '\"' The reason I use this over the non greedy many operator is that I have to keep looking that up just to make sure I get it correct.",
        "answer": "I would go for: BIGBLOCK The [^\"] is regex for any character except '\"' The reason I use this over the non greedy many operator is that I have to keep looking that up just to make sure I get it correct.",
        "summary": "The [^\"] is regex for any character except '\"' The reason I use this over the non greedy many operator is that I have to keep looking that up just to make sure I get it correct."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to the <code>java.io.File</code> Java Docs The default temporary-file directory is specified by the system property java.io.tmpdir. On UNIX systems the default value of this property is typically \"/tmp\" or \"/var/tmp\"; on Microsoft Windows systems it is typically \"c:\\temp\". A different value may be given to this system property when the Java virtual machine is invoked, but programmatic changes to this property are not guaranteed to have any effect upon the the temporary directory used by this method. To specify the <code>java.io.tmpdir</code> System property, you can invoke the JVM as follows: BIGBLOCK <strong>By default this value should come from the <code>TMP</code> environment variable on Windows systems</strong>",
        "output": "The default temporary-file directory is specified by the system property java.io.tmpdir. On UNIX systems the default value of this property is typically \"/tmp\" or \"/var/tmp\"; on Microsoft Windows systems it is typically \"c:\\temp\". To specify the <code>java.io.tmpdir</code> System property, you can invoke the JVM as follows: BIGBLOCK <strong>By default this value should come from the <code>TMP</code> environment variable on Windows systems</strong>",
        "answer": "According to the <code>java.io.File</code> Java Docs The default temporary-file directory is specified by the system property java.io.tmpdir. On UNIX systems the default value of this property is typically \"/tmp\" or \"/var/tmp\"; on Microsoft Windows systems it is typically \"c:\\temp\". A different value may be given to this system property when the Java virtual machine is invoked, but programmatic changes to this property are not guaranteed to have any effect upon the the temporary directory used by this method. To specify the <code>java.io.tmpdir</code> System property, you can invoke the JVM as follows: BIGBLOCK <strong>By default this value should come from the <code>TMP</code> environment variable on Windows systems</strong>",
        "summary": "The default temporary-file directory is specified by the system property java.io.tmpdir. On UNIX systems the default value of this property is typically \"/tmp\" or \"/var/tmp\"; on Microsoft Windows systems it is typically \"c:\\temp\". To specify the <code>java.io.tmpdir</code> System property, you can invoke the JVM as follows: BIGBLOCK <strong>By default this value should come from the <code>TMP</code> environment variable on Windows systems</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Shallow copies duplicate as little as possible. A shallow copy of a collection is a copy of the collection structure, not the elements. With a shallow copy, two collections now share the individual elements. Deep copies duplicate everything. A deep copy of a collection is two collections with all of the elements in the original collection duplicated.",
        "output": "Shallow copies duplicate as little as possible. A shallow copy of a collection is a copy of the collection structure, not the elements. Deep copies duplicate everything. A deep copy of a collection is two collections with all of the elements in the original collection duplicated.",
        "answer": "Shallow copies duplicate as little as possible. A shallow copy of a collection is a copy of the collection structure, not the elements. With a shallow copy, two collections now share the individual elements. Deep copies duplicate everything. A deep copy of a collection is two collections with all of the elements in the original collection duplicated.",
        "summary": "Shallow copies duplicate as little as possible. A shallow copy of a collection is a copy of the collection structure, not the elements. Deep copies duplicate everything. A deep copy of a collection is two collections with all of the elements in the original collection duplicated."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n if the content of foo.py <strong>A file foo.py can be used in two ways.</strong> <li>imported in another file : <code>import foo</code> In this case <code>__name__</code> is <code>foo</code>, the code section does not get executed and does not print <code>XXXX</code>. <li>executed directly : <code>python foo.py</code> When it is executed directly, <code>__name__</code> is same as <code>__main__</code> and the code in that section is executed and prints <code>XXXX</code> One of the use of this functionality to write various kind of unit tests within the same module.",
        "output": "<strong>A file foo.py can be used in two ways.</strong> <li>imported in another file : <code>import foo</code> In this case <code>__name__</code> is <code>foo</code>, the code section does not get executed and does not print <code>XXXX</code>. <li>executed directly : <code>python foo.py</code>",
        "answer": "if the content of foo.py <strong>A file foo.py can be used in two ways.</strong> <li>imported in another file : <code>import foo</code> In this case <code>__name__</code> is <code>foo</code>, the code section does not get executed and does not print <code>XXXX</code>. <li>executed directly : <code>python foo.py</code> When it is executed directly, <code>__name__</code> is same as <code>__main__</code> and the code in that section is executed and prints <code>XXXX</code> One of the use of this functionality to write various kind of unit tests within the same module.",
        "summary": "<strong>A file foo.py can be used in two ways.</strong> <li>imported in another file : <code>import foo</code> In this case <code>__name__</code> is <code>foo</code>, the code section does not get executed and does not print <code>XXXX</code>. <li>executed directly : <code>python foo.py</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, cross-browser form custimization is very hard if not impossible to get it right for all browsers. If you really care about the appearance of those widgets you should use a javascript implementation. see http://www.456bereastreet.com/archive/200409/styling_form_controls/and http://developer.yahoo.com/yui/examples/button/btn_example07.html",
        "output": "No, cross-browser form custimization is very hard if not impossible to get it right for all browsers. If you really care about the appearance of those widgets you should use a javascript implementation.",
        "answer": "No, cross-browser form custimization is very hard if not impossible to get it right for all browsers. If you really care about the appearance of those widgets you should use a javascript implementation. see http://www.456bereastreet.com/archive/200409/styling_form_controls/and http://developer.yahoo.com/yui/examples/button/btn_example07.html",
        "summary": "No, cross-browser form custimization is very hard if not impossible to get it right for all browsers. If you really care about the appearance of those widgets you should use a javascript implementation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is really strange... Once set, the default Charset is cached and it isn't changed while the class is in memory. Setting the <code>\"file.encoding\"</code> property with <code>System.setProperty(\"file.encoding\", \"Latin-1\");</code> does nothing. Every time <code>Charset.defaultCharset()</code> is called it returns the cached charset. Here are my results: I'm using JVM 1.6 though. <strong><em>(update)</em></strong> Ok. I did reproduce your bug with JVM 1.5. Looking at the source code of 1.5, the cached default charset isn't being set. I don't know if this is a bug or not but 1.6 changes this implementation and uses the cached charset: JVM 1.5: JVM 1.6: When you set the file encoding to <code>file.encoding=Latin-1</code> the next time you call <code>Charset.defaultCharset()</code>, what happens is, because the cached default charset isn't set, it will try to find the appropriate charset for the name <code>Latin-1</code>. This name isn't found, because it's incorrect, and returns the default <code>UTF-8</code>. As for why the IO classes such as <code>OutputStreamWriter</code> return an unexpected result, the implementation of <code>sun.nio.cs.StreamEncoder</code> (witch is used by these IO classes) is different as well for JVM 1.5 and JVM 1.6. The JVM 1.6 implementation is based in the <code>Charset.defaultCharset()</code> method to get the default encoding, if one is not provided to IO classes. The JVM 1.5 implementation uses a different method <code>Converters.getDefaultEncodingName();</code> to get the default charset. This method uses it's own cache of the default charset that is set upon JVM initialization: JVM 1.6: JVM 1.5: But I agree with the comments. You <strong>shouldn't rely on this property</strong>. It's an implementation detail.",
        "output": "I don't know if this is a bug or not but 1.6 changes this implementation and uses the cached charset: JVM 1.5: JVM 1.6: When you set the file encoding to <code>file.encoding=Latin-1</code> the next time you call <code>Charset.defaultCharset()</code>, what happens is, because the cached default charset isn't set, it will try to find the appropriate charset for the name <code>Latin-1</code>. This name isn't found, because it's incorrect, and returns the default <code>UTF-8</code>. As for why the IO classes such as <code>OutputStreamWriter</code> return an unexpected result, the implementation of <code>sun.nio.cs.StreamEncoder</code> (witch is used by these IO classes) is different as well for JVM 1.5 and JVM 1.6. The JVM 1.6 implementation is based in the <code>Charset.defaultCharset()</code> method to get the default encoding, if one is not provided to IO classes. JVM 1.6: JVM 1.5:",
        "answer": "This is really strange... Once set, the default Charset is cached and it isn't changed while the class is in memory. Setting the <code>\"file.encoding\"</code> property with <code>System.setProperty(\"file.encoding\", \"Latin-1\");</code> does nothing. Every time <code>Charset.defaultCharset()</code> is called it returns the cached charset. Here are my results: I'm using JVM 1.6 though. <strong><em>(update)</em></strong> Ok. I did reproduce your bug with JVM 1.5. Looking at the source code of 1.5, the cached default charset isn't being set. I don't know if this is a bug or not but 1.6 changes this implementation and uses the cached charset: JVM 1.5: JVM 1.6: When you set the file encoding to <code>file.encoding=Latin-1</code> the next time you call <code>Charset.defaultCharset()</code>, what happens is, because the cached default charset isn't set, it will try to find the appropriate charset for the name <code>Latin-1</code>. This name isn't found, because it's incorrect, and returns the default <code>UTF-8</code>. As for why the IO classes such as <code>OutputStreamWriter</code> return an unexpected result, the implementation of <code>sun.nio.cs.StreamEncoder</code> (witch is used by these IO classes) is different as well for JVM 1.5 and JVM 1.6. The JVM 1.6 implementation is based in the <code>Charset.defaultCharset()</code> method to get the default encoding, if one is not provided to IO classes. The JVM 1.5 implementation uses a different method <code>Converters.getDefaultEncodingName();</code> to get the default charset. This method uses it's own cache of the default charset that is set upon JVM initialization: JVM 1.6: JVM 1.5: But I agree with the comments. You <strong>shouldn't rely on this property</strong>. It's an implementation detail.",
        "summary": "I don't know if this is a bug or not but 1.6 changes this implementation and uses the cached charset: JVM 1.5: JVM 1.6: When you set the file encoding to <code>file.encoding=Latin-1</code> the next time you call <code>Charset.defaultCharset()</code>, what happens is, because the cached default charset isn't set, it will try to find the appropriate charset for the name <code>Latin-1</code>. This name isn't found, because it's incorrect, and returns the default <code>UTF-8</code>. As for why the IO classes such as <code>OutputStreamWriter</code> return an unexpected result, the implementation of <code>sun.nio.cs.StreamEncoder</code> (witch is used by these IO classes) is different as well for JVM 1.5 and JVM 1.6. The JVM 1.6 implementation is based in the <code>Charset.defaultCharset()</code> method to get the default encoding, if one is not provided to IO classes. JVM 1.6: JVM 1.5:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Three things are being declared here: an anonymous enumerated type is declared, <code>ShapeType</code> is being declared a typedef for that anonymous enumeration, and the three names <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are being declared as integral constants. Let's break that down. In the simplest case, an enumeration can be declared as This declares an enumeration with the tag <code>tagname</code>. In C and Objective-C (but not C++), any references to this must be preceded with the <code>enum</code> keyword. For example: In order to avoid having to use the <code>enum</code> keyword everywhere, a typedef can be created: This can be simplified into one line: And finally, if we don't need to be able to use <code>enum tagname</code> with the <code>enum</code> keyword, we can make the <code>enum</code> anonymous and only declare it with the typedef name: Now, in this case, we're declaring <code>ShapeType</code> to be a typedef'ed name of an anonymous enumeration. <code>ShapeType</code> is really just an integral type, and should only be used to declare variables which hold one of the values listed in the declaration (that is, one of <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code>). You can assign a <code>ShapeType</code> variable another value by casting, though, so you have to be careful when reading enum values. Finally, <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are declared as integral constants in the global namespace. Since no specific values were specified, they get assigned to consecutive integers starting with 0, so <code>kCircle</code> is 0, <code>kRectangle</code> is 1, and <code>kOblateSpheroid</code> is 2.",
        "output": "Three things are being declared here: an anonymous enumerated type is declared, <code>ShapeType</code> is being declared a typedef for that anonymous enumeration, and the three names <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are being declared as integral constants.",
        "answer": "Three things are being declared here: an anonymous enumerated type is declared, <code>ShapeType</code> is being declared a typedef for that anonymous enumeration, and the three names <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are being declared as integral constants. Let's break that down. In the simplest case, an enumeration can be declared as This declares an enumeration with the tag <code>tagname</code>. In C and Objective-C (but not C++), any references to this must be preceded with the <code>enum</code> keyword. For example: In order to avoid having to use the <code>enum</code> keyword everywhere, a typedef can be created: This can be simplified into one line: And finally, if we don't need to be able to use <code>enum tagname</code> with the <code>enum</code> keyword, we can make the <code>enum</code> anonymous and only declare it with the typedef name: Now, in this case, we're declaring <code>ShapeType</code> to be a typedef'ed name of an anonymous enumeration. <code>ShapeType</code> is really just an integral type, and should only be used to declare variables which hold one of the values listed in the declaration (that is, one of <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code>). You can assign a <code>ShapeType</code> variable another value by casting, though, so you have to be careful when reading enum values. Finally, <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are declared as integral constants in the global namespace. Since no specific values were specified, they get assigned to consecutive integers starting with 0, so <code>kCircle</code> is 0, <code>kRectangle</code> is 1, and <code>kOblateSpheroid</code> is 2.",
        "summary": "Three things are being declared here: an anonymous enumerated type is declared, <code>ShapeType</code> is being declared a typedef for that anonymous enumeration, and the three names <code>kCircle</code>, <code>kRectangle</code>, and <code>kOblateSpheroid</code> are being declared as integral constants."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It changes the linkage of a function in such a way that the function is callable from C. In practice that means that the function name is not mangled.",
        "output": "It changes the linkage of a function in such a way that the function is callable from C. In practice that means that the function name is not mangled.",
        "answer": "It changes the linkage of a function in such a way that the function is callable from C. In practice that means that the function name is not mangled.",
        "summary": "It changes the linkage of a function in such a way that the function is callable from C. In practice that means that the function name is not mangled."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The problem here is that your timer starts a thread and when it runs the callback function, the callback function ( updatelistview) is accessing controls on UI thread so this can not be done becuase of this",
        "output": "The problem here is that your timer starts a thread and when it runs the callback function, the callback function ( updatelistview) is accessing controls on UI thread so this can not be done becuase of this",
        "answer": "The problem here is that your timer starts a thread and when it runs the callback function, the callback function ( updatelistview) is accessing controls on UI thread so this can not be done becuase of this",
        "summary": "The problem here is that your timer starts a thread and when it runs the callback function, the callback function ( updatelistview) is accessing controls on UI thread so this can not be done becuase of this"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n here's one way you can do it with awk",
        "output": "here's one way you can do it with awk",
        "answer": "here's one way you can do it with awk",
        "summary": "here's one way you can do it with awk"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use Linq Join operator:",
        "output": "Use Linq Join operator:",
        "answer": "Use Linq Join operator:",
        "summary": "Use Linq Join operator:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try this script. http://www.biterscripting.com/SS_URLs.html When I use it with this url, It shows me all the links on the page for this thread. You can modify that script to check for images, variables, whatever.",
        "output": "Try this script.",
        "answer": "Try this script. http://www.biterscripting.com/SS_URLs.html When I use it with this url, It shows me all the links on the page for this thread. You can modify that script to check for images, variables, whatever.",
        "summary": "Try this script."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Very simple: <code>a % b</code> is defined as the remainder of the division of <code>a</code> by <code>b</code>. See the wikipedia article for more examples.",
        "output": "Very simple: <code>a % b</code> is defined as the remainder of the division of <code>a</code> by <code>b</code>.",
        "answer": "Very simple: <code>a % b</code> is defined as the remainder of the division of <code>a</code> by <code>b</code>. See the wikipedia article for more examples.",
        "summary": "Very simple: <code>a % b</code> is defined as the remainder of the division of <code>a</code> by <code>b</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You shouldn't get both horizontal and vertical scrollbars unless you make the content large enough to require them. However you typically do in IE due to a bug. Check in other browsers (Firefox etc.) to find out whether it is in fact only IE that is doing it. IE6-7 (amongst other browsers) supports the proposed CSS3 extension to set scrollbars independently, which you could use to suppress the vertical scrollbar: You may also need to add for IE8: as Microsoft are threatening to move all pre-CR-standard properties into their own Ã¨ÂÂÃ©Â©Â´?msÃ¨ÂÂÃ©Â©Â´?box in IE8 Standards Mode. (This would have made sense if they'd always done it that way, but is rather an inconvenience for everyone now.) On the other hand it's entirely possible IE8 will have fixed the bug anyway.",
        "output": "IE6-7 (amongst other browsers) supports the proposed CSS3 extension to set scrollbars independently, which you could use to suppress the vertical scrollbar: You may also need to add for IE8:",
        "answer": "You shouldn't get both horizontal and vertical scrollbars unless you make the content large enough to require them. However you typically do in IE due to a bug. Check in other browsers (Firefox etc.) to find out whether it is in fact only IE that is doing it. IE6-7 (amongst other browsers) supports the proposed CSS3 extension to set scrollbars independently, which you could use to suppress the vertical scrollbar: You may also need to add for IE8: as Microsoft are threatening to move all pre-CR-standard properties into their own Ã¨ÂÂÃ©Â©Â´?msÃ¨ÂÂÃ©Â©Â´?box in IE8 Standards Mode. (This would have made sense if they'd always done it that way, but is rather an inconvenience for everyone now.) On the other hand it's entirely possible IE8 will have fixed the bug anyway.",
        "summary": "IE6-7 (amongst other browsers) supports the proposed CSS3 extension to set scrollbars independently, which you could use to suppress the vertical scrollbar: You may also need to add for IE8:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n BIGBLOCK std::pair is essentially your struct solution, but already defined for you, and ready to adapt to any two data types.",
        "output": "std::pair is essentially your struct solution, but already defined for you, and ready to adapt to any two data types.",
        "answer": "BIGBLOCK std::pair is essentially your struct solution, but already defined for you, and ready to adapt to any two data types.",
        "summary": "std::pair is essentially your struct solution, but already defined for you, and ready to adapt to any two data types."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I prefer \"timelimit\", which has a package at least in debian. http://devel.ringlet.net/sysutils/timelimit/ It is a bit nicer than the coreutils \"timeout\" because it prints something when killing the process, and it also sends SIGKILL after some time by default.",
        "output": "I prefer \"timelimit\", which has a package at least in debian. It is a bit nicer than the coreutils \"timeout\" because it prints something when killing the process, and it also sends SIGKILL after some time by default.",
        "answer": "I prefer \"timelimit\", which has a package at least in debian. http://devel.ringlet.net/sysutils/timelimit/ It is a bit nicer than the coreutils \"timeout\" because it prints something when killing the process, and it also sends SIGKILL after some time by default.",
        "summary": "I prefer \"timelimit\", which has a package at least in debian. It is a bit nicer than the coreutils \"timeout\" because it prints something when killing the process, and it also sends SIGKILL after some time by default."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to use To get the <code>^M</code> character, press Ctrl v followed by Enter",
        "output": "To get the <code>^M</code> character, press Ctrl v followed by Enter",
        "answer": "You need to use To get the <code>^M</code> character, press Ctrl v followed by Enter",
        "summary": "To get the <code>^M</code> character, press Ctrl v followed by Enter"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For a visual way to think about it, picture a clock face that, in your particular example, only goes to 4 instead of 12. If you start at 4 on the clock (which is like starting at zero) and go around it clockwise for 2 \"hours\", you land on 2, just like going around it clockwise for 6 \"hours\" would also land you on 2 (6 mod 4 == 2 just like 2 mod 4 == 2).",
        "output": "If you start at 4 on the clock (which is like starting at zero) and go around it clockwise for 2 \"hours\", you land on 2, just like going around it clockwise for 6 \"hours\" would also land you on 2 (6 mod 4 == 2 just like 2 mod 4 == 2).",
        "answer": "For a visual way to think about it, picture a clock face that, in your particular example, only goes to 4 instead of 12. If you start at 4 on the clock (which is like starting at zero) and go around it clockwise for 2 \"hours\", you land on 2, just like going around it clockwise for 6 \"hours\" would also land you on 2 (6 mod 4 == 2 just like 2 mod 4 == 2).",
        "summary": "If you start at 4 on the clock (which is like starting at zero) and go around it clockwise for 2 \"hours\", you land on 2, just like going around it clockwise for 6 \"hours\" would also land you on 2 (6 mod 4 == 2 just like 2 mod 4 == 2)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can increase to 4GB on a 32 bit system. If you're on a 64 bit system you can go higher. No need to worry if you've chosen incorrectly, if you ask for 5g on a 32 bit system java will complain about an invalid value and quit. As others have posted, use the cmd-line flags - e.g. You can get a full list (or a nearly full list, anyway) by typing java -X.",
        "output": "You can increase to 4GB on a 32 bit system. If you're on a 64 bit system you can go higher.",
        "answer": "You can increase to 4GB on a 32 bit system. If you're on a 64 bit system you can go higher. No need to worry if you've chosen incorrectly, if you ask for 5g on a 32 bit system java will complain about an invalid value and quit. As others have posted, use the cmd-line flags - e.g. You can get a full list (or a nearly full list, anyway) by typing java -X.",
        "summary": "You can increase to 4GB on a 32 bit system. If you're on a 64 bit system you can go higher."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n try this",
        "output": "try this",
        "answer": "try this",
        "summary": "try this"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I want this function to work with all  positive 64-bit signed integers <code>Math.sqrt()</code> works with doubles as input parameters, so you won't get accurate results for integers bigger than <strong>2^53</strong>.",
        "output": "<code>Math.sqrt()</code> works with doubles as input parameters, so you won't get accurate results for integers bigger than <strong>2^53</strong>.",
        "answer": "I want this function to work with all  positive 64-bit signed integers <code>Math.sqrt()</code> works with doubles as input parameters, so you won't get accurate results for integers bigger than <strong>2^53</strong>.",
        "summary": "<code>Math.sqrt()</code> works with doubles as input parameters, so you won't get accurate results for integers bigger than <strong>2^53</strong>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In my opinion, there is no Pair in Java because, if you want to add extra functionality directly on the pair (e.g. Comparable), you must bound the types. In C++, we just don't care, and if types composing a pair do not have <code>operator &lt;</code>, the <code>pair::operator &lt;</code> will not compile as well. An example of Comparable with no bounding: An example of Comparable with compile-time check for whether type arguments are comparable: This is good, but this time you may not use non-comparable types as type arguments in Pair. One may use lots of Comparators for Pair in some utility class, but C++ people may not get it. Another way is to write lots of classes in a type hierarchy with different bounds on type arguments, but there are too many possible bounds and their combinations...",
        "output": "An example of Comparable with no bounding: An example of Comparable with compile-time check for whether type arguments are comparable:",
        "answer": "In my opinion, there is no Pair in Java because, if you want to add extra functionality directly on the pair (e.g. Comparable), you must bound the types. In C++, we just don't care, and if types composing a pair do not have <code>operator &lt;</code>, the <code>pair::operator &lt;</code> will not compile as well. An example of Comparable with no bounding: An example of Comparable with compile-time check for whether type arguments are comparable: This is good, but this time you may not use non-comparable types as type arguments in Pair. One may use lots of Comparators for Pair in some utility class, but C++ people may not get it. Another way is to write lots of classes in a type hierarchy with different bounds on type arguments, but there are too many possible bounds and their combinations...",
        "summary": "An example of Comparable with no bounding: An example of Comparable with compile-time check for whether type arguments are comparable:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to be in a <code>synchronized</code> block in order for <code>Object.wait()</code> to work. Also, I recommend looking at the concurrency packages instead of the old school threading packages. They are safer and way easier to work with. Happy coding. EDIT I assumed you meant <code>Object.wait()</code> as your exception is what happens when you try to gain access without holding the objects lock.",
        "output": "You need to be in a <code>synchronized</code> block in order for <code>Object.wait()</code> to work.",
        "answer": "You need to be in a <code>synchronized</code> block in order for <code>Object.wait()</code> to work. Also, I recommend looking at the concurrency packages instead of the old school threading packages. They are safer and way easier to work with. Happy coding. EDIT I assumed you meant <code>Object.wait()</code> as your exception is what happens when you try to gain access without holding the objects lock.",
        "summary": "You need to be in a <code>synchronized</code> block in order for <code>Object.wait()</code> to work."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Are you looking for a tool or a library? As far as libraries goes, pretty much the de-facto standard is Xerces2 which has both C++ and Java versions. Be fore warned though, it is a heavy weight solution. But then again, validating XML against XSD files is a rather heavy weight problem. As for a tool to do this for you, XMLFox seems to be a decent freeware solution, but not having used it personally I can't say for sure.",
        "output": "As far as libraries goes, pretty much the de-facto standard is Xerces2 which has both C++ and Java versions. As for a tool to do this for you, XMLFox seems to be a decent freeware solution, but not having used it personally I can't say for sure.",
        "answer": "Are you looking for a tool or a library? As far as libraries goes, pretty much the de-facto standard is Xerces2 which has both C++ and Java versions. Be fore warned though, it is a heavy weight solution. But then again, validating XML against XSD files is a rather heavy weight problem. As for a tool to do this for you, XMLFox seems to be a decent freeware solution, but not having used it personally I can't say for sure.",
        "summary": "As far as libraries goes, pretty much the de-facto standard is Xerces2 which has both C++ and Java versions. As for a tool to do this for you, XMLFox seems to be a decent freeware solution, but not having used it personally I can't say for sure."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Also check that you are not using validation groups as that validation wouldnt fire if the validationgroup property was set and not explicitly called via",
        "output": "Also check that you are not using validation groups as that validation wouldnt fire if the validationgroup property was set and not explicitly called via",
        "answer": "Also check that you are not using validation groups as that validation wouldnt fire if the validationgroup property was set and not explicitly called via",
        "summary": "Also check that you are not using validation groups as that validation wouldnt fire if the validationgroup property was set and not explicitly called via"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.",
        "output": "A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.",
        "answer": "Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.",
        "summary": "A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are more than a few people who don't like <code>break</code> and <code>continue</code>. The latest complaint I saw about them was in <em>JavaScript: The Good Parts</em> by Douglas Crockford. But I find that sometimes using one of them really simplifies things, especially if your language doesn't include a <code>do-while</code> or <code>do-until</code> style of loop. I tend to use <code>break</code> in loops that are searching a list for something. Once found, there's no point in continuing, so you might as well quit. I use <code>continue</code> when doing something with most elements of a list, but still want to skip over a few. The <code>break</code> statement also comes in handy when polling for a valid response from somebody or something. Instead of: You could eliminate some duplication and use: The <code>do-until</code> loop that I mentioned before is the more elegant solution for that particular problem: No duplication, and no <code>break</code> needed either.",
        "output": "I tend to use <code>break</code> in loops that are searching a list for something. Once found, there's no point in continuing, so you might as well quit. I use <code>continue</code> when doing something with most elements of a list, but still want to skip over a few. The <code>break</code> statement also comes in handy when polling for a valid response from somebody or something.",
        "answer": "There are more than a few people who don't like <code>break</code> and <code>continue</code>. The latest complaint I saw about them was in <em>JavaScript: The Good Parts</em> by Douglas Crockford. But I find that sometimes using one of them really simplifies things, especially if your language doesn't include a <code>do-while</code> or <code>do-until</code> style of loop. I tend to use <code>break</code> in loops that are searching a list for something. Once found, there's no point in continuing, so you might as well quit. I use <code>continue</code> when doing something with most elements of a list, but still want to skip over a few. The <code>break</code> statement also comes in handy when polling for a valid response from somebody or something. Instead of: You could eliminate some duplication and use: The <code>do-until</code> loop that I mentioned before is the more elegant solution for that particular problem: No duplication, and no <code>break</code> needed either.",
        "summary": "I tend to use <code>break</code> in loops that are searching a list for something. Once found, there's no point in continuing, so you might as well quit. I use <code>continue</code> when doing something with most elements of a list, but still want to skip over a few. The <code>break</code> statement also comes in handy when polling for a valid response from somebody or something."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I tested with: BIGBLOCK It will be ok, when you need to validate it again.",
        "output": "I tested with: BIGBLOCK",
        "answer": "I tested with: BIGBLOCK It will be ok, when you need to validate it again.",
        "summary": "I tested with: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Both terms are very generic, one containing the other one and vice versa in some cases. <li><strong>Web server</strong>: serves content to the web using http protocol. <li><strong>Application server</strong>: hosts and exposes business logic and processes. I think that the main point is that the web server exposes everything through the http protocol, while the application server is not restricted to it. That said, in many scenarios you will find that the web server is being used to create the front-end of the application server, that is, it exposes a set of web pages that allow the user to interact with the business rules found into the application server.",
        "output": "Both terms are very generic, one containing the other one and vice versa in some cases. <li><strong>Web server</strong>: serves content to the web using http protocol. <li><strong>Application server</strong>: hosts and exposes business logic and processes.",
        "answer": "Both terms are very generic, one containing the other one and vice versa in some cases. <li><strong>Web server</strong>: serves content to the web using http protocol. <li><strong>Application server</strong>: hosts and exposes business logic and processes. I think that the main point is that the web server exposes everything through the http protocol, while the application server is not restricted to it. That said, in many scenarios you will find that the web server is being used to create the front-end of the application server, that is, it exposes a set of web pages that allow the user to interact with the business rules found into the application server.",
        "summary": "Both terms are very generic, one containing the other one and vice versa in some cases. <li><strong>Web server</strong>: serves content to the web using http protocol. <li><strong>Application server</strong>: hosts and exposes business logic and processes."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The viewmodel is an \"abstract\" model for your user interface elements. It must allow you to execute the commands, and actions in your view in a non-visual way (for example to test it). If you have worked with MVC, you probably have sometime found useful to create model objects to reflect the state of your view, for example, to show and hide some edit dialog, etc. In that case you are using a viewmodel. The MVVM pattern is simply the generalization of that practice to all the UI elements. And it's not a Microsoft pattern, what appends is that WPF / Silverlight data-bindings are specially well-suited to work with this pattern. But nothing stops you to use it with java server faces, for example.",
        "output": "The viewmodel is an \"abstract\" model for your user interface elements. The MVVM pattern is simply the generalization of that practice to all the UI elements.",
        "answer": "The viewmodel is an \"abstract\" model for your user interface elements. It must allow you to execute the commands, and actions in your view in a non-visual way (for example to test it). If you have worked with MVC, you probably have sometime found useful to create model objects to reflect the state of your view, for example, to show and hide some edit dialog, etc. In that case you are using a viewmodel. The MVVM pattern is simply the generalization of that practice to all the UI elements. And it's not a Microsoft pattern, what appends is that WPF / Silverlight data-bindings are specially well-suited to work with this pattern. But nothing stops you to use it with java server faces, for example.",
        "summary": "The viewmodel is an \"abstract\" model for your user interface elements. The MVVM pattern is simply the generalization of that practice to all the UI elements."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n My guess is that you are trying to replace a standard class which ships with Java 5 with one in a library you have. This is not allowed under the terms of the license agreement, however AFAIK it wasn't enforced until Java 5. I have seen this with QName before and I \"fixed\" it by removing the class from the jar I had. EDIThttp://www.manpagez.com/man/1/java/ notes for the option \"-Xbootclasspath:\" \"Applications that use this option for the purpose of overriding a class in rt.jar should not be deployed as doing  so would contravene the Java 2 Runtime Environment binary code license.\" The http://www.idt.mdh.se/rc/sumo/aJile/Uppackat/jre/LICENSE \"Java Technology Restrictions. You may not modify the JavaPlatform Interface (\"JPI\", identified as classes containedwithin the \"java\" package or any subpackages of the \"java\"package), by creating additional classes within the JPI orotherwise causing the addition to or modification of theclasses in the JPI. In the event that you create anadditional class and associated API(s) which (i) extendsthe functionality of the Java platform, and (ii) is exposedto third party software developers for the purpose ofdeveloping additional software which invokes suchadditional API, you must promptly publish broadly anaccurate specification for such API for free use by alldevelopers. You may not create, or authorize yourlicensees to create, additional classes, interfaces, orsubpackages that are in any way identified as \"java\",\"javax\", \"sun\" or similar convention as specified by Sun inany naming convention designation.\"",
        "output": "My guess is that you are trying to replace a standard class which ships with Java 5 with one in a library you have. This is not allowed under the terms of the license agreement, however AFAIK it wasn't enforced until Java 5. I have seen this with QName before and I \"fixed\" it by removing the class from the jar I had. You may not modify the JavaPlatform Interface (\"JPI\", identified as classes containedwithin the \"java\" package or any subpackages of the \"java\"package), by creating additional classes within the JPI orotherwise causing the addition to or modification of theclasses in the JPI. In the event that you create anadditional class and associated API(s) which (i) extendsthe functionality of the Java platform, and (ii) is exposedto third party software developers for the purpose ofdeveloping additional software which invokes suchadditional API, you must promptly publish broadly anaccurate specification for such API for free use by alldevelopers. You may not create, or authorize yourlicensees to create, additional classes, interfaces, orsubpackages that are in any way identified as \"java\",\"javax\", \"sun\" or similar convention as specified by Sun inany naming convention designation.\"",
        "answer": "My guess is that you are trying to replace a standard class which ships with Java 5 with one in a library you have. This is not allowed under the terms of the license agreement, however AFAIK it wasn't enforced until Java 5. I have seen this with QName before and I \"fixed\" it by removing the class from the jar I had. EDIThttp://www.manpagez.com/man/1/java/ notes for the option \"-Xbootclasspath:\" \"Applications that use this option for the purpose of overriding a class in rt.jar should not be deployed as doing  so would contravene the Java 2 Runtime Environment binary code license.\" The http://www.idt.mdh.se/rc/sumo/aJile/Uppackat/jre/LICENSE \"Java Technology Restrictions. You may not modify the JavaPlatform Interface (\"JPI\", identified as classes containedwithin the \"java\" package or any subpackages of the \"java\"package), by creating additional classes within the JPI orotherwise causing the addition to or modification of theclasses in the JPI. In the event that you create anadditional class and associated API(s) which (i) extendsthe functionality of the Java platform, and (ii) is exposedto third party software developers for the purpose ofdeveloping additional software which invokes suchadditional API, you must promptly publish broadly anaccurate specification for such API for free use by alldevelopers. You may not create, or authorize yourlicensees to create, additional classes, interfaces, orsubpackages that are in any way identified as \"java\",\"javax\", \"sun\" or similar convention as specified by Sun inany naming convention designation.\"",
        "summary": "My guess is that you are trying to replace a standard class which ships with Java 5 with one in a library you have. This is not allowed under the terms of the license agreement, however AFAIK it wasn't enforced until Java 5. I have seen this with QName before and I \"fixed\" it by removing the class from the jar I had. You may not modify the JavaPlatform Interface (\"JPI\", identified as classes containedwithin the \"java\" package or any subpackages of the \"java\"package), by creating additional classes within the JPI orotherwise causing the addition to or modification of theclasses in the JPI. In the event that you create anadditional class and associated API(s) which (i) extendsthe functionality of the Java platform, and (ii) is exposedto third party software developers for the purpose ofdeveloping additional software which invokes suchadditional API, you must promptly publish broadly anaccurate specification for such API for free use by alldevelopers. You may not create, or authorize yourlicensees to create, additional classes, interfaces, orsubpackages that are in any way identified as \"java\",\"javax\", \"sun\" or similar convention as specified by Sun inany naming convention designation.\""
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.",
        "output": "Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.",
        "answer": "Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.",
        "summary": "Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you are using IIS for hosting your application, then the default upload file size if 4MB. To increase it, please use this below section in your web.config - For IIS7 and above, you also need to add the lines below: <strong>Note</strong>: <li><strong><code>maxRequestLength</code></strong> is measured in <strong>kilobytes</strong> <li><strong><code>maxAllowedContentLength</code></strong> is measured in <strong>bytes</strong> which is why the values differ in this config example. (Both are equivalent to 1 GB)",
        "output": "For IIS7 and above, you also need to add the lines below: <strong>Note</strong>: <li><strong><code>maxRequestLength</code></strong> is measured in <strong>kilobytes</strong> <li><strong><code>maxAllowedContentLength</code></strong> is measured in <strong>bytes</strong>",
        "answer": "If you are using IIS for hosting your application, then the default upload file size if 4MB. To increase it, please use this below section in your web.config - For IIS7 and above, you also need to add the lines below: <strong>Note</strong>: <li><strong><code>maxRequestLength</code></strong> is measured in <strong>kilobytes</strong> <li><strong><code>maxAllowedContentLength</code></strong> is measured in <strong>bytes</strong> which is why the values differ in this config example. (Both are equivalent to 1 GB)",
        "summary": "For IIS7 and above, you also need to add the lines below: <strong>Note</strong>: <li><strong><code>maxRequestLength</code></strong> is measured in <strong>kilobytes</strong> <li><strong><code>maxAllowedContentLength</code></strong> is measured in <strong>bytes</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n f you just want to view a large file rather than edit it, there are a couple of freeware programs that read files a chunk at a time rather than trying to load the entire file in to memory. I use these when I need to read through large ( > 5 GB) files. Large Text File Viewer by swiftgear http://www.swiftgear.com/ltfviewer/features.html Big File Viewer by Team Walrus. You'll have to find the link yourself for that last one because the I can only post a maximum of one hyperlink being a newbie.",
        "output": "Large Text File Viewer by swiftgear http://www.swiftgear.com/ltfviewer/features.html Big File Viewer by Team Walrus.",
        "answer": "f you just want to view a large file rather than edit it, there are a couple of freeware programs that read files a chunk at a time rather than trying to load the entire file in to memory. I use these when I need to read through large ( > 5 GB) files. Large Text File Viewer by swiftgear http://www.swiftgear.com/ltfviewer/features.html Big File Viewer by Team Walrus. You'll have to find the link yourself for that last one because the I can only post a maximum of one hyperlink being a newbie.",
        "summary": "Large Text File Viewer by swiftgear http://www.swiftgear.com/ltfviewer/features.html Big File Viewer by Team Walrus."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n ! is \"boolean not\", which essentially typecasts the value of \"enable\" to its boolean opposite. The second ! flips this value. So, <code>! !enable</code> means \"not not enable,\" giving you the value of <code>enable</code> as a boolean.",
        "output": "! is \"boolean not\", which essentially typecasts the value of \"enable\" to its boolean opposite. The second ! flips this value.",
        "answer": "! is \"boolean not\", which essentially typecasts the value of \"enable\" to its boolean opposite. The second ! flips this value. So, <code>! !enable</code> means \"not not enable,\" giving you the value of <code>enable</code> as a boolean.",
        "summary": "! is \"boolean not\", which essentially typecasts the value of \"enable\" to its boolean opposite. The second ! flips this value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I wrote an extended Iterable class that support applying functional algorithms without copying the collection content. Usage: The code above will actually execute",
        "output": "I wrote an extended Iterable class that support applying functional algorithms without copying the collection content.",
        "answer": "I wrote an extended Iterable class that support applying functional algorithms without copying the collection content. Usage: The code above will actually execute",
        "summary": "I wrote an extended Iterable class that support applying functional algorithms without copying the collection content."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have to call <code>next()</code> before you can start reading values from the first row. <code>beforeFirst</code> puts the cursor before the first row, so there's no data to read.",
        "output": "You have to call <code>next()</code> before you can start reading values from the first row.",
        "answer": "You have to call <code>next()</code> before you can start reading values from the first row. <code>beforeFirst</code> puts the cursor before the first row, so there's no data to read.",
        "summary": "You have to call <code>next()</code> before you can start reading values from the first row."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Start the project with Ctrl+F5 instead of just F5. The console window will now stay open with the <code>Press any key to continue . . .</code> message after the program exits. Note that this requires the <code>Console (/SUBSYSTEM:CONSOLE)</code> linker option, which you can enable as follows: <li>Open up your project, and go to the Solution Explorer. If you're following along with me in K&amp;R, your \"Solution\" will be 'hello' with 1 project under it, also 'hello' in bold. <li>Right click on the 'hello\" (or whatever your project name is.) <li>Choose \"Properties\" from the context menu. <li>Choose Configuration Properties>Linker>System. <li>For the \"Subsystem\" property in the right-hand pane, click the drop-down box in the right hand column. <li>Choose \"Console (/SUBSYSTEM:CONSOLE)\" <li>Click Apply, wait for it to finish doing whatever it does, then click OK. (If \"Apply\" is grayed out, choose some other subsystem option, click Apply, then go back and apply the console option. My experience is that OK by itself won't work.) CTRL-F5 and the subsystem hints work together; they are not separate options. (Courtesy of DJMorreTX from http://social.msdn.microsoft.com/Forums/en-US/vcprerelease/thread/21073093-516c-49d2-81c7-d960f6dc2ac6)",
        "output": "Start the project with Ctrl+F5 instead of just F5. <li>Open up your project, and go to the Solution Explorer. <li>Right click on the 'hello\" (or whatever your project name is.) <li>Choose \"Properties\" from the context menu. <li>Choose Configuration Properties>Linker>System. <li>For the \"Subsystem\" property in the right-hand pane, click the drop-down box in the right hand column. <li>Choose \"Console (/SUBSYSTEM:CONSOLE)\" <li>Click Apply, wait for it to finish doing whatever it does, then click OK. (If \"Apply\" is grayed out, choose some other subsystem option, click Apply, then go back and apply the console option. CTRL-F5 and the subsystem hints work together; they are not separate options.",
        "answer": "Start the project with Ctrl+F5 instead of just F5. The console window will now stay open with the <code>Press any key to continue . . .</code> message after the program exits. Note that this requires the <code>Console (/SUBSYSTEM:CONSOLE)</code> linker option, which you can enable as follows: <li>Open up your project, and go to the Solution Explorer. If you're following along with me in K&amp;R, your \"Solution\" will be 'hello' with 1 project under it, also 'hello' in bold. <li>Right click on the 'hello\" (or whatever your project name is.) <li>Choose \"Properties\" from the context menu. <li>Choose Configuration Properties>Linker>System. <li>For the \"Subsystem\" property in the right-hand pane, click the drop-down box in the right hand column. <li>Choose \"Console (/SUBSYSTEM:CONSOLE)\" <li>Click Apply, wait for it to finish doing whatever it does, then click OK. (If \"Apply\" is grayed out, choose some other subsystem option, click Apply, then go back and apply the console option. My experience is that OK by itself won't work.) CTRL-F5 and the subsystem hints work together; they are not separate options. (Courtesy of DJMorreTX from http://social.msdn.microsoft.com/Forums/en-US/vcprerelease/thread/21073093-516c-49d2-81c7-d960f6dc2ac6)",
        "summary": "Start the project with Ctrl+F5 instead of just F5. <li>Open up your project, and go to the Solution Explorer. <li>Right click on the 'hello\" (or whatever your project name is.) <li>Choose \"Properties\" from the context menu. <li>Choose Configuration Properties>Linker>System. <li>For the \"Subsystem\" property in the right-hand pane, click the drop-down box in the right hand column. <li>Choose \"Console (/SUBSYSTEM:CONSOLE)\" <li>Click Apply, wait for it to finish doing whatever it does, then click OK. (If \"Apply\" is grayed out, choose some other subsystem option, click Apply, then go back and apply the console option. CTRL-F5 and the subsystem hints work together; they are not separate options."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is a wrapped exception and not really interesting. It is the root cause of the exception which actually tells us something about the root cause. Please look a bit further in the stacktrace. The chance is big that you'll then face a <code>SQLException: Connection refused</code> or <code>SQLException: Connection timed out</code>. If this is true in your case as well, then all the possible causes are: IP address or hostname in JDBC URL is wrong. Hostname in JDBC URL is not recognized by local DNS server. Port number is missing or wrong in JDBC URL. DB server is down. DB server doesn't accept TCP/IP connections. Something in between Java and DB is blocking connections, e.g. a firewall or proxy. To solve the one or the either, follow the following advices: Verify and test them with <code>ping</code>. Refresh DNS or use IP address in JDBC URL instead. Verify it based on <code>my.cnf</code> of MySQL DB. Start it. Verify if mysqld is started without the <code>--skip-networking</code> option. Disable firewall and/or configure firewall/proxy to allow/forward the port. By the way (and unrelated to the actual problem), you don't necessarily need to load the JDBC driver on every <code>getConnection()</code> call. Just only once during startup is enough.",
        "output": "The chance is big that you'll then face a <code>SQLException: Connection refused</code> or <code>SQLException: Connection timed out</code>. If this is true in your case as well, then all the possible causes are:",
        "answer": "This is a wrapped exception and not really interesting. It is the root cause of the exception which actually tells us something about the root cause. Please look a bit further in the stacktrace. The chance is big that you'll then face a <code>SQLException: Connection refused</code> or <code>SQLException: Connection timed out</code>. If this is true in your case as well, then all the possible causes are: IP address or hostname in JDBC URL is wrong. Hostname in JDBC URL is not recognized by local DNS server. Port number is missing or wrong in JDBC URL. DB server is down. DB server doesn't accept TCP/IP connections. Something in between Java and DB is blocking connections, e.g. a firewall or proxy. To solve the one or the either, follow the following advices: Verify and test them with <code>ping</code>. Refresh DNS or use IP address in JDBC URL instead. Verify it based on <code>my.cnf</code> of MySQL DB. Start it. Verify if mysqld is started without the <code>--skip-networking</code> option. Disable firewall and/or configure firewall/proxy to allow/forward the port. By the way (and unrelated to the actual problem), you don't necessarily need to load the JDBC driver on every <code>getConnection()</code> call. Just only once during startup is enough.",
        "summary": "The chance is big that you'll then face a <code>SQLException: Connection refused</code> or <code>SQLException: Connection timed out</code>. If this is true in your case as well, then all the possible causes are:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is the exact answer. Try this code: BIGBLOCK",
        "output": "Try this code: BIGBLOCK",
        "answer": "This is the exact answer. Try this code: BIGBLOCK",
        "summary": "Try this code: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you're using Gnome, you can go to: <code>Places</code> -> <code>Connect to Server</code> in <code>nautilus</code>and choose SSH. If you have a SSH agent running and configured, no password will be asked! (This is the same as sftp://root@servername/directory in Nautilus) In Konqueror, you can simply type: fish://servername. per Mike R: In Ubuntu Unity 14.0.4 its under Files > Connect to Server in the Menu or Network > Connect to Server in the sidebar",
        "output": "If you're using Gnome, you can go to: <code>Places</code> -> <code>Connect to Server</code> in <code>nautilus</code>and choose SSH. If you have a SSH agent running and configured, no password will be asked!",
        "answer": "If you're using Gnome, you can go to: <code>Places</code> -> <code>Connect to Server</code> in <code>nautilus</code>and choose SSH. If you have a SSH agent running and configured, no password will be asked! (This is the same as sftp://root@servername/directory in Nautilus) In Konqueror, you can simply type: fish://servername. per Mike R: In Ubuntu Unity 14.0.4 its under Files > Connect to Server in the Menu or Network > Connect to Server in the sidebar",
        "summary": "If you're using Gnome, you can go to: <code>Places</code> -> <code>Connect to Server</code> in <code>nautilus</code>and choose SSH. If you have a SSH agent running and configured, no password will be asked!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've spent some time working on this and came up with this to calculate someone's age in years, months and days. I've tested against the Feb 29th problem and leap years and it seems to work, I'd appreciate any feedback:",
        "output": "I've spent some time working on this and came up with this to calculate someone's age in years, months and days.",
        "answer": "I've spent some time working on this and came up with this to calculate someone's age in years, months and days. I've tested against the Feb 29th problem and leap years and it seems to work, I'd appreciate any feedback:",
        "summary": "I've spent some time working on this and came up with this to calculate someone's age in years, months and days."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Big O is just a way to \"Express\" yourself in a common way, \"How much time / space does it take to run my code? \". You may often see O(n), O(n2), O(nlogn) and so forth, all these are just ways to show; How does an algorithm change? O(n) means Big O is n, and now you might think, \"What is n!?\" Well \"n\" is the amount of elements. Imaging you want to search for an Item in an Array. You would have to look on Each element and as \"Are you the correct element/item?\" in the worst case, the item is at the last index, which means that it took as much time as there are items in the list, so to be generic, we say \"oh hey, n is a fair given amount of values! \". So then you might understand what \"n2\" means, but to be even more specific, play with the thought you have a simple, the simpliest of the sorting algorithms; bubblesort. This algorithm needs to look through the whole list, for each item. My list <li>1 <li>6 <li>3 The flow here would be: <li>Compare 1 and 6, which is biggest? Ok 6 is in the right position, moving forward! <li>Compare 6 and 3, oh, 3 is less! Let's move that, Ok the list changed, we need to start from the begining now! This is O n2 because, you need to look at all items in the list there are \"n\" items. For each item, you look at all items once more, for comparing, this is also \"n\", so for every item, you look \"n\" times meaning n*n = n2 I hope this is as simple as you want it. But remember, Big O is just a way to experss yourself in the manner of time and space.",
        "output": "Big O is just a way to \"Express\" yourself in a common way, \"How much time / space does it take to run my code? You may often see O(n), O(n2), O(nlogn) and so forth, all these are just ways to show; How does an algorithm change? Well \"n\" is the amount of elements.",
        "answer": "Big O is just a way to \"Express\" yourself in a common way, \"How much time / space does it take to run my code? \". You may often see O(n), O(n2), O(nlogn) and so forth, all these are just ways to show; How does an algorithm change? O(n) means Big O is n, and now you might think, \"What is n!?\" Well \"n\" is the amount of elements. Imaging you want to search for an Item in an Array. You would have to look on Each element and as \"Are you the correct element/item?\" in the worst case, the item is at the last index, which means that it took as much time as there are items in the list, so to be generic, we say \"oh hey, n is a fair given amount of values! \". So then you might understand what \"n2\" means, but to be even more specific, play with the thought you have a simple, the simpliest of the sorting algorithms; bubblesort. This algorithm needs to look through the whole list, for each item. My list <li>1 <li>6 <li>3 The flow here would be: <li>Compare 1 and 6, which is biggest? Ok 6 is in the right position, moving forward! <li>Compare 6 and 3, oh, 3 is less! Let's move that, Ok the list changed, we need to start from the begining now! This is O n2 because, you need to look at all items in the list there are \"n\" items. For each item, you look at all items once more, for comparing, this is also \"n\", so for every item, you look \"n\" times meaning n*n = n2 I hope this is as simple as you want it. But remember, Big O is just a way to experss yourself in the manner of time and space.",
        "summary": "Big O is just a way to \"Express\" yourself in a common way, \"How much time / space does it take to run my code? You may often see O(n), O(n2), O(nlogn) and so forth, all these are just ways to show; How does an algorithm change? Well \"n\" is the amount of elements."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n RFC 2616 describes which status codes to use. And no, it's not always 200.",
        "output": "RFC 2616 describes which status codes to use.",
        "answer": "RFC 2616 describes which status codes to use. And no, it's not always 200.",
        "summary": "RFC 2616 describes which status codes to use."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n My theory is that if you have more than one edmx file with same name (Model1 for example), it will give that exception. I've got same problem when I decided to name all my edmx files (sitting in different projects) as Model1 because I thought they should be independent.",
        "output": "My theory is that if you have more than one edmx file with same name (Model1 for example), it will give that exception.",
        "answer": "My theory is that if you have more than one edmx file with same name (Model1 for example), it will give that exception. I've got same problem when I decided to name all my edmx files (sitting in different projects) as Model1 because I thought they should be independent.",
        "summary": "My theory is that if you have more than one edmx file with same name (Model1 for example), it will give that exception."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>break</strong> causes the program counter to jump out of the scope of the innermost loop Works like this <strong>continue</strong> jumps to the end of the loop. In a for loop, continue jumps to the increment expression. Works like this",
        "output": "<strong>break</strong> causes the program counter to jump out of the scope of the innermost loop <strong>continue</strong> jumps to the end of the loop.",
        "answer": "<strong>break</strong> causes the program counter to jump out of the scope of the innermost loop Works like this <strong>continue</strong> jumps to the end of the loop. In a for loop, continue jumps to the increment expression. Works like this",
        "summary": "<strong>break</strong> causes the program counter to jump out of the scope of the innermost loop <strong>continue</strong> jumps to the end of the loop."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think library is a set of utilities to reach a goal (for example, sockets, cryptography, etc).Framework is library + RUNTIME EINVIRONNEMENT. For example, ASP.NET is a framework: it accepts HTTP requests, create page object, invoke lyfe cicle events, etc. Framework does all this, you write a bit of code which will be run at a specific time of the life cycle of current request! Anyway, very interestering question!",
        "output": "I think library is a set of utilities to reach a goal (for example, sockets, cryptography, etc).Framework is library + RUNTIME EINVIRONNEMENT. Framework does all this, you write a bit of code which will be run at a specific time of the life cycle of current request!",
        "answer": "I think library is a set of utilities to reach a goal (for example, sockets, cryptography, etc).Framework is library + RUNTIME EINVIRONNEMENT. For example, ASP.NET is a framework: it accepts HTTP requests, create page object, invoke lyfe cicle events, etc. Framework does all this, you write a bit of code which will be run at a specific time of the life cycle of current request! Anyway, very interestering question!",
        "summary": "I think library is a set of utilities to reach a goal (for example, sockets, cryptography, etc).Framework is library + RUNTIME EINVIRONNEMENT. Framework does all this, you write a bit of code which will be run at a specific time of the life cycle of current request!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n They don't have the same structure... I can guarantee they are different I know you've already created it... There is already an object named Ã©ÂÂ¥Ã¦Â¦Â¯bltable1Ã©Â?in the database What you may want is this (which also fixes your other issue):",
        "output": "There is already an object named Ã©ÂÂ¥Ã¦Â¦Â¯bltable1Ã©Â?in the database What you may want is this (which also fixes your other issue):",
        "answer": "They don't have the same structure... I can guarantee they are different I know you've already created it... There is already an object named Ã©ÂÂ¥Ã¦Â¦Â¯bltable1Ã©Â?in the database What you may want is this (which also fixes your other issue):",
        "summary": "There is already an object named Ã©ÂÂ¥Ã¦Â¦Â¯bltable1Ã©Â?in the database What you may want is this (which also fixes your other issue):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>ids</code> must be unique where as <code>class</code> can be applied to many things. In CSS, <code>id</code>s look like <code>#elementID</code> and <code>class</code> elements look like <code>.someClass</code> In general, use <code>id</code> whenever you want to refer to a specific element and <code>class</code> when you have a number of things that are all alike. For instance, common <code>id</code> elements are things like <code>header</code>, <code>footer</code>, <code>sidebar</code>. Common <code>class</code> elements are things like <code>highlight</code> or <code>external-link</code>. It's a good idea to read up on the cascade and understand the precedence assigned to various selectors: http://www.w3.org/TR/CSS2/cascade.html The most basic precedence you should understand, however, is that <code>id</code> selectors take precedence over <code>class</code> selectors. If you had this: and: The text would be red because the <code>id</code> selector takes precedence over the <code>class</code> selector.",
        "output": "<code>ids</code> must be unique where as <code>class</code> can be applied to many things. In general, use <code>id</code> whenever you want to refer to a specific element and <code>class</code> when you have a number of things that are all alike. For instance, common <code>id</code> elements are things like <code>header</code>, <code>footer</code>, <code>sidebar</code>. Common <code>class</code> elements are things like <code>highlight</code> or <code>external-link</code>.",
        "answer": "<code>ids</code> must be unique where as <code>class</code> can be applied to many things. In CSS, <code>id</code>s look like <code>#elementID</code> and <code>class</code> elements look like <code>.someClass</code> In general, use <code>id</code> whenever you want to refer to a specific element and <code>class</code> when you have a number of things that are all alike. For instance, common <code>id</code> elements are things like <code>header</code>, <code>footer</code>, <code>sidebar</code>. Common <code>class</code> elements are things like <code>highlight</code> or <code>external-link</code>. It's a good idea to read up on the cascade and understand the precedence assigned to various selectors: http://www.w3.org/TR/CSS2/cascade.html The most basic precedence you should understand, however, is that <code>id</code> selectors take precedence over <code>class</code> selectors. If you had this: and: The text would be red because the <code>id</code> selector takes precedence over the <code>class</code> selector.",
        "summary": "<code>ids</code> must be unique where as <code>class</code> can be applied to many things. In general, use <code>id</code> whenever you want to refer to a specific element and <code>class</code> when you have a number of things that are all alike. For instance, common <code>id</code> elements are things like <code>header</code>, <code>footer</code>, <code>sidebar</code>. Common <code>class</code> elements are things like <code>highlight</code> or <code>external-link</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For equals, look into <strong>Secrets of Equals</strong> by Angelika Langer. I love it very much. She's also a great FAQ about <strong>Generics in Java</strong>. View her other articles here (scroll down to \"Core Java\"), where she also goes on with Part-2 and \"mixed type comparison\". Have fun reading them!",
        "output": "For equals, look into <strong>Secrets of Equals</strong> by Angelika Langer.",
        "answer": "For equals, look into <strong>Secrets of Equals</strong> by Angelika Langer. I love it very much. She's also a great FAQ about <strong>Generics in Java</strong>. View her other articles here (scroll down to \"Core Java\"), where she also goes on with Part-2 and \"mixed type comparison\". Have fun reading them!",
        "summary": "For equals, look into <strong>Secrets of Equals</strong> by Angelika Langer."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This means that the application is unable to load the EDMX. There are several things which can cause this. You might have changed the MetadataArtifactProcessing property of the model to Copy to Output Directory. The connection string could be wrong. I know you say you haven't changed it, but if you have changed other things (say, the name of an assembly), it could still be wrong. You might be using a post-compile task to embed the EDMX in the assembly, which is no longer working for some reason. In short, there is not really enough detail in your question to give an accurate answer, but hopefully these ideas should get you on the right track. Update: I've written a blog post with more complete steps for troubleshooting.",
        "output": "In short, there is not really enough detail in your question to give an accurate answer, but hopefully these ideas should get you on the right track.",
        "answer": "This means that the application is unable to load the EDMX. There are several things which can cause this. You might have changed the MetadataArtifactProcessing property of the model to Copy to Output Directory. The connection string could be wrong. I know you say you haven't changed it, but if you have changed other things (say, the name of an assembly), it could still be wrong. You might be using a post-compile task to embed the EDMX in the assembly, which is no longer working for some reason. In short, there is not really enough detail in your question to give an accurate answer, but hopefully these ideas should get you on the right track. Update: I've written a blog post with more complete steps for troubleshooting.",
        "summary": "In short, there is not really enough detail in your question to give an accurate answer, but hopefully these ideas should get you on the right track."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try again with this code snippet: Using <code>try-catch-finally</code> is better than using <code>throws</code>. Finding errors and debugging are easier when you use <code>try-catch-finally</code>.",
        "output": "Try again with this code snippet:",
        "answer": "Try again with this code snippet: Using <code>try-catch-finally</code> is better than using <code>throws</code>. Finding errors and debugging are easier when you use <code>try-catch-finally</code>.",
        "summary": "Try again with this code snippet:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Everyone else has already answered it, but I think I still have something else to add. Reasons to have that <code>if</code> statement calling <code>main()</code> (in no particular order): <li>Other languages (like C and Java) have a <code>main()</code> function that is called when the program is executed. Using this <code>if</code>, we can make Python behave like them, which feels more familiar for many people. <li>Code will be <em>cleaner</em>, easier to read, and better organized. (yeah, I know this is subjective) <li>It will be possible to <code>import</code> that python code as a module without nasty side-effects. <li>This means it will be possible to run tests against that code. <li>This means we can import that code into an interactive python shell and test/debug/run it. <li>Variables inside <code>def main</code> are <strong>local</strong>, while those outside it are <strong>global</strong>. This may introduce a few bugs and unexpected behaviors. But, you are <strong>not required</strong> to write a <code>main()</code> function and call it inside an <code>if</code> statement. I myself usually start writing small throwaway scripts without any kind of function. If the script grows big enough, or if I feel putting all that code inside a function will benefit me, then I refactor the code and do it. This also happens when I write <code>bash</code> scripts. Even if you put code inside the main function, you are not required to write it exactly as that. A neat variation could be: This means you can call <code>main()</code> from other scripts (or interactive shell) passing custom parameters. This might be useful in unit tests, or when batch-processing. But remember that the code above will require parsing of argv, thus maybe it would be better to use a different call that pass parameters already parsed. In an object-oriented application I've written, the code looked like this: So, feel free to write the code that better suits you. :)",
        "output": "Reasons to have that <code>if</code> statement calling <code>main()</code> (in no particular order): <li>Other languages (like C and Java) have a <code>main()</code> function that is called when the program is executed. Using this <code>if</code>, we can make Python behave like them, which feels more familiar for many people. <li>Code will be <em>cleaner</em>, easier to read, and better organized. (yeah, I know this is subjective) <li>It will be possible to <code>import</code> that python code as a module without nasty side-effects. <li>This means it will be possible to run tests against that code. <li>This means we can import that code into an interactive python shell and test/debug/run it. <li>Variables inside <code>def main</code> are <strong>local</strong>, while those outside it are <strong>global</strong>. But, you are <strong>not required</strong> to write a <code>main()</code> function and call it inside an <code>if</code> statement.",
        "answer": "Everyone else has already answered it, but I think I still have something else to add. Reasons to have that <code>if</code> statement calling <code>main()</code> (in no particular order): <li>Other languages (like C and Java) have a <code>main()</code> function that is called when the program is executed. Using this <code>if</code>, we can make Python behave like them, which feels more familiar for many people. <li>Code will be <em>cleaner</em>, easier to read, and better organized. (yeah, I know this is subjective) <li>It will be possible to <code>import</code> that python code as a module without nasty side-effects. <li>This means it will be possible to run tests against that code. <li>This means we can import that code into an interactive python shell and test/debug/run it. <li>Variables inside <code>def main</code> are <strong>local</strong>, while those outside it are <strong>global</strong>. This may introduce a few bugs and unexpected behaviors. But, you are <strong>not required</strong> to write a <code>main()</code> function and call it inside an <code>if</code> statement. I myself usually start writing small throwaway scripts without any kind of function. If the script grows big enough, or if I feel putting all that code inside a function will benefit me, then I refactor the code and do it. This also happens when I write <code>bash</code> scripts. Even if you put code inside the main function, you are not required to write it exactly as that. A neat variation could be: This means you can call <code>main()</code> from other scripts (or interactive shell) passing custom parameters. This might be useful in unit tests, or when batch-processing. But remember that the code above will require parsing of argv, thus maybe it would be better to use a different call that pass parameters already parsed. In an object-oriented application I've written, the code looked like this: So, feel free to write the code that better suits you. :)",
        "summary": "Reasons to have that <code>if</code> statement calling <code>main()</code> (in no particular order): <li>Other languages (like C and Java) have a <code>main()</code> function that is called when the program is executed. Using this <code>if</code>, we can make Python behave like them, which feels more familiar for many people. <li>Code will be <em>cleaner</em>, easier to read, and better organized. (yeah, I know this is subjective) <li>It will be possible to <code>import</code> that python code as a module without nasty side-effects. <li>This means it will be possible to run tests against that code. <li>This means we can import that code into an interactive python shell and test/debug/run it. <li>Variables inside <code>def main</code> are <strong>local</strong>, while those outside it are <strong>global</strong>. But, you are <strong>not required</strong> to write a <code>main()</code> function and call it inside an <code>if</code> statement."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The difference is primarily in deployment. Web forward and reverse proxies all have the same underlying features, they accept requests for HTTP requests in various formats and provide a response, usually by accessing the origin or contact server. Fully featured servers usually have access control, caching, and some link-mapping features. A forward proxy is a proxy that is accessed by configuring the client machine. The client needs protocol support for proxy features (redirection, proxy auth, etc.). The proxy is transparent to the user experience, but not to the application. A reverse proxy is a proxy that is deployed as a web server and behaves like a web server, with the exception that instead of locally composing the content from programs and disk, it forwards the request to an origin server. From the client perspective it IS a web server, so the user experience is completely transparent. In fact, a single proxy instance can run as a forward and reverse proxy at the same time for different client populations. That's the short version, I can clarify if people want to comment.",
        "output": "A forward proxy is a proxy that is accessed by configuring the client machine. A reverse proxy is a proxy that is deployed as a web server and behaves like a web server, with the exception that instead of locally composing the content from programs and disk, it forwards the request to an origin server.",
        "answer": "The difference is primarily in deployment. Web forward and reverse proxies all have the same underlying features, they accept requests for HTTP requests in various formats and provide a response, usually by accessing the origin or contact server. Fully featured servers usually have access control, caching, and some link-mapping features. A forward proxy is a proxy that is accessed by configuring the client machine. The client needs protocol support for proxy features (redirection, proxy auth, etc.). The proxy is transparent to the user experience, but not to the application. A reverse proxy is a proxy that is deployed as a web server and behaves like a web server, with the exception that instead of locally composing the content from programs and disk, it forwards the request to an origin server. From the client perspective it IS a web server, so the user experience is completely transparent. In fact, a single proxy instance can run as a forward and reverse proxy at the same time for different client populations. That's the short version, I can clarify if people want to comment.",
        "summary": "A forward proxy is a proxy that is accessed by configuring the client machine. A reverse proxy is a proxy that is deployed as a web server and behaves like a web server, with the exception that instead of locally composing the content from programs and disk, it forwards the request to an origin server."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Smart pointer is a pointer-like type with some additional functionality, e.g. automatic memory deallocation, reference counting etc. Small intro is available on page Smart Pointers - What, Why, Which?. One of the simple smart-pointer type is <code>std::auto_ptr</code> (chapter 20.4.5 of C++ standard), which allows to deallocate memory automatically when it out of scope and which is more robust than simple pointer usage when exceptions are thrown, although less flexible. Another convenient type is <code>boost::shared_ptr</code> which implements reference counting and automatically deallocates memory when no references to object remains. This helps avoiding memory leaks and is easy to use to implement RAII. Subject is covered in depth in book \"C++ Templates: The Complete Guide\" by David Vandevoorde, Nicolai M. Josuttis, chapter Chapter 20. Smart Pointers. Some topics covered: Protecting Against Exceptions Holders, (note, std::auto_ptr is implementation of such type of smart pointer) Resource Acquisition Is Initialization (This is frequently used for exception-safe resource management in C++) Holder Limitations Reference Counting Concurrent Counter Access Destruction and Deallocation",
        "output": "Smart pointer is a pointer-like type with some additional functionality, e.g. automatic memory deallocation, reference counting etc.",
        "answer": "Smart pointer is a pointer-like type with some additional functionality, e.g. automatic memory deallocation, reference counting etc. Small intro is available on page Smart Pointers - What, Why, Which?. One of the simple smart-pointer type is <code>std::auto_ptr</code> (chapter 20.4.5 of C++ standard), which allows to deallocate memory automatically when it out of scope and which is more robust than simple pointer usage when exceptions are thrown, although less flexible. Another convenient type is <code>boost::shared_ptr</code> which implements reference counting and automatically deallocates memory when no references to object remains. This helps avoiding memory leaks and is easy to use to implement RAII. Subject is covered in depth in book \"C++ Templates: The Complete Guide\" by David Vandevoorde, Nicolai M. Josuttis, chapter Chapter 20. Smart Pointers. Some topics covered: Protecting Against Exceptions Holders, (note, std::auto_ptr is implementation of such type of smart pointer) Resource Acquisition Is Initialization (This is frequently used for exception-safe resource management in C++) Holder Limitations Reference Counting Concurrent Counter Access Destruction and Deallocation",
        "summary": "Smart pointer is a pointer-like type with some additional functionality, e.g. automatic memory deallocation, reference counting etc."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If the URL works fine in the web browser on the same machine, it might be that the Java code isn't using the HTTP proxy the browser is using for connecting to the URL.",
        "output": "If the URL works fine in the web browser on the same machine, it might be that the Java code isn't using the HTTP proxy the browser is using for connecting to the URL.",
        "answer": "If the URL works fine in the web browser on the same machine, it might be that the Java code isn't using the HTTP proxy the browser is using for connecting to the URL.",
        "summary": "If the URL works fine in the web browser on the same machine, it might be that the Java code isn't using the HTTP proxy the browser is using for connecting to the URL."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is the version we use here. It works, and it's fairly simple. It's the same idea as Jeff's but I think it's a little clearer because it separates out the logic for subtracting one, so it's a little easier to understand. You could expand the ternary operator to make it even clearer, if you think that sort of thing is unclear. Obviously this is done as an extension method on <code>DateTime</code>, but clearly you can grab that one line of code that does the work and put it anywhere. Here we have another overload of the Extension method that passes in <code>DateTime.Now</code>, just for completeness.",
        "output": "This is the version we use here.",
        "answer": "This is the version we use here. It works, and it's fairly simple. It's the same idea as Jeff's but I think it's a little clearer because it separates out the logic for subtracting one, so it's a little easier to understand. You could expand the ternary operator to make it even clearer, if you think that sort of thing is unclear. Obviously this is done as an extension method on <code>DateTime</code>, but clearly you can grab that one line of code that does the work and put it anywhere. Here we have another overload of the Extension method that passes in <code>DateTime.Now</code>, just for completeness.",
        "summary": "This is the version we use here."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is a strange way to do it, but if you format the date to <code>yyyymmdd</code> and subtract the date of birth from the current date then drop the last 4 digits you've got the age :) I don't know C#, but I believe this will work in any language. Drop the last 4 digits = <code>28</code>. C# Code: Or alternatively without all the type conversion in the form of an extension method. Error checking omitted:",
        "output": "This is a strange way to do it, but if you format the date to <code>yyyymmdd</code> and subtract the date of birth from the current date then drop the last 4 digits you've got the age :)",
        "answer": "This is a strange way to do it, but if you format the date to <code>yyyymmdd</code> and subtract the date of birth from the current date then drop the last 4 digits you've got the age :) I don't know C#, but I believe this will work in any language. Drop the last 4 digits = <code>28</code>. C# Code: Or alternatively without all the type conversion in the form of an extension method. Error checking omitted:",
        "summary": "This is a strange way to do it, but if you format the date to <code>yyyymmdd</code> and subtract the date of birth from the current date then drop the last 4 digits you've got the age :)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n using, in the sense of BIGBLOCK Is actually shorthand for a try/finally block. It is equivalent to the code: BIGBLOCK You'll note, of course, that the first snippet is much more concise than the second and also that there are many kinds of things that you might want to do as cleanup even if an exception is thrown. Because of this, we've come up with a class that we call Scope that allows you to execute arbitrary code in the Dispose method. So, for example, if you had a property called IsWorking that you always wanted to set to false after trying to perform an operation, you'd do it like this: BIGBLOCK You can read more about our solution and how we derived it here.",
        "output": "using, in the sense of BIGBLOCK Is actually shorthand for a try/finally block. So, for example, if you had a property called IsWorking that you always wanted to set to false after trying to perform an operation, you'd do it like this: BIGBLOCK",
        "answer": "using, in the sense of BIGBLOCK Is actually shorthand for a try/finally block. It is equivalent to the code: BIGBLOCK You'll note, of course, that the first snippet is much more concise than the second and also that there are many kinds of things that you might want to do as cleanup even if an exception is thrown. Because of this, we've come up with a class that we call Scope that allows you to execute arbitrary code in the Dispose method. So, for example, if you had a property called IsWorking that you always wanted to set to false after trying to perform an operation, you'd do it like this: BIGBLOCK You can read more about our solution and how we derived it here.",
        "summary": "using, in the sense of BIGBLOCK Is actually shorthand for a try/finally block. So, for example, if you had a property called IsWorking that you always wanted to set to false after trying to perform an operation, you'd do it like this: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think @Erlend's use of <code>HTMLDocument</code> is the best way to go. However, I have also had good luck using this simple library: SgmlReader",
        "output": "I think @Erlend's use of <code>HTMLDocument</code> is the best way to go. However, I have also had good luck using this simple library:",
        "answer": "I think @Erlend's use of <code>HTMLDocument</code> is the best way to go. However, I have also had good luck using this simple library: SgmlReader",
        "summary": "I think @Erlend's use of <code>HTMLDocument</code> is the best way to go. However, I have also had good luck using this simple library:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>INSERT ... ON DUPLICATE KEY UPDATE</code> <strong>QUERY:</strong>",
        "output": "Use <code>INSERT ... ON DUPLICATE KEY UPDATE</code>",
        "answer": "Use <code>INSERT ... ON DUPLICATE KEY UPDATE</code> <strong>QUERY:</strong>",
        "summary": "Use <code>INSERT ... ON DUPLICATE KEY UPDATE</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Keeping it simple (and possibly stupid:)).",
        "output": "Keeping it simple (and possibly stupid:)).",
        "answer": "Keeping it simple (and possibly stupid:)).",
        "summary": "Keeping it simple (and possibly stupid:))."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Although the problem is already solved i add this in the hope it will help others. I made the mistake an tried to use a function directly like this (success: OnSuccess(productID)). But you have to pass an anonymous function first: BIGBLOCK If you do not use an anonymous function as a wrapper OnSuccess is called even if the webservice returns an exception.",
        "output": "But you have to pass an anonymous function first: BIGBLOCK",
        "answer": "Although the problem is already solved i add this in the hope it will help others. I made the mistake an tried to use a function directly like this (success: OnSuccess(productID)). But you have to pass an anonymous function first: BIGBLOCK If you do not use an anonymous function as a wrapper OnSuccess is called even if the webservice returns an exception.",
        "summary": "But you have to pass an anonymous function first: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This: https://github.com/jbtule/cdto#cd-to It's a small app that you drag into the Finder toolbar, the icon fits in very nicely. It works with Terminal, xterm (under X11), iterm.",
        "output": "This:",
        "answer": "This: https://github.com/jbtule/cdto#cd-to It's a small app that you drag into the Finder toolbar, the icon fits in very nicely. It works with Terminal, xterm (under X11), iterm.",
        "summary": "This:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No there is no built-in String method. You can convert it to a char array, sort it using Arrays.sort and convert that back into a String. BIGBLOCK Or, when you want to deal correctly with locale-specific stuff like uppercase and accented characters: BIGBLOCK",
        "output": "You can convert it to a char array, sort it using Arrays.sort and convert that back into a String. BIGBLOCK Or, when you want to deal correctly with locale-specific stuff like uppercase and accented characters: BIGBLOCK",
        "answer": "No there is no built-in String method. You can convert it to a char array, sort it using Arrays.sort and convert that back into a String. BIGBLOCK Or, when you want to deal correctly with locale-specific stuff like uppercase and accented characters: BIGBLOCK",
        "summary": "You can convert it to a char array, sort it using Arrays.sort and convert that back into a String. BIGBLOCK Or, when you want to deal correctly with locale-specific stuff like uppercase and accented characters: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is usually caused when using a build system like Apache Ant that only compiles java files when the java file is newer than the class file. If a method signature changes and classes were using the old version things may not be compiled correctly. The usual fix is to do a full rebuild (usually \"ant clean\" then \"ant\"). Sometimes this can also be caused when compiling against one version of a library but running against a different version.",
        "output": "This is usually caused when using a build system like Apache Ant that only compiles java files when the java file is newer than the class file. The usual fix is to do a full rebuild (usually \"ant clean\" then \"ant\").",
        "answer": "This is usually caused when using a build system like Apache Ant that only compiles java files when the java file is newer than the class file. If a method signature changes and classes were using the old version things may not be compiled correctly. The usual fix is to do a full rebuild (usually \"ant clean\" then \"ant\"). Sometimes this can also be caused when compiling against one version of a library but running against a different version.",
        "summary": "This is usually caused when using a build system like Apache Ant that only compiles java files when the java file is newer than the class file. The usual fix is to do a full rebuild (usually \"ant clean\" then \"ant\")."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n @Warren and @DCookie have covered the solution, one thing to emphasise is the use of <code>tnsping</code>. You can use this to prove your TNSNames is correct before attempting to connect. Once you have set up tnsnames correctly you could use ODBC or try TOra which will use your native oracle connection. TOra or something similar (TOAD, SQL*Plus etc) will prove invaluable in debugging and improving your SQL. Last but not least when you eventually connect with ASP.net remember that you can use the Oracle data connection libraries. See Oracle.com for a host of resources.",
        "output": "@Warren and @DCookie have covered the solution, one thing to emphasise is the use of <code>tnsping</code>. You can use this to prove your TNSNames is correct before attempting to connect. Once you have set up tnsnames correctly you could use ODBC or try TOra which will use your native oracle connection. TOra or something similar (TOAD, SQL*Plus etc) will prove invaluable in debugging and improving your SQL. Last but not least when you eventually connect with ASP.net remember that you can use the Oracle data connection libraries.",
        "answer": "@Warren and @DCookie have covered the solution, one thing to emphasise is the use of <code>tnsping</code>. You can use this to prove your TNSNames is correct before attempting to connect. Once you have set up tnsnames correctly you could use ODBC or try TOra which will use your native oracle connection. TOra or something similar (TOAD, SQL*Plus etc) will prove invaluable in debugging and improving your SQL. Last but not least when you eventually connect with ASP.net remember that you can use the Oracle data connection libraries. See Oracle.com for a host of resources.",
        "summary": "@Warren and @DCookie have covered the solution, one thing to emphasise is the use of <code>tnsping</code>. You can use this to prove your TNSNames is correct before attempting to connect. Once you have set up tnsnames correctly you could use ODBC or try TOra which will use your native oracle connection. TOra or something similar (TOAD, SQL*Plus etc) will prove invaluable in debugging and improving your SQL. Last but not least when you eventually connect with ASP.net remember that you can use the Oracle data connection libraries."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In short - JSON is a way of serializing in such a way, that it becomes JavaScript code. When executed (with eval or otherwise), this code creates and returns a JavaScript object which contains the data you serialized. This is available because JavaScript allows the following syntax: You can use this for several purposes. For one, it's a comfortable way to pass data from your server backend to your JavaScript code. Thus, this is often used in AJAX. You can also use it as a standalone serialization mechanism, which is simpler and takes up less space than XML. Many libraries exists that allow you to serialize and deserialize objects in JSON for various programming languages.",
        "output": "In short - JSON is a way of serializing in such a way, that it becomes JavaScript code. You can use this for several purposes. For one, it's a comfortable way to pass data from your server backend to your JavaScript code. You can also use it as a standalone serialization mechanism, which is simpler and takes up less space than XML.",
        "answer": "In short - JSON is a way of serializing in such a way, that it becomes JavaScript code. When executed (with eval or otherwise), this code creates and returns a JavaScript object which contains the data you serialized. This is available because JavaScript allows the following syntax: You can use this for several purposes. For one, it's a comfortable way to pass data from your server backend to your JavaScript code. Thus, this is often used in AJAX. You can also use it as a standalone serialization mechanism, which is simpler and takes up less space than XML. Many libraries exists that allow you to serialize and deserialize objects in JSON for various programming languages.",
        "summary": "In short - JSON is a way of serializing in such a way, that it becomes JavaScript code. You can use this for several purposes. For one, it's a comfortable way to pass data from your server backend to your JavaScript code. You can also use it as a standalone serialization mechanism, which is simpler and takes up less space than XML."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See http://www.oracle.com/technetwork/java/faq-137059.html JSP technology is part of the Java   technology family. JSP pages are   compiled into servlets and may call   JavaBeans components (beans) or   Enterprise JavaBeans components   (enterprise beans) to perform   processing on the server. As such, JSP   technology is a key component in a   highly scalable architecture for   web-based applications. See https://jcp.org/en/introduction/faq A: JavaServer Faces technology is a   framework for building user interfaces   for web applications. JavaServer Faces   technology includes: A set of APIs for: representing UI   components and managing their state,   handling events and input validation,   defining page navigation, and   supporting internationalization and   accessibility. A JavaServer Pages (JSP) custom tag   library for expressing a JavaServer   Faces interface within a JSP page. JSP is a specialized kind of servlet. JSF is a set of tags you can use with JSP.",
        "output": "JSP is a specialized kind of servlet. JSF is a set of tags you can use with JSP.",
        "answer": "See http://www.oracle.com/technetwork/java/faq-137059.html JSP technology is part of the Java   technology family. JSP pages are   compiled into servlets and may call   JavaBeans components (beans) or   Enterprise JavaBeans components   (enterprise beans) to perform   processing on the server. As such, JSP   technology is a key component in a   highly scalable architecture for   web-based applications. See https://jcp.org/en/introduction/faq A: JavaServer Faces technology is a   framework for building user interfaces   for web applications. JavaServer Faces   technology includes: A set of APIs for: representing UI   components and managing their state,   handling events and input validation,   defining page navigation, and   supporting internationalization and   accessibility. A JavaServer Pages (JSP) custom tag   library for expressing a JavaServer   Faces interface within a JSP page. JSP is a specialized kind of servlet. JSF is a set of tags you can use with JSP.",
        "summary": "JSP is a specialized kind of servlet. JSF is a set of tags you can use with JSP."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <strong>assert</strong> computer statement is analogous to the statement <strong>make sure</strong> in English.",
        "output": "The <strong>assert</strong> computer statement is analogous to the statement <strong>make sure</strong> in English.",
        "answer": "The <strong>assert</strong> computer statement is analogous to the statement <strong>make sure</strong> in English.",
        "summary": "The <strong>assert</strong> computer statement is analogous to the statement <strong>make sure</strong> in English."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In your cases, I would use the following: select by ID==5: it's OK to use SingleOrDefault here, because you expect one [or none] entity, if you got more than one entity with ID 5, there's something wrong and definitely exception worthy. when searching for people whose first name equals \"Bobby\", there can be more than one (quite possibly I would think), so you should neither use Single nor First, just select with the Where-operation (if \"Bobby\" returns too many entities, the user has to refine his search or pick one of the returned results) the order by creation date should also be performed with a Where-operation (unlikely to have only one entity, sorting wouldn't be of much use ;) this however implies you want ALL entities sorted - if you want just ONE, use FirstOrDefault, Single would throw every time if you got more than one entity.",
        "output": "select by ID==5: it's OK to use SingleOrDefault here, because you expect one [or none] entity, if you got more than one entity with ID 5, there's something wrong and definitely exception worthy. when searching for people whose first name equals \"Bobby\", there can be more than one (quite possibly I would think), so you should neither use Single nor First, just select with the Where-operation (if \"Bobby\" returns too many entities, the user has to refine his search or pick one of the returned results)",
        "answer": "In your cases, I would use the following: select by ID==5: it's OK to use SingleOrDefault here, because you expect one [or none] entity, if you got more than one entity with ID 5, there's something wrong and definitely exception worthy. when searching for people whose first name equals \"Bobby\", there can be more than one (quite possibly I would think), so you should neither use Single nor First, just select with the Where-operation (if \"Bobby\" returns too many entities, the user has to refine his search or pick one of the returned results) the order by creation date should also be performed with a Where-operation (unlikely to have only one entity, sorting wouldn't be of much use ;) this however implies you want ALL entities sorted - if you want just ONE, use FirstOrDefault, Single would throw every time if you got more than one entity.",
        "summary": "select by ID==5: it's OK to use SingleOrDefault here, because you expect one [or none] entity, if you got more than one entity with ID 5, there's something wrong and definitely exception worthy. when searching for people whose first name equals \"Bobby\", there can be more than one (quite possibly I would think), so you should neither use Single nor First, just select with the Where-operation (if \"Bobby\" returns too many entities, the user has to refine his search or pick one of the returned results)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are several ways to do this, shown below. <strong>As a friendly warning, be careful and up-front to the user when dealing with account, profile, and contact data. If you misuse a user's email address or other personal information, bad things can happen.</strong> Method A: Use AccountManager (API level 5+) You can use <code>AccountManager.getAccounts</code> or <code>AccountManager.getAccountsByType</code> to get a list of all account names on the device. Fortunately, for certain account types (including <code>com.google</code>), the account names are email addresses. Example snippet below. BIGBLOCK Note that this requires the <code>GET_ACCOUNTS</code> permission: BIGBLOCK More on using <code>AccountManager</code> can be found at the Contact Manager sample code in the SDK. Method B: Use ContactsContract.Profile (API level 14+) As of Android 4.0 (Ice Cream Sandwich), you can get the user's email addresses by accessing their profile. Accessing the user profile is a bit heavyweight as it requires two permissions (more on that below), but email addresses are fairly sensitive pieces of data, so this is the price of admission. Below is a full example that uses a <code>CursorLoader</code> to retrieve profile data rows containing email addresses. BIGBLOCK This requires both the <code>READ_PROFILE</code> and <code>READ_CONTACTS</code> permissions: BIGBLOCK",
        "output": "If you misuse a user's email address or other personal information, bad things can happen.</strong> Method A: Use AccountManager (API level 5+) Example snippet below. BIGBLOCK Note that this requires the <code>GET_ACCOUNTS</code> permission: BIGBLOCK Method B: Use ContactsContract.Profile (API level 14+) Below is a full example that uses a <code>CursorLoader</code> to retrieve profile data rows containing email addresses. BIGBLOCK This requires both the <code>READ_PROFILE</code> and <code>READ_CONTACTS</code> permissions: BIGBLOCK",
        "answer": "There are several ways to do this, shown below. <strong>As a friendly warning, be careful and up-front to the user when dealing with account, profile, and contact data. If you misuse a user's email address or other personal information, bad things can happen.</strong> Method A: Use AccountManager (API level 5+) You can use <code>AccountManager.getAccounts</code> or <code>AccountManager.getAccountsByType</code> to get a list of all account names on the device. Fortunately, for certain account types (including <code>com.google</code>), the account names are email addresses. Example snippet below. BIGBLOCK Note that this requires the <code>GET_ACCOUNTS</code> permission: BIGBLOCK More on using <code>AccountManager</code> can be found at the Contact Manager sample code in the SDK. Method B: Use ContactsContract.Profile (API level 14+) As of Android 4.0 (Ice Cream Sandwich), you can get the user's email addresses by accessing their profile. Accessing the user profile is a bit heavyweight as it requires two permissions (more on that below), but email addresses are fairly sensitive pieces of data, so this is the price of admission. Below is a full example that uses a <code>CursorLoader</code> to retrieve profile data rows containing email addresses. BIGBLOCK This requires both the <code>READ_PROFILE</code> and <code>READ_CONTACTS</code> permissions: BIGBLOCK",
        "summary": "If you misuse a user's email address or other personal information, bad things can happen.</strong> Method A: Use AccountManager (API level 5+) Example snippet below. BIGBLOCK Note that this requires the <code>GET_ACCOUNTS</code> permission: BIGBLOCK Method B: Use ContactsContract.Profile (API level 14+) Below is a full example that uses a <code>CursorLoader</code> to retrieve profile data rows containing email addresses. BIGBLOCK This requires both the <code>READ_PROFILE</code> and <code>READ_CONTACTS</code> permissions: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Most kinds of smart pointers handle disposing of the pointer-to object for you. It's very handy because you don't have to think about disposing of objects manually anymore. The most commonly-used smart pointers are <code>std::tr1::shared_ptr</code> (or <code>boost::shared_ptr</code>), and, less commonly, <code>std::auto_ptr</code>. I recommend regular use of <code>shared_ptr</code>. <code>shared_ptr</code> is very versatile and deals with a large variety of disposal scenarios, including cases where objects need to be \"passed across DLL boundaries\" (the common nightmare case if different <code>libc</code>s are used between your code and the DLLs).",
        "output": "Most kinds of smart pointers handle disposing of the pointer-to object for you. It's very handy because you don't have to think about disposing of objects manually anymore.",
        "answer": "Most kinds of smart pointers handle disposing of the pointer-to object for you. It's very handy because you don't have to think about disposing of objects manually anymore. The most commonly-used smart pointers are <code>std::tr1::shared_ptr</code> (or <code>boost::shared_ptr</code>), and, less commonly, <code>std::auto_ptr</code>. I recommend regular use of <code>shared_ptr</code>. <code>shared_ptr</code> is very versatile and deals with a large variety of disposal scenarios, including cases where objects need to be \"passed across DLL boundaries\" (the common nightmare case if different <code>libc</code>s are used between your code and the DLLs).",
        "summary": "Most kinds of smart pointers handle disposing of the pointer-to object for you. It's very handy because you don't have to think about disposing of objects manually anymore."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The way to store dates in SQLite is: SQLite also has some date and time functions you can use. See SQL As Understood By SQLite, Date And Time Functions.",
        "output": "SQLite also has some date and time functions you can use.",
        "answer": "The way to store dates in SQLite is: SQLite also has some date and time functions you can use. See SQL As Understood By SQLite, Date And Time Functions.",
        "summary": "SQLite also has some date and time functions you can use."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(\"STUFF\")\"</code> so it would be like: will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(CHAR(34) &amp; STUFF &amp; CHAR(34))\"</code>",
        "output": "will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(CHAR(34) &amp; STUFF &amp; CHAR(34))\"</code>",
        "answer": "will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(\"STUFF\")\"</code> so it would be like: will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(CHAR(34) &amp; STUFF &amp; CHAR(34))\"</code>",
        "summary": "will this work for macros using <code>.Formula = \"=THEFORMULAFUNCTION(CHAR(34) &amp; STUFF &amp; CHAR(34))\"</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Getter functions in module operator</strong> The functions <code>attrgetter()</code> and <code>itemgetter()</code> in module <code>operator</code> can be used to generate fast access functions for use in sorting and search objects and dictionaries Chapter 6.7 in the Python Library Docs",
        "output": "<strong>Getter functions in module operator</strong>",
        "answer": "<strong>Getter functions in module operator</strong> The functions <code>attrgetter()</code> and <code>itemgetter()</code> in module <code>operator</code> can be used to generate fast access functions for use in sorting and search objects and dictionaries Chapter 6.7 in the Python Library Docs",
        "summary": "<strong>Getter functions in module operator</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can create an inline view or a temporary table, fill it with you values and issue this: BIGBLOCK This, however, can return you multiple rows for a <code>fiberbox</code> that is something like <code>'1740, 1938'</code>, so this query can fit you better: BIGBLOCK",
        "output": "You can create an inline view or a temporary table, fill it with you values and issue this: BIGBLOCK This, however, can return you multiple rows for a <code>fiberbox</code> that is something like <code>'1740, 1938'</code>, so this query can fit you better: BIGBLOCK",
        "answer": "You can create an inline view or a temporary table, fill it with you values and issue this: BIGBLOCK This, however, can return you multiple rows for a <code>fiberbox</code> that is something like <code>'1740, 1938'</code>, so this query can fit you better: BIGBLOCK",
        "summary": "You can create an inline view or a temporary table, fill it with you values and issue this: BIGBLOCK This, however, can return you multiple rows for a <code>fiberbox</code> that is something like <code>'1740, 1938'</code>, so this query can fit you better: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Even though SQLMenace's answer has been accepted, there is one important <code>SET</code> option you should be aware of SET DATEFIRST DATENAME will return correct date <em>name</em> but not the same DATEPART value if the first day of week has been changed as illustrated below.",
        "output": "Even though SQLMenace's answer has been accepted, there is one important <code>SET</code> option you should be aware of",
        "answer": "Even though SQLMenace's answer has been accepted, there is one important <code>SET</code> option you should be aware of SET DATEFIRST DATENAME will return correct date <em>name</em> but not the same DATEPART value if the first day of week has been changed as illustrated below.",
        "summary": "Even though SQLMenace's answer has been accepted, there is one important <code>SET</code> option you should be aware of"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want something super simple:",
        "output": "If you want something super simple:",
        "answer": "If you want something super simple:",
        "summary": "If you want something super simple:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For BIFF .xls files For Excel2007 and above .xlsx files",
        "output": "For BIFF .xls files For Excel2007 and above .xlsx files",
        "answer": "For BIFF .xls files For Excel2007 and above .xlsx files",
        "summary": "For BIFF .xls files For Excel2007 and above .xlsx files"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your code (or some code called by you) is making a call to a COM method which is returning an unknown value. If you can find that then you're half way there. You could try breaking when the exception is thrown. Go to Debug > Exceptions... and use the Find... option to locate <code>System.Runtime.InteropServices.COMException</code>. Tick the option to break when it's thrown and then debug your application. Hopefully it will break somewhere meaningful and you'll be able to trace back and find the source of the error.",
        "output": "You could try breaking when the exception is thrown. Go to Debug > Exceptions... and use the Find... option to locate <code>System.Runtime.InteropServices.COMException</code>. Tick the option to break when it's thrown and then debug your application.",
        "answer": "Your code (or some code called by you) is making a call to a COM method which is returning an unknown value. If you can find that then you're half way there. You could try breaking when the exception is thrown. Go to Debug > Exceptions... and use the Find... option to locate <code>System.Runtime.InteropServices.COMException</code>. Tick the option to break when it's thrown and then debug your application. Hopefully it will break somewhere meaningful and you'll be able to trace back and find the source of the error.",
        "summary": "You could try breaking when the exception is thrown. Go to Debug > Exceptions... and use the Find... option to locate <code>System.Runtime.InteropServices.COMException</code>. Tick the option to break when it's thrown and then debug your application."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your regex pattern should have the g modifier: BIGBLOCK notice the g at the end. it tells the replacer to do a global replace. Also you dont need to use the RegExp object you can construct your pattern as above. Example pattern: BIGBLOCK a pattern is always surrounded by / on either side - with modifiers after the final /, the g modifier being the global. <strong>EDIT:</strong> Why does it matter if pattern is a variable? In your case it would function like this (notice that pattern is still a variable): BIGBLOCK But you would need to change your replace function to this: BIGBLOCK",
        "output": "Your regex pattern should have the g modifier: BIGBLOCK notice the g at the end. it tells the replacer to do a global replace. But you would need to change your replace function to this: BIGBLOCK",
        "answer": "Your regex pattern should have the g modifier: BIGBLOCK notice the g at the end. it tells the replacer to do a global replace. Also you dont need to use the RegExp object you can construct your pattern as above. Example pattern: BIGBLOCK a pattern is always surrounded by / on either side - with modifiers after the final /, the g modifier being the global. <strong>EDIT:</strong> Why does it matter if pattern is a variable? In your case it would function like this (notice that pattern is still a variable): BIGBLOCK But you would need to change your replace function to this: BIGBLOCK",
        "summary": "Your regex pattern should have the g modifier: BIGBLOCK notice the g at the end. it tells the replacer to do a global replace. But you would need to change your replace function to this: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Directly from the (old) Python documentation (recipes for itertools): The current version, as suggested by J.F.Sebastian: I guess Guido's time machine worksÃ©ÂÂ¥Ã¦ÂÂorkedÃ©ÂÂ¥Ã¦ÂÂill workÃ©ÂÂ¥Ã¦ÂÂill have workedÃ©ÂÂ¥Ã¦ÂÂas working again. These solutions work because <code>[iter(iterable)]*n</code> (or the equivalent in the earlier version) creates <em>one</em> iterator, repeated <code>n</code> times in the list. <code>izip_longest</code> then effectively performs a round-robin of \"each\" iterator; because this is the same iterator, it is advanced by each such call, resulting in each such zip-roundrobin generating one tuple of <code>n</code> items.",
        "output": "I guess Guido's time machine worksÃ©ÂÂ¥Ã¦ÂÂorkedÃ©ÂÂ¥Ã¦ÂÂill workÃ©ÂÂ¥Ã¦ÂÂill have workedÃ©ÂÂ¥Ã¦ÂÂas working again. These solutions work because <code>[iter(iterable)]*n</code> (or the equivalent in the earlier version) creates <em>one</em> iterator, repeated <code>n</code> times in the list.",
        "answer": "Directly from the (old) Python documentation (recipes for itertools): The current version, as suggested by J.F.Sebastian: I guess Guido's time machine worksÃ©ÂÂ¥Ã¦ÂÂorkedÃ©ÂÂ¥Ã¦ÂÂill workÃ©ÂÂ¥Ã¦ÂÂill have workedÃ©ÂÂ¥Ã¦ÂÂas working again. These solutions work because <code>[iter(iterable)]*n</code> (or the equivalent in the earlier version) creates <em>one</em> iterator, repeated <code>n</code> times in the list. <code>izip_longest</code> then effectively performs a round-robin of \"each\" iterator; because this is the same iterator, it is advanced by each such call, resulting in each such zip-roundrobin generating one tuple of <code>n</code> items.",
        "summary": "I guess Guido's time machine worksÃ©ÂÂ¥Ã¦ÂÂorkedÃ©ÂÂ¥Ã¦ÂÂill workÃ©ÂÂ¥Ã¦ÂÂill have workedÃ©ÂÂ¥Ã¦ÂÂas working again. These solutions work because <code>[iter(iterable)]*n</code> (or the equivalent in the earlier version) creates <em>one</em> iterator, repeated <code>n</code> times in the list."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>&lt;select&gt;</code> element is generated by the application and styling is not part of the CSS/HTML spec. You would have to fake it with your own DIV and overlay it on top of the existing one, or build your own control emulating the same functionality.",
        "output": "You would have to fake it with your own DIV and overlay it on top of the existing one, or build your own control emulating the same functionality.",
        "answer": "The <code>&lt;select&gt;</code> element is generated by the application and styling is not part of the CSS/HTML spec. You would have to fake it with your own DIV and overlay it on top of the existing one, or build your own control emulating the same functionality.",
        "summary": "You would have to fake it with your own DIV and overlay it on top of the existing one, or build your own control emulating the same functionality."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Make the destructor virtual whenever your class is polymorphic.",
        "output": "Make the destructor virtual whenever your class is polymorphic.",
        "answer": "Make the destructor virtual whenever your class is polymorphic.",
        "summary": "Make the destructor virtual whenever your class is polymorphic."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have had something like this before, and what we found was that the collation between 2 tables were different. Check that these are the same.",
        "output": "I have had something like this before, and what we found was that the collation between 2 tables were different.",
        "answer": "I have had something like this before, and what we found was that the collation between 2 tables were different. Check that these are the same.",
        "summary": "I have had something like this before, and what we found was that the collation between 2 tables were different."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVP is not necessarily a scenario where the View is in charge (see Taligent's MVP for example). I find it unfortunate that people are still preaching this as a pattern (View in charge) as opposed to an anti-pattern as it contradicts \"It's just a view\" (Pragmatic Programmer). \"It's just a view\" states that the final view shown to the user is a secondary concern of the application. Microsoft's MVP pattern renders re-use of Views much more difficult and conveniently excuses Microsoft's designer from encouraging bad practice. To be perfectly frank, I think the underlying concerns of MVC hold true for any MVP implementation and the differences are almost entirely semantic. As long as you are following separation of concerns between the view (that displays the data), the controller (that initialises and controls user interaction) and the model (the underlying data and/or services)) then you are acheiving the benefits of MVC. If you are acheiving the benefits then who really cares whether your pattern is MVC, MVP or Supervising Controller? The only real pattern remains as MVC, the rest are just differing flavours of it. Consider this highly exciting article that comprehensively lists a number of these differing implementations. You may note that they're all basically doing the same thing but slightly differently. I personally think MVP has only been recently re-introduced as a catchy term to either reduce arguments between semantic bigots who argue whether something is truly MVC or not or to justify Microsofts Rapid Application Development tools. Neither of these reasons in my books justify its existence as a separate design pattern.",
        "output": "To be perfectly frank, I think the underlying concerns of MVC hold true for any MVP implementation and the differences are almost entirely semantic.",
        "answer": "MVP is not necessarily a scenario where the View is in charge (see Taligent's MVP for example). I find it unfortunate that people are still preaching this as a pattern (View in charge) as opposed to an anti-pattern as it contradicts \"It's just a view\" (Pragmatic Programmer). \"It's just a view\" states that the final view shown to the user is a secondary concern of the application. Microsoft's MVP pattern renders re-use of Views much more difficult and conveniently excuses Microsoft's designer from encouraging bad practice. To be perfectly frank, I think the underlying concerns of MVC hold true for any MVP implementation and the differences are almost entirely semantic. As long as you are following separation of concerns between the view (that displays the data), the controller (that initialises and controls user interaction) and the model (the underlying data and/or services)) then you are acheiving the benefits of MVC. If you are acheiving the benefits then who really cares whether your pattern is MVC, MVP or Supervising Controller? The only real pattern remains as MVC, the rest are just differing flavours of it. Consider this highly exciting article that comprehensively lists a number of these differing implementations. You may note that they're all basically doing the same thing but slightly differently. I personally think MVP has only been recently re-introduced as a catchy term to either reduce arguments between semantic bigots who argue whether something is truly MVC or not or to justify Microsofts Rapid Application Development tools. Neither of these reasons in my books justify its existence as a separate design pattern.",
        "summary": "To be perfectly frank, I think the underlying concerns of MVC hold true for any MVP implementation and the differences are almost entirely semantic."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n REM. > empty.file",
        "output": "REM. > empty.file",
        "answer": "REM. > empty.file",
        "summary": "REM. > empty.file"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Cast the integers to varchar first!",
        "output": "Cast the integers to varchar first!",
        "answer": "Cast the integers to varchar first!",
        "summary": "Cast the integers to varchar first!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Virtual destructors are useful when you can delete an instance of a derived class through a pointer to base class: Here, you'll notice that I didn't declare Base's destructor to be <code>virtual</code>. Now, let's have a look at the following snippet: Since Base's destructor is not <code>virtual</code> and <code>b</code> is a <code>Base*</code> pointing to a <code>Derived</code> object, <code>delete b</code> has undefined behaviour: [In <code>delete b</code>], if the static type of the  object to be deleted is different from its dynamic type, the static  type shall be a base class of the dynamic type of the object to be  deleted and <strong>the static type shall have a virtual destructor or the  behavior is undefined</strong>. In most implementations, the call to the destructor will be resolved like any non-virtual code, meaning that the destructor of the base class will be called but not the one of the derived class, resulting in a resources leak. To sum up, always make base classes' destructors <code>virtual</code> when they're meant to be manipulated polymorphically. If you want to prevent the deletion of an instance through a base class pointer, you can make the base class destructor protected and nonvirtual; by doing so, the compiler won't let you call <code>delete</code> on a base class pointer. You can learn more about virtuality and virtual base class destructor in this article from Herb Sutter.",
        "output": "Virtual destructors are useful when you can delete an instance of a derived class through a pointer to base class: [In <code>delete b</code>], if the static type of the  object to be deleted is different from its dynamic type, the static  type shall be a base class of the dynamic type of the object to be  deleted and <strong>the static type shall have a virtual destructor or the  behavior is undefined</strong>. To sum up, always make base classes' destructors <code>virtual</code> when they're meant to be manipulated polymorphically.",
        "answer": "Virtual destructors are useful when you can delete an instance of a derived class through a pointer to base class: Here, you'll notice that I didn't declare Base's destructor to be <code>virtual</code>. Now, let's have a look at the following snippet: Since Base's destructor is not <code>virtual</code> and <code>b</code> is a <code>Base*</code> pointing to a <code>Derived</code> object, <code>delete b</code> has undefined behaviour: [In <code>delete b</code>], if the static type of the  object to be deleted is different from its dynamic type, the static  type shall be a base class of the dynamic type of the object to be  deleted and <strong>the static type shall have a virtual destructor or the  behavior is undefined</strong>. In most implementations, the call to the destructor will be resolved like any non-virtual code, meaning that the destructor of the base class will be called but not the one of the derived class, resulting in a resources leak. To sum up, always make base classes' destructors <code>virtual</code> when they're meant to be manipulated polymorphically. If you want to prevent the deletion of an instance through a base class pointer, you can make the base class destructor protected and nonvirtual; by doing so, the compiler won't let you call <code>delete</code> on a base class pointer. You can learn more about virtuality and virtual base class destructor in this article from Herb Sutter.",
        "summary": "Virtual destructors are useful when you can delete an instance of a derived class through a pointer to base class: [In <code>delete b</code>], if the static type of the  object to be deleted is different from its dynamic type, the static  type shall be a base class of the dynamic type of the object to be  deleted and <strong>the static type shall have a virtual destructor or the  behavior is undefined</strong>. To sum up, always make base classes' destructors <code>virtual</code> when they're meant to be manipulated polymorphically."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Sometime last year I evaluated both git and hg for my own use, and decided to go with hg. I felt it looked like a cleaner solution, and worked better on more platforms at the time. It was mostly a toss-up, though. More recently, I started using git because of git-svn and the ability to act as a Subversion client. This won me over and I've now switched completely to git. I think it's got a slightly higher learning curve (especially if you need to poke around the insides), but it really is a great system. I'm going to go read those two comparison articles that John posted now.",
        "output": "More recently, I started using git because of git-svn and the ability to act as a Subversion client. I think it's got a slightly higher learning curve (especially if you need to poke around the insides), but it really is a great system.",
        "answer": "Sometime last year I evaluated both git and hg for my own use, and decided to go with hg. I felt it looked like a cleaner solution, and worked better on more platforms at the time. It was mostly a toss-up, though. More recently, I started using git because of git-svn and the ability to act as a Subversion client. This won me over and I've now switched completely to git. I think it's got a slightly higher learning curve (especially if you need to poke around the insides), but it really is a great system. I'm going to go read those two comparison articles that John posted now.",
        "summary": "More recently, I started using git because of git-svn and the ability to act as a Subversion client. I think it's got a slightly higher learning curve (especially if you need to poke around the insides), but it really is a great system."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n AFAIK you would have to do a .load() function here as apposed to the .ajax(), but you could use jQuery setTimeout to keep it live (ish)",
        "output": "AFAIK you would have to do a .load() function here as apposed to the .ajax(), but you could use jQuery setTimeout to keep it live (ish)",
        "answer": "AFAIK you would have to do a .load() function here as apposed to the .ajax(), but you could use jQuery setTimeout to keep it live (ish)",
        "summary": "AFAIK you would have to do a .load() function here as apposed to the .ajax(), but you could use jQuery setTimeout to keep it live (ish)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Something in the lines of This groups all white spaces as a delimiter. So if I have the string: This should yield the strings <code>\"Hello\"</code> and <code>\"World\"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>. As VonC pointed out, the backslash should be escaped, because Java would first try to escape the string to a special character, and send <em>that</em> to be parsed. What you want, is the literal <code>\"\\s\"</code>, which means, you need to pass <code>\"\\\\s\"</code>. It can get a bit confusing. The <code>\\\\s</code> is equivalent to <code>[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]</code>",
        "output": "This should yield the strings <code>\"Hello\"</code> and <code>\"World\"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>. What you want, is the literal <code>\"\\s\"</code>, which means, you need to pass <code>\"\\\\s\"</code>. The <code>\\\\s</code> is equivalent to <code>[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]</code>",
        "answer": "Something in the lines of This groups all white spaces as a delimiter. So if I have the string: This should yield the strings <code>\"Hello\"</code> and <code>\"World\"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>. As VonC pointed out, the backslash should be escaped, because Java would first try to escape the string to a special character, and send <em>that</em> to be parsed. What you want, is the literal <code>\"\\s\"</code>, which means, you need to pass <code>\"\\\\s\"</code>. It can get a bit confusing. The <code>\\\\s</code> is equivalent to <code>[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]</code>",
        "summary": "This should yield the strings <code>\"Hello\"</code> and <code>\"World\"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>. What you want, is the literal <code>\"\\s\"</code>, which means, you need to pass <code>\"\\\\s\"</code>. The <code>\\\\s</code> is equivalent to <code>[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another example of a reasonable use in which the object is immediately disposed: BIGBLOCK",
        "output": "Another example of a reasonable use in which the object is immediately disposed:",
        "answer": "Another example of a reasonable use in which the object is immediately disposed: BIGBLOCK",
        "summary": "Another example of a reasonable use in which the object is immediately disposed:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use TidyNet.Tidy to convert the HTML to XHTML, and then use an XML parser. Another alternative would be to use the builtin engine mshtml: This allows you to use javascript-like functions like getElementById()",
        "output": "You could use TidyNet.Tidy to convert the HTML to XHTML, and then use an XML parser. Another alternative would be to use the builtin engine mshtml:",
        "answer": "You could use TidyNet.Tidy to convert the HTML to XHTML, and then use an XML parser. Another alternative would be to use the builtin engine mshtml: This allows you to use javascript-like functions like getElementById()",
        "summary": "You could use TidyNet.Tidy to convert the HTML to XHTML, and then use an XML parser. Another alternative would be to use the builtin engine mshtml:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use this on my ubuntu machines: This doesn't work.",
        "output": "I use this on my ubuntu machines:",
        "answer": "I use this on my ubuntu machines: This doesn't work.",
        "summary": "I use this on my ubuntu machines:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n First, Latin-1 is the same as ISO-8859-1, so, the default was already OK for you. Right? You successfully set the encoding to ISO-8859-1 with your command line parameter. You also set it programmatically to \"Latin-1\", but, that's not a recognized value of a file encoding for Java. See http://java.sun.com/javase/6/docs/technotes/guides/intl/encoding.doc.html When you do that, looks like Charset resets to UTF-8, from looking at the source. That at least explains most of the behavior. I don't know why OutputStreamWriter shows ISO8859_1. It delegates to closed-source sun.misc. * classes. I'm guessing it isn't quite dealing with encoding via the same mechanism, which is weird. But of course you should always be specifying what encoding you mean in this code. I'd never rely on the platform default.",
        "output": "First, Latin-1 is the same as ISO-8859-1, so, the default was already OK for you. When you do that, looks like Charset resets to UTF-8, from looking at the source. That at least explains most of the behavior. I'm guessing it isn't quite dealing with encoding via the same mechanism, which is weird.",
        "answer": "First, Latin-1 is the same as ISO-8859-1, so, the default was already OK for you. Right? You successfully set the encoding to ISO-8859-1 with your command line parameter. You also set it programmatically to \"Latin-1\", but, that's not a recognized value of a file encoding for Java. See http://java.sun.com/javase/6/docs/technotes/guides/intl/encoding.doc.html When you do that, looks like Charset resets to UTF-8, from looking at the source. That at least explains most of the behavior. I don't know why OutputStreamWriter shows ISO8859_1. It delegates to closed-source sun.misc. * classes. I'm guessing it isn't quite dealing with encoding via the same mechanism, which is weird. But of course you should always be specifying what encoding you mean in this code. I'd never rely on the platform default.",
        "summary": "First, Latin-1 is the same as ISO-8859-1, so, the default was already OK for you. When you do that, looks like Charset resets to UTF-8, from looking at the source. That at least explains most of the behavior. I'm guessing it isn't quite dealing with encoding via the same mechanism, which is weird."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In your 'encrypt' method, you should either get rid of the try/catch and instead add a try/catch around where you call encrypt (inside 'actionPerformed') or return null inside the catch within encrypt (that's the second error.",
        "output": "In your 'encrypt' method, you should either get rid of the try/catch and instead add a try/catch around where you call encrypt (inside 'actionPerformed') or return null inside the catch within encrypt (that's the second error.",
        "answer": "In your 'encrypt' method, you should either get rid of the try/catch and instead add a try/catch around where you call encrypt (inside 'actionPerformed') or return null inside the catch within encrypt (that's the second error.",
        "summary": "In your 'encrypt' method, you should either get rid of the try/catch and instead add a try/catch around where you call encrypt (inside 'actionPerformed') or return null inside the catch within encrypt (that's the second error."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n \"using\" can also be used to resolve name space conflicts. See http://www.davidarno.org/c-howtos/aliases-overcoming-name-conflicts/ for a short tutorial I wrote on the subject.",
        "output": "\"using\" can also be used to resolve name space conflicts.",
        "answer": "\"using\" can also be used to resolve name space conflicts. See http://www.davidarno.org/c-howtos/aliases-overcoming-name-conflicts/ for a short tutorial I wrote on the subject.",
        "summary": "\"using\" can also be used to resolve name space conflicts."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Unless you plan on creating your own drop down list (and not using a standard library drop down list), you are stuck. The DDL control's look is going to be based upon the system you are running and/or the browser that is rendering the output.",
        "output": "Unless you plan on creating your own drop down list (and not using a standard library drop down list), you are stuck. The DDL control's look is going to be based upon the system you are running and/or the browser that is rendering the output.",
        "answer": "Unless you plan on creating your own drop down list (and not using a standard library drop down list), you are stuck. The DDL control's look is going to be based upon the system you are running and/or the browser that is rendering the output.",
        "summary": "Unless you plan on creating your own drop down list (and not using a standard library drop down list), you are stuck. The DDL control's look is going to be based upon the system you are running and/or the browser that is rendering the output."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Even better for Linux: <code>/usr/bin/time</code> Normally, just <code>time</code> is a simpler shell builtin that shadows the more capable <code>/usr/bin/time</code>.",
        "output": "Even better for Linux: <code>/usr/bin/time</code> Normally, just <code>time</code> is a simpler shell builtin that shadows the more capable <code>/usr/bin/time</code>.",
        "answer": "Even better for Linux: <code>/usr/bin/time</code> Normally, just <code>time</code> is a simpler shell builtin that shadows the more capable <code>/usr/bin/time</code>.",
        "summary": "Even better for Linux: <code>/usr/bin/time</code> Normally, just <code>time</code> is a simpler shell builtin that shadows the more capable <code>/usr/bin/time</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The question would need more details. Do you want just to look at a file (eg. a log file) or to edit it? Do you have more memory than the size of the file you want to load or less? For example, TheGun, a very small text editor written in assembly language, claims to \"<em>not have an effective file size limit and the maximum size that can be loaded into it is determined by available memory and loading speed of the file. [...] It has been speed optimised for both file load and save.</em>\" To abstract the memory limit, I suppose one can use mapped memory. But then, if you need to edit the file, some clever method should be used, like storing in memory the local changes, and applying them chunk by chunk when saving. Might be ineffective in some cases (big search/replace for example).",
        "output": "For example, TheGun, a very small text editor written in assembly language, claims to \"<em>not have an effective file size limit and the maximum size that can be loaded into it is determined by available memory and loading speed of the file. To abstract the memory limit, I suppose one can use mapped memory. But then, if you need to edit the file, some clever method should be used, like storing in memory the local changes, and applying them chunk by chunk when saving.",
        "answer": "The question would need more details. Do you want just to look at a file (eg. a log file) or to edit it? Do you have more memory than the size of the file you want to load or less? For example, TheGun, a very small text editor written in assembly language, claims to \"<em>not have an effective file size limit and the maximum size that can be loaded into it is determined by available memory and loading speed of the file. [...] It has been speed optimised for both file load and save.</em>\" To abstract the memory limit, I suppose one can use mapped memory. But then, if you need to edit the file, some clever method should be used, like storing in memory the local changes, and applying them chunk by chunk when saving. Might be ineffective in some cases (big search/replace for example).",
        "summary": "For example, TheGun, a very small text editor written in assembly language, claims to \"<em>not have an effective file size limit and the maximum size that can be loaded into it is determined by available memory and loading speed of the file. To abstract the memory limit, I suppose one can use mapped memory. But then, if you need to edit the file, some clever method should be used, like storing in memory the local changes, and applying them chunk by chunk when saving."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Don't know about fastest, but the simplest is to take the square root in the normal fashion, multiply the result by itself, and see if it matches your original value. Since we're talking integers here, the fasted would probably involve a collection where you can just make a lookup.",
        "output": "Don't know about fastest, but the simplest is to take the square root in the normal fashion, multiply the result by itself, and see if it matches your original value.",
        "answer": "Don't know about fastest, but the simplest is to take the square root in the normal fashion, multiply the result by itself, and see if it matches your original value. Since we're talking integers here, the fasted would probably involve a collection where you can just make a lookup.",
        "summary": "Don't know about fastest, but the simplest is to take the square root in the normal fashion, multiply the result by itself, and see if it matches your original value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>EDIT</strong>: This is now part of MoreLINQ. What you need is a \"distinct-by\" effectively. I don't believe it's part of LINQ as it stands, although it's fairly easy to write: So to find the distinct values using just the <code>Id</code> property, you could use: And to use multiple properties, you can use anonymous types, which implement equality appropriately: Untested, but it should work (and it now at least compiles). It assumes the default comparer for the keys though - if you want to pass in an equality comparer, just pass it on to the <code>HashSet</code> constructor.",
        "output": "<strong>EDIT</strong>: This is now part of MoreLINQ. What you need is a \"distinct-by\" effectively. So to find the distinct values using just the <code>Id</code> property, you could use: And to use multiple properties, you can use anonymous types, which implement equality appropriately:",
        "answer": "<strong>EDIT</strong>: This is now part of MoreLINQ. What you need is a \"distinct-by\" effectively. I don't believe it's part of LINQ as it stands, although it's fairly easy to write: So to find the distinct values using just the <code>Id</code> property, you could use: And to use multiple properties, you can use anonymous types, which implement equality appropriately: Untested, but it should work (and it now at least compiles). It assumes the default comparer for the keys though - if you want to pass in an equality comparer, just pass it on to the <code>HashSet</code> constructor.",
        "summary": "<strong>EDIT</strong>: This is now part of MoreLINQ. What you need is a \"distinct-by\" effectively. So to find the distinct values using just the <code>Id</code> property, you could use: And to use multiple properties, you can use anonymous types, which implement equality appropriately:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Maybe something like this could work as well? I haven't tried doing something with \"this\", so I don't know if it works or not.",
        "output": "Maybe something like this could work as well?",
        "answer": "Maybe something like this could work as well? I haven't tried doing something with \"this\", so I don't know if it works or not.",
        "summary": "Maybe something like this could work as well?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An index is used for several different reasons. The main reason is to speed up querying so that you can get rows or sort rows faster. Another reason is to define a primary-key or unique index which will guarantee that no other columns have the same values.",
        "output": "An index is used for several different reasons. The main reason is to speed up querying so that you can get rows or sort rows faster. Another reason is to define a primary-key or unique index which will guarantee that no other columns have the same values.",
        "answer": "An index is used for several different reasons. The main reason is to speed up querying so that you can get rows or sort rows faster. Another reason is to define a primary-key or unique index which will guarantee that no other columns have the same values.",
        "summary": "An index is used for several different reasons. The main reason is to speed up querying so that you can get rows or sort rows faster. Another reason is to define a primary-key or unique index which will guarantee that no other columns have the same values."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In response to Mike B, I prefer to use 'class' as, within a template, 'typename' has an overloaded meaning, but 'class' does not. Take this checked integer type example: BIGBLOCK <code>larger_integer_t</code> is a dependent name, so it requires 'typename' to preceed it so that the parser can recognize that <code>larger_integer_t</code> is a type. <strong>class</strong>, on the otherhand, has no such overloaded meaning. That... or I'm just lazy at heart. I type 'class' far more often than 'typename', and thus find it much easier to type. Or it could be a sign that I write too much OO code.",
        "output": "In response to Mike B, I prefer to use 'class' as, within a template, 'typename' has an overloaded meaning, but 'class' does not. <code>larger_integer_t</code> is a dependent name, so it requires 'typename' to preceed it so that the parser can recognize that <code>larger_integer_t</code> is a type. <strong>class</strong>, on the otherhand, has no such overloaded meaning.",
        "answer": "In response to Mike B, I prefer to use 'class' as, within a template, 'typename' has an overloaded meaning, but 'class' does not. Take this checked integer type example: BIGBLOCK <code>larger_integer_t</code> is a dependent name, so it requires 'typename' to preceed it so that the parser can recognize that <code>larger_integer_t</code> is a type. <strong>class</strong>, on the otherhand, has no such overloaded meaning. That... or I'm just lazy at heart. I type 'class' far more often than 'typename', and thus find it much easier to type. Or it could be a sign that I write too much OO code.",
        "summary": "In response to Mike B, I prefer to use 'class' as, within a template, 'typename' has an overloaded meaning, but 'class' does not. <code>larger_integer_t</code> is a dependent name, so it requires 'typename' to preceed it so that the parser can recognize that <code>larger_integer_t</code> is a type. <strong>class</strong>, on the otherhand, has no such overloaded meaning."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A metaclass is the class of a class. Like a class defines how an instance of the class behaves, a metaclass defines how a class behaves. A class is an instance of a metaclass. While in Python you can use arbitrary callables for metaclasses (like Jerub shows), the more useful approach is actually to make it an actual class itself. <code>type</code> is the usual metaclass in Python. In case you're wondering, yes, <code>type</code> is itself a class, and it is its own type. You won't be able to recreate something like <code>type</code> purely in Python, but Python cheats a little. To create your own metaclass in Python you really just want to subclass <code>type</code>. A metaclass is most commonly used as a class-factory. Like you create an instance of the class by calling the class, Python creates a new class (when it executes the 'class' statement) by calling the metaclass. Combined with the normal <code>__init__</code> and <code>__new__</code> methods, metaclasses therefore allow you to do 'extra things' when creating a class, like registering the new class with some registry, or even replace the class with something else entirely. When the <code>class</code> statement is executed, Python first executes the body of the <code>class</code> statement as a normal block of code. The resulting namespace (a dict) holds the attributes of the class-to-be. The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the <code>__metaclass__</code> attribute of the class-to-be (if any) or the <code>__metaclass__</code> global variable. The metaclass is then called with the name, bases and attributes of the class to instantiate it. However, metaclasses actually define the <em>type</em> of a class, not just a factory for it, so you can do much more with them. You can, for instance, define normal methods on the metaclass. These metaclass-methods are like classmethods, in that they can be called on the class without an instance, but they are also not like classmethods in that they cannot be called on an instance of the class. <code>type.__subclasses__()</code> is an example of a method on the <code>type</code> metaclass. You can also define the normal 'magic' methods, like <code>__add__</code>, <code>__iter__</code> and <code>__getattr__</code>, to implement or change how the class behaves. Here's an aggregated example of the bits and pieces:",
        "output": "A metaclass is the class of a class. Like a class defines how an instance of the class behaves, a metaclass defines how a class behaves. A class is an instance of a metaclass. To create your own metaclass in Python you really just want to subclass <code>type</code>. The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the <code>__metaclass__</code> attribute of the class-to-be (if any) or the <code>__metaclass__</code> global variable.",
        "answer": "A metaclass is the class of a class. Like a class defines how an instance of the class behaves, a metaclass defines how a class behaves. A class is an instance of a metaclass. While in Python you can use arbitrary callables for metaclasses (like Jerub shows), the more useful approach is actually to make it an actual class itself. <code>type</code> is the usual metaclass in Python. In case you're wondering, yes, <code>type</code> is itself a class, and it is its own type. You won't be able to recreate something like <code>type</code> purely in Python, but Python cheats a little. To create your own metaclass in Python you really just want to subclass <code>type</code>. A metaclass is most commonly used as a class-factory. Like you create an instance of the class by calling the class, Python creates a new class (when it executes the 'class' statement) by calling the metaclass. Combined with the normal <code>__init__</code> and <code>__new__</code> methods, metaclasses therefore allow you to do 'extra things' when creating a class, like registering the new class with some registry, or even replace the class with something else entirely. When the <code>class</code> statement is executed, Python first executes the body of the <code>class</code> statement as a normal block of code. The resulting namespace (a dict) holds the attributes of the class-to-be. The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the <code>__metaclass__</code> attribute of the class-to-be (if any) or the <code>__metaclass__</code> global variable. The metaclass is then called with the name, bases and attributes of the class to instantiate it. However, metaclasses actually define the <em>type</em> of a class, not just a factory for it, so you can do much more with them. You can, for instance, define normal methods on the metaclass. These metaclass-methods are like classmethods, in that they can be called on the class without an instance, but they are also not like classmethods in that they cannot be called on an instance of the class. <code>type.__subclasses__()</code> is an example of a method on the <code>type</code> metaclass. You can also define the normal 'magic' methods, like <code>__add__</code>, <code>__iter__</code> and <code>__getattr__</code>, to implement or change how the class behaves. Here's an aggregated example of the bits and pieces:",
        "summary": "A metaclass is the class of a class. Like a class defines how an instance of the class behaves, a metaclass defines how a class behaves. A class is an instance of a metaclass. To create your own metaclass in Python you really just want to subclass <code>type</code>. The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the <code>__metaclass__</code> attribute of the class-to-be (if any) or the <code>__metaclass__</code> global variable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Materialized views are disk based and are updated periodically based upon the query definition. Views are virtual only and run the query definition each time they are accessed.",
        "output": "Materialized views are disk based and are updated periodically based upon the query definition. Views are virtual only and run the query definition each time they are accessed.",
        "answer": "Materialized views are disk based and are updated periodically based upon the query definition. Views are virtual only and run the query definition each time they are accessed.",
        "summary": "Materialized views are disk based and are updated periodically based upon the query definition. Views are virtual only and run the query definition each time they are accessed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>List comprehensions</strong> list comprehensions Compare the more traditional (without list comprehension): to:",
        "output": "<strong>List comprehensions</strong>",
        "answer": "<strong>List comprehensions</strong> list comprehensions Compare the more traditional (without list comprehension): to:",
        "summary": "<strong>List comprehensions</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>attr_accessor</code> is very simple: is a shortcut for: it is nothing more than a getter/setter for an object",
        "output": "it is nothing more than a getter/setter for an object",
        "answer": "<code>attr_accessor</code> is very simple: is a shortcut for: it is nothing more than a getter/setter for an object",
        "summary": "it is nothing more than a getter/setter for an object"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Your <code>CustomValidator</code> will only fire when the <code>TextBox</code> isn't empty. If you need to ensure that it's not empty then you'll need a <code>RequiredFieldValidator</code> too. <strong>Note:</strong> If the input control is empty,  no validation functions are called and  validation succeeds. Use a  RequiredFieldValidator control to  require the user to enter data in the  input control. <strong>EDIT:</strong> If your <code>CustomValidator</code> specifies the <code>ControlToValidate</code> attribute (and your original example does) then your validation functions will only be called when the control isn't empty. If you don't specify <code>ControlToValidate</code> then your validation functions will be called every time. This opens up a second possible solution to the problem. Rather than using a separate <code>RequiredFieldValidator</code>, you could omit the <code>ControlToValidate</code> attribute from the <code>CustomValidator</code> and setup your validation functions to do something like this: Client Side code (Javascript): Server side code (C#):",
        "output": "Your <code>CustomValidator</code> will only fire when the <code>TextBox</code> isn't empty. If you need to ensure that it's not empty then you'll need a <code>RequiredFieldValidator</code> too. Use a  RequiredFieldValidator control to  require the user to enter data in the  input control. If your <code>CustomValidator</code> specifies the <code>ControlToValidate</code> attribute (and your original example does) then your validation functions will only be called when the control isn't empty. If you don't specify <code>ControlToValidate</code> then your validation functions will be called every time. Rather than using a separate <code>RequiredFieldValidator</code>, you could omit the <code>ControlToValidate</code> attribute from the <code>CustomValidator</code> and setup your validation functions to do something like this:",
        "answer": "Your <code>CustomValidator</code> will only fire when the <code>TextBox</code> isn't empty. If you need to ensure that it's not empty then you'll need a <code>RequiredFieldValidator</code> too. <strong>Note:</strong> If the input control is empty,  no validation functions are called and  validation succeeds. Use a  RequiredFieldValidator control to  require the user to enter data in the  input control. <strong>EDIT:</strong> If your <code>CustomValidator</code> specifies the <code>ControlToValidate</code> attribute (and your original example does) then your validation functions will only be called when the control isn't empty. If you don't specify <code>ControlToValidate</code> then your validation functions will be called every time. This opens up a second possible solution to the problem. Rather than using a separate <code>RequiredFieldValidator</code>, you could omit the <code>ControlToValidate</code> attribute from the <code>CustomValidator</code> and setup your validation functions to do something like this: Client Side code (Javascript): Server side code (C#):",
        "summary": "Your <code>CustomValidator</code> will only fire when the <code>TextBox</code> isn't empty. If you need to ensure that it's not empty then you'll need a <code>RequiredFieldValidator</code> too. Use a  RequiredFieldValidator control to  require the user to enter data in the  input control. If your <code>CustomValidator</code> specifies the <code>ControlToValidate</code> attribute (and your original example does) then your validation functions will only be called when the control isn't empty. If you don't specify <code>ControlToValidate</code> then your validation functions will be called every time. Rather than using a separate <code>RequiredFieldValidator</code>, you could omit the <code>ControlToValidate</code> attribute from the <code>CustomValidator</code> and setup your validation functions to do something like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's no built-in ability to <code>break</code> in <code>forEach</code>. To interrupt execution you would have to throw an exception of some sort. eg. <code>var BreakException = {}; try { [1, 2, 3].forEach(function(el) { console.log(el); if (el === 2) throw BreakException; }); } catch (e) { if (e !== BreakException) throw e; }</code> JavaScript exceptions aren't terribly pretty. A traditional <code>for</code> loop might be more appropriate if you really need to <code>break</code> inside it. Use <code>Array#some</code> Instead, use <code>Array#some</code>: <code>[1, 2, 3].some(function(el) { console.log(el); return el === 2; });</code> This works because <code>some</code> returns <code>true</code> as soon as any of the callbacks, executed in array order, return <code>true</code>, short-circuiting the execution of the rest. <code>some</code>, its inverse <code>every</code> (which will stop on a <code>return false</code>), and <code>forEach</code> are all ECMAScript Fifth Edition methods which will need to be added to the <code>Array.prototype</code> on browsers where they're missing.",
        "output": "There's no built-in ability to <code>break</code> in <code>forEach</code>. To interrupt execution you would have to throw an exception of some sort. A traditional <code>for</code> loop might be more appropriate if you really need to <code>break</code> inside it.",
        "answer": "There's no built-in ability to <code>break</code> in <code>forEach</code>. To interrupt execution you would have to throw an exception of some sort. eg. <code>var BreakException = {}; try { [1, 2, 3].forEach(function(el) { console.log(el); if (el === 2) throw BreakException; }); } catch (e) { if (e !== BreakException) throw e; }</code> JavaScript exceptions aren't terribly pretty. A traditional <code>for</code> loop might be more appropriate if you really need to <code>break</code> inside it. Use <code>Array#some</code> Instead, use <code>Array#some</code>: <code>[1, 2, 3].some(function(el) { console.log(el); return el === 2; });</code> This works because <code>some</code> returns <code>true</code> as soon as any of the callbacks, executed in array order, return <code>true</code>, short-circuiting the execution of the rest. <code>some</code>, its inverse <code>every</code> (which will stop on a <code>return false</code>), and <code>forEach</code> are all ECMAScript Fifth Edition methods which will need to be added to the <code>Array.prototype</code> on browsers where they're missing.",
        "summary": "There's no built-in ability to <code>break</code> in <code>forEach</code>. To interrupt execution you would have to throw an exception of some sort. A traditional <code>for</code> loop might be more appropriate if you really need to <code>break</code> inside it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n An easy way of reaching a first intuition about what it's like is to imagine your program is a spreadsheet and all of your variables are cells. If any of the cells in a spreadsheet change, any cells that refer to that cell change as well. It's just the same with FRP. Now imagine that some of the cells change on their own (or rather, are taken from the outside world): in a GUI situation, the position of the mouse would be a good example. That necessarily misses out rather a lot. The metaphor breaks down pretty fast when you actually use a FRP system. For one, there are usually attempts to model discrete events as well (e.g. the mouse being clicked). I'm only putting this here to give you an idea what it's like.",
        "output": "An easy way of reaching a first intuition about what it's like is to imagine your program is a spreadsheet and all of your variables are cells. The metaphor breaks down pretty fast when you actually use a FRP system. For one, there are usually attempts to model discrete events as well (e.g. I'm only putting this here to give you an idea what it's like.",
        "answer": "An easy way of reaching a first intuition about what it's like is to imagine your program is a spreadsheet and all of your variables are cells. If any of the cells in a spreadsheet change, any cells that refer to that cell change as well. It's just the same with FRP. Now imagine that some of the cells change on their own (or rather, are taken from the outside world): in a GUI situation, the position of the mouse would be a good example. That necessarily misses out rather a lot. The metaphor breaks down pretty fast when you actually use a FRP system. For one, there are usually attempts to model discrete events as well (e.g. the mouse being clicked). I'm only putting this here to give you an idea what it's like.",
        "summary": "An easy way of reaching a first intuition about what it's like is to imagine your program is a spreadsheet and all of your variables are cells. The metaphor breaks down pretty fast when you actually use a FRP system. For one, there are usually attempts to model discrete events as well (e.g. I'm only putting this here to give you an idea what it's like."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've made a small improvement to Fedor's code. It basically does the same, but without the (in my opinion) ugly while loop and it always results in a power of two. Kudos to Fedor for making the original solution, I was stuck until I found his, and then I was able to make this one :)",
        "output": "It basically does the same, but without the (in my opinion) ugly while loop and it always results in a power of two.",
        "answer": "I've made a small improvement to Fedor's code. It basically does the same, but without the (in my opinion) ugly while loop and it always results in a power of two. Kudos to Fedor for making the original solution, I was stuck until I found his, and then I was able to make this one :)",
        "summary": "It basically does the same, but without the (in my opinion) ugly while loop and it always results in a power of two."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the ll (el-el) long-long modifier with the u (unsigned) conversion. (Works in windows, GNU).",
        "output": "Use the ll (el-el) long-long modifier with the u (unsigned) conversion.",
        "answer": "Use the ll (el-el) long-long modifier with the u (unsigned) conversion. (Works in windows, GNU).",
        "summary": "Use the ll (el-el) long-long modifier with the u (unsigned) conversion."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Sorry, there is no operation similar to <code>LIKE IN</code> in mysql. If you want to use the LIKE operator without a join, you'll have to do it this way: BIGBLOCK You know, MySQL will not optimize that query, FYI.",
        "output": "If you want to use the LIKE operator without a join, you'll have to do it this way: BIGBLOCK",
        "answer": "Sorry, there is no operation similar to <code>LIKE IN</code> in mysql. If you want to use the LIKE operator without a join, you'll have to do it this way: BIGBLOCK You know, MySQL will not optimize that query, FYI.",
        "summary": "If you want to use the LIKE operator without a join, you'll have to do it this way: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A race condition is a kind of bug, that happens only with certain temporal conditions. Example: Imagine you have two threads, A and B. In Thread A: In Thread B: If thread A is preempted just after having check that object.a is not null, B will do <code>a = 0</code>, and when thread A will gain the processor, it will do a \"divide by zero\". This bug only happen when thread A is preempted just after the if statement, it's very rare, but it can happen.",
        "output": "A race condition is a kind of bug, that happens only with certain temporal conditions.",
        "answer": "A race condition is a kind of bug, that happens only with certain temporal conditions. Example: Imagine you have two threads, A and B. In Thread A: In Thread B: If thread A is preempted just after having check that object.a is not null, B will do <code>a = 0</code>, and when thread A will gain the processor, it will do a \"divide by zero\". This bug only happen when thread A is preempted just after the if statement, it's very rare, but it can happen.",
        "summary": "A race condition is a kind of bug, that happens only with certain temporal conditions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In Java, int is a primitive type and it is not considered an object. Only objects can have a null value. So the answer to your question is no, it can't be null. But it's not that simple, because there are objects that represent most primitive types. The class Integer represents an int value, but it can hold a null value. Depending on your <code>check</code> method, you could be returning an int or an Integer. This behavior is different from some more purely object oriented languages like Ruby, where even \"primitive\" things like ints are considered objects.",
        "output": "In Java, int is a primitive type and it is not considered an object. Only objects can have a null value. The class Integer represents an int value, but it can hold a null value.",
        "answer": "In Java, int is a primitive type and it is not considered an object. Only objects can have a null value. So the answer to your question is no, it can't be null. But it's not that simple, because there are objects that represent most primitive types. The class Integer represents an int value, but it can hold a null value. Depending on your <code>check</code> method, you could be returning an int or an Integer. This behavior is different from some more purely object oriented languages like Ruby, where even \"primitive\" things like ints are considered objects.",
        "summary": "In Java, int is a primitive type and it is not considered an object. Only objects can have a null value. The class Integer represents an int value, but it can hold a null value."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, there is no \"previous sibling\" selector. On a related note, <code>~</code> is for general successor sibling (meaning the element comes after this one, but not necessarily immediately after) and is a CSS3 selector. <code>+</code> is for next sibling and is CSS2.1. See Adjacent sibling combinator from Selectors Level 3 and 5.7 Adjacent sibling selectors from Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification.",
        "output": "No, there is no \"previous sibling\" selector.",
        "answer": "No, there is no \"previous sibling\" selector. On a related note, <code>~</code> is for general successor sibling (meaning the element comes after this one, but not necessarily immediately after) and is a CSS3 selector. <code>+</code> is for next sibling and is CSS2.1. See Adjacent sibling combinator from Selectors Level 3 and 5.7 Adjacent sibling selectors from Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification.",
        "summary": "No, there is no \"previous sibling\" selector."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n First, note that since Java is garbage-collected, it is rare to need to do anything about object destruction. Firstly because you don't usually have any managed resources to free, and secondly because you can't predict when or if it will happen, so it's inappropriate for things that you need to occur \"as soon as nobody is using my object any more\". You can be notified after an object has been destroyed using java.lang.ref.PhantomReference (actually, saying it has been destroyed may be slightly inaccurate, but if a phantom reference to it is queued then it's no longer recoverable, which usually amounts to the same thing). A common use is: Separate out the resource(s) in your class that need to be destructed into another helper object (note that if all you're doing is closing a connection, which is a common case, you don't need to write a new class: the connection to be closed would be the \"helper object\" in that case). When you create your main object, create also a PhantomReference to it. Either have this refer to the new helper object, or set up a map from PhantomReference objects to their corresponding helper objects. After the main object is collected, the PhantomReference is queued (or rather it may be queued - like finalizers there is no guarantee it ever will be, for example if the VM exits then it won't wait). Make sure you're processing its queue (either in a special thread or from time to time). Because of the hard reference to the helper object, the helper object has not yet been collected. So do whatever cleanup you like on the helper object, then discard the PhantomReference and the helper will eventually be collected too. There is also finalize(), which looks like a destructor but doesn't behave like one. It's usually not a good option.",
        "output": "You can be notified after an object has been destroyed using java.lang.ref.PhantomReference (actually, saying it has been destroyed may be slightly inaccurate, but if a phantom reference to it is queued then it's no longer recoverable, which usually amounts to the same thing). There is also finalize(), which looks like a destructor but doesn't behave like one.",
        "answer": "First, note that since Java is garbage-collected, it is rare to need to do anything about object destruction. Firstly because you don't usually have any managed resources to free, and secondly because you can't predict when or if it will happen, so it's inappropriate for things that you need to occur \"as soon as nobody is using my object any more\". You can be notified after an object has been destroyed using java.lang.ref.PhantomReference (actually, saying it has been destroyed may be slightly inaccurate, but if a phantom reference to it is queued then it's no longer recoverable, which usually amounts to the same thing). A common use is: Separate out the resource(s) in your class that need to be destructed into another helper object (note that if all you're doing is closing a connection, which is a common case, you don't need to write a new class: the connection to be closed would be the \"helper object\" in that case). When you create your main object, create also a PhantomReference to it. Either have this refer to the new helper object, or set up a map from PhantomReference objects to their corresponding helper objects. After the main object is collected, the PhantomReference is queued (or rather it may be queued - like finalizers there is no guarantee it ever will be, for example if the VM exits then it won't wait). Make sure you're processing its queue (either in a special thread or from time to time). Because of the hard reference to the helper object, the helper object has not yet been collected. So do whatever cleanup you like on the helper object, then discard the PhantomReference and the helper will eventually be collected too. There is also finalize(), which looks like a destructor but doesn't behave like one. It's usually not a good option.",
        "summary": "You can be notified after an object has been destroyed using java.lang.ref.PhantomReference (actually, saying it has been destroyed may be slightly inaccurate, but if a phantom reference to it is queued then it's no longer recoverable, which usually amounts to the same thing). There is also finalize(), which looks like a destructor but doesn't behave like one."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If all you need is a shallow copy, a really easy way is: BIGBLOCK",
        "output": "If all you need is a shallow copy, a really easy way is:",
        "answer": "If all you need is a shallow copy, a really easy way is: BIGBLOCK",
        "summary": "If all you need is a shallow copy, a really easy way is:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As BalusC mentioned, it would be very useful to post the full stacktrace (always post a full stacktrace, it is useless and frustrating to have only the first lines of a stacktrace). Anyway, you mentioned that your code was working fine and that this problem started suddenly to occur without any code change so I'm wondering if this could be related to you other question Problem with not closing db connection while debugging? Actually, if this problem started while debugging, then I think it is (you ran out of connections). In that case, restart you database server (and follow the suggestions of the other question to avoid this situation).",
        "output": "Anyway, you mentioned that your code was working fine and that this problem started suddenly to occur without any code change so I'm wondering if this could be related to you other question Problem with not closing db connection while debugging?",
        "answer": "As BalusC mentioned, it would be very useful to post the full stacktrace (always post a full stacktrace, it is useless and frustrating to have only the first lines of a stacktrace). Anyway, you mentioned that your code was working fine and that this problem started suddenly to occur without any code change so I'm wondering if this could be related to you other question Problem with not closing db connection while debugging? Actually, if this problem started while debugging, then I think it is (you ran out of connections). In that case, restart you database server (and follow the suggestions of the other question to avoid this situation).",
        "summary": "Anyway, you mentioned that your code was working fine and that this problem started suddenly to occur without any code change so I'm wondering if this could be related to you other question Problem with not closing db connection while debugging?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism is when you can treat an object as a generic version of something, but when you access it, the code determines which exact type it is and calls the associated code. Here is an example in C#. Create four classes within a console application: Now create the following in the Main() of the module for the console application: In this example, we create a list of the base class Vehicle, which does not know about how many wheels each of its sub-classes has, but does know that each sub-class is responsible for knowing how many wheels it has. We then add a Bicycle, Car and Truck to the list. Next, we can loop through each Vehicle in the list, and treat them all identically, however when we access each Vehicles 'Wheels' property, the Vehicle class delegates the execution of that code to the relevant sub-class. This code is said to be polymorphic, as the exact code which is executed is determined by the sub-class being referenced at runtime. I hope that this helps you.",
        "output": "Polymorphism is when you can treat an object as a generic version of something, but when you access it, the code determines which exact type it is and calls the associated code.",
        "answer": "Polymorphism is when you can treat an object as a generic version of something, but when you access it, the code determines which exact type it is and calls the associated code. Here is an example in C#. Create four classes within a console application: Now create the following in the Main() of the module for the console application: In this example, we create a list of the base class Vehicle, which does not know about how many wheels each of its sub-classes has, but does know that each sub-class is responsible for knowing how many wheels it has. We then add a Bicycle, Car and Truck to the list. Next, we can loop through each Vehicle in the list, and treat them all identically, however when we access each Vehicles 'Wheels' property, the Vehicle class delegates the execution of that code to the relevant sub-class. This code is said to be polymorphic, as the exact code which is executed is determined by the sub-class being referenced at runtime. I hope that this helps you.",
        "summary": "Polymorphism is when you can treat an object as a generic version of something, but when you access it, the code determines which exact type it is and calls the associated code."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>foreach</code> is for iterating over collections that implement <code>IEnumerable</code>. It does this by calling <code>GetEnumerator</code> on the collection, which will return an <code>Enumerator</code>. This Enumerator has a method and a property: <li>MoveNext() <li>Current <code>Current</code> returns the object that Enumerator is currently on, <code>MoveNext</code> updates <code>Current</code> to the next object. Obviously, the concept of an index is foreign to the concept of enumeration, and cannot be done. Because of that, most collections are able to be traversed using an indexer and the for loop construct. I greatly prefer using a for loop in this situation compared to tracking the index with a local variable.",
        "output": "The <code>foreach</code> is for iterating over collections that implement <code>IEnumerable</code>. It does this by calling <code>GetEnumerator</code> on the collection, which will return an <code>Enumerator</code>. Because of that, most collections are able to be traversed using an indexer and the for loop construct.",
        "answer": "The <code>foreach</code> is for iterating over collections that implement <code>IEnumerable</code>. It does this by calling <code>GetEnumerator</code> on the collection, which will return an <code>Enumerator</code>. This Enumerator has a method and a property: <li>MoveNext() <li>Current <code>Current</code> returns the object that Enumerator is currently on, <code>MoveNext</code> updates <code>Current</code> to the next object. Obviously, the concept of an index is foreign to the concept of enumeration, and cannot be done. Because of that, most collections are able to be traversed using an indexer and the for loop construct. I greatly prefer using a for loop in this situation compared to tracking the index with a local variable.",
        "summary": "The <code>foreach</code> is for iterating over collections that implement <code>IEnumerable</code>. It does this by calling <code>GetEnumerator</code> on the collection, which will return an <code>Enumerator</code>. Because of that, most collections are able to be traversed using an indexer and the for loop construct."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've used gFTP for that.",
        "output": "I've used gFTP for that.",
        "answer": "I've used gFTP for that.",
        "summary": "I've used gFTP for that."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Singletons are NOT bad. It's only bad when you make something globally unique that isn't globally unique. However, there are \"application scope services\" (think about a messaging system that makes components interact) - this CALLS for a singleton, a \"MessageQueue\" - class that has a method \"SendMessage(...)\". You can then do the following from all over the place: MessageQueue.Current.SendMessage(new MailArrivedMessage(...)); And, of course, do: MessageQueue.Current.RegisterReceiver(this); in classes that implement IMessageReceiver.",
        "output": "It's only bad when you make something globally unique that isn't globally unique.",
        "answer": "Singletons are NOT bad. It's only bad when you make something globally unique that isn't globally unique. However, there are \"application scope services\" (think about a messaging system that makes components interact) - this CALLS for a singleton, a \"MessageQueue\" - class that has a method \"SendMessage(...)\". You can then do the following from all over the place: MessageQueue.Current.SendMessage(new MailArrivedMessage(...)); And, of course, do: MessageQueue.Current.RegisterReceiver(this); in classes that implement IMessageReceiver.",
        "summary": "It's only bad when you make something globally unique that isn't globally unique."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I would use <code>+=</code> operator instead of named functions.",
        "output": "I would use <code>+=</code> operator instead of named functions.",
        "answer": "I would use <code>+=</code> operator instead of named functions.",
        "summary": "I would use <code>+=</code> operator instead of named functions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Singleton is a pattern and can be used or abused just like any other tool. The bad part of a singleton is generally the user (or should I say the inappropriate use of a singleton for things it is not designed to do). The biggest offender is using a singleton as a fake global variable.",
        "output": "The bad part of a singleton is generally the user (or should I say the inappropriate use of a singleton for things it is not designed to do).",
        "answer": "Singleton is a pattern and can be used or abused just like any other tool. The bad part of a singleton is generally the user (or should I say the inappropriate use of a singleton for things it is not designed to do). The biggest offender is using a singleton as a fake global variable.",
        "summary": "The bad part of a singleton is generally the user (or should I say the inappropriate use of a singleton for things it is not designed to do)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It would be a security vulnerability if the client could request local file system files and then use JavaScript to figure out what's in them. The only way around this is to build an extension in a browser. Firefox extensions and IE extensions can access local resources. Chrome is much more restrictive.",
        "output": "Firefox extensions and IE extensions can access local resources. Chrome is much more restrictive.",
        "answer": "It would be a security vulnerability if the client could request local file system files and then use JavaScript to figure out what's in them. The only way around this is to build an extension in a browser. Firefox extensions and IE extensions can access local resources. Chrome is much more restrictive.",
        "summary": "Firefox extensions and IE extensions can access local resources. Chrome is much more restrictive."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I am late to the party, but here's a one-liner:",
        "output": "I am late to the party, but here's a one-liner:",
        "answer": "I am late to the party, but here's a one-liner:",
        "summary": "I am late to the party, but here's a one-liner:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n All have given a very good explanation. I am still posting my answer just to give an example if that can help. Here is the output: 0[Printed] 1[Printed] 2[Printed] So 3[Printed] &amp; 4[Printed] will not be displayed as there is break when i == 3 Here is the output: 0[Printed] 1[Printed] 2[Printed] 4[Printed] So 3[Printed]  will not be displayed as there is continue when i == 3",
        "output": "I am still posting my answer just to give an example if that can help.",
        "answer": "All have given a very good explanation. I am still posting my answer just to give an example if that can help. Here is the output: 0[Printed] 1[Printed] 2[Printed] So 3[Printed] &amp; 4[Printed] will not be displayed as there is break when i == 3 Here is the output: 0[Printed] 1[Printed] 2[Printed] 4[Printed] So 3[Printed]  will not be displayed as there is continue when i == 3",
        "summary": "I am still posting my answer just to give an example if that can help."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Modulo is the remainder, not division. BIGBLOCK The sign <code>%</code> is often used for the modulo operator, in lieu of the word <code>mod</code>. For <code>x % 4</code>, you get the following table (for 1-10) BIGBLOCK",
        "output": "Modulo is the remainder, not division. The sign <code>%</code> is often used for the modulo operator, in lieu of the word <code>mod</code>. BIGBLOCK",
        "answer": "Modulo is the remainder, not division. BIGBLOCK The sign <code>%</code> is often used for the modulo operator, in lieu of the word <code>mod</code>. For <code>x % 4</code>, you get the following table (for 1-10) BIGBLOCK",
        "summary": "Modulo is the remainder, not division. The sign <code>%</code> is often used for the modulo operator, in lieu of the word <code>mod</code>. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is just how Response.Redirect(url, true)  works. It throws the ThreadAbortException to abort the thread. Just ignore that exception. (I presume it is some global error handler/logger where you see it?) An interesting related discussion Is Response.End() considered harmful?",
        "output": "This is just how Response.Redirect(url, true)  works. It throws the ThreadAbortException to abort the thread. Just ignore that exception.",
        "answer": "This is just how Response.Redirect(url, true)  works. It throws the ThreadAbortException to abort the thread. Just ignore that exception. (I presume it is some global error handler/logger where you see it?) An interesting related discussion Is Response.End() considered harmful?",
        "summary": "This is just how Response.Redirect(url, true)  works. It throws the ThreadAbortException to abort the thread. Just ignore that exception."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The multi-column index can be used for queries referencing <em>all</em> the columns: BIGBLOCK This can be looked up directly using the multi-column index. On the other hand, at most one of the single-column index can be used (it would have to look up all records having Column1=1, and then check Column2 and Column3 in each of those).",
        "output": "The multi-column index can be used for queries referencing <em>all</em> the columns: On the other hand, at most one of the single-column index can be used (it would have to look up all records having Column1=1, and then check Column2 and Column3 in each of those).",
        "answer": "The multi-column index can be used for queries referencing <em>all</em> the columns: BIGBLOCK This can be looked up directly using the multi-column index. On the other hand, at most one of the single-column index can be used (it would have to look up all records having Column1=1, and then check Column2 and Column3 in each of those).",
        "summary": "The multi-column index can be used for queries referencing <em>all</em> the columns: On the other hand, at most one of the single-column index can be used (it would have to look up all records having Column1=1, and then check Column2 and Column3 in each of those)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n And because I prefer the expression chain syntax, here is how you do it with that:",
        "output": "And because I prefer the expression chain syntax, here is how you do it with that:",
        "answer": "And because I prefer the expression chain syntax, here is how you do it with that:",
        "summary": "And because I prefer the expression chain syntax, here is how you do it with that:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A simpler, faster but slightly less random way is to use <code>random.sample</code> instead of choosing each letter separately, If n-repetitions are allowed, enlarge your random basis by n times e.g. Note:random.sample prevents character reuse, multiplying the size of the character set makes multiple repetitions possible, but they are still less likely then they are in a pure random choice. If we go for a string of length 6, and we pick 'X' as the first character, in the choice example, the odds of getting 'X' for the second character are the same as the odds of getting 'X' as the first character. In the random.sample implementation, the odds of getting 'X' as any subsequent character are only 6/7 the chance of getting it as the first character",
        "output": "A simpler, faster but slightly less random way is to use <code>random.sample</code> instead of choosing each letter separately, If n-repetitions are allowed, enlarge your random basis by n times e.g.",
        "answer": "A simpler, faster but slightly less random way is to use <code>random.sample</code> instead of choosing each letter separately, If n-repetitions are allowed, enlarge your random basis by n times e.g. Note:random.sample prevents character reuse, multiplying the size of the character set makes multiple repetitions possible, but they are still less likely then they are in a pure random choice. If we go for a string of length 6, and we pick 'X' as the first character, in the choice example, the odds of getting 'X' for the second character are the same as the odds of getting 'X' as the first character. In the random.sample implementation, the odds of getting 'X' as any subsequent character are only 6/7 the chance of getting it as the first character",
        "summary": "A simpler, faster but slightly less random way is to use <code>random.sample</code> instead of choosing each letter separately, If n-repetitions are allowed, enlarge your random basis by n times e.g."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In object oriented programming, a type includes a collection of member fields. These fields may be stored either by value or by reference (i.e., a pointer to a value). In a shallow copy, a new instance of the type is created and the values are copied into the new instance. The reference pointers are also copied just like the values. Therefore, the references are pointing to the original objects. Any changes to the members that are stored by reference appear in both the original and the copy, since no copy was made of the referenced object. In a deep copy, the fields that are stored by value are copied as before, but the pointers to objects stored by reference are not copied. Instead, a deep copy is made of the referenced object, and a pointer to the new object is stored. Any changes that are made to those referenced objects will not affect other copies of the object.",
        "output": "In a shallow copy, a new instance of the type is created and the values are copied into the new instance. In a deep copy, the fields that are stored by value are copied as before, but the pointers to objects stored by reference are not copied.",
        "answer": "In object oriented programming, a type includes a collection of member fields. These fields may be stored either by value or by reference (i.e., a pointer to a value). In a shallow copy, a new instance of the type is created and the values are copied into the new instance. The reference pointers are also copied just like the values. Therefore, the references are pointing to the original objects. Any changes to the members that are stored by reference appear in both the original and the copy, since no copy was made of the referenced object. In a deep copy, the fields that are stored by value are copied as before, but the pointers to objects stored by reference are not copied. Instead, a deep copy is made of the referenced object, and a pointer to the new object is stored. Any changes that are made to those referenced objects will not affect other copies of the object.",
        "summary": "In a shallow copy, a new instance of the type is created and the values are copied into the new instance. In a deep copy, the fields that are stored by value are copied as before, but the pointers to objects stored by reference are not copied."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n IntelliJ has some pretty advanced code inspections (comparable but different to FindBugs). Although I seriously miss a FindBugs plugin when using IntelliJ (The Eclipse/FindBugs integration is pretty cool). Here is an official list of CodeInspections supported by IntelliJ EDIT: Finally, there is a findbugs-plugin for IntelliJ. It is still a bit beta but the combination of Code Inspections and FindBugs is just awesome!",
        "output": "IntelliJ has some pretty advanced code inspections (comparable but different to FindBugs). Here is an official list of CodeInspections supported by IntelliJ",
        "answer": "IntelliJ has some pretty advanced code inspections (comparable but different to FindBugs). Although I seriously miss a FindBugs plugin when using IntelliJ (The Eclipse/FindBugs integration is pretty cool). Here is an official list of CodeInspections supported by IntelliJ EDIT: Finally, there is a findbugs-plugin for IntelliJ. It is still a bit beta but the combination of Code Inspections and FindBugs is just awesome!",
        "summary": "IntelliJ has some pretty advanced code inspections (comparable but different to FindBugs). Here is an official list of CodeInspections supported by IntelliJ"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The ultimate solution (even after recreating the database on two other machines, as well as the EDMX and other sundries) was to not use the first edition of Entity Framework. Looking forward to evaluating it again in .NET 4.0. After running into the same problem again and searching all over for an answer, I finally found someone who'd had the same problem. It appears that the connection string wasn't correctly generated by Visual Studio's wizard, and the link to the metadata resources was missing an important path. v1.0 BUG? : Unable to load the specified metadata resource. Scripts != Models Update 2013-01-16: Having transitioned to almost exclusively using EF Code First practices (even with existing databases) this problem is no longer an issue. For me, that was a viable solution to reducing the clutter from auto-generated code and configuration and increasing my own control over the product.",
        "output": "It appears that the connection string wasn't correctly generated by Visual Studio's wizard, and the link to the metadata resources was missing an important path.",
        "answer": "The ultimate solution (even after recreating the database on two other machines, as well as the EDMX and other sundries) was to not use the first edition of Entity Framework. Looking forward to evaluating it again in .NET 4.0. After running into the same problem again and searching all over for an answer, I finally found someone who'd had the same problem. It appears that the connection string wasn't correctly generated by Visual Studio's wizard, and the link to the metadata resources was missing an important path. v1.0 BUG? : Unable to load the specified metadata resource. Scripts != Models Update 2013-01-16: Having transitioned to almost exclusively using EF Code First practices (even with existing databases) this problem is no longer an issue. For me, that was a viable solution to reducing the clutter from auto-generated code and configuration and increasing my own control over the product.",
        "summary": "It appears that the connection string wasn't correctly generated by Visual Studio's wizard, and the link to the metadata resources was missing an important path."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n JavaBeans are Java classes which adhere to an extremely simple coding convention. All you have to do is to Implement java.io.Serializable interface - To save the state of an object use a public empty argument constructor - To instantiate the object And provide public getter and setter methods -  To get and set the values of private variables (properties ).",
        "output": "JavaBeans are Java classes which adhere to an extremely simple coding convention. All you have to do is to Implement java.io.Serializable interface - To save the state of an object use a public empty argument constructor - To instantiate the object And provide public getter and setter methods -  To get and set the values of private variables (properties ).",
        "answer": "JavaBeans are Java classes which adhere to an extremely simple coding convention. All you have to do is to Implement java.io.Serializable interface - To save the state of an object use a public empty argument constructor - To instantiate the object And provide public getter and setter methods -  To get and set the values of private variables (properties ).",
        "summary": "JavaBeans are Java classes which adhere to an extremely simple coding convention. All you have to do is to Implement java.io.Serializable interface - To save the state of an object use a public empty argument constructor - To instantiate the object And provide public getter and setter methods -  To get and set the values of private variables (properties )."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I believe the kernel raises SIGBUS  when an application exhibits data  misalignment on the data bus. I think  that since most[?] modern compilers  for most processors pad / align the  data for the programmers, the  alignment troubles of yore (at least)  mitigated, and hence one does not see  SIGBUS too often these days (AFAIK). From: Here",
        "output": "I believe the kernel raises SIGBUS  when an application exhibits data  misalignment on the data bus.",
        "answer": "I believe the kernel raises SIGBUS  when an application exhibits data  misalignment on the data bus. I think  that since most[?] modern compilers  for most processors pad / align the  data for the programmers, the  alignment troubles of yore (at least)  mitigated, and hence one does not see  SIGBUS too often these days (AFAIK). From: Here",
        "summary": "I believe the kernel raises SIGBUS  when an application exhibits data  misalignment on the data bus."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <strong>staticmethod</strong> is a method that knows nothing about the class or instance it was called on. It just gets the arguments that were passed, no implicit first argument. It is basically useless in Python -- you can just use a module function instead of a staticmethod. A <strong>classmethod</strong>, on the other hand, is a method that gets passed the class it was called on, or the class of the instance it was called on, as first argument. This is useful when you want the method to be a factory for the class: since it gets the actual class it was called on as first argument, you can always instantiate the right class, even when subclasses are involved. Observe for instance how <code>dict.fromkeys()</code>, a classmethod, returns an instance of the subclass when called on a subclass:",
        "output": "A <strong>staticmethod</strong> is a method that knows nothing about the class or instance it was called on. A <strong>classmethod</strong>, on the other hand, is a method that gets passed the class it was called on, or the class of the instance it was called on, as first argument. This is useful when you want the method to be a factory for the class: since it gets the actual class it was called on as first argument, you can always instantiate the right class, even when subclasses are involved.",
        "answer": "A <strong>staticmethod</strong> is a method that knows nothing about the class or instance it was called on. It just gets the arguments that were passed, no implicit first argument. It is basically useless in Python -- you can just use a module function instead of a staticmethod. A <strong>classmethod</strong>, on the other hand, is a method that gets passed the class it was called on, or the class of the instance it was called on, as first argument. This is useful when you want the method to be a factory for the class: since it gets the actual class it was called on as first argument, you can always instantiate the right class, even when subclasses are involved. Observe for instance how <code>dict.fromkeys()</code>, a classmethod, returns an instance of the subclass when called on a subclass:",
        "summary": "A <strong>staticmethod</strong> is a method that knows nothing about the class or instance it was called on. A <strong>classmethod</strong>, on the other hand, is a method that gets passed the class it was called on, or the class of the instance it was called on, as first argument. This is useful when you want the method to be a factory for the class: since it gets the actual class it was called on as first argument, you can always instantiate the right class, even when subclasses are involved."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Quick note, this is almost certainly confusing Big O notation (which is an upper bound) with Theta notation (which is a two-side bound). In my experience this is actually typical of discussions in non-academic settings. Apologies for any confusion caused. Big O complexity can be visualized with this graph: The simplest definition I can give for Big-O notation is this: <strong>Big-O notation is a relative representation of the complexity of an algorithm.</strong> There are some important and deliberately chosen words in that sentence: <li><strong>relative:</strong> you can only compare apples to apples. You can't compare an algorithm to do arithmetic multiplication to an algorithm that sorts a list of integers. But a comparison of two algorithms to do arithmetic operations (one multiplication, one addition) will tell you something meaningful; <li><strong>representation:</strong> Big-O (in its simplest form) reduces the comparison between algorithms to a single variable. That variable is chosen based on observations or assumptions. For example, sorting algorithms are typically compared based on comparison operations (comparing two nodes to determine their relative ordering). This assumes that comparison is expensive. But what if comparison is cheap but swapping is expensive? It changes the comparison; and <li><strong>complexity:</strong> if it takes me one second to sort 10,000 elements how long will it take me to sort one million? Complexity in this instance is a relative measure to something else. Come back and reread the above when you've read the rest. The best example of Big-O I can think of is doing arithmetic. Take two numbers (123456 and 789012). The basic arithmetic operations we learnt in school were: <li>addition; <li>subtraction; <li>multiplication; and <li>division. Each of these is an operation or a problem. A method of solving these is called an <strong>algorithm</strong>. Addition is the simplest. You line the numbers up (to the right) and add the digits in a column writing the last number of that addition in the result. The 'tens' part of that number is carried over to the next column. Let's assume that the addition of these numbers is the most expensive operation in this algorithm. It stands to reason that to add these two numbers together we have to add together 6 digits (and possibly carry a 7th). If we add two 100 digit numbers together we have to do 100 additions. If we add <strong>two</strong> 10,000 digit numbers we have to do 10,000 additions. See the pattern? The <strong>complexity</strong> (being the number of operations) is directly proportional to the number of digits <em>n</em> in the larger number. We call this <strong>O(n)</strong> or <strong>linear complexity</strong>. Subtraction is similar (except you may need to borrow instead of carry). Multiplication is different. You line the numbers up, take the first digit in the bottom number and multiply it in turn against each digit in the top number and so on through each digit. So to multiply our two 6 digit numbers we must do 36 multiplications. We may need to do as many as 10 or 11 column adds to get the end result too. If we have two 100-digit numbers we need to do 10,000 multiplications and 200 adds. For two one million digit numbers we need to do one trillion (1012) multiplications and two million adds. As the algorithm scales with n-<em>squared</em>, this is <strong>O(n2)</strong> or <strong>quadratic complexity</strong>. This is a good time to introduce another important concept: <strong>We only care about the most significant portion of complexity.</strong> The astute may have realized that we could express the number of operations as: n2 + 2n. But as you saw from our example with two numbers of a million digits apiece, the second term (2n) becomes insignificant (accounting for 0.0002% of the total operations by that stage). One can notice that we've assumed the worst case scenario here. While multiplying 6 digit numbers if one of them is 4 digit and the other one is 6 digit, then we only have 24 multiplications. Still we calculate the worst case scenario for that 'n', i.e when both are 6 digit numbers. Hence Big-O notation is about the Worst-case scenario of an algorithm The Telephone Book The next best example I can think of is the telephone book, normally called the White Pages or similar but it'll vary from country to country. But I'm talking about the one that lists people by surname and then initials or first name, possibly address and then telephone numbers. Now if you were instructing a computer to look up the phone number for \"John Smith\" in a telephone book that contains 1,000,000 names, what would you do? Ignoring the fact that you could guess how far in the S's started (let's assume you can't), what would you do? A typical implementation might be to open up to the middle, take the 500,000th and compare it to \"Smith\". If it happens to be \"Smith, John\", we just got real lucky. Far more likely is that \"John Smith\" will be before or after that name. If it's after we then divide the last half of the phone book in half and repeat. If it's before then we divide the first half of the phone book in half and repeat. And so on. This is called a <strong>binary search</strong> and is used every day in programming whether you realize it or not. So if you want to find a name in a phone book of a million names you can actually find any name by doing this at most 20 times. In comparing search algorithms we decide that this comparison is our 'n'. <li>For a phone book of 3 names it takes 2 comparisons (at most). <li>For 7 it takes at most 3. <li>For 15 it takes 4. <li>For 1,000,000 it takes 20. That is staggeringly good isn't it? In Big-O terms this is <strong>O(log n)</strong> or <strong>logarithmic complexity</strong>. Now the logarithm in question could be ln (base e), log10, log2 or some other base. It doesn't matter it's still O(log n) just like O(2n2) and O(100n2) are still both O(n2). It's worthwhile at this point to explain that Big O can be used to determine three cases with an algorithm: <li><strong>Best Case:</strong> In the telephone book search, the best case is that we find the name in one comparison. This is <strong>O(1)</strong> or <strong>constant complexity</strong>; <li><strong>Expected Case:</strong> As discussed above this is O(log n); and <li><strong>Worst Case:</strong> This is also O(log n). Normally we don't care about the best case. We're interested in the expected and worst case. Sometimes one or the other of these will be more important. Back to the telephone book. What if you have a phone number and want to find a name? The police have a reverse phone book but such look-ups are denied to the general public. Or are they? Technically you can reverse look-up a number in an ordinary phone book. How? You start at the first name and compare the number. If it's a match, great, if not, you move on to the next. You have to do it this way because the phone book is <strong>unordered</strong> (by phone number anyway). So to find a name given the phone number (reverse lookup): <li><strong>Best Case:</strong> O(1); <li><strong>Expected Case:</strong> O(n) (for 500,000); and <li><strong>Worst Case:</strong> O(n) (for 1,000,000). The Travelling Salesman This is quite a famous problem in computer science and deserves a mention. In this problem you have N towns. Each of those towns is linked to 1 or more other towns by a road of a certain distance. The Travelling Salesman problem is to find the shortest tour that visits every town. Sounds simple? Think again. If you have 3 towns A, B and C with roads between all pairs then you could go: So the Big-O of the Travelling Salesman problem is <strong>O(n! )</strong> or <strong>factorial or combinatorial complexity</strong>. <strong>By the time you get to 200 towns there isn't enough time left in the universe to solve the problem with traditional computers.</strong> Something to think about. Polynomial Time Another point I wanted to make quick mention of is that any algorithm that has a complexity of <strong>O(na)</strong> is said to have <strong>polynomial complexity</strong> or is solvable in <strong>polynomial time</strong>. O(n), O(n2) etc are all polynomial time. Some problems cannot be solved in polynomial time. Certain things are used in the world because of this. Public Key Cryptography is a prime example. It is computationally hard to find two prime factors of a very large number. If it wasn't, we couldn't use the public key systems we use. Anyway, that's it for my (hopefully plain English) explanation of Big O (revised).",
        "output": "Big O complexity can be visualized with this graph: <strong>Big-O notation is a relative representation of the complexity of an algorithm.</strong> You can't compare an algorithm to do arithmetic multiplication to an algorithm that sorts a list of integers. But a comparison of two algorithms to do arithmetic operations (one multiplication, one addition) will tell you something meaningful; Complexity in this instance is a relative measure to something else.",
        "answer": "Quick note, this is almost certainly confusing Big O notation (which is an upper bound) with Theta notation (which is a two-side bound). In my experience this is actually typical of discussions in non-academic settings. Apologies for any confusion caused. Big O complexity can be visualized with this graph: The simplest definition I can give for Big-O notation is this: <strong>Big-O notation is a relative representation of the complexity of an algorithm.</strong> There are some important and deliberately chosen words in that sentence: <li><strong>relative:</strong> you can only compare apples to apples. You can't compare an algorithm to do arithmetic multiplication to an algorithm that sorts a list of integers. But a comparison of two algorithms to do arithmetic operations (one multiplication, one addition) will tell you something meaningful; <li><strong>representation:</strong> Big-O (in its simplest form) reduces the comparison between algorithms to a single variable. That variable is chosen based on observations or assumptions. For example, sorting algorithms are typically compared based on comparison operations (comparing two nodes to determine their relative ordering). This assumes that comparison is expensive. But what if comparison is cheap but swapping is expensive? It changes the comparison; and <li><strong>complexity:</strong> if it takes me one second to sort 10,000 elements how long will it take me to sort one million? Complexity in this instance is a relative measure to something else. Come back and reread the above when you've read the rest. The best example of Big-O I can think of is doing arithmetic. Take two numbers (123456 and 789012). The basic arithmetic operations we learnt in school were: <li>addition; <li>subtraction; <li>multiplication; and <li>division. Each of these is an operation or a problem. A method of solving these is called an <strong>algorithm</strong>. Addition is the simplest. You line the numbers up (to the right) and add the digits in a column writing the last number of that addition in the result. The 'tens' part of that number is carried over to the next column. Let's assume that the addition of these numbers is the most expensive operation in this algorithm. It stands to reason that to add these two numbers together we have to add together 6 digits (and possibly carry a 7th). If we add two 100 digit numbers together we have to do 100 additions. If we add <strong>two</strong> 10,000 digit numbers we have to do 10,000 additions. See the pattern? The <strong>complexity</strong> (being the number of operations) is directly proportional to the number of digits <em>n</em> in the larger number. We call this <strong>O(n)</strong> or <strong>linear complexity</strong>. Subtraction is similar (except you may need to borrow instead of carry). Multiplication is different. You line the numbers up, take the first digit in the bottom number and multiply it in turn against each digit in the top number and so on through each digit. So to multiply our two 6 digit numbers we must do 36 multiplications. We may need to do as many as 10 or 11 column adds to get the end result too. If we have two 100-digit numbers we need to do 10,000 multiplications and 200 adds. For two one million digit numbers we need to do one trillion (1012) multiplications and two million adds. As the algorithm scales with n-<em>squared</em>, this is <strong>O(n2)</strong> or <strong>quadratic complexity</strong>. This is a good time to introduce another important concept: <strong>We only care about the most significant portion of complexity.</strong> The astute may have realized that we could express the number of operations as: n2 + 2n. But as you saw from our example with two numbers of a million digits apiece, the second term (2n) becomes insignificant (accounting for 0.0002% of the total operations by that stage). One can notice that we've assumed the worst case scenario here. While multiplying 6 digit numbers if one of them is 4 digit and the other one is 6 digit, then we only have 24 multiplications. Still we calculate the worst case scenario for that 'n', i.e when both are 6 digit numbers. Hence Big-O notation is about the Worst-case scenario of an algorithm The Telephone Book The next best example I can think of is the telephone book, normally called the White Pages or similar but it'll vary from country to country. But I'm talking about the one that lists people by surname and then initials or first name, possibly address and then telephone numbers. Now if you were instructing a computer to look up the phone number for \"John Smith\" in a telephone book that contains 1,000,000 names, what would you do? Ignoring the fact that you could guess how far in the S's started (let's assume you can't), what would you do? A typical implementation might be to open up to the middle, take the 500,000th and compare it to \"Smith\". If it happens to be \"Smith, John\", we just got real lucky. Far more likely is that \"John Smith\" will be before or after that name. If it's after we then divide the last half of the phone book in half and repeat. If it's before then we divide the first half of the phone book in half and repeat. And so on. This is called a <strong>binary search</strong> and is used every day in programming whether you realize it or not. So if you want to find a name in a phone book of a million names you can actually find any name by doing this at most 20 times. In comparing search algorithms we decide that this comparison is our 'n'. <li>For a phone book of 3 names it takes 2 comparisons (at most). <li>For 7 it takes at most 3. <li>For 15 it takes 4. <li>For 1,000,000 it takes 20. That is staggeringly good isn't it? In Big-O terms this is <strong>O(log n)</strong> or <strong>logarithmic complexity</strong>. Now the logarithm in question could be ln (base e), log10, log2 or some other base. It doesn't matter it's still O(log n) just like O(2n2) and O(100n2) are still both O(n2). It's worthwhile at this point to explain that Big O can be used to determine three cases with an algorithm: <li><strong>Best Case:</strong> In the telephone book search, the best case is that we find the name in one comparison. This is <strong>O(1)</strong> or <strong>constant complexity</strong>; <li><strong>Expected Case:</strong> As discussed above this is O(log n); and <li><strong>Worst Case:</strong> This is also O(log n). Normally we don't care about the best case. We're interested in the expected and worst case. Sometimes one or the other of these will be more important. Back to the telephone book. What if you have a phone number and want to find a name? The police have a reverse phone book but such look-ups are denied to the general public. Or are they? Technically you can reverse look-up a number in an ordinary phone book. How? You start at the first name and compare the number. If it's a match, great, if not, you move on to the next. You have to do it this way because the phone book is <strong>unordered</strong> (by phone number anyway). So to find a name given the phone number (reverse lookup): <li><strong>Best Case:</strong> O(1); <li><strong>Expected Case:</strong> O(n) (for 500,000); and <li><strong>Worst Case:</strong> O(n) (for 1,000,000). The Travelling Salesman This is quite a famous problem in computer science and deserves a mention. In this problem you have N towns. Each of those towns is linked to 1 or more other towns by a road of a certain distance. The Travelling Salesman problem is to find the shortest tour that visits every town. Sounds simple? Think again. If you have 3 towns A, B and C with roads between all pairs then you could go: So the Big-O of the Travelling Salesman problem is <strong>O(n! )</strong> or <strong>factorial or combinatorial complexity</strong>. <strong>By the time you get to 200 towns there isn't enough time left in the universe to solve the problem with traditional computers.</strong> Something to think about. Polynomial Time Another point I wanted to make quick mention of is that any algorithm that has a complexity of <strong>O(na)</strong> is said to have <strong>polynomial complexity</strong> or is solvable in <strong>polynomial time</strong>. O(n), O(n2) etc are all polynomial time. Some problems cannot be solved in polynomial time. Certain things are used in the world because of this. Public Key Cryptography is a prime example. It is computationally hard to find two prime factors of a very large number. If it wasn't, we couldn't use the public key systems we use. Anyway, that's it for my (hopefully plain English) explanation of Big O (revised).",
        "summary": "Big O complexity can be visualized with this graph: <strong>Big-O notation is a relative representation of the complexity of an algorithm.</strong> You can't compare an algorithm to do arithmetic multiplication to an algorithm that sorts a list of integers. But a comparison of two algorithms to do arithmetic operations (one multiplication, one addition) will tell you something meaningful; Complexity in this instance is a relative measure to something else."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>f</code> is an (instance) method. However, you are calling it via <code>fibo.f</code>, where <code>fibo</code> is the class object. Hence, <code>f</code> is unbound (not bound to any class instance). If you did then that <code>f</code> is bound (to the instance <code>a</code>).",
        "output": "<code>f</code> is an (instance) method. If you did then that <code>f</code> is bound (to the instance <code>a</code>).",
        "answer": "<code>f</code> is an (instance) method. However, you are calling it via <code>fibo.f</code>, where <code>fibo</code> is the class object. Hence, <code>f</code> is unbound (not bound to any class instance). If you did then that <code>f</code> is bound (to the instance <code>a</code>).",
        "summary": "<code>f</code> is an (instance) method. If you did then that <code>f</code> is bound (to the instance <code>a</code>)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Set button visibility to GONE (button will be completely \"removed\" -- the buttons space will be available for another widgets) or INVISIBLE (button will became \"transparent\" -- its space will not be available for another widgets): BIGBLOCK or in xml: BIGBLOCK",
        "output": "Set button visibility to GONE (button will be completely \"removed\" -- the buttons space will be available for another widgets) or INVISIBLE (button will became \"transparent\" -- its space will not be available for another widgets): BIGBLOCK or in xml: BIGBLOCK",
        "answer": "Set button visibility to GONE (button will be completely \"removed\" -- the buttons space will be available for another widgets) or INVISIBLE (button will became \"transparent\" -- its space will not be available for another widgets): BIGBLOCK or in xml: BIGBLOCK",
        "summary": "Set button visibility to GONE (button will be completely \"removed\" -- the buttons space will be available for another widgets) or INVISIBLE (button will became \"transparent\" -- its space will not be available for another widgets): BIGBLOCK or in xml: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Javascript uses scope chains to establish the scope for a given function. There is typically one global scope, and each function defined has its own nested scope. Any function defined within another function has a local scope which is linked to the outer function. It's always the position in the source that defines the scope. An element in the scope chain is basically a Map with a pointer to its parent scope. When resolving a variable, javascript starts at the innermost scope and searches outwards.",
        "output": "There is typically one global scope, and each function defined has its own nested scope. Any function defined within another function has a local scope which is linked to the outer function.",
        "answer": "Javascript uses scope chains to establish the scope for a given function. There is typically one global scope, and each function defined has its own nested scope. Any function defined within another function has a local scope which is linked to the outer function. It's always the position in the source that defines the scope. An element in the scope chain is basically a Map with a pointer to its parent scope. When resolving a variable, javascript starts at the innermost scope and searches outwards.",
        "summary": "There is typically one global scope, and each function defined has its own nested scope. Any function defined within another function has a local scope which is linked to the outer function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There are a couple of ways to do your check for class equality before checking member equality, and I think both are useful in the right circumstances. <li>Use the <code>instanceof</code> operator. <li>Use <code>this.getClass().equals(that.getClass())</code>. I use #1 in a <code>final</code> equals implementation, or when implementing an interface that prescribes an algorithm for equals (like the <code>java.util</code> collection interfaces&mdash;the right way to check with with <code>(obj instanceof Set)</code> or whatever interface you're implementing). It's generally a bad choice when equals can be overridden because that breaks the symmetry property. Option #2 allows the class to be safely extended without overriding equals or breaking symmetry. If your class is also <code>Comparable</code>, the <code>equals</code> and <code>compareTo</code> methods should be consistent too. Here's a template for the equals method in a <code>Comparable</code> class:",
        "output": "There are a couple of ways to do your check for class equality before checking member equality, and I think both are useful in the right circumstances. <li>Use the <code>instanceof</code> operator. <li>Use <code>this.getClass().equals(that.getClass())</code>.",
        "answer": "There are a couple of ways to do your check for class equality before checking member equality, and I think both are useful in the right circumstances. <li>Use the <code>instanceof</code> operator. <li>Use <code>this.getClass().equals(that.getClass())</code>. I use #1 in a <code>final</code> equals implementation, or when implementing an interface that prescribes an algorithm for equals (like the <code>java.util</code> collection interfaces&mdash;the right way to check with with <code>(obj instanceof Set)</code> or whatever interface you're implementing). It's generally a bad choice when equals can be overridden because that breaks the symmetry property. Option #2 allows the class to be safely extended without overriding equals or breaking symmetry. If your class is also <code>Comparable</code>, the <code>equals</code> and <code>compareTo</code> methods should be consistent too. Here's a template for the equals method in a <code>Comparable</code> class:",
        "summary": "There are a couple of ways to do your check for class equality before checking member equality, and I think both are useful in the right circumstances. <li>Use the <code>instanceof</code> operator. <li>Use <code>this.getClass().equals(that.getClass())</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've got the following code: BIGBLOCK It's reading from a file, but <code>mapper.readValue()</code> will also accept an <code>InputStream</code> and you can obtain an <code>InputStream</code> from a string by using the following: BIGBLOCK There's a bit more explanation about the mapper on my blog.",
        "output": "I've got the following code: BIGBLOCK",
        "answer": "I've got the following code: BIGBLOCK It's reading from a file, but <code>mapper.readValue()</code> will also accept an <code>InputStream</code> and you can obtain an <code>InputStream</code> from a string by using the following: BIGBLOCK There's a bit more explanation about the mapper on my blog.",
        "summary": "I've got the following code: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n your build classpath is correct, which is why you can compile. the classpath for your JUnit needs to be checked. go to the Run menu and choose 'open run dialog.' in there you should see a tree on the left with JUnit as an option. open that node and find and select your test. on the right pane you will see a tab for classpath. take a look to ensure that your class that the test is trying to instantiate would be found. edit: this seems to be an issue with maven and its behavior after a release changed the default Eclipse output folders. i have seen solutions described where placing maven into the bootclasspath ABOVE the jre works, or running <code>mvn clean test</code> does the trick or refreshing all of your eclipse projects, causing a rebuild fixes the problem going to your project and selecting Maven->Update Configuration solve the problem with the first three, there were reports of the issue recurring. the last looks best to me, but if it doesnt work, please try the others. here and here is some info",
        "output": "the classpath for your JUnit needs to be checked. take a look to ensure that your class that the test is trying to instantiate would be found.",
        "answer": "your build classpath is correct, which is why you can compile. the classpath for your JUnit needs to be checked. go to the Run menu and choose 'open run dialog.' in there you should see a tree on the left with JUnit as an option. open that node and find and select your test. on the right pane you will see a tab for classpath. take a look to ensure that your class that the test is trying to instantiate would be found. edit: this seems to be an issue with maven and its behavior after a release changed the default Eclipse output folders. i have seen solutions described where placing maven into the bootclasspath ABOVE the jre works, or running <code>mvn clean test</code> does the trick or refreshing all of your eclipse projects, causing a rebuild fixes the problem going to your project and selecting Maven->Update Configuration solve the problem with the first three, there were reports of the issue recurring. the last looks best to me, but if it doesnt work, please try the others. here and here is some info",
        "summary": "the classpath for your JUnit needs to be checked. take a look to ensure that your class that the test is trying to instantiate would be found."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This little change help with this problem. I have Solution with 3 project. change to",
        "output": "This little change help with this problem.",
        "answer": "This little change help with this problem. I have Solution with 3 project. change to",
        "summary": "This little change help with this problem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another way to implement Pair with. Public immutable fields, i.e. simple data structure. Comparable. Simple hash and equals. Simple factory so you don't have to provide the types. e.g. Pair.of(\"hello\", 1);",
        "output": "Another way to implement Pair with.",
        "answer": "Another way to implement Pair with. Public immutable fields, i.e. simple data structure. Comparable. Simple hash and equals. Simple factory so you don't have to provide the types. e.g. Pair.of(\"hello\", 1);",
        "summary": "Another way to implement Pair with."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The general rule is that the <code>const</code> keyword applies to what precedes it immediately. Exception, a starting <code>const</code> applies to what follows. <code>const int*</code> is the same as <code>int const*</code> and means \"pointer to constant int\". <code>const int* const</code> is the same as <code>int const* const</code> and means \"constant pointer to constant int\". Edit: For the Dos and Don'ts, if this answer isn't enough, could you be more precise about what you want?",
        "output": "<code>const int*</code> is the same as <code>int const*</code> and means \"pointer to constant int\". <code>const int* const</code> is the same as <code>int const* const</code> and means \"constant pointer to constant int\".",
        "answer": "The general rule is that the <code>const</code> keyword applies to what precedes it immediately. Exception, a starting <code>const</code> applies to what follows. <code>const int*</code> is the same as <code>int const*</code> and means \"pointer to constant int\". <code>const int* const</code> is the same as <code>int const* const</code> and means \"constant pointer to constant int\". Edit: For the Dos and Don'ts, if this answer isn't enough, could you be more precise about what you want?",
        "summary": "<code>const int*</code> is the same as <code>int const*</code> and means \"pointer to constant int\". <code>const int* const</code> is the same as <code>int const* const</code> and means \"constant pointer to constant int\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As many have said before, web servers handle HTTP petitions, while application servers handle petitions for distributed components.So, maybe the easiest way to understand the difference is to compare the two products in regards to programming environment they offer. Web Server -> Programming Environment IIS :                             ASP (.NET) Tomcat :                          Servlet Jetty :                            Servlet Apache :                          Php, CGI Application Servers -> Programming Environment MTS :                                COM+ WAS :                               EJB JBoss :                              EJB WebLogic Application Server :        EJB The crucial difference is that application servers support some <strong>distributed component</strong> technology, providing features like remote invocation and distributed transactions, like <strong>EJB</strong> in Java world or <strong>COM+</strong> on Microsoft platform. Http server often support some more simple programming environments, often scripting, like ASP (.NET) in case of Microsoft or Servlet--based, including JSP and many other in case of Java or PHP and CGI in case of Apache. Other capabilities like load-balancing, clustering, session-failover, connection pooling etc. that used to be in the realm of application servers, are becoming available on web servers as well directly or through some third party products. Finally, it is worth noting that the picture is further distorted with \"lightweight containers\" like Spring Framework, that often supplement the purpose of application servers in more simple manner and without the application server infrastructure. And since distribution aspect in applications is moving from distributed component towards service paradigm and SOA architecture, there is less and less space left for traditional application servers.",
        "output": "Web Server -> Programming Environment IIS :                             ASP (.NET) Tomcat :                          Servlet Jetty :                            Servlet Apache :                          Php, CGI Application Servers -> Programming Environment MTS :                                COM+ WAS :                               EJB JBoss :                              EJB WebLogic Application Server :        EJB The crucial difference is that application servers support some <strong>distributed component</strong> technology, providing features like remote invocation and distributed transactions, like <strong>EJB</strong> in Java world or <strong>COM+</strong> on Microsoft platform.",
        "answer": "As many have said before, web servers handle HTTP petitions, while application servers handle petitions for distributed components.So, maybe the easiest way to understand the difference is to compare the two products in regards to programming environment they offer. Web Server -> Programming Environment IIS :                             ASP (.NET) Tomcat :                          Servlet Jetty :                            Servlet Apache :                          Php, CGI Application Servers -> Programming Environment MTS :                                COM+ WAS :                               EJB JBoss :                              EJB WebLogic Application Server :        EJB The crucial difference is that application servers support some <strong>distributed component</strong> technology, providing features like remote invocation and distributed transactions, like <strong>EJB</strong> in Java world or <strong>COM+</strong> on Microsoft platform. Http server often support some more simple programming environments, often scripting, like ASP (.NET) in case of Microsoft or Servlet--based, including JSP and many other in case of Java or PHP and CGI in case of Apache. Other capabilities like load-balancing, clustering, session-failover, connection pooling etc. that used to be in the realm of application servers, are becoming available on web servers as well directly or through some third party products. Finally, it is worth noting that the picture is further distorted with \"lightweight containers\" like Spring Framework, that often supplement the purpose of application servers in more simple manner and without the application server infrastructure. And since distribution aspect in applications is moving from distributed component towards service paradigm and SOA architecture, there is less and less space left for traditional application servers.",
        "summary": "Web Server -> Programming Environment IIS :                             ASP (.NET) Tomcat :                          Servlet Jetty :                            Servlet Apache :                          Php, CGI Application Servers -> Programming Environment MTS :                                COM+ WAS :                               EJB JBoss :                              EJB WebLogic Application Server :        EJB The crucial difference is that application servers support some <strong>distributed component</strong> technology, providing features like remote invocation and distributed transactions, like <strong>EJB</strong> in Java world or <strong>COM+</strong> on Microsoft platform."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can run the following query and find the duplicates with <code>max(id)</code> and delete those rows. But you'll have to run this query a few times.",
        "output": "You can run the following query and find the duplicates with <code>max(id)</code> and delete those rows.",
        "answer": "You can run the following query and find the duplicates with <code>max(id)</code> and delete those rows. But you'll have to run this query a few times.",
        "summary": "You can run the following query and find the duplicates with <code>max(id)</code> and delete those rows."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use SSMS Tools Pack (available for SQL Server 2005 and 2008). It comes with a feature for generating insert statements. http://www.ssmstoolspack.com/",
        "output": "You can use SSMS Tools Pack (available for SQL Server 2005 and 2008).",
        "answer": "You can use SSMS Tools Pack (available for SQL Server 2005 and 2008). It comes with a feature for generating insert statements. http://www.ssmstoolspack.com/",
        "summary": "You can use SSMS Tools Pack (available for SQL Server 2005 and 2008)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n With <code>visibility:hidden</code> the object still takes up vertical height on the page. With <code>display:none</code> it is completely removed. If you have text beneath an image and you do <code>display:none</code>, that text will shift up to fill the space where the image was. If you do visibility:hidden the text will remain in the same location.",
        "output": "With <code>visibility:hidden</code> the object still takes up vertical height on the page. With <code>display:none</code> it is completely removed.",
        "answer": "With <code>visibility:hidden</code> the object still takes up vertical height on the page. With <code>display:none</code> it is completely removed. If you have text beneath an image and you do <code>display:none</code>, that text will shift up to fill the space where the image was. If you do visibility:hidden the text will remain in the same location.",
        "summary": "With <code>visibility:hidden</code> the object still takes up vertical height on the page. With <code>display:none</code> it is completely removed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You have to do a result.next() before you can access the result. It's a very common idiom to do",
        "output": "You have to do a result.next() before you can access the result.",
        "answer": "You have to do a result.next() before you can access the result. It's a very common idiom to do",
        "summary": "You have to do a result.next() before you can access the result."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use parentheses to group the individual branches: In your case the parser won't ever see the <code>else</code> belonging to the <code>if</code> because <code>goto</code> will happily accept everything up to the end of the command. You can see a similar issue when using <code>echo</code> instead of <code>goto</code>. Also using parentheses will allow you to use the statements directly without having to jump around (although I wasn't able to rewrite your code to actually use structured programming techniques; maybe it's too early or it doesn't lend itself well to block structures as the code is right now).",
        "output": "In your case the parser won't ever see the <code>else</code> belonging to the <code>if</code> because <code>goto</code> will happily accept everything up to the end of the command. Also using parentheses will allow you to use the statements directly without having to jump around (although I wasn't able to rewrite your code to actually use structured programming techniques; maybe it's too early or it doesn't lend itself well to block structures as the code is right now).",
        "answer": "Use parentheses to group the individual branches: In your case the parser won't ever see the <code>else</code> belonging to the <code>if</code> because <code>goto</code> will happily accept everything up to the end of the command. You can see a similar issue when using <code>echo</code> instead of <code>goto</code>. Also using parentheses will allow you to use the statements directly without having to jump around (although I wasn't able to rewrite your code to actually use structured programming techniques; maybe it's too early or it doesn't lend itself well to block structures as the code is right now).",
        "summary": "In your case the parser won't ever see the <code>else</code> belonging to the <code>if</code> because <code>goto</code> will happily accept everything up to the end of the command. Also using parentheses will allow you to use the statements directly without having to jump around (although I wasn't able to rewrite your code to actually use structured programming techniques; maybe it's too early or it doesn't lend itself well to block structures as the code is right now)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Before using Inversion of Control you should be well aware of the fact that it has its pros and cons and you should know why you use it if you do so. Pros: Your code gets decoupled so you can easily exchange implementations of an interface with alternative implementations It is a strong motivator for coding against interfaces instead of implementations It's very easy to write unit tests for your code because it depends on nothing else than the objects it accepts in its constructor/setters and you can easily initialize them with the right objects in isolation. Cons: IoC not only inverts the control flow in your program, it also clouds it considerably. This means you can no longer just read your code and jump from one place to another because the connections that would normally be in your code are not in the code anymore. Instead it is in XML configuration files or annotations and in the code of your IoC container that interprets these metadata. There arises a new class of bugs where you get your XML config or your annotations wrong and you can spend a lot of time finding out why your IoC container injects a null reference into one of your objects under certain conditions. Personally I see the strong points of IoC and I really like them but I tend to avoid IoC whenever possible because it turns your software into a collection of classes that no longer constitute a \"real\" program but just something that needs to be put together by XML configuration or annotation metadata and would fall (and falls) apart without it.",
        "output": "Before using Inversion of Control you should be well aware of the fact that it has its pros and cons and you should know why you use it if you do so. Personally I see the strong points of IoC and I really like them but I tend to avoid IoC whenever possible because it turns your software into a collection of classes that no longer constitute a \"real\" program but just something that needs to be put together by XML configuration or annotation metadata and would fall (and falls) apart without it.",
        "answer": "Before using Inversion of Control you should be well aware of the fact that it has its pros and cons and you should know why you use it if you do so. Pros: Your code gets decoupled so you can easily exchange implementations of an interface with alternative implementations It is a strong motivator for coding against interfaces instead of implementations It's very easy to write unit tests for your code because it depends on nothing else than the objects it accepts in its constructor/setters and you can easily initialize them with the right objects in isolation. Cons: IoC not only inverts the control flow in your program, it also clouds it considerably. This means you can no longer just read your code and jump from one place to another because the connections that would normally be in your code are not in the code anymore. Instead it is in XML configuration files or annotations and in the code of your IoC container that interprets these metadata. There arises a new class of bugs where you get your XML config or your annotations wrong and you can spend a lot of time finding out why your IoC container injects a null reference into one of your objects under certain conditions. Personally I see the strong points of IoC and I really like them but I tend to avoid IoC whenever possible because it turns your software into a collection of classes that no longer constitute a \"real\" program but just something that needs to be put together by XML configuration or annotation metadata and would fall (and falls) apart without it.",
        "summary": "Before using Inversion of Control you should be well aware of the fact that it has its pros and cons and you should know why you use it if you do so. Personally I see the strong points of IoC and I really like them but I tend to avoid IoC whenever possible because it turns your software into a collection of classes that no longer constitute a \"real\" program but just something that needs to be put together by XML configuration or annotation metadata and would fall (and falls) apart without it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism is the ability of the programmer to write methods of the same name that do different things for different types of objects, depending on the needs of those objects. For example, if you were developing a class called <code>Fraction</code> and a class called <code>ComplexNumber</code>, both of these might include a method called <code>display()</code>, but each of them would implement that method differently. In PHP, for example, you might implement it like this: Outputs: Some of the other answers seem to imply that polymorphism is used only in conjunction with inheritance; for example, maybe <code>Fraction</code> and <code>ComplexNumber</code> both implement an abstract class called <code>Number</code> that has a method <code>display()</code>, which Fraction and ComplexNumber are then both obligated to implement. But you don't need inheritance to take advantage of polymorphism. At least in dynamically-typed languages like PHP (I don't know about C++ or Java), polymorphism allows the developer to call a method without necessarily knowing the type of object ahead of time, and trusting that the correct implementation of the method will be called. For example, say the user chooses the type of <code>Number</code> created: In this case, the appropriate <code>display()</code> method will be called, even though the developer can't know ahead of time whether the user will choose a fraction or a complex number.",
        "output": "Polymorphism is the ability of the programmer to write methods of the same name that do different things for different types of objects, depending on the needs of those objects.",
        "answer": "Polymorphism is the ability of the programmer to write methods of the same name that do different things for different types of objects, depending on the needs of those objects. For example, if you were developing a class called <code>Fraction</code> and a class called <code>ComplexNumber</code>, both of these might include a method called <code>display()</code>, but each of them would implement that method differently. In PHP, for example, you might implement it like this: Outputs: Some of the other answers seem to imply that polymorphism is used only in conjunction with inheritance; for example, maybe <code>Fraction</code> and <code>ComplexNumber</code> both implement an abstract class called <code>Number</code> that has a method <code>display()</code>, which Fraction and ComplexNumber are then both obligated to implement. But you don't need inheritance to take advantage of polymorphism. At least in dynamically-typed languages like PHP (I don't know about C++ or Java), polymorphism allows the developer to call a method without necessarily knowing the type of object ahead of time, and trusting that the correct implementation of the method will be called. For example, say the user chooses the type of <code>Number</code> created: In this case, the appropriate <code>display()</code> method will be called, even though the developer can't know ahead of time whether the user will choose a fraction or a complex number.",
        "summary": "Polymorphism is the ability of the programmer to write methods of the same name that do different things for different types of objects, depending on the needs of those objects."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to this thread, there is no way in Firebug to view what events are attached to listeners on a DOM element. It looks like the best you can do is either what tj111 suggests, or you could right-click the element in the HTML viewer, and click \"Log Events\" so you can see which events are firing for a particular DOM element. I suppose one could do that to see what events <em>could</em> be firing off particular functions.",
        "output": "According to this thread, there is no way in Firebug to view what events are attached to listeners on a DOM element. It looks like the best you can do is either what tj111 suggests, or you could right-click the element in the HTML viewer, and click \"Log Events\" so you can see which events are firing for a particular DOM element.",
        "answer": "According to this thread, there is no way in Firebug to view what events are attached to listeners on a DOM element. It looks like the best you can do is either what tj111 suggests, or you could right-click the element in the HTML viewer, and click \"Log Events\" so you can see which events are firing for a particular DOM element. I suppose one could do that to see what events <em>could</em> be firing off particular functions.",
        "summary": "According to this thread, there is no way in Firebug to view what events are attached to listeners on a DOM element. It looks like the best you can do is either what tj111 suggests, or you could right-click the element in the HTML viewer, and click \"Log Events\" so you can see which events are firing for a particular DOM element."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You could use FireQuery. It shows any events attached to DOM elements in the Firebug's HTML tab. It also shows any data attached to the elements through <code>$.data</code>.",
        "output": "You could use FireQuery.",
        "answer": "You could use FireQuery. It shows any events attached to DOM elements in the Firebug's HTML tab. It also shows any data attached to the elements through <code>$.data</code>.",
        "summary": "You could use FireQuery."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n MVVM adds the view model into the mix. This is important, as it allows you to use a lot of the binding approach of WPF, without putting all that UI specific pieces in your regular model. I may be wrong, but I am not sure MVVM really forces the controller into the mix. I find the concept to be more in line with: http://martinfowler.com/eaaDev/PresentationModel.html. I think that people choose to combine it with MVC, not that it is built in into the pattern.",
        "output": "MVVM adds the view model into the mix.",
        "answer": "MVVM adds the view model into the mix. This is important, as it allows you to use a lot of the binding approach of WPF, without putting all that UI specific pieces in your regular model. I may be wrong, but I am not sure MVVM really forces the controller into the mix. I find the concept to be more in line with: http://martinfowler.com/eaaDev/PresentationModel.html. I think that people choose to combine it with MVC, not that it is built in into the pattern.",
        "summary": "MVVM adds the view model into the mix."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Quite a few problems with your code: On <code>Arrays.asList</code> returning a fixed-size list From the API: <code>Arrays.asList</code>: Returns a fixed-size list backed by the specified array. You can't <code>add</code> to it; you can't <code>remove</code> from it. You can't structurally modify the <code>List</code>. Fix Create a <code>LinkedList</code>, which supports faster <code>remove</code>. On <code>split</code> taking regex From the API: <code>String.split(String regex)</code>: Splits this string around matches of the given regular expression. <code>|</code> is a regex metacharacter; if you want to split on a literal <code>|</code>, you must escape it to <code>\\|</code>, which as a Java string literal is <code>\"\\\\|\"</code>. Fix: On better algorithm Instead of calling <code>remove</code> one at a time with random indices, it's better to generate enough random numbers in the range, and then traversing the <code>List</code> once with a <code>listIterator()</code>, calling <code>remove()</code> at appropriate indices. There are questions on stackoverflow on how to generate random but distinct numbers in a given range. With this, your algorithm would be <code>O(N)</code>.",
        "output": "On <code>Arrays.asList</code> returning a fixed-size list",
        "answer": "Quite a few problems with your code: On <code>Arrays.asList</code> returning a fixed-size list From the API: <code>Arrays.asList</code>: Returns a fixed-size list backed by the specified array. You can't <code>add</code> to it; you can't <code>remove</code> from it. You can't structurally modify the <code>List</code>. Fix Create a <code>LinkedList</code>, which supports faster <code>remove</code>. On <code>split</code> taking regex From the API: <code>String.split(String regex)</code>: Splits this string around matches of the given regular expression. <code>|</code> is a regex metacharacter; if you want to split on a literal <code>|</code>, you must escape it to <code>\\|</code>, which as a Java string literal is <code>\"\\\\|\"</code>. Fix: On better algorithm Instead of calling <code>remove</code> one at a time with random indices, it's better to generate enough random numbers in the range, and then traversing the <code>List</code> once with a <code>listIterator()</code>, calling <code>remove()</code> at appropriate indices. There are questions on stackoverflow on how to generate random but distinct numbers in a given range. With this, your algorithm would be <code>O(N)</code>.",
        "summary": "On <code>Arrays.asList</code> returning a fixed-size list"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A stack overflow is usually called by nesting function calls too deeply (especially easy when using recursion, i.e. a function that calls itself) or allocating a large amount of memory on the stack where using the heap would be more appropriate.",
        "output": "A stack overflow is usually called by nesting function calls too deeply (especially easy when using recursion, i.e. a function that calls itself) or allocating a large amount of memory on the stack where using the heap would be more appropriate.",
        "answer": "A stack overflow is usually called by nesting function calls too deeply (especially easy when using recursion, i.e. a function that calls itself) or allocating a large amount of memory on the stack where using the heap would be more appropriate.",
        "summary": "A stack overflow is usually called by nesting function calls too deeply (especially easy when using recursion, i.e. a function that calls itself) or allocating a large amount of memory on the stack where using the heap would be more appropriate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n WinSCP works fine on Linux under Wine. I installed Wine and WinSCP and had no problems.",
        "output": "WinSCP works fine on Linux under Wine.",
        "answer": "WinSCP works fine on Linux under Wine. I installed Wine and WinSCP and had no problems.",
        "summary": "WinSCP works fine on Linux under Wine."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n First I would verify that your project's generated information isn't corrupt. Do a clean and rebuild on your solution. If that doesn't help, one thing I've seen work in the past for designer issues is opening up a windows forms project, then closing it again. This is a little chicken-entrails-ish, though, so don't hold your breath.",
        "output": "Do a clean and rebuild on your solution.",
        "answer": "First I would verify that your project's generated information isn't corrupt. Do a clean and rebuild on your solution. If that doesn't help, one thing I've seen work in the past for designer issues is opening up a windows forms project, then closing it again. This is a little chicken-entrails-ish, though, so don't hold your breath.",
        "summary": "Do a clean and rebuild on your solution."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can access single characters with <code>str.charAt(index)</code> or <code>str[index]</code>. But the latter way is not part of ECMAScript so you better go with the former one.",
        "output": "You can access single characters with <code>str.charAt(index)</code> or <code>str[index]</code>.",
        "answer": "You can access single characters with <code>str.charAt(index)</code> or <code>str[index]</code>. But the latter way is not part of ECMAScript so you better go with the former one.",
        "summary": "You can access single characters with <code>str.charAt(index)</code> or <code>str[index]</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I generally use the <code>typeof</code> operator: It will return <code>\"undefined\"</code> either if the property doesn't exist or its value is <code>undefined</code>. (See also: Difference between <code>undefined</code> and not being defined.) There are other ways to figure out if a property exists on an object, like the <code>hasOwnProperty</code> method: And the <code>in</code> operator: The difference between the last two is that the <code>hasOwnProperty</code> method will check if the property exist <em>physically</em> on the object (the property is not inherited). The <code>in</code> operator will check on all the properties reachable up in the prototype chain, e.g. : As you can see, <code>hasOwnProperty</code> returns <code>false</code> and the <code>in</code> operator returns <code>true</code> when checking the <code>toString</code> method, this method is defined up in the prototype chain, because <code>obj</code> inherits form <code>Object.prototype</code>.",
        "output": "I generally use the <code>typeof</code> operator: It will return <code>\"undefined\"</code> either if the property doesn't exist or its value is <code>undefined</code>.",
        "answer": "I generally use the <code>typeof</code> operator: It will return <code>\"undefined\"</code> either if the property doesn't exist or its value is <code>undefined</code>. (See also: Difference between <code>undefined</code> and not being defined.) There are other ways to figure out if a property exists on an object, like the <code>hasOwnProperty</code> method: And the <code>in</code> operator: The difference between the last two is that the <code>hasOwnProperty</code> method will check if the property exist <em>physically</em> on the object (the property is not inherited). The <code>in</code> operator will check on all the properties reachable up in the prototype chain, e.g. : As you can see, <code>hasOwnProperty</code> returns <code>false</code> and the <code>in</code> operator returns <code>true</code> when checking the <code>toString</code> method, this method is defined up in the prototype chain, because <code>obj</code> inherits form <code>Object.prototype</code>.",
        "summary": "I generally use the <code>typeof</code> operator: It will return <code>\"undefined\"</code> either if the property doesn't exist or its value is <code>undefined</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is a short article on this question @staticmethod function is nothing more than a function defined inside a class. It is callable without instantiating the class first. ItÃ©ÂÂ¥Ã¦ÂªÂ definition is immutable via inheritance. @classmethod function also callable without instantiating the class, but its definition follows Sub class, not Parent class, via inheritance. ThatÃ©ÂÂ¥Ã¦ÂªÂ because the first argument for @classmethod function must always be cls (class).",
        "output": "@staticmethod function is nothing more than a function defined inside a class. It is callable without instantiating the class first. ItÃ©ÂÂ¥Ã¦ÂªÂ definition is immutable via inheritance. @classmethod function also callable without instantiating the class, but its definition follows Sub class, not Parent class, via inheritance. ThatÃ©ÂÂ¥Ã¦ÂªÂ because the first argument for @classmethod function must always be cls (class).",
        "answer": "Here is a short article on this question @staticmethod function is nothing more than a function defined inside a class. It is callable without instantiating the class first. ItÃ©ÂÂ¥Ã¦ÂªÂ definition is immutable via inheritance. @classmethod function also callable without instantiating the class, but its definition follows Sub class, not Parent class, via inheritance. ThatÃ©ÂÂ¥Ã¦ÂªÂ because the first argument for @classmethod function must always be cls (class).",
        "summary": "@staticmethod function is nothing more than a function defined inside a class. It is callable without instantiating the class first. ItÃ©ÂÂ¥Ã¦ÂªÂ definition is immutable via inheritance. @classmethod function also callable without instantiating the class, but its definition follows Sub class, not Parent class, via inheritance. ThatÃ©ÂÂ¥Ã¦ÂªÂ because the first argument for @classmethod function must always be cls (class)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If the problem is a serious-enough annoyance to you, you might consider virtualenv. It allows you to create an environment that encapsulates python libraries. You install packages there rather than in the global site-packages directory. Any scripts you run in that environment have access to those packages (and optionally, your global ones as well). I use this a lot when evaluating packages that I am not sure I want/need to install globally. If you decide you don't need the package, it's easy enough to just blow that virtual environment away. It's pretty easy to use. Make a new env: virtual_envt installs setuptools for you in the new environment, so you can do: You can even create your own boostrap scripts that setup your new environment. So, with one command, you can create a new virtual env with, say, python 2.6, psycopg2 and django installed by default (you can can install an env-specific version of python if you want).",
        "output": "If the problem is a serious-enough annoyance to you, you might consider virtualenv.",
        "answer": "If the problem is a serious-enough annoyance to you, you might consider virtualenv. It allows you to create an environment that encapsulates python libraries. You install packages there rather than in the global site-packages directory. Any scripts you run in that environment have access to those packages (and optionally, your global ones as well). I use this a lot when evaluating packages that I am not sure I want/need to install globally. If you decide you don't need the package, it's easy enough to just blow that virtual environment away. It's pretty easy to use. Make a new env: virtual_envt installs setuptools for you in the new environment, so you can do: You can even create your own boostrap scripts that setup your new environment. So, with one command, you can create a new virtual env with, say, python 2.6, psycopg2 and django installed by default (you can can install an env-specific version of python if you want).",
        "summary": "If the problem is a serious-enough annoyance to you, you might consider virtualenv."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you mean shortcut then CTRL + M + M: This one will collapse the region your cursor is at whether its a method, namespace or whatever for collapsing code blocks, regions and methods. The first will collapse only the block/method or region your cursor is at while the second will collapse the entire region you are at. http://www.dev102.com/2008/05/06/11-more-visual-studio-shortcuts-you-should-know/",
        "output": "If you mean shortcut then CTRL + M + M: This one will collapse the region your cursor is at whether its a method, namespace or whatever for collapsing code blocks, regions and methods.",
        "answer": "If you mean shortcut then CTRL + M + M: This one will collapse the region your cursor is at whether its a method, namespace or whatever for collapsing code blocks, regions and methods. The first will collapse only the block/method or region your cursor is at while the second will collapse the entire region you are at. http://www.dev102.com/2008/05/06/11-more-visual-studio-shortcuts-you-should-know/",
        "summary": "If you mean shortcut then CTRL + M + M: This one will collapse the region your cursor is at whether its a method, namespace or whatever for collapsing code blocks, regions and methods."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Everything outside the curly brackets is disposed, so it is great to dispose your objects if you are not using them. This is so because if you have a SqlDataAdapter object and you are using it only once in the application life cycle and you are filling just one dataset and you don't need it anymore, you can use the code: BIGBLOCK",
        "output": "Everything outside the curly brackets is disposed, so it is great to dispose your objects if you are not using them.",
        "answer": "Everything outside the curly brackets is disposed, so it is great to dispose your objects if you are not using them. This is so because if you have a SqlDataAdapter object and you are using it only once in the application life cycle and you are filling just one dataset and you don't need it anymore, you can use the code: BIGBLOCK",
        "summary": "Everything outside the curly brackets is disposed, so it is great to dispose your objects if you are not using them."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <strong>function</strong> is a piece of code that is called by name. It can be passed data to operate on (i.e. the parameters) and can optionally return data (the return value). All data that is passed to a function is explicitly passed. A <strong>method</strong> is a piece of code that is called by a name that is associated with an object. In most respects it is identical to a function except for two key differences: <li>A method is implicitly passed the object on which it was called. <li>A method is able to operate on data that is contained within the class (remembering that an object is an instance of a class - the class is the definition, the object is an instance of that data). (this is a simplified explanation, ignoring issues of scope etc.)",
        "output": "A <strong>function</strong> is a piece of code that is called by name. In most respects it is identical to a function except for two key differences: <li>A method is implicitly passed the object on which it was called. <li>A method is able to operate on data that is contained within the class (remembering that an object is an instance of a class - the class is the definition, the object is an instance of that data).",
        "answer": "A <strong>function</strong> is a piece of code that is called by name. It can be passed data to operate on (i.e. the parameters) and can optionally return data (the return value). All data that is passed to a function is explicitly passed. A <strong>method</strong> is a piece of code that is called by a name that is associated with an object. In most respects it is identical to a function except for two key differences: <li>A method is implicitly passed the object on which it was called. <li>A method is able to operate on data that is contained within the class (remembering that an object is an instance of a class - the class is the definition, the object is an instance of that data). (this is a simplified explanation, ignoring issues of scope etc.)",
        "summary": "A <strong>function</strong> is a piece of code that is called by name. In most respects it is identical to a function except for two key differences: <li>A method is implicitly passed the object on which it was called. <li>A method is able to operate on data that is contained within the class (remembering that an object is an instance of a class - the class is the definition, the object is an instance of that data)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One interesting example of a binary tree that hasn't been mentioned is that of a recursively evaluated mathematical expression. It's basically useless from a practical standpoint, but it is an interesting way to think of such expressions. Basically each node of the tree has a value that is either inherent to itself or is evaluated by recursively by operating on the values of its children. For example, the expression <code>(1+3)*2</code> can be expressed as: BIGBLOCK To evaluate the expression, we ask for the value of the parent. This node in turn gets its values from its children, a plus operator and a node that simply contains '2'. The plus operator in turn gets its values from children with values '1' and '3' and adds them, returning 4 to the multiplication node which returns 8. This use of a binary tree is akin to reverse polish notation in a sense, in that the order in which operations are performed is identical. Also one thing to note is that it doesn't necessarily have to be a binary tree, it's just that most commonly used operators are binary. At its most basic level, the binary tree here is in fact just a very simple purely functional programming language.",
        "output": "One interesting example of a binary tree that hasn't been mentioned is that of a recursively evaluated mathematical expression. Basically each node of the tree has a value that is either inherent to itself or is evaluated by recursively by operating on the values of its children. This use of a binary tree is akin to reverse polish notation in a sense, in that the order in which operations are performed is identical. Also one thing to note is that it doesn't necessarily have to be a binary tree, it's just that most commonly used operators are binary. At its most basic level, the binary tree here is in fact just a very simple purely functional programming language.",
        "answer": "One interesting example of a binary tree that hasn't been mentioned is that of a recursively evaluated mathematical expression. It's basically useless from a practical standpoint, but it is an interesting way to think of such expressions. Basically each node of the tree has a value that is either inherent to itself or is evaluated by recursively by operating on the values of its children. For example, the expression <code>(1+3)*2</code> can be expressed as: BIGBLOCK To evaluate the expression, we ask for the value of the parent. This node in turn gets its values from its children, a plus operator and a node that simply contains '2'. The plus operator in turn gets its values from children with values '1' and '3' and adds them, returning 4 to the multiplication node which returns 8. This use of a binary tree is akin to reverse polish notation in a sense, in that the order in which operations are performed is identical. Also one thing to note is that it doesn't necessarily have to be a binary tree, it's just that most commonly used operators are binary. At its most basic level, the binary tree here is in fact just a very simple purely functional programming language.",
        "summary": "One interesting example of a binary tree that hasn't been mentioned is that of a recursively evaluated mathematical expression. Basically each node of the tree has a value that is either inherent to itself or is evaluated by recursively by operating on the values of its children. This use of a binary tree is akin to reverse polish notation in a sense, in that the order in which operations are performed is identical. Also one thing to note is that it doesn't necessarily have to be a binary tree, it's just that most commonly used operators are binary. At its most basic level, the binary tree here is in fact just a very simple purely functional programming language."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In my case I had to change the &lt;VirtualHost *&gt; back to &lt;VirtualHost *:80&gt; (which is the default on Ubuntu). Otherwise, the port 443 wasn't using SSL and was sending plain HTML back to the browser. You can check whether this is your case quite easily: just connect to your server http://www.example.com:443. If you see plain HTML, your Apache is not using SSL on port 443 at all, most probably due to a VirtualHost misconfiguration. Cheers!",
        "output": "In my case I had to change the &lt;VirtualHost *&gt; back to &lt;VirtualHost *:80&gt; (which is the default on Ubuntu). Otherwise, the port 443 wasn't using SSL and was sending plain HTML back to the browser. If you see plain HTML, your Apache is not using SSL on port 443 at all, most probably due to a VirtualHost misconfiguration.",
        "answer": "In my case I had to change the &lt;VirtualHost *&gt; back to &lt;VirtualHost *:80&gt; (which is the default on Ubuntu). Otherwise, the port 443 wasn't using SSL and was sending plain HTML back to the browser. You can check whether this is your case quite easily: just connect to your server http://www.example.com:443. If you see plain HTML, your Apache is not using SSL on port 443 at all, most probably due to a VirtualHost misconfiguration. Cheers!",
        "summary": "In my case I had to change the &lt;VirtualHost *&gt; back to &lt;VirtualHost *:80&gt; (which is the default on Ubuntu). Otherwise, the port 443 wasn't using SSL and was sending plain HTML back to the browser. If you see plain HTML, your Apache is not using SSL on port 443 at all, most probably due to a VirtualHost misconfiguration."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Interestingly, you can also use the using/IDisposable pattern for other interesting things (such as the other point of the way that Rhino Mocks uses it). Basically, you can take advantage of the fact that the compiler will <strong>always</strong> call .Dispose on the \"used\" object. If you have something that needs to happen after a certain operation ... something that has a definite start and end ... then you can simply make an IDisposable class that starts the operation in the constructor, and then finishes in the Dispose method. This allows you to use the really nice using syntax to denote the explicit start and end of said operation. This is also how the System.Transactions stuff works.",
        "output": "Basically, you can take advantage of the fact that the compiler will <strong>always</strong> call .Dispose on the \"used\" object. If you have something that needs to happen after a certain operation ... something that has a definite start and end ... then you can simply make an IDisposable class that starts the operation in the constructor, and then finishes in the Dispose method. This is also how the System.Transactions stuff works.",
        "answer": "Interestingly, you can also use the using/IDisposable pattern for other interesting things (such as the other point of the way that Rhino Mocks uses it). Basically, you can take advantage of the fact that the compiler will <strong>always</strong> call .Dispose on the \"used\" object. If you have something that needs to happen after a certain operation ... something that has a definite start and end ... then you can simply make an IDisposable class that starts the operation in the constructor, and then finishes in the Dispose method. This allows you to use the really nice using syntax to denote the explicit start and end of said operation. This is also how the System.Transactions stuff works.",
        "summary": "Basically, you can take advantage of the fact that the compiler will <strong>always</strong> call .Dispose on the \"used\" object. If you have something that needs to happen after a certain operation ... something that has a definite start and end ... then you can simply make an IDisposable class that starts the operation in the constructor, and then finishes in the Dispose method. This is also how the System.Transactions stuff works."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try (depending on what result type you want): Advantage: Boolean: this does not create new instances of Boolean, so performance is better (and less garbage-collection). It reuses the two instances of either <code>Boolean.TRUE</code> or <code>Boolean.FALSE</code>. boolean: no instance is needed, you use the primitive type. The official documentation is in the Javadoc. UPDATED: Autoboxing could also be used, but it has a performance cost. I suggest to use it only when you would have to cast yourself, not when the cast is avoidable.",
        "output": "Try (depending on what result type you want):",
        "answer": "Try (depending on what result type you want): Advantage: Boolean: this does not create new instances of Boolean, so performance is better (and less garbage-collection). It reuses the two instances of either <code>Boolean.TRUE</code> or <code>Boolean.FALSE</code>. boolean: no instance is needed, you use the primitive type. The official documentation is in the Javadoc. UPDATED: Autoboxing could also be used, but it has a performance cost. I suggest to use it only when you would have to cast yourself, not when the cast is avoidable.",
        "summary": "Try (depending on what result type you want):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One item that seems to have been missed is star transformations. Index Intersection operators resolve the predicate by calculating the set of rows hit by each of the predicates before any I/O is done on the fact table. On a star schema you would index each individual dimension key and the query optimiser can resolve which rows to select by the index intersection computation. The indexes on individual columns give the best flexibility for this.",
        "output": "One item that seems to have been missed is star transformations. Index Intersection operators resolve the predicate by calculating the set of rows hit by each of the predicates before any I/O is done on the fact table.",
        "answer": "One item that seems to have been missed is star transformations. Index Intersection operators resolve the predicate by calculating the set of rows hit by each of the predicates before any I/O is done on the fact table. On a star schema you would index each individual dimension key and the query optimiser can resolve which rows to select by the index intersection computation. The indexes on individual columns give the best flexibility for this.",
        "summary": "One item that seems to have been missed is star transformations. Index Intersection operators resolve the predicate by calculating the set of rows hit by each of the predicates before any I/O is done on the fact table."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Special methods</strong> Absolute power!",
        "output": "<strong>Special methods</strong>",
        "answer": "<strong>Special methods</strong> Absolute power!",
        "summary": "<strong>Special methods</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n But you can also do it in openssl (<code>openssl enc</code> command does it....), look at the <code>BIO_f_base64()</code> function",
        "output": "But you can also do it in openssl (<code>openssl enc</code> command does it....), look at the <code>BIO_f_base64()</code> function",
        "answer": "But you can also do it in openssl (<code>openssl enc</code> command does it....), look at the <code>BIO_f_base64()</code> function",
        "summary": "But you can also do it in openssl (<code>openssl enc</code> command does it....), look at the <code>BIO_f_base64()</code> function"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can only call notify on objects where you own their monitor. So you need something like BIGBLOCK",
        "output": "You can only call notify on objects where you own their monitor.",
        "answer": "You can only call notify on objects where you own their monitor. So you need something like BIGBLOCK",
        "summary": "You can only call notify on objects where you own their monitor."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I had this error; it happened somewhat spontaneously, and the page would halt in the browser in the middle of an HTML tag (not a section of code). It was baffling! Turns out, I let a variable go out of scope and the garbage collector swept it away and then I tried to use it. Thus the seemingly-random timing. To give a more concrete example... Inside a method, I had something like: Now in my JSP page, I called that method and used the List object returned by it. The List object is backed by that \"foos\" array; but, the array went out of scope when I returned from the method (since it is a local variable). So shortly after returning, the garbage collector swept away the \"foos\" array, and my access to the List caused a NullPointerException since its underlying array was now wiped away. I actually wondered, as I wrote the above method, whether that would happen. The even deeper underlying problem was premature optimization. I wanted a list, but I knew I would have exactly 20 elements, so I figured I'd try to be more efficient than <code>new ArrayList&lt;Foo&gt;(20)</code> which only sets an initial size of 20 but can possibly be less efficient than the method I used. So of course, to fix it, I just created my ArrayList, filled it up, and returned it. No more strange error.",
        "output": "Turns out, I let a variable go out of scope and the garbage collector swept it away and then I tried to use it. The even deeper underlying problem was premature optimization. So of course, to fix it, I just created my ArrayList, filled it up, and returned it.",
        "answer": "I had this error; it happened somewhat spontaneously, and the page would halt in the browser in the middle of an HTML tag (not a section of code). It was baffling! Turns out, I let a variable go out of scope and the garbage collector swept it away and then I tried to use it. Thus the seemingly-random timing. To give a more concrete example... Inside a method, I had something like: Now in my JSP page, I called that method and used the List object returned by it. The List object is backed by that \"foos\" array; but, the array went out of scope when I returned from the method (since it is a local variable). So shortly after returning, the garbage collector swept away the \"foos\" array, and my access to the List caused a NullPointerException since its underlying array was now wiped away. I actually wondered, as I wrote the above method, whether that would happen. The even deeper underlying problem was premature optimization. I wanted a list, but I knew I would have exactly 20 elements, so I figured I'd try to be more efficient than <code>new ArrayList&lt;Foo&gt;(20)</code> which only sets an initial size of 20 but can possibly be less efficient than the method I used. So of course, to fix it, I just created my ArrayList, filled it up, and returned it. No more strange error.",
        "summary": "Turns out, I let a variable go out of scope and the garbage collector swept it away and then I tried to use it. The even deeper underlying problem was premature optimization. So of course, to fix it, I just created my ArrayList, filled it up, and returned it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A method is on an object. A function is independent of an object. For Java, there are only methods. For C, there are only functions. For C++ it would depend on whether or not you're in a class.",
        "output": "A method is on an object. A function is independent of an object. For Java, there are only methods. For C, there are only functions. For C++ it would depend on whether or not you're in a class.",
        "answer": "A method is on an object. A function is independent of an object. For Java, there are only methods. For C, there are only functions. For C++ it would depend on whether or not you're in a class.",
        "summary": "A method is on an object. A function is independent of an object. For Java, there are only methods. For C, there are only functions. For C++ it would depend on whether or not you're in a class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In C# 4, you will be able to use built-in support for tuples to handle this easily. In the meantime, there are two options. First, you can use ref or out parameters to assign values to your parameters, which get passed back to the calling routine. This looks like: Second, you can wrap up your return values into a structure or class, and pass them back as members of that structure. KeyValuePair works well for 2 - for more than 2 you would need a custom class or struct.",
        "output": "First, you can use ref or out parameters to assign values to your parameters, which get passed back to the calling routine. Second, you can wrap up your return values into a structure or class, and pass them back as members of that structure.",
        "answer": "In C# 4, you will be able to use built-in support for tuples to handle this easily. In the meantime, there are two options. First, you can use ref or out parameters to assign values to your parameters, which get passed back to the calling routine. This looks like: Second, you can wrap up your return values into a structure or class, and pass them back as members of that structure. KeyValuePair works well for 2 - for more than 2 you would need a custom class or struct.",
        "summary": "First, you can use ref or out parameters to assign values to your parameters, which get passed back to the calling routine. Second, you can wrap up your return values into a structure or class, and pass them back as members of that structure."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here: That is a basic tree structure that can be used for <code>String</code> or any other object. It is fairly easy to implement simple trees to do what you need. All you need to add are methods for add to, removing from, traversing, and constructors. The <code>Node</code> is the basic building block of the <code>Tree</code>.",
        "output": "It is fairly easy to implement simple trees to do what you need. All you need to add are methods for add to, removing from, traversing, and constructors.",
        "answer": "Here: That is a basic tree structure that can be used for <code>String</code> or any other object. It is fairly easy to implement simple trees to do what you need. All you need to add are methods for add to, removing from, traversing, and constructors. The <code>Node</code> is the basic building block of the <code>Tree</code>.",
        "summary": "It is fairly easy to implement simple trees to do what you need. All you need to add are methods for add to, removing from, traversing, and constructors."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Probably you didn't provide an argument on the command line. In that case, <code>sys.argv</code> only contains one value, but it would have to have two in order to provide values for both <code>user_name</code> and <code>script</code>.",
        "output": "In that case, <code>sys.argv</code> only contains one value, but it would have to have two in order to provide values for both <code>user_name</code> and <code>script</code>.",
        "answer": "Probably you didn't provide an argument on the command line. In that case, <code>sys.argv</code> only contains one value, but it would have to have two in order to provide values for both <code>user_name</code> and <code>script</code>.",
        "summary": "In that case, <code>sys.argv</code> only contains one value, but it would have to have two in order to provide values for both <code>user_name</code> and <code>script</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is nothing like LINQ for Java. ... <strong>Edit</strong> Now with Java 8 we are introduced to the Stream API, this is a similar kind of thing when dealing with collections, but it is not quite the same as Linq. If it is a ORM you are looking for, like Entity Framework, then you can try Hibernate :-)",
        "output": "There is nothing like LINQ for Java. Now with Java 8 we are introduced to the Stream API, this is a similar kind of thing when dealing with collections, but it is not quite the same as Linq.",
        "answer": "There is nothing like LINQ for Java. ... <strong>Edit</strong> Now with Java 8 we are introduced to the Stream API, this is a similar kind of thing when dealing with collections, but it is not quite the same as Linq. If it is a ORM you are looking for, like Entity Framework, then you can try Hibernate :-)",
        "summary": "There is nothing like LINQ for Java. Now with Java 8 we are introduced to the Stream API, this is a similar kind of thing when dealing with collections, but it is not quite the same as Linq."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n ^\\d+$, which is \"start of string\", \"1 or more digits\", \"end of string\" in English.",
        "output": "^\\d+$, which is \"start of string\", \"1 or more digits\", \"end of string\" in English.",
        "answer": "^\\d+$, which is \"start of string\", \"1 or more digits\", \"end of string\" in English.",
        "summary": "^\\d+$, which is \"start of string\", \"1 or more digits\", \"end of string\" in English."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use Python's JSON support instead of using awk! Something like this:",
        "output": "Use Python's JSON support instead of using awk!",
        "answer": "Use Python's JSON support instead of using awk! Something like this:",
        "summary": "Use Python's JSON support instead of using awk!"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Good question. <li>When in a CSS file, URLs will be relative to the CSS file. <li>When writing properties using JavaScript, URLs should always be relative to the page (the main resource requested). There is no <code>tilde</code> functionality built-in in JS that I know of. The usual way would be to define a JavaScript variable specifying the base path: BIGBLOCK and to reference that root whenever you assign URLs dynamically.",
        "output": "<li>When in a CSS file, URLs will be relative to the CSS file. <li>When writing properties using JavaScript, URLs should always be relative to the page (the main resource requested). The usual way would be to define a JavaScript variable specifying the base path: BIGBLOCK",
        "answer": "Good question. <li>When in a CSS file, URLs will be relative to the CSS file. <li>When writing properties using JavaScript, URLs should always be relative to the page (the main resource requested). There is no <code>tilde</code> functionality built-in in JS that I know of. The usual way would be to define a JavaScript variable specifying the base path: BIGBLOCK and to reference that root whenever you assign URLs dynamically.",
        "summary": "<li>When in a CSS file, URLs will be relative to the CSS file. <li>When writing properties using JavaScript, URLs should always be relative to the page (the main resource requested). The usual way would be to define a JavaScript variable specifying the base path: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In practice, the difference is in the location where the preprocessor searches for the included file. For <code>#include &lt;filename&gt;</code> the preprocessor searches in an implementation dependent manner, normally in search directories pre-designated by the compiler/IDE. This method is normally used to include standard library header files. For <code>#include \"filename\"</code> the preprocessor searches first in the same directory as the file containing the directive, and then follows the search path used for the <code>#include &lt;filename&gt;</code> form. This method is normally used to include programmer-defined header files. A more complete description is available in the GCC documentation on search paths.",
        "output": "In practice, the difference is in the location where the preprocessor searches for the included file. For <code>#include &lt;filename&gt;</code> the preprocessor searches in an implementation dependent manner, normally in search directories pre-designated by the compiler/IDE. For <code>#include \"filename\"</code> the preprocessor searches first in the same directory as the file containing the directive, and then follows the search path used for the <code>#include &lt;filename&gt;</code> form.",
        "answer": "In practice, the difference is in the location where the preprocessor searches for the included file. For <code>#include &lt;filename&gt;</code> the preprocessor searches in an implementation dependent manner, normally in search directories pre-designated by the compiler/IDE. This method is normally used to include standard library header files. For <code>#include \"filename\"</code> the preprocessor searches first in the same directory as the file containing the directive, and then follows the search path used for the <code>#include &lt;filename&gt;</code> form. This method is normally used to include programmer-defined header files. A more complete description is available in the GCC documentation on search paths.",
        "summary": "In practice, the difference is in the location where the preprocessor searches for the included file. For <code>#include &lt;filename&gt;</code> the preprocessor searches in an implementation dependent manner, normally in search directories pre-designated by the compiler/IDE. For <code>#include \"filename\"</code> the preprocessor searches first in the same directory as the file containing the directive, and then follows the search path used for the <code>#include &lt;filename&gt;</code> form."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you know it's in dd/mm/YYYY, you can do: BIGBLOCK It will match dates in the form d/m/YY or dd/mm/YYYY (or any combination of the two)... If you want to support more separators than just /, you can change the regex to: BIGBLOCK And then add any characters you want into the <code>[/-]</code> bit (Note, the - character needs to be last)",
        "output": "If you know it's in dd/mm/YYYY, you can do: BIGBLOCK If you want to support more separators than just /, you can change the regex to: BIGBLOCK",
        "answer": "If you know it's in dd/mm/YYYY, you can do: BIGBLOCK It will match dates in the form d/m/YY or dd/mm/YYYY (or any combination of the two)... If you want to support more separators than just /, you can change the regex to: BIGBLOCK And then add any characters you want into the <code>[/-]</code> bit (Note, the - character needs to be last)",
        "summary": "If you know it's in dd/mm/YYYY, you can do: BIGBLOCK If you want to support more separators than just /, you can change the regex to: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I also put dsym, app bundle, and crash log together in the same directory before running symbolicate crash Then I use this function defined in my .profile to simplify running symbolicatecrash: BIGBLOCK The arguments added there may help you. You can check to make sure spotlight \"sees\" your dysm files by running the command: BIGBLOCK Look for the dsym you have in your directory. NOTE: As of the latest Xcode, there is no longer a Developer directory. You can find this utility here: <strong>/Applications/Xcode.app/Contents/SharedFrameworks/DTDeviceKitBase.framework/Vers‌​ions/A/Resources/symbolicatecrash</strong>",
        "output": "Then I use this function defined in my .profile to simplify running symbolicatecrash: BIGBLOCK You can check to make sure spotlight \"sees\" your dysm files by running the command: BIGBLOCK",
        "answer": "I also put dsym, app bundle, and crash log together in the same directory before running symbolicate crash Then I use this function defined in my .profile to simplify running symbolicatecrash: BIGBLOCK The arguments added there may help you. You can check to make sure spotlight \"sees\" your dysm files by running the command: BIGBLOCK Look for the dsym you have in your directory. NOTE: As of the latest Xcode, there is no longer a Developer directory. You can find this utility here: <strong>/Applications/Xcode.app/Contents/SharedFrameworks/DTDeviceKitBase.framework/Vers‌​ions/A/Resources/symbolicatecrash</strong>",
        "summary": "Then I use this function defined in my .profile to simplify running symbolicatecrash: BIGBLOCK You can check to make sure spotlight \"sees\" your dysm files by running the command: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You're doing nothing wrong! You've changed the directory, but only within the subshell that runs the script. You can run the script in your current process with the \"dot\" command: But I'd prefer Greg's suggestion to use an alias in this simple case.",
        "output": "You've changed the directory, but only within the subshell that runs the script.",
        "answer": "You're doing nothing wrong! You've changed the directory, but only within the subshell that runs the script. You can run the script in your current process with the \"dot\" command: But I'd prefer Greg's suggestion to use an alias in this simple case.",
        "summary": "You've changed the directory, but only within the subshell that runs the script."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For a PUT request: HTTP 200 or HTTP 204 should imply \"resource updated successfully\". For a DELETE request: HTTP 200 or HTTP 204 should imply \"resource deleted successfully\". HTTP 202 can also be returned which would imply that the instruction was accepted by the server and the \"resource was marked for deletion\". 9.6 PUT If an existing resource is modified, either the 200 (OK) or 204 (No Content) response codes > SHOULD be sent to indicate successful completion of the request. 9.7 DELETE A successful response SHOULD be 200 (OK) if the response includes an entity describing the status, 202 (Accepted) if the action has not yet been enacted, or 204 (No Content) if the action has been enacted but the response does not include an entity. Source: w3.org: HTTP/1.1 Method Definitions HTTP 200 OK: Standard response for successful HTTP   requests. The actual response will   depend on the request method used. HTTP 204 No Content: The server successfully processed the request, but is not returning any content Source: List of HTTP status codes: 2xx Success",
        "output": "For a PUT request: HTTP 200 or HTTP 204 should imply \"resource updated successfully\". For a DELETE request: HTTP 200 or HTTP 204 should imply \"resource deleted successfully\". HTTP 202 can also be returned which would imply that the instruction was accepted by the server and the \"resource was marked for deletion\".",
        "answer": "For a PUT request: HTTP 200 or HTTP 204 should imply \"resource updated successfully\". For a DELETE request: HTTP 200 or HTTP 204 should imply \"resource deleted successfully\". HTTP 202 can also be returned which would imply that the instruction was accepted by the server and the \"resource was marked for deletion\". 9.6 PUT If an existing resource is modified, either the 200 (OK) or 204 (No Content) response codes > SHOULD be sent to indicate successful completion of the request. 9.7 DELETE A successful response SHOULD be 200 (OK) if the response includes an entity describing the status, 202 (Accepted) if the action has not yet been enacted, or 204 (No Content) if the action has been enacted but the response does not include an entity. Source: w3.org: HTTP/1.1 Method Definitions HTTP 200 OK: Standard response for successful HTTP   requests. The actual response will   depend on the request method used. HTTP 204 No Content: The server successfully processed the request, but is not returning any content Source: List of HTTP status codes: 2xx Success",
        "summary": "For a PUT request: HTTP 200 or HTTP 204 should imply \"resource updated successfully\". For a DELETE request: HTTP 200 or HTTP 204 should imply \"resource deleted successfully\". HTTP 202 can also be returned which would imply that the instruction was accepted by the server and the \"resource was marked for deletion\"."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think you should consider the AcceptTypes of the request. I am using it in my current project to return the correct content type as follows. Your action on the controller can test it as on the request object You can then implement the aspx of the view to cater for the partial xhtml response case. Then in jQuery you can fetch it passing the type parameter as json: Hope this helps James",
        "output": "I think you should consider the AcceptTypes of the request. I am using it in my current project to return the correct content type as follows.",
        "answer": "I think you should consider the AcceptTypes of the request. I am using it in my current project to return the correct content type as follows. Your action on the controller can test it as on the request object You can then implement the aspx of the view to cater for the partial xhtml response case. Then in jQuery you can fetch it passing the type parameter as json: Hope this helps James",
        "summary": "I think you should consider the AcceptTypes of the request. I am using it in my current project to return the correct content type as follows."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've just experienced this issue. For me it appeared when some erroneous code was trying to redirect to HTTPS on port 80. e.g. https://example.com:80/some/page by removing the port 80 from the url, the redirect works. HTTPS by default runs over port 443.",
        "output": "For me it appeared when some erroneous code was trying to redirect to HTTPS on port 80. by removing the port 80 from the url, the redirect works. HTTPS by default runs over port 443.",
        "answer": "I've just experienced this issue. For me it appeared when some erroneous code was trying to redirect to HTTPS on port 80. e.g. https://example.com:80/some/page by removing the port 80 from the url, the redirect works. HTTPS by default runs over port 443.",
        "summary": "For me it appeared when some erroneous code was trying to redirect to HTTPS on port 80. by removing the port 80 from the url, the redirect works. HTTPS by default runs over port 443."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n HTML / HTTP is stateless, in other words, what you did / saw on the previous page, is completely unconnected with the current page. <em>Except</em> if you use something like sessions, cookies or GET / POST variables. Sessions and cookies are quite easy to use, with session being by far more secure than cookies. More secure, but not completely secure. <strong>Session:</strong> Remember to run the <code>session_start();</code> statement on both these pages before you try to access the <code>$_SESSION</code> array, and also before any output is sent to the browser. <strong>Cookie:</strong> The big difference between sessions and cookies is that the value of the variable will be stored on the server if you're using sessions, and on the client if you're using cookies. I can't think of any good reason to use cookies instead of sessions, except if you want data to persist between sessions, but even then it's perhaps better to store it in a DB, and retrieve it based on a username or id. <strong>GET and POST</strong> You can add the variable in the link to the next page: This will create a GET variable. Another way is to include a hidden field in a form that submits to page two: And then on page two: Just change the method for the form to <code>post</code> if you want to do it via post. Both are equally insecure, although GET is easier to hack. The fact that each new request is, except for session data, a totally new instance of the script caught me when I first started coding in PHP. Once you get used to it, it's quite simple though.",
        "output": "HTML / HTTP is stateless, in other words, what you did / saw on the previous page, is completely unconnected with the current page. <em>Except</em> if you use something like sessions, cookies or GET / POST variables. Sessions and cookies are quite easy to use, with session being by far more secure than cookies. You can add the variable in the link to the next page: This will create a GET variable. Another way is to include a hidden field in a form that submits to page two: And then on page two: Just change the method for the form to <code>post</code> if you want to do it via post.",
        "answer": "HTML / HTTP is stateless, in other words, what you did / saw on the previous page, is completely unconnected with the current page. <em>Except</em> if you use something like sessions, cookies or GET / POST variables. Sessions and cookies are quite easy to use, with session being by far more secure than cookies. More secure, but not completely secure. <strong>Session:</strong> Remember to run the <code>session_start();</code> statement on both these pages before you try to access the <code>$_SESSION</code> array, and also before any output is sent to the browser. <strong>Cookie:</strong> The big difference between sessions and cookies is that the value of the variable will be stored on the server if you're using sessions, and on the client if you're using cookies. I can't think of any good reason to use cookies instead of sessions, except if you want data to persist between sessions, but even then it's perhaps better to store it in a DB, and retrieve it based on a username or id. <strong>GET and POST</strong> You can add the variable in the link to the next page: This will create a GET variable. Another way is to include a hidden field in a form that submits to page two: And then on page two: Just change the method for the form to <code>post</code> if you want to do it via post. Both are equally insecure, although GET is easier to hack. The fact that each new request is, except for session data, a totally new instance of the script caught me when I first started coding in PHP. Once you get used to it, it's quite simple though.",
        "summary": "HTML / HTTP is stateless, in other words, what you did / saw on the previous page, is completely unconnected with the current page. <em>Except</em> if you use something like sessions, cookies or GET / POST variables. Sessions and cookies are quite easy to use, with session being by far more secure than cookies. You can add the variable in the link to the next page: This will create a GET variable. Another way is to include a hidden field in a form that submits to page two: And then on page two: Just change the method for the form to <code>post</code> if you want to do it via post."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I usually use usort, and pass my own comparison function. In this case, it is very simple:",
        "output": "I usually use usort, and pass my own comparison function.",
        "answer": "I usually use usort, and pass my own comparison function. In this case, it is very simple:",
        "summary": "I usually use usort, and pass my own comparison function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It doesn't matter at all, but class makes it look like T can only be a class, while it can of course be any type. So typename is more accurate. On the other hand, most people use class, so that is probably easier to read generally.",
        "output": "So typename is more accurate.",
        "answer": "It doesn't matter at all, but class makes it look like T can only be a class, while it can of course be any type. So typename is more accurate. On the other hand, most people use class, so that is probably easier to read generally.",
        "summary": "So typename is more accurate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's a little code sample for C# I knocked up, be careful around the edge cases specifically leap years, not all the above solutions take them into account. Pushing the answer out as a DateTime can cause problems as you could end up trying to put too many days into a specific month e.g. 30 days in Feb.",
        "output": "Here's a little code sample for C# I knocked up, be careful around the edge cases specifically leap years, not all the above solutions take them into account.",
        "answer": "Here's a little code sample for C# I knocked up, be careful around the edge cases specifically leap years, not all the above solutions take them into account. Pushing the answer out as a DateTime can cause problems as you could end up trying to put too many days into a specific month e.g. 30 days in Feb.",
        "summary": "Here's a little code sample for C# I knocked up, be careful around the edge cases specifically leap years, not all the above solutions take them into account."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you just want to set the source of the image you can use this.",
        "output": "If you just want to set the source of the image you can use this.",
        "answer": "If you just want to set the source of the image you can use this.",
        "summary": "If you just want to set the source of the image you can use this."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use this:",
        "output": "I use this:",
        "answer": "I use this:",
        "summary": "I use this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <em>POD</em> stands for <em>Plain Old Data</em> - that is, a class (whether defined with the keyword <code>struct</code> or the keyword <code>class</code>) without constructors, destructors and virtual members functions. Wikipedia's article on POD goes into a bit more detail and defines it as: A Plain Old Data Structure in C++ is an aggregate class that contains only PODS as members, has no user-defined destructor, no user-defined copy assignment operator, and no nonstatic members of pointer-to-member type. Greater detail can be found in this answer for C++98/03. C++11 changed the rules surrounding POD, relaxing them greatly, thus necessitating a follow-up answer here.",
        "output": "<em>POD</em> stands for <em>Plain Old Data</em> - that is, a class (whether defined with the keyword <code>struct</code> or the keyword <code>class</code>) without constructors, destructors and virtual members functions. C++11 changed the rules surrounding POD, relaxing them greatly, thus necessitating a follow-up answer here.",
        "answer": "<em>POD</em> stands for <em>Plain Old Data</em> - that is, a class (whether defined with the keyword <code>struct</code> or the keyword <code>class</code>) without constructors, destructors and virtual members functions. Wikipedia's article on POD goes into a bit more detail and defines it as: A Plain Old Data Structure in C++ is an aggregate class that contains only PODS as members, has no user-defined destructor, no user-defined copy assignment operator, and no nonstatic members of pointer-to-member type. Greater detail can be found in this answer for C++98/03. C++11 changed the rules surrounding POD, relaxing them greatly, thus necessitating a follow-up answer here.",
        "summary": "<em>POD</em> stands for <em>Plain Old Data</em> - that is, a class (whether defined with the keyword <code>struct</code> or the keyword <code>class</code>) without constructors, destructors and virtual members functions. C++11 changed the rules surrounding POD, relaxing them greatly, thus necessitating a follow-up answer here."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A \"const function\", denoted with the keyword <code>const</code> after a function declaration, makes it a compiler error for this class function to change a member variable of the class. However, reading of a class variables is ok inside of the function, but writing inside of this function will generate a compiler error. Another way of thinking about such \"const function\" is by viewing an class function as a normal function taking an implicit <code>this</code> pointer. So a method <code>int Foo::Bar(int random_arg)</code> (without the const at the end) results in a function like <code>int Foo_Bar(Foo* this, int random_arg)</code>, and a call such as <code>Foo f; f.Bar(4)</code> will internally correspond to something like <code>Foo f; Foo_Bar(&amp;f, 4)</code>. Now adding the const at the end (<code>int Foo::Bar(int random_arg) const</code>) can then be understood as a declaration with a const this pointer: <code>int Foo_Bar(const Foo* this, int random_arg)</code>. Since the type of <code>this</code> in such case is const, no modifications of member variables are possible. It is possible to loosen the \"const function\" restriction of not allowing the function to write to any variable of a class. To allow some of the variables to be writable even when the function is marked as a \"const function\", these class variables are marked with the keyword <code>mutable</code>. Thus, if a class variable is marked as mutable, and a \"const function\" writes to this variable then the code will compile cleanly and the variable is possible to change. (C++11) As usual when dealing with the <code>const</code> keyword, changing the location of the const key word in a C++ statement has entirely different meanings. The above usage of <code>const</code> only apply when adding <code>const</code> to the end of the function declaration after the parenthesis. <code>const</code> is a highly overused qualifier in C++ and the syntax and ordering is often not straightforward in combination with pointers. Some readings about <code>const</code> correctness and the <code>const</code> keyword: Const correctness The C++ 'const' Declaration: Why &amp; How",
        "output": "A \"const function\", denoted with the keyword <code>const</code> after a function declaration, makes it a compiler error for this class function to change a member variable of the class.",
        "answer": "A \"const function\", denoted with the keyword <code>const</code> after a function declaration, makes it a compiler error for this class function to change a member variable of the class. However, reading of a class variables is ok inside of the function, but writing inside of this function will generate a compiler error. Another way of thinking about such \"const function\" is by viewing an class function as a normal function taking an implicit <code>this</code> pointer. So a method <code>int Foo::Bar(int random_arg)</code> (without the const at the end) results in a function like <code>int Foo_Bar(Foo* this, int random_arg)</code>, and a call such as <code>Foo f; f.Bar(4)</code> will internally correspond to something like <code>Foo f; Foo_Bar(&amp;f, 4)</code>. Now adding the const at the end (<code>int Foo::Bar(int random_arg) const</code>) can then be understood as a declaration with a const this pointer: <code>int Foo_Bar(const Foo* this, int random_arg)</code>. Since the type of <code>this</code> in such case is const, no modifications of member variables are possible. It is possible to loosen the \"const function\" restriction of not allowing the function to write to any variable of a class. To allow some of the variables to be writable even when the function is marked as a \"const function\", these class variables are marked with the keyword <code>mutable</code>. Thus, if a class variable is marked as mutable, and a \"const function\" writes to this variable then the code will compile cleanly and the variable is possible to change. (C++11) As usual when dealing with the <code>const</code> keyword, changing the location of the const key word in a C++ statement has entirely different meanings. The above usage of <code>const</code> only apply when adding <code>const</code> to the end of the function declaration after the parenthesis. <code>const</code> is a highly overused qualifier in C++ and the syntax and ordering is often not straightforward in combination with pointers. Some readings about <code>const</code> correctness and the <code>const</code> keyword: Const correctness The C++ 'const' Declaration: Why &amp; How",
        "summary": "A \"const function\", denoted with the keyword <code>const</code> after a function declaration, makes it a compiler error for this class function to change a member variable of the class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Safari</strong> supports it through <code>webkitEnterFullscreen</code>. <strong>Chrome</strong> should support it since it's WebKit also, but errors out. Chris Blizzard of <strong>Firefox</strong> said they're coming out with their own version of fullscreen which will allow any element to go to fullscreen. e.g. Canvas Philip Jagenstedt of <strong>Opera</strong> says they'll support it in a later release. Yes, the HTML5 video spec says not to support fullscreen, but since users want it, and every browser is going to support it, the spec will change.",
        "output": "<strong>Safari</strong> supports it through <code>webkitEnterFullscreen</code>. <strong>Chrome</strong> should support it since it's WebKit also, but errors out.",
        "answer": "<strong>Safari</strong> supports it through <code>webkitEnterFullscreen</code>. <strong>Chrome</strong> should support it since it's WebKit also, but errors out. Chris Blizzard of <strong>Firefox</strong> said they're coming out with their own version of fullscreen which will allow any element to go to fullscreen. e.g. Canvas Philip Jagenstedt of <strong>Opera</strong> says they'll support it in a later release. Yes, the HTML5 video spec says not to support fullscreen, but since users want it, and every browser is going to support it, the spec will change.",
        "summary": "<strong>Safari</strong> supports it through <code>webkitEnterFullscreen</code>. <strong>Chrome</strong> should support it since it's WebKit also, but errors out."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Anyway, we have a \"goes to\" operator now. <code>\"--&gt;\"</code> is easy to be remembered as a direction, and \"while x goes to zero\" is meaning-straight. Furthermore, it is a little more efficient than <code>\"for (x = 10; x &gt; 0; x --)\"</code> on some platforms.",
        "output": "Furthermore, it is a little more efficient than <code>\"for (x = 10; x &gt; 0; x --)\"</code> on some platforms.",
        "answer": "Anyway, we have a \"goes to\" operator now. <code>\"--&gt;\"</code> is easy to be remembered as a direction, and \"while x goes to zero\" is meaning-straight. Furthermore, it is a little more efficient than <code>\"for (x = 10; x &gt; 0; x --)\"</code> on some platforms.",
        "summary": "Furthermore, it is a little more efficient than <code>\"for (x = 10; x &gt; 0; x --)\"</code> on some platforms."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n FYI, I believe Bjarne Stroustrup is quoted as saying that C-style casts are to be avoided and that you should use static_cast or dynamic_cast if at all possible. Barne Stroustrup's C++ style FAQ Take that advice for what you will. I'm far from being a C++ guru.",
        "output": "FYI, I believe Bjarne Stroustrup is quoted as saying that C-style casts are to be avoided and that you should use static_cast or dynamic_cast if at all possible. Barne Stroustrup's C++ style FAQ",
        "answer": "FYI, I believe Bjarne Stroustrup is quoted as saying that C-style casts are to be avoided and that you should use static_cast or dynamic_cast if at all possible. Barne Stroustrup's C++ style FAQ Take that advice for what you will. I'm far from being a C++ guru.",
        "summary": "FYI, I believe Bjarne Stroustrup is quoted as saying that C-style casts are to be avoided and that you should use static_cast or dynamic_cast if at all possible. Barne Stroustrup's C++ style FAQ"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n use fire FTP,Krusader...",
        "output": "use fire FTP,Krusader...",
        "answer": "use fire FTP,Krusader...",
        "summary": "use fire FTP,Krusader..."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n IoC / DI to me is pushing out dependencies to the calling objects. Super simple. The non-techy answer is being able to swap out an engine in a car right before you turn it on. If everything hooks up right (the interface), you are good.",
        "output": "IoC / DI to me is pushing out dependencies to the calling objects.",
        "answer": "IoC / DI to me is pushing out dependencies to the calling objects. Super simple. The non-techy answer is being able to swap out an engine in a car right before you turn it on. If everything hooks up right (the interface), you are good.",
        "summary": "IoC / DI to me is pushing out dependencies to the calling objects."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>Url.Action()</code> will get you the bare URL for most overloads of <code>Html.ActionLink</code>, but I think that the <code>URL-from-lambda</code> functionality is only available through <code>Html.ActionLink</code> so far. Hopefully they'll add a similar overload to <code>Url.Action</code> at some point.",
        "output": "<code>Url.Action()</code> will get you the bare URL for most overloads of <code>Html.ActionLink</code>, but I think that the <code>URL-from-lambda</code> functionality is only available through <code>Html.ActionLink</code> so far.",
        "answer": "<code>Url.Action()</code> will get you the bare URL for most overloads of <code>Html.ActionLink</code>, but I think that the <code>URL-from-lambda</code> functionality is only available through <code>Html.ActionLink</code> so far. Hopefully they'll add a similar overload to <code>Url.Action</code> at some point.",
        "summary": "<code>Url.Action()</code> will get you the bare URL for most overloads of <code>Html.ActionLink</code>, but I think that the <code>URL-from-lambda</code> functionality is only available through <code>Html.ActionLink</code> so far."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here's a solution I just came up with for this problem <strong>Original code:</strong> <strong>Updated code</strong> <strong>Extension Method:</strong>",
        "output": "Here's a solution I just came up with for this problem",
        "answer": "Here's a solution I just came up with for this problem <strong>Original code:</strong> <strong>Updated code</strong> <strong>Extension Method:</strong>",
        "summary": "Here's a solution I just came up with for this problem"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In short, it depends on what points to what. In a shallow copy, object B points to object A's location in memory. In deep copy, all things in object A's memory location get copied to object B's memory location. This wiki article has a great diagram. http://en.wikipedia.org/wiki/Object_copy",
        "output": "In a shallow copy, object B points to object A's location in memory. In deep copy, all things in object A's memory location get copied to object B's memory location.",
        "answer": "In short, it depends on what points to what. In a shallow copy, object B points to object A's location in memory. In deep copy, all things in object A's memory location get copied to object B's memory location. This wiki article has a great diagram. http://en.wikipedia.org/wiki/Object_copy",
        "summary": "In a shallow copy, object B points to object A's location in memory. In deep copy, all things in object A's memory location get copied to object B's memory location."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Using urllib.urlretrieve:",
        "output": "Using urllib.urlretrieve:",
        "answer": "Using urllib.urlretrieve:",
        "summary": "Using urllib.urlretrieve:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A <code>continue</code> statement without a label will re-execute from the condition the innermost <code>while</code> or <code>do</code> loop, and from the update expression of the innermost <code>for</code> loop. It is often used to early-terminate a loop's processing and thereby avoid deeply-nested <code>if</code> statements. In the following example <code>continue</code> will get the next line, without processing the following statement in the loop. With a label, <code>continue</code> will re-execute from the loop with the corresponding label, rather than the innermost loop. This can be used to escape deeply-nested loops, or simply for clarity. Sometimes <code>continue</code> is also used as a placeholder in order to make an empty loop body more clear. The same statement without a label also exists in C and C++. The equivalent in Perl is <code>next</code>. This type of control flow is not recommended, but if you so choose you can also use <code>continue</code> to simulate a limited form of <code>goto</code>. In the following example the <code>continue</code> will re-execute the empty <code>for (;;)</code> loop.",
        "output": "A <code>continue</code> statement without a label will re-execute from the condition the innermost <code>while</code> or <code>do</code> loop, and from the update expression of the innermost <code>for</code> loop. It is often used to early-terminate a loop's processing and thereby avoid deeply-nested <code>if</code> statements. Sometimes <code>continue</code> is also used as a placeholder in order to make an empty loop body more clear.",
        "answer": "A <code>continue</code> statement without a label will re-execute from the condition the innermost <code>while</code> or <code>do</code> loop, and from the update expression of the innermost <code>for</code> loop. It is often used to early-terminate a loop's processing and thereby avoid deeply-nested <code>if</code> statements. In the following example <code>continue</code> will get the next line, without processing the following statement in the loop. With a label, <code>continue</code> will re-execute from the loop with the corresponding label, rather than the innermost loop. This can be used to escape deeply-nested loops, or simply for clarity. Sometimes <code>continue</code> is also used as a placeholder in order to make an empty loop body more clear. The same statement without a label also exists in C and C++. The equivalent in Perl is <code>next</code>. This type of control flow is not recommended, but if you so choose you can also use <code>continue</code> to simulate a limited form of <code>goto</code>. In the following example the <code>continue</code> will re-execute the empty <code>for (;;)</code> loop.",
        "summary": "A <code>continue</code> statement without a label will re-execute from the condition the innermost <code>while</code> or <code>do</code> loop, and from the update expression of the innermost <code>for</code> loop. It is often used to early-terminate a loop's processing and thereby avoid deeply-nested <code>if</code> statements. Sometimes <code>continue</code> is also used as a placeholder in order to make an empty loop body more clear."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use each_with_index when you need both.",
        "output": "Use each_with_index when you need both.",
        "answer": "Use each_with_index when you need both.",
        "summary": "Use each_with_index when you need both."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Not easily done I am afraid. The problem is Css cannot replace the arrow in a select as this is rendered by the browser. But you can build a new control from div and input elements and Javascript to perform the same function as the select. Try looking at some of the autocomplete plugins for Jquery for example. Otherwise there is some info on the select element here: http://www.devarticles.com/c/a/Web-Style-Sheets/Taming-the-Select/",
        "output": "The problem is Css cannot replace the arrow in a select as this is rendered by the browser. But you can build a new control from div and input elements and Javascript to perform the same function as the select.",
        "answer": "Not easily done I am afraid. The problem is Css cannot replace the arrow in a select as this is rendered by the browser. But you can build a new control from div and input elements and Javascript to perform the same function as the select. Try looking at some of the autocomplete plugins for Jquery for example. Otherwise there is some info on the select element here: http://www.devarticles.com/c/a/Web-Style-Sheets/Taming-the-Select/",
        "summary": "The problem is Css cannot replace the arrow in a select as this is rendered by the browser. But you can build a new control from div and input elements and Javascript to perform the same function as the select."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Two points come to mind: <li>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue) <li>Performance: until the code to be executed is unknown, it cannot be optimized. (about javascript and performance, certainly Steve Yegge's presentation)",
        "output": "Two points come to mind: <li>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue) <li>Performance: until the code to be executed is unknown, it cannot be optimized.",
        "answer": "Two points come to mind: <li>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue) <li>Performance: until the code to be executed is unknown, it cannot be optimized. (about javascript and performance, certainly Steve Yegge's presentation)",
        "summary": "Two points come to mind: <li>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue) <li>Performance: until the code to be executed is unknown, it cannot be optimized."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Introduction The <code>ViewExpiredException</code> will be thrown whenever the <code>javax.faces.STATE_SAVING_METHOD</code> is set to <code>server</code> (default) and the enduser sends a HTTP POST request on a view via <code>&lt;h:form&gt;</code> with <code>&lt;h:commandLink&gt;</code>, <code>&lt;h:commandButton&gt;</code> or <code>&lt;f:ajax&gt;</code>, while the associated view state isn't available in the session anymore. The view state is identified as value of a hidden input field <code>javax.faces.ViewState</code> of the <code>&lt;h:form&gt;</code>. With the state saving method set to <code>server</code>, this contains only the view state ID which references a serialized view state in the session. So, when the session is expired for some reason (either timed out in server or client side, or the session cookie is not maintained anymore for some reason in browser, or by calling <code>HttpSession#invalidate()</code> in server, or due a server specific bug with session cookies as known in WildFly), then the serialized view state is not available anymore in the session and the enduser will get this exception. To understand the working of the session, see also How do servlets work? Instantiation, sessions, shared variables and multithreading. There is also a limit on the amount of views JSF will store in the session. When the limit is hit, then the least recently used view will be expired. See also com.sun.faces.numberOfViewsInSession vs com.sun.faces.numberOfLogicalViews. With the state saving method set to <code>client</code>, the <code>javax.faces.ViewState</code> hidden input field contains instead the whole serialized view state, so the enduser won't get a <code>ViewExpiredException</code> when the session expires. It can however still happen on a cluster environment (\"ERROR: MAC did not verify\" is symptomatic) and/or when there's a implementation-specific timeout on the client side state configured and/or when server re-generates the AES key during restart, see also Getting ViewExpiredException in clustered environment while state saving method is set to client and user session is valid how to solve it. Regardless of the solution, make sure you do not use <code>enableRestoreView11Compatibility</code>. it does not at all restore the original view state. It basically recreates the view and all associated view scoped beans from scratch and hereby thus losing all of original data (state). As the application will behave in a confusing way (\"Hey, where are my input values..?? \"), this is very bad for user experience. Better use stateless views or <code>&lt;o:enableRestorableView&gt;</code> instead so you can manage it on a specific view only instead of on all views. As to the why JSF needs to save view state, head to this answer: Why JSF saves the state of UI components on server? Avoiding ViewExpiredException on page navigation In order to avoid <code>ViewExpiredException</code> when e.g. navigating back after logout when the state saving is set to <code>server</code>, only redirecting the POST request after logout is not sufficient. You also need to instruct the browser to not cache the dynamic JSF pages, otherwise the browser may show them from the cache instead of requesting a fresh one from the server when you send a GET request on it (e.g. by back button). The <code>javax.faces.ViewState</code> hidden field of the cached page may contain a view state ID value which is not valid anymore in the current session. If you're (ab)using POST (command links/buttons) instead of GET (regular links/buttons) for page-to-page navigation, and click such a command link/button on the cached page, then this will in turn fail with a <code>ViewExpiredException</code>. To fire a redirect after logout in JSF 2.0, either add <code>&lt;redirect /&gt;</code> to the <code>&lt;navigation-case&gt;</code> in question (if any), or add <code>?faces-redirect=true</code> to the <code>outcome</code> value. or To instruct the browser to not cache the dynamic JSF pages, create a <code>Filter</code> which is mapped on the servlet name of the <code>FacesServlet</code> and adds the needed response headers to disable the browser cache. E.g. Avoiding ViewExpiredException on page refresh In order to avoid <code>ViewExpiredException</code> when refreshing the current page when the state saving is set to <code>server</code>, you not only need to make sure you are performing page-to-page navigation exclusively by GET (regular links/buttons), but you also need to make sure that you are exclusively using ajax to submit the forms. If you're submitting the form synchronously (non-ajax) anyway, then you'd best either make the view stateless (see later section), or to send a redirect after POST (see previous section). Having a <code>ViewExpiredException</code> on page refresh is in default configuration a very rare case. It can only happen when the limit on the amount of views JSF will store in the session is hit. So, it will only happen when you've manually set that limit way too low, or that you're continuously creating new views in background (e.g. by a badly implemented poll). See also com.sun.faces.numberOfViewsInSession vs com.sun.faces.numberOfLogicalViews. Another cause is having duplicate JSF libraries in runtime classpath conflicting each other. The correct procedure to install JSF is outlined in our JSF wiki page. Handling ViewExpiredException When you want to handle an unavoidable <code>ViewExpiredException</code> after a POST action on an arbitrary page which was already opened in some browser tab/window while you're logged out in another tab/window, then you'd like to specify an <code>error-page</code> for that in <code>web.xml</code> which goes to a \"Your session is timed out\" page. E.g. Use if necessary a meta refresh header in the error page in case you intend to actually redirect further to home or login page. (the <code>0</code> in <code>content</code> represents the amount of seconds before redirect, <code>0</code> thus means \"redirect immediately\", you can use e.g. <code>3</code> to let the browser wait 3 seconds with the redirect) Note that handling exceptions during ajax requests requires a special <code>ExceptionHandler</code>. See also Session timeout and ViewExpiredException handling on JSF/PrimeFaces ajax request. You can find a live example at OmniFaces <code>FullAjaxExceptionHandler</code> showcase page (this also covers non-ajax requests). Also note that your \"general\" error page should be mapped on <code>&lt;error-code&gt;</code> of <code>500</code> instead of an <code>&lt;exception-type&gt;</code> of e.g. <code>java.lang.Exception</code> or <code>java.lang.Throwable</code>, otherwise all exceptions wrapped in <code>ServletException</code> such as <code>ViewExpiredException</code> would still end up in the general error page. See also ViewExpiredException shown in java.lang.Throwable error-page in web.xml. Stateless views A completely different alternative is to run JSF views in stateless mode. This way nothing of JSF state will be saved and the views will never expire, but just be rebuilt from scratch on every request. You can turn on stateless views by setting the <code>transient</code> attribute of <code>&lt;f:view&gt;</code> to <code>true</code>: This way the <code>javax.faces.ViewState</code> hidden field will get a fixed value of <code>\"stateless\"</code> in Mojarra (have not checked MyFaces at this point). Note that this feature was introduced in Mojarra 2.1.19 and 2.2.0 and is not available in older versions. The consequence is that you cannot use view scoped beans anymore. They will now behave like request scoped beans. One of the disadvantages is that you have to track the state yourself by fiddling with hidden inputs and/or loose request parameters. Mainly those forms with input fields with <code>rendered</code>, <code>readonly</code> or <code>disabled</code> attributes which are controlled by ajax events will be affected. Note that the <code>&lt;f:view&gt;</code> does not necessarily need to be unique throughout the view and/or reside in the master template only. It's also completely legit to redeclare and nest it in a template client. It basically \"extends\" the parent <code>&lt;f:view&gt;</code> then. E.g. in master template: and in template client: You can even wrap the <code>&lt;f:view&gt;</code> in a <code>&lt;c:if&gt;</code> to make it conditional. Note that it would apply on the entire view, not only on the nested contents, such as the <code>&lt;h:form&gt;</code> in above example. See also ViewExpiredException shown in java.lang.Throwable error-page in web.xml Check if session exists JSF Session timeout and ViewExpiredException handling on JSF/PrimeFaces ajax request Unrelated to the concrete problem, using HTTP POST for pure page-to-page navigation isn't very user/SEO friendly. In JSF 2.0 you should really prefer <code>&lt;h:link&gt;</code> or <code>&lt;h:button&gt;</code> over the <code>&lt;h:commandXxx&gt;</code> ones for plain vanilla page-to-page navigation. So instead of e.g. better do See also When should I use h:outputLink instead of h:commandLink? Difference between h:button and h:commandButton How to navigate in JSF? How to make URL reflect current page (and not previous one)",
        "output": "Avoiding ViewExpiredException on page navigation Avoiding ViewExpiredException on page refresh Handling ViewExpiredException",
        "answer": "Introduction The <code>ViewExpiredException</code> will be thrown whenever the <code>javax.faces.STATE_SAVING_METHOD</code> is set to <code>server</code> (default) and the enduser sends a HTTP POST request on a view via <code>&lt;h:form&gt;</code> with <code>&lt;h:commandLink&gt;</code>, <code>&lt;h:commandButton&gt;</code> or <code>&lt;f:ajax&gt;</code>, while the associated view state isn't available in the session anymore. The view state is identified as value of a hidden input field <code>javax.faces.ViewState</code> of the <code>&lt;h:form&gt;</code>. With the state saving method set to <code>server</code>, this contains only the view state ID which references a serialized view state in the session. So, when the session is expired for some reason (either timed out in server or client side, or the session cookie is not maintained anymore for some reason in browser, or by calling <code>HttpSession#invalidate()</code> in server, or due a server specific bug with session cookies as known in WildFly), then the serialized view state is not available anymore in the session and the enduser will get this exception. To understand the working of the session, see also How do servlets work? Instantiation, sessions, shared variables and multithreading. There is also a limit on the amount of views JSF will store in the session. When the limit is hit, then the least recently used view will be expired. See also com.sun.faces.numberOfViewsInSession vs com.sun.faces.numberOfLogicalViews. With the state saving method set to <code>client</code>, the <code>javax.faces.ViewState</code> hidden input field contains instead the whole serialized view state, so the enduser won't get a <code>ViewExpiredException</code> when the session expires. It can however still happen on a cluster environment (\"ERROR: MAC did not verify\" is symptomatic) and/or when there's a implementation-specific timeout on the client side state configured and/or when server re-generates the AES key during restart, see also Getting ViewExpiredException in clustered environment while state saving method is set to client and user session is valid how to solve it. Regardless of the solution, make sure you do not use <code>enableRestoreView11Compatibility</code>. it does not at all restore the original view state. It basically recreates the view and all associated view scoped beans from scratch and hereby thus losing all of original data (state). As the application will behave in a confusing way (\"Hey, where are my input values..?? \"), this is very bad for user experience. Better use stateless views or <code>&lt;o:enableRestorableView&gt;</code> instead so you can manage it on a specific view only instead of on all views. As to the why JSF needs to save view state, head to this answer: Why JSF saves the state of UI components on server? Avoiding ViewExpiredException on page navigation In order to avoid <code>ViewExpiredException</code> when e.g. navigating back after logout when the state saving is set to <code>server</code>, only redirecting the POST request after logout is not sufficient. You also need to instruct the browser to not cache the dynamic JSF pages, otherwise the browser may show them from the cache instead of requesting a fresh one from the server when you send a GET request on it (e.g. by back button). The <code>javax.faces.ViewState</code> hidden field of the cached page may contain a view state ID value which is not valid anymore in the current session. If you're (ab)using POST (command links/buttons) instead of GET (regular links/buttons) for page-to-page navigation, and click such a command link/button on the cached page, then this will in turn fail with a <code>ViewExpiredException</code>. To fire a redirect after logout in JSF 2.0, either add <code>&lt;redirect /&gt;</code> to the <code>&lt;navigation-case&gt;</code> in question (if any), or add <code>?faces-redirect=true</code> to the <code>outcome</code> value. or To instruct the browser to not cache the dynamic JSF pages, create a <code>Filter</code> which is mapped on the servlet name of the <code>FacesServlet</code> and adds the needed response headers to disable the browser cache. E.g. Avoiding ViewExpiredException on page refresh In order to avoid <code>ViewExpiredException</code> when refreshing the current page when the state saving is set to <code>server</code>, you not only need to make sure you are performing page-to-page navigation exclusively by GET (regular links/buttons), but you also need to make sure that you are exclusively using ajax to submit the forms. If you're submitting the form synchronously (non-ajax) anyway, then you'd best either make the view stateless (see later section), or to send a redirect after POST (see previous section). Having a <code>ViewExpiredException</code> on page refresh is in default configuration a very rare case. It can only happen when the limit on the amount of views JSF will store in the session is hit. So, it will only happen when you've manually set that limit way too low, or that you're continuously creating new views in background (e.g. by a badly implemented poll). See also com.sun.faces.numberOfViewsInSession vs com.sun.faces.numberOfLogicalViews. Another cause is having duplicate JSF libraries in runtime classpath conflicting each other. The correct procedure to install JSF is outlined in our JSF wiki page. Handling ViewExpiredException When you want to handle an unavoidable <code>ViewExpiredException</code> after a POST action on an arbitrary page which was already opened in some browser tab/window while you're logged out in another tab/window, then you'd like to specify an <code>error-page</code> for that in <code>web.xml</code> which goes to a \"Your session is timed out\" page. E.g. Use if necessary a meta refresh header in the error page in case you intend to actually redirect further to home or login page. (the <code>0</code> in <code>content</code> represents the amount of seconds before redirect, <code>0</code> thus means \"redirect immediately\", you can use e.g. <code>3</code> to let the browser wait 3 seconds with the redirect) Note that handling exceptions during ajax requests requires a special <code>ExceptionHandler</code>. See also Session timeout and ViewExpiredException handling on JSF/PrimeFaces ajax request. You can find a live example at OmniFaces <code>FullAjaxExceptionHandler</code> showcase page (this also covers non-ajax requests). Also note that your \"general\" error page should be mapped on <code>&lt;error-code&gt;</code> of <code>500</code> instead of an <code>&lt;exception-type&gt;</code> of e.g. <code>java.lang.Exception</code> or <code>java.lang.Throwable</code>, otherwise all exceptions wrapped in <code>ServletException</code> such as <code>ViewExpiredException</code> would still end up in the general error page. See also ViewExpiredException shown in java.lang.Throwable error-page in web.xml. Stateless views A completely different alternative is to run JSF views in stateless mode. This way nothing of JSF state will be saved and the views will never expire, but just be rebuilt from scratch on every request. You can turn on stateless views by setting the <code>transient</code> attribute of <code>&lt;f:view&gt;</code> to <code>true</code>: This way the <code>javax.faces.ViewState</code> hidden field will get a fixed value of <code>\"stateless\"</code> in Mojarra (have not checked MyFaces at this point). Note that this feature was introduced in Mojarra 2.1.19 and 2.2.0 and is not available in older versions. The consequence is that you cannot use view scoped beans anymore. They will now behave like request scoped beans. One of the disadvantages is that you have to track the state yourself by fiddling with hidden inputs and/or loose request parameters. Mainly those forms with input fields with <code>rendered</code>, <code>readonly</code> or <code>disabled</code> attributes which are controlled by ajax events will be affected. Note that the <code>&lt;f:view&gt;</code> does not necessarily need to be unique throughout the view and/or reside in the master template only. It's also completely legit to redeclare and nest it in a template client. It basically \"extends\" the parent <code>&lt;f:view&gt;</code> then. E.g. in master template: and in template client: You can even wrap the <code>&lt;f:view&gt;</code> in a <code>&lt;c:if&gt;</code> to make it conditional. Note that it would apply on the entire view, not only on the nested contents, such as the <code>&lt;h:form&gt;</code> in above example. See also ViewExpiredException shown in java.lang.Throwable error-page in web.xml Check if session exists JSF Session timeout and ViewExpiredException handling on JSF/PrimeFaces ajax request Unrelated to the concrete problem, using HTTP POST for pure page-to-page navigation isn't very user/SEO friendly. In JSF 2.0 you should really prefer <code>&lt;h:link&gt;</code> or <code>&lt;h:button&gt;</code> over the <code>&lt;h:commandXxx&gt;</code> ones for plain vanilla page-to-page navigation. So instead of e.g. better do See also When should I use h:outputLink instead of h:commandLink? Difference between h:button and h:commandButton How to navigate in JSF? How to make URL reflect current page (and not previous one)",
        "summary": "Avoiding ViewExpiredException on page navigation Avoiding ViewExpiredException on page refresh Handling ViewExpiredException"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm currently in the process of migrating from SVN to a DVCS (while blogging about my findings, my first real blogging effort...), and I've done a bit of research (=googling). As far as I can see you can do most of the things with both packages. It seems like git has a few more or better implemented advanced features,I do feel that the integration with windows is a bit better for mercurial, with TortoiseHg. I know there's Git Cheetah as well (I tried both), but the mercurial solution just feels more robust. Seeing how they're both open-source (right?) I don't think either will be lacking important features. If something is important, people will ask for it, people will code it. I think that for common practices, Git and Mercurial are more than sufficient. They both have big projects that use them (Git -> linux kernel, Mercurial -> Mozilla foundation projects, both among others of course), so I don't think either are really lacking something. That being said, I am interested in what other people say about this, as it would make a great source for my blogging efforts ;-)",
        "output": "It seems like git has a few more or better implemented advanced features,I do feel that the integration with windows is a bit better for mercurial, with TortoiseHg. I know there's Git Cheetah as well (I tried both), but the mercurial solution just feels more robust. Seeing how they're both open-source (right?) I don't think either will be lacking important features.",
        "answer": "I'm currently in the process of migrating from SVN to a DVCS (while blogging about my findings, my first real blogging effort...), and I've done a bit of research (=googling). As far as I can see you can do most of the things with both packages. It seems like git has a few more or better implemented advanced features,I do feel that the integration with windows is a bit better for mercurial, with TortoiseHg. I know there's Git Cheetah as well (I tried both), but the mercurial solution just feels more robust. Seeing how they're both open-source (right?) I don't think either will be lacking important features. If something is important, people will ask for it, people will code it. I think that for common practices, Git and Mercurial are more than sufficient. They both have big projects that use them (Git -> linux kernel, Mercurial -> Mozilla foundation projects, both among others of course), so I don't think either are really lacking something. That being said, I am interested in what other people say about this, as it would make a great source for my blogging efforts ;-)",
        "summary": "It seems like git has a few more or better implemented advanced features,I do feel that the integration with windows is a bit better for mercurial, with TortoiseHg. I know there's Git Cheetah as well (I tried both), but the mercurial solution just feels more robust. Seeing how they're both open-source (right?) I don't think either will be lacking important features."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The latter is preferred, because it will handle subclasses properly. In fact, your example can be written even more easily because <code>isinstance()</code>'s second parameter may be a tuple: or, using the <code>basestring</code> abstract class:",
        "output": "The latter is preferred, because it will handle subclasses properly.",
        "answer": "The latter is preferred, because it will handle subclasses properly. In fact, your example can be written even more easily because <code>isinstance()</code>'s second parameter may be a tuple: or, using the <code>basestring</code> abstract class:",
        "summary": "The latter is preferred, because it will handle subclasses properly."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think you mean: or",
        "output": "I think you mean: or",
        "answer": "I think you mean: or",
        "summary": "I think you mean: or"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I have the following in my <code>.vimrc</code>: Now you can type <code>,cc</code> to comment a line and <code>,cu</code> to uncomment a line (works both in normal and visual mode). (I stole it from some website many years ago so I can't completely explain how it works anymore :). There is a comment where it is explained.)",
        "output": "I have the following in my <code>.vimrc</code>:",
        "answer": "I have the following in my <code>.vimrc</code>: Now you can type <code>,cc</code> to comment a line and <code>,cu</code> to uncomment a line (works both in normal and visual mode). (I stole it from some website many years ago so I can't completely explain how it works anymore :). There is a comment where it is explained.)",
        "summary": "I have the following in my <code>.vimrc</code>:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Methods on a class act on the instance of the class, called the object.",
        "output": "Methods on a class act on the instance of the class, called the object.",
        "answer": "Methods on a class act on the instance of the class, called the object.",
        "summary": "Methods on a class act on the instance of the class, called the object."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Did you verify that the control causing the post back has CausesValidation set to tru and that it does not have a validation group assigned to it? I'm not sure what else might cause this behavior.",
        "output": "Did you verify that the control causing the post back has CausesValidation set to tru and that it does not have a validation group assigned to it?",
        "answer": "Did you verify that the control causing the post back has CausesValidation set to tru and that it does not have a validation group assigned to it? I'm not sure what else might cause this behavior.",
        "summary": "Did you verify that the control causing the post back has CausesValidation set to tru and that it does not have a validation group assigned to it?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It normally means an un-aligned access. An attempt to access memory that isn't physically present would also give a bus error, but you won't see this if you're using a processor with an MMU and an OS that's not buggy, because you won't have any non-existent memory mapped to your process's address space.",
        "output": "It normally means an un-aligned access.",
        "answer": "It normally means an un-aligned access. An attempt to access memory that isn't physically present would also give a bus error, but you won't see this if you're using a processor with an MMU and an OS that's not buggy, because you won't have any non-existent memory mapped to your process's address space.",
        "summary": "It normally means an un-aligned access."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's no built-in method to do it as far as I'm aware, but it's as easy as a simple loop: You can expound on that if you need it to build your object recursively.",
        "output": "There's no built-in method to do it as far as I'm aware, but it's as easy as a simple loop:",
        "answer": "There's no built-in method to do it as far as I'm aware, but it's as easy as a simple loop: You can expound on that if you need it to build your object recursively.",
        "summary": "There's no built-in method to do it as far as I'm aware, but it's as easy as a simple loop:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For databases: Cf. this page. And check out the MySQL manual",
        "output": "For databases:",
        "answer": "For databases: Cf. this page. And check out the MySQL manual",
        "summary": "For databases:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This isn't a problem with your proxy. It's a problem with github (or git). It fails for me on git-1.6.0.1 on linux as well. Bug is already reported (by you no less). Make sure to delete your pasties, they're already on google. Edit: Must've been dreaming, i guess you can't delete them. Use Gist instead?",
        "output": "This isn't a problem with your proxy. It's a problem with github (or git).",
        "answer": "This isn't a problem with your proxy. It's a problem with github (or git). It fails for me on git-1.6.0.1 on linux as well. Bug is already reported (by you no less). Make sure to delete your pasties, they're already on google. Edit: Must've been dreaming, i guess you can't delete them. Use Gist instead?",
        "summary": "This isn't a problem with your proxy. It's a problem with github (or git)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is nothing to do with jQuery and if you want to use it I advice you to do So you don't break your code when it is not available. As suggested in the comment, you can also execute that in one place and then use <code>console.log</code> as normal",
        "output": "There is nothing to do with jQuery and if you want to use it I advice you to do",
        "answer": "There is nothing to do with jQuery and if you want to use it I advice you to do So you don't break your code when it is not available. As suggested in the comment, you can also execute that in one place and then use <code>console.log</code> as normal",
        "summary": "There is nothing to do with jQuery and if you want to use it I advice you to do"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A REGEXP <em>might</em> be more efficient, but you'd have to benchmark it to be sure, e.g. BIGBLOCK",
        "output": "A REGEXP <em>might</em> be more efficient, but you'd have to benchmark it to be sure, e.g. BIGBLOCK",
        "answer": "A REGEXP <em>might</em> be more efficient, but you'd have to benchmark it to be sure, e.g. BIGBLOCK",
        "summary": "A REGEXP <em>might</em> be more efficient, but you'd have to benchmark it to be sure, e.g. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Instead of trying to do an end run around the browser's validation, you could put the <code>http://</code> in as placeholder text. This is from the very page you linked: Placeholder Text The first improvement HTML5 brings to web forms is the ability to set placeholder text in an input field. Placeholder text is displayed inside the input field as long as the field is empty and not focused. As soon as you click on (or tab to) the input field, the placeholder text disappears. YouÃ©ÂÂ¥Ã¦ÂªÂe probably seen placeholder text before. For example, Mozilla Firefox 3.5 now includes placeholder text in the location bar that reads Ã©ÂÂ¥Ã¦Â·Âªearch Bookmarks and HistoryÃ©Â? When you click on (or tab to) the location bar, the placeholder text disappears: Ironically, Firefox 3.5 does not support adding placeholder text to your own web forms. CÃ©ÂÂ¥Ã¦ÂªÂst la vie. Placeholder Support BIGBLOCK HereÃ©ÂÂ¥Ã¦ÂªÂ how you can include placeholder text in your own web forms: BIGBLOCK Browsers that donÃ©ÂÂ¥Ã¦ÂªÂ support the <code>placeholder</code> attribute will simply ignore it. No harm, no foul. See whether your browser supports placeholder text. It wouldn't be exactly the same since it wouldn't provide that \"starting point\" for the user, but it's halfway there at least.",
        "output": "Instead of trying to do an end run around the browser's validation, you could put the <code>http://</code> in as placeholder text. Placeholder text is displayed inside the input field as long as the field is empty and not focused. As soon as you click on (or tab to) the input field, the placeholder text disappears. HereÃ©ÂÂ¥Ã¦ÂªÂ how you can include placeholder text in your own web forms: BIGBLOCK Browsers that donÃ©ÂÂ¥Ã¦ÂªÂ support the <code>placeholder</code> attribute will simply ignore it.",
        "answer": "Instead of trying to do an end run around the browser's validation, you could put the <code>http://</code> in as placeholder text. This is from the very page you linked: Placeholder Text The first improvement HTML5 brings to web forms is the ability to set placeholder text in an input field. Placeholder text is displayed inside the input field as long as the field is empty and not focused. As soon as you click on (or tab to) the input field, the placeholder text disappears. YouÃ©ÂÂ¥Ã¦ÂªÂe probably seen placeholder text before. For example, Mozilla Firefox 3.5 now includes placeholder text in the location bar that reads Ã©ÂÂ¥Ã¦Â·Âªearch Bookmarks and HistoryÃ©Â? When you click on (or tab to) the location bar, the placeholder text disappears: Ironically, Firefox 3.5 does not support adding placeholder text to your own web forms. CÃ©ÂÂ¥Ã¦ÂªÂst la vie. Placeholder Support BIGBLOCK HereÃ©ÂÂ¥Ã¦ÂªÂ how you can include placeholder text in your own web forms: BIGBLOCK Browsers that donÃ©ÂÂ¥Ã¦ÂªÂ support the <code>placeholder</code> attribute will simply ignore it. No harm, no foul. See whether your browser supports placeholder text. It wouldn't be exactly the same since it wouldn't provide that \"starting point\" for the user, but it's halfway there at least.",
        "summary": "Instead of trying to do an end run around the browser's validation, you could put the <code>http://</code> in as placeholder text. Placeholder text is displayed inside the input field as long as the field is empty and not focused. As soon as you click on (or tab to) the input field, the placeholder text disappears. HereÃ©ÂÂ¥Ã¦ÂªÂ how you can include placeholder text in your own web forms: BIGBLOCK Browsers that donÃ©ÂÂ¥Ã¦ÂªÂ support the <code>placeholder</code> attribute will simply ignore it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>console.log</code> has nothing to do with jQuery. It logs a message to a debugging console, such as Firebug.",
        "output": "<code>console.log</code> has nothing to do with jQuery.",
        "answer": "<code>console.log</code> has nothing to do with jQuery. It logs a message to a debugging console, such as Firebug.",
        "summary": "<code>console.log</code> has nothing to do with jQuery."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There seems to be a 'text-stroke' property, but (at least for me) it only works in Safari. http://webkit.org/blog/85/introducing-text-stroke/",
        "output": "There seems to be a 'text-stroke' property, but (at least for me) it only works in Safari.",
        "answer": "There seems to be a 'text-stroke' property, but (at least for me) it only works in Safari. http://webkit.org/blog/85/introducing-text-stroke/",
        "summary": "There seems to be a 'text-stroke' property, but (at least for me) it only works in Safari."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I solved the problem. This is a JAR file conflict. It seems that I have two JAR files on my buildpath that include the same package and classes. <code>smack.jar</code> and <code>android_maps_lib-1.0.2</code> Deleting this package from one of the JAR files solved the problem.",
        "output": "It seems that I have two JAR files on my buildpath that include the same package and classes. Deleting this package from one of the JAR files solved the problem.",
        "answer": "I solved the problem. This is a JAR file conflict. It seems that I have two JAR files on my buildpath that include the same package and classes. <code>smack.jar</code> and <code>android_maps_lib-1.0.2</code> Deleting this package from one of the JAR files solved the problem.",
        "summary": "It seems that I have two JAR files on my buildpath that include the same package and classes. Deleting this package from one of the JAR files solved the problem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The <code>Hashtable</code> is a loosely-typed data structure, so you can add keys and values of any type to the <code>Hashtable</code>. The <code>Dictionary</code> class is a type-safe <code>Hashtable</code> implementation, and the keys and values are strongly typed. When creating a <code>Dictionary</code> instance, you must specify the data types for both the key and value.",
        "output": "The <code>Hashtable</code> is a loosely-typed data structure, so you can add keys and values of any type to the <code>Hashtable</code>. The <code>Dictionary</code> class is a type-safe <code>Hashtable</code> implementation, and the keys and values are strongly typed.",
        "answer": "The <code>Hashtable</code> is a loosely-typed data structure, so you can add keys and values of any type to the <code>Hashtable</code>. The <code>Dictionary</code> class is a type-safe <code>Hashtable</code> implementation, and the keys and values are strongly typed. When creating a <code>Dictionary</code> instance, you must specify the data types for both the key and value.",
        "summary": "The <code>Hashtable</code> is a loosely-typed data structure, so you can add keys and values of any type to the <code>Hashtable</code>. The <code>Dictionary</code> class is a type-safe <code>Hashtable</code> implementation, and the keys and values are strongly typed."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To fix the OutOfMemory error, you should do something like this: This <code>inSampleSize</code> option reduces memory consumption. Here's a complete method. First it reads image size without decoding the content itself. Then it finds the best <code>inSampleSize</code> value, it should be a power of 2, and finally the image is decoded.",
        "output": "This <code>inSampleSize</code> option reduces memory consumption. First it reads image size without decoding the content itself. Then it finds the best <code>inSampleSize</code> value, it should be a power of 2, and finally the image is decoded.",
        "answer": "To fix the OutOfMemory error, you should do something like this: This <code>inSampleSize</code> option reduces memory consumption. Here's a complete method. First it reads image size without decoding the content itself. Then it finds the best <code>inSampleSize</code> value, it should be a power of 2, and finally the image is decoded.",
        "summary": "This <code>inSampleSize</code> option reduces memory consumption. First it reads image size without decoding the content itself. Then it finds the best <code>inSampleSize</code> value, it should be a power of 2, and finally the image is decoded."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Formatting your code a bit, you have only closed the inner hover function. You have not closed the outer parts, marked below....",
        "output": "You have not closed the outer parts, marked below....",
        "answer": "Formatting your code a bit, you have only closed the inner hover function. You have not closed the outer parts, marked below....",
        "summary": "You have not closed the outer parts, marked below...."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You are reinventing the wheel. Normal PowerShell scripts have parameters starting with <code>-</code>, like <code>script.ps1 -server http://devserver</code> Then you handle them in <code>param</code> section in the beginning of the file. You can also assign default values to your params, read them from console if not available or stop script execution: Inside the script you can simply since all parameters become variables available in script scope. In this example, the <code>$server</code> gets a default value if the script is called without it, script stops if you omit the <code>-username</code> parameter and asks for terminal input if <code>-password</code> is omitted. Update: You might as well want to pass a \"flag\" (a boolean true/false parameter) to a PowerShell script. For instance, your script may accept a \"force\" where the script runs in a more careful mode when force is not used. The keyword for that is <code>[switch]</code> parameter type: Inside the script then you would work with it like this: Now, when calling the script you'd set the switch/flag parameter like this: If you explicitly want to state that the flag is not set, there is a special syntax for that Links to relevant Microsoft documentation (for PowerShell 5.0; tho versions 3.0 and 4.0 are also available at the links): about_Scripts about_Functions about_Functions_Advanced_Parameters",
        "output": "Normal PowerShell scripts have parameters starting with <code>-</code>, like <code>script.ps1 -server http://devserver</code> Then you handle them in <code>param</code> section in the beginning of the file.",
        "answer": "You are reinventing the wheel. Normal PowerShell scripts have parameters starting with <code>-</code>, like <code>script.ps1 -server http://devserver</code> Then you handle them in <code>param</code> section in the beginning of the file. You can also assign default values to your params, read them from console if not available or stop script execution: Inside the script you can simply since all parameters become variables available in script scope. In this example, the <code>$server</code> gets a default value if the script is called without it, script stops if you omit the <code>-username</code> parameter and asks for terminal input if <code>-password</code> is omitted. Update: You might as well want to pass a \"flag\" (a boolean true/false parameter) to a PowerShell script. For instance, your script may accept a \"force\" where the script runs in a more careful mode when force is not used. The keyword for that is <code>[switch]</code> parameter type: Inside the script then you would work with it like this: Now, when calling the script you'd set the switch/flag parameter like this: If you explicitly want to state that the flag is not set, there is a special syntax for that Links to relevant Microsoft documentation (for PowerShell 5.0; tho versions 3.0 and 4.0 are also available at the links): about_Scripts about_Functions about_Functions_Advanced_Parameters",
        "summary": "Normal PowerShell scripts have parameters starting with <code>-</code>, like <code>script.ps1 -server http://devserver</code> Then you handle them in <code>param</code> section in the beginning of the file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Look up <code>ATSApplicationFontsPath</code> A simple plist entry that allows you to include the font file(s) in your app resources folder and they \"just work\" in your app.",
        "output": "Look up <code>ATSApplicationFontsPath</code> A simple plist entry that allows you to include the font file(s) in your app resources folder and they \"just work\" in your app.",
        "answer": "Look up <code>ATSApplicationFontsPath</code> A simple plist entry that allows you to include the font file(s) in your app resources folder and they \"just work\" in your app.",
        "summary": "Look up <code>ATSApplicationFontsPath</code> A simple plist entry that allows you to include the font file(s) in your app resources folder and they \"just work\" in your app."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You won't get <code>Enum.GetValues()</code> in Silverlight. Original Blog Post by Einar Ingebrigtsen:",
        "output": "You won't get <code>Enum.GetValues()</code> in Silverlight.",
        "answer": "You won't get <code>Enum.GetValues()</code> in Silverlight. Original Blog Post by Einar Ingebrigtsen:",
        "summary": "You won't get <code>Enum.GetValues()</code> in Silverlight."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For long long (or __int64) using MSVS, you should use %I64d:",
        "output": "For long long (or __int64) using MSVS, you should use %I64d:",
        "answer": "For long long (or __int64) using MSVS, you should use %I64d:",
        "summary": "For long long (or __int64) using MSVS, you should use %I64d:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Protected data members can be accessed by any classes that inherit from your class. Private data members, however, cannot. Let's say we have the following: From within your extension to this class, referencing <code>this.myPrivateMember</code> won't work. However, <code>this.myProtectedMember</code> will. The value is still encapsulated, so if we have an instantiation of this class called <code>myObj</code>, then <code>myObj.myProtectedMember</code> won't work, so it is similar in function to a private data member.",
        "output": "Protected data members can be accessed by any classes that inherit from your class. Private data members, however, cannot.",
        "answer": "Protected data members can be accessed by any classes that inherit from your class. Private data members, however, cannot. Let's say we have the following: From within your extension to this class, referencing <code>this.myPrivateMember</code> won't work. However, <code>this.myProtectedMember</code> will. The value is still encapsulated, so if we have an instantiation of this class called <code>myObj</code>, then <code>myObj.myProtectedMember</code> won't work, so it is similar in function to a private data member.",
        "summary": "Protected data members can be accessed by any classes that inherit from your class. Private data members, however, cannot."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism is the ability to treat a class of object as if it is the parent class. For instance, suppose there is a class called Animal, and a class called Dog that inherits from Animal. Polymorphism is the ability to treat any Dog object as an Animal object like so:",
        "output": "Polymorphism is the ability to treat a class of object as if it is the parent class.",
        "answer": "Polymorphism is the ability to treat a class of object as if it is the parent class. For instance, suppose there is a class called Animal, and a class called Dog that inherits from Animal. Polymorphism is the ability to treat any Dog object as an Animal object like so:",
        "summary": "Polymorphism is the ability to treat a class of object as if it is the parent class."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n you don't. the constructor is part of the class that can implement an interface. The interface is just a contract of methods the class must implement.",
        "output": "you don't. The interface is just a contract of methods the class must implement.",
        "answer": "you don't. the constructor is part of the class that can implement an interface. The interface is just a contract of methods the class must implement.",
        "summary": "you don't. The interface is just a contract of methods the class must implement."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Parameters and local variables are allocated on the stack (with reference types the object lives on the heap and a variable references that object). The stack typically lives at the upper end of your address space and as it is used up it heads towards the bottom of the address space (i.e. towards zero). Your process also has a heap, which lives at the bottom end of your process. As you allocate memory, this heap can grow towards the upper end of your address space. As you can see, there is a potential for the heap to \"collide\" with the stack (a bit like tectonic plates!!! ). The common cause for a stack overflow is a bad recursive call. Typically, this is caused when your recursive functions doesn't have the correct termination condition, so it ends up calling itself forever. However, with GUI programming, it's possible to generate indirect recursion. For example, your app may be handling paint messages, and, whilst processing them, it may call a function that causes the system to send another paint message. Here you've not explicitly called yourself, but the OS/VM has done it for you. To deal with them, you'll need to examine your code. If you've got functions that call themselves then check that you've got a terminating condition. If you have, then check that when calling the function you have at least modified one of the arguments, otherwise there'll be no visible change for the recursively called function and the terminating condition is useless. If you've got no obvious recursive functions then check to see if you're calling any library functions that indirectly will cause your function to be called (like the implicit case above).",
        "output": "The common cause for a stack overflow is a bad recursive call. Typically, this is caused when your recursive functions doesn't have the correct termination condition, so it ends up calling itself forever.",
        "answer": "Parameters and local variables are allocated on the stack (with reference types the object lives on the heap and a variable references that object). The stack typically lives at the upper end of your address space and as it is used up it heads towards the bottom of the address space (i.e. towards zero). Your process also has a heap, which lives at the bottom end of your process. As you allocate memory, this heap can grow towards the upper end of your address space. As you can see, there is a potential for the heap to \"collide\" with the stack (a bit like tectonic plates!!! ). The common cause for a stack overflow is a bad recursive call. Typically, this is caused when your recursive functions doesn't have the correct termination condition, so it ends up calling itself forever. However, with GUI programming, it's possible to generate indirect recursion. For example, your app may be handling paint messages, and, whilst processing them, it may call a function that causes the system to send another paint message. Here you've not explicitly called yourself, but the OS/VM has done it for you. To deal with them, you'll need to examine your code. If you've got functions that call themselves then check that you've got a terminating condition. If you have, then check that when calling the function you have at least modified one of the arguments, otherwise there'll be no visible change for the recursively called function and the terminating condition is useless. If you've got no obvious recursive functions then check to see if you're calling any library functions that indirectly will cause your function to be called (like the implicit case above).",
        "summary": "The common cause for a stack overflow is a bad recursive call. Typically, this is caused when your recursive functions doesn't have the correct termination condition, so it ends up calling itself forever."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n something like this",
        "output": "something like this",
        "answer": "something like this",
        "summary": "something like this"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You should use <code>open</code> with the <code>w+</code> mode:",
        "output": "You should use <code>open</code> with the <code>w+</code> mode:",
        "answer": "You should use <code>open</code> with the <code>w+</code> mode:",
        "summary": "You should use <code>open</code> with the <code>w+</code> mode:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'm particularly fond of this example from the fortune file: I like it best because it's so pretty!",
        "output": "I'm particularly fond of this example from the fortune file:",
        "answer": "I'm particularly fond of this example from the fortune file: I like it best because it's so pretty!",
        "summary": "I'm particularly fond of this example from the fortune file:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The old syntax, with just listing the tables, and using the <code>WHERE</code> clause to specify the join criteria, is being deprecated in most modern databases. It's not just for show, the old syntax has the possibility of being ambiguous when you use both INNER and OUTER joins in the same query. Let me give you an example. Let's suppose you have 3 tables in your system: BIGBLOCK Each table contain numerous rows, linked together. You got multiple companies, and each company can have multiple departments, and each department can have multiple employees. Ok, so now you want to do the following: List all the companies, and include all their departments, and all their employees. Note that some companies don't have any departments yet, but make sure you include them as well. Make sure you only retrieve departments that have employees, but always list all companies. So you do this: BIGBLOCK Note that the last one there is an inner join, in order to fulfill the criteria that you only want departments with people. Ok, so what happens now. Well, the problem is, it depends on the database engine, the query optimizer, indexes, and table statistics. Let me explain. If the query optimizer determines that the way to do this is to first take a company, then find the departments, and then do an inner join with employees, you're not going to get any companies that don't have departments. The reason for this is that the <code>WHERE</code> clause determines which <em>rows</em> end up in the final result, not individual parts of the rows. And in this case, due to the left join, the Department.ID column will be NULL, and thus when it comes to the INNER JOIN to Employee, there's no way to fulfill that constraint for the Employee row, and so it won't appear. On the other hand, if the query optimizer decides to tackle the department-employee join first, and then do a left join with the companies, you will see them. So the old syntax is ambiguous. There's no way to specify what you want, without dealing with query hints, and some databases have no way at all. Enter the new syntax, with this you can choose. For instance, if you want all companies, as the problem description stated, this is what you would write: BIGBLOCK Here you specify that you want the department-employee join to be done as one join, and then left join the results of that with the companies. Additionally, let's say you only want departments that contains the letter X in their name. Again, with old style joins, you risk losing the company as well, if it doesn't have any departments with an X in its name, but with the new syntax, you can do this: BIGBLOCK This extra clause is used for the joining, but is not a filter for the entire row. So the row might appear with company information, but might have NULLs in all the department and employee columns for that row, because there is no department with an X in its name for that company. This is hard with the old syntax. This is why, amongst other vendors, Microsoft has deprecated the old outer join syntax, but not the old inner join syntax, since SQL Server 2005 and upwards. The only way to talk to a database running on Microsoft SQL Server 2005 or 2008, using the old style outer join syntax, is to set that database in 8.0 compatibility mode (aka SQL Server 2000). Additionally, the old way, by throwing a bunch of tables at the query optimizer, with a bunch of WHERE clauses, was akin to saying \"here you are, do the best you can\". With the new syntax, the query optimizer has less work to do in order to figure out what parts goes together. So there you have it. LEFT and INNER JOIN is the wave of the future.",
        "output": "The old syntax, with just listing the tables, and using the <code>WHERE</code> clause to specify the join criteria, is being deprecated in most modern databases. It's not just for show, the old syntax has the possibility of being ambiguous when you use both INNER and OUTER joins in the same query. So the old syntax is ambiguous. Enter the new syntax, with this you can choose. Additionally, the old way, by throwing a bunch of tables at the query optimizer, with a bunch of WHERE clauses, was akin to saying \"here you are, do the best you can\". With the new syntax, the query optimizer has less work to do in order to figure out what parts goes together.",
        "answer": "The old syntax, with just listing the tables, and using the <code>WHERE</code> clause to specify the join criteria, is being deprecated in most modern databases. It's not just for show, the old syntax has the possibility of being ambiguous when you use both INNER and OUTER joins in the same query. Let me give you an example. Let's suppose you have 3 tables in your system: BIGBLOCK Each table contain numerous rows, linked together. You got multiple companies, and each company can have multiple departments, and each department can have multiple employees. Ok, so now you want to do the following: List all the companies, and include all their departments, and all their employees. Note that some companies don't have any departments yet, but make sure you include them as well. Make sure you only retrieve departments that have employees, but always list all companies. So you do this: BIGBLOCK Note that the last one there is an inner join, in order to fulfill the criteria that you only want departments with people. Ok, so what happens now. Well, the problem is, it depends on the database engine, the query optimizer, indexes, and table statistics. Let me explain. If the query optimizer determines that the way to do this is to first take a company, then find the departments, and then do an inner join with employees, you're not going to get any companies that don't have departments. The reason for this is that the <code>WHERE</code> clause determines which <em>rows</em> end up in the final result, not individual parts of the rows. And in this case, due to the left join, the Department.ID column will be NULL, and thus when it comes to the INNER JOIN to Employee, there's no way to fulfill that constraint for the Employee row, and so it won't appear. On the other hand, if the query optimizer decides to tackle the department-employee join first, and then do a left join with the companies, you will see them. So the old syntax is ambiguous. There's no way to specify what you want, without dealing with query hints, and some databases have no way at all. Enter the new syntax, with this you can choose. For instance, if you want all companies, as the problem description stated, this is what you would write: BIGBLOCK Here you specify that you want the department-employee join to be done as one join, and then left join the results of that with the companies. Additionally, let's say you only want departments that contains the letter X in their name. Again, with old style joins, you risk losing the company as well, if it doesn't have any departments with an X in its name, but with the new syntax, you can do this: BIGBLOCK This extra clause is used for the joining, but is not a filter for the entire row. So the row might appear with company information, but might have NULLs in all the department and employee columns for that row, because there is no department with an X in its name for that company. This is hard with the old syntax. This is why, amongst other vendors, Microsoft has deprecated the old outer join syntax, but not the old inner join syntax, since SQL Server 2005 and upwards. The only way to talk to a database running on Microsoft SQL Server 2005 or 2008, using the old style outer join syntax, is to set that database in 8.0 compatibility mode (aka SQL Server 2000). Additionally, the old way, by throwing a bunch of tables at the query optimizer, with a bunch of WHERE clauses, was akin to saying \"here you are, do the best you can\". With the new syntax, the query optimizer has less work to do in order to figure out what parts goes together. So there you have it. LEFT and INNER JOIN is the wave of the future.",
        "summary": "The old syntax, with just listing the tables, and using the <code>WHERE</code> clause to specify the join criteria, is being deprecated in most modern databases. It's not just for show, the old syntax has the possibility of being ambiguous when you use both INNER and OUTER joins in the same query. So the old syntax is ambiguous. Enter the new syntax, with this you can choose. Additionally, the old way, by throwing a bunch of tables at the query optimizer, with a bunch of WHERE clauses, was akin to saying \"here you are, do the best you can\". With the new syntax, the query optimizer has less work to do in order to figure out what parts goes together."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can put a hack in your <code>foreach</code>, such as a field incremented on each run-through, which is exactly what the <code>for</code> loop gives you in a numerically-indexed array. Such a field would be a pseudo-index that needs manual management (increments, etc). A <code>foreach</code> will give you your index in the form of your <code>$key</code> value, so such a hack shouldn't be necessary. e.g., in a <code>foreach</code>",
        "output": "You can put a hack in your <code>foreach</code>, such as a field incremented on each run-through, which is exactly what the <code>for</code> loop gives you in a numerically-indexed array.",
        "answer": "You can put a hack in your <code>foreach</code>, such as a field incremented on each run-through, which is exactly what the <code>for</code> loop gives you in a numerically-indexed array. Such a field would be a pseudo-index that needs manual management (increments, etc). A <code>foreach</code> will give you your index in the form of your <code>$key</code> value, so such a hack shouldn't be necessary. e.g., in a <code>foreach</code>",
        "summary": "You can put a hack in your <code>foreach</code>, such as a field incremented on each run-through, which is exactly what the <code>for</code> loop gives you in a numerically-indexed array."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Learn underlaying HTTP Protocol This is similar to driving a car. You buy yourself a car and go on the road, but you don't know any of the signs, lights or other rules you must obey. Obviously you're not able to drive even though you know how to manage a car. At least not safely. Not for yourself, neither for others. You should learn a bit about HTTP protocol. GET/POST are not related (at least not directly) to PHP/AJAX/jQuery or similar. They use them because they are using HTTP protocol for communication. And there's much more to HTTP Protocol than just <code>GET</code> and <code>POST</code>. Check out some of these and then search on your own as well: <li>wikipedia <li>W3C <li>HTTP Made Really Easy <li>...",
        "output": "GET/POST are not related (at least not directly) to PHP/AJAX/jQuery or similar. They use them because they are using HTTP protocol for communication.",
        "answer": "Learn underlaying HTTP Protocol This is similar to driving a car. You buy yourself a car and go on the road, but you don't know any of the signs, lights or other rules you must obey. Obviously you're not able to drive even though you know how to manage a car. At least not safely. Not for yourself, neither for others. You should learn a bit about HTTP protocol. GET/POST are not related (at least not directly) to PHP/AJAX/jQuery or similar. They use them because they are using HTTP protocol for communication. And there's much more to HTTP Protocol than just <code>GET</code> and <code>POST</code>. Check out some of these and then search on your own as well: <li>wikipedia <li>W3C <li>HTTP Made Really Easy <li>...",
        "summary": "GET/POST are not related (at least not directly) to PHP/AJAX/jQuery or similar. They use them because they are using HTTP protocol for communication."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Couple of other differences: Abstract classes can have static methods, properties, fields etc. and operators, interfaces can't.Cast operator allows casting to/from abstract class but don't allow casting to/from interface. So pretty much you can use abstract class on its own even if it is never implemented (through its static members) and you can't use interface on its own in any way.",
        "output": "Abstract classes can have static methods, properties, fields etc. and operators, interfaces can't.Cast operator allows casting to/from abstract class but don't allow casting to/from interface.",
        "answer": "Couple of other differences: Abstract classes can have static methods, properties, fields etc. and operators, interfaces can't.Cast operator allows casting to/from abstract class but don't allow casting to/from interface. So pretty much you can use abstract class on its own even if it is never implemented (through its static members) and you can't use interface on its own in any way.",
        "summary": "Abstract classes can have static methods, properties, fields etc. and operators, interfaces can't.Cast operator allows casting to/from abstract class but don't allow casting to/from interface."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One thing to note is when auto collapsing margins annoy you (and you are not using background colours on your elements), something it's just easier to use padding.",
        "output": "One thing to note is when auto collapsing margins annoy you (and you are not using background colours on your elements), something it's just easier to use padding.",
        "answer": "One thing to note is when auto collapsing margins annoy you (and you are not using background colours on your elements), something it's just easier to use padding.",
        "summary": "One thing to note is when auto collapsing margins annoy you (and you are not using background colours on your elements), something it's just easier to use padding."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Instead of loading a gigantic log file in an editor, I'm using Unix command line tools like <code>grep</code>, <code>tail</code>, <code>gawk</code>, etc. to filter the interesting parts into a much smaller file and then, I open that. On Windows, try Cygwin.",
        "output": "On Windows, try Cygwin.",
        "answer": "Instead of loading a gigantic log file in an editor, I'm using Unix command line tools like <code>grep</code>, <code>tail</code>, <code>gawk</code>, etc. to filter the interesting parts into a much smaller file and then, I open that. On Windows, try Cygwin.",
        "summary": "On Windows, try Cygwin."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I think the confusion is caused by the fact that people don't know the real application of the Singleton pattern. I can't stress this enough. Singleton is not a pattern to wrap globals. Singleton pattern should only be used to guarantee that one and only one instance of a given class exists during run time. People think Singleton is evil because they are using it for globals. It is because of this confusion that Singleton is looked down upon. Please, don't confuse Singletons and globals. If used for the purpose it was intended for, you will gain extreme benefits from the Singleton pattern.",
        "output": "I think the confusion is caused by the fact that people don't know the real application of the Singleton pattern. People think Singleton is evil because they are using it for globals.",
        "answer": "I think the confusion is caused by the fact that people don't know the real application of the Singleton pattern. I can't stress this enough. Singleton is not a pattern to wrap globals. Singleton pattern should only be used to guarantee that one and only one instance of a given class exists during run time. People think Singleton is evil because they are using it for globals. It is because of this confusion that Singleton is looked down upon. Please, don't confuse Singletons and globals. If used for the purpose it was intended for, you will gain extreme benefits from the Singleton pattern.",
        "summary": "I think the confusion is caused by the fact that people don't know the real application of the Singleton pattern. People think Singleton is evil because they are using it for globals."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use <code>rand(range)</code> From Ruby Random Numbers: If you needed a random integer to simulate a roll of a six-sided die, you'd use: <code>1 + rand(6)</code>. A roll in craps could be simulated with <code>2 + rand(6) + rand(6)</code>. Finally, if you just need a random float, just call <code>rand</code> with no arguments. As Marc-Andr_Ã¦Â¼?Lafortune mentions in his answer below (go upvote it), Ruby 1.9.2 has its own <code>Random</code> class (that Marc-Andr_Ã¦Â¼?himself helped to debug, hence the 1.9.2 target for that feature). For instance, in this game where you need to guess 10 numbers, you can initialize them with: Note: Using <code>Random.new.rand(20..30)</code> (using <code>Random.new</code>) generally would not be a good idea, as explained in detail (again) by Marc-Andr_Ã¦Â¼?Lafortune, in his answer (again). But if you don't use <code>Random.new</code>, then the class method <code>rand</code> only takes a <code>max</code> value, not a <code>Range</code>, as banister (energetically) points out in the comment (and as documented in the docs for <code>Random</code>). Only the instance method can take a <code>Range</code>, as illustrated by generate a random number with 7 digits. This is why the equivalent of <code>Random.new.rand(20..30)</code> would be <code>20 + Random.rand(11)</code>, since <code>Random.rand(int)</code> returns __ random integer greater than or equal to zero and less than the argument.Ã¨ÂÂÃ©Â©Â´?<code>20..30</code> includes 30, I need to come up with a random number between 0 and 11, excluding 11.",
        "output": "Use <code>rand(range)</code>",
        "answer": "Use <code>rand(range)</code> From Ruby Random Numbers: If you needed a random integer to simulate a roll of a six-sided die, you'd use: <code>1 + rand(6)</code>. A roll in craps could be simulated with <code>2 + rand(6) + rand(6)</code>. Finally, if you just need a random float, just call <code>rand</code> with no arguments. As Marc-Andr_Ã¦Â¼?Lafortune mentions in his answer below (go upvote it), Ruby 1.9.2 has its own <code>Random</code> class (that Marc-Andr_Ã¦Â¼?himself helped to debug, hence the 1.9.2 target for that feature). For instance, in this game where you need to guess 10 numbers, you can initialize them with: Note: Using <code>Random.new.rand(20..30)</code> (using <code>Random.new</code>) generally would not be a good idea, as explained in detail (again) by Marc-Andr_Ã¦Â¼?Lafortune, in his answer (again). But if you don't use <code>Random.new</code>, then the class method <code>rand</code> only takes a <code>max</code> value, not a <code>Range</code>, as banister (energetically) points out in the comment (and as documented in the docs for <code>Random</code>). Only the instance method can take a <code>Range</code>, as illustrated by generate a random number with 7 digits. This is why the equivalent of <code>Random.new.rand(20..30)</code> would be <code>20 + Random.rand(11)</code>, since <code>Random.rand(int)</code> returns __ random integer greater than or equal to zero and less than the argument.Ã¨ÂÂÃ©Â©Â´?<code>20..30</code> includes 30, I need to come up with a random number between 0 and 11, excluding 11.",
        "summary": "Use <code>rand(range)</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try <code>ssh-add</code>, you need <code>ssh-agent</code> to be running and holding your private key (Ok, responding to the updated question, you first run <code>ssh-keygen</code> to generate a public and private key as Jefromi explained. You put the public key on the server. You should use a passphrase, if you don't you have the equivalent of a plain-text password in your private key. But when you do, then you need as a practical matter <code>ssh-agent</code> as explained below.) You want to be running <code>ssh-agent</code> in the background as you log in. Once you log in, the idea is to run <code>ssh-add</code> once and only once, in order to give the agent your passphrase, to decode your key. The agent then just sits in memory with your key unlocked and loaded, ready to use every time you ssh somewhere. All ssh-family commands1 will then consult the agent and automatically be able to use your private key. On OSX (err, <em>macOS</em>), GNOME and KDE systems, <code>ssh-agent</code> is usually launched automatically for you. I will go through the details in case, like me, you also have a Cygwin or other windows environment where this most certainly is not done for you. Start here: <code>man ssh-agent</code>. There are various ways to automatically run the agent. As the man page explains, you can run it so that it is a parent of all your login session's other processes. That way, the environment variables it provides will automatically be in all your shells. When you (later) invoke <code>ssh-add</code> or <code>ssh</code> both will have access to the agent because they all have the environment variables with magic socket pathnames or whatever. Alternatively, you can run the agent as an ordinary child, save the environment settings in a file, and source that file in every shell when it starts. My OSX and Ubuntu systems automatically do the agent launch setup, so all I have to do is run <code>ssh-add</code> once. Try running <code>ssh-add</code> and see if it works, if so, then you just need to do that once per reboot. My Cygwin system needed it done manually, so I did this in my <code>.profile</code> and I have <code>.bashrc</code> source <code>.profile</code>: BIGBLOCK The <code>.agent</code> file is created automatically by the script; it contains the environment variables definitions and exports. The above tries to source the .agent file, and then tries to <code>ps(1)</code> the agent. If it doesn't work it starts an agent and creates a new agent file. You can also just run <code>ssh-add</code> and if it fails start an agent.1. And even local and remote <code>sudo</code> with the right pam extension.",
        "output": "Try <code>ssh-add</code>, you need <code>ssh-agent</code> to be running and holding your private key Once you log in, the idea is to run <code>ssh-add</code> once and only once, in order to give the agent your passphrase, to decode your key. On OSX (err, <em>macOS</em>), GNOME and KDE systems, <code>ssh-agent</code> is usually launched automatically for you. I will go through the details in case, like me, you also have a Cygwin or other windows environment where this most certainly is not done for you. There are various ways to automatically run the agent. As the man page explains, you can run it so that it is a parent of all your login session's other processes. Alternatively, you can run the agent as an ordinary child, save the environment settings in a file, and source that file in every shell when it starts. My Cygwin system needed it done manually, so I did this in my <code>.profile</code> and I have <code>.bashrc</code> source <code>.profile</code>: BIGBLOCK You can also just run <code>ssh-add</code> and if it fails start an agent.1.",
        "answer": "Try <code>ssh-add</code>, you need <code>ssh-agent</code> to be running and holding your private key (Ok, responding to the updated question, you first run <code>ssh-keygen</code> to generate a public and private key as Jefromi explained. You put the public key on the server. You should use a passphrase, if you don't you have the equivalent of a plain-text password in your private key. But when you do, then you need as a practical matter <code>ssh-agent</code> as explained below.) You want to be running <code>ssh-agent</code> in the background as you log in. Once you log in, the idea is to run <code>ssh-add</code> once and only once, in order to give the agent your passphrase, to decode your key. The agent then just sits in memory with your key unlocked and loaded, ready to use every time you ssh somewhere. All ssh-family commands1 will then consult the agent and automatically be able to use your private key. On OSX (err, <em>macOS</em>), GNOME and KDE systems, <code>ssh-agent</code> is usually launched automatically for you. I will go through the details in case, like me, you also have a Cygwin or other windows environment where this most certainly is not done for you. Start here: <code>man ssh-agent</code>. There are various ways to automatically run the agent. As the man page explains, you can run it so that it is a parent of all your login session's other processes. That way, the environment variables it provides will automatically be in all your shells. When you (later) invoke <code>ssh-add</code> or <code>ssh</code> both will have access to the agent because they all have the environment variables with magic socket pathnames or whatever. Alternatively, you can run the agent as an ordinary child, save the environment settings in a file, and source that file in every shell when it starts. My OSX and Ubuntu systems automatically do the agent launch setup, so all I have to do is run <code>ssh-add</code> once. Try running <code>ssh-add</code> and see if it works, if so, then you just need to do that once per reboot. My Cygwin system needed it done manually, so I did this in my <code>.profile</code> and I have <code>.bashrc</code> source <code>.profile</code>: BIGBLOCK The <code>.agent</code> file is created automatically by the script; it contains the environment variables definitions and exports. The above tries to source the .agent file, and then tries to <code>ps(1)</code> the agent. If it doesn't work it starts an agent and creates a new agent file. You can also just run <code>ssh-add</code> and if it fails start an agent.1. And even local and remote <code>sudo</code> with the right pam extension.",
        "summary": "Try <code>ssh-add</code>, you need <code>ssh-agent</code> to be running and holding your private key Once you log in, the idea is to run <code>ssh-add</code> once and only once, in order to give the agent your passphrase, to decode your key. On OSX (err, <em>macOS</em>), GNOME and KDE systems, <code>ssh-agent</code> is usually launched automatically for you. I will go through the details in case, like me, you also have a Cygwin or other windows environment where this most certainly is not done for you. There are various ways to automatically run the agent. As the man page explains, you can run it so that it is a parent of all your login session's other processes. Alternatively, you can run the agent as an ordinary child, save the environment settings in a file, and source that file in every shell when it starts. My Cygwin system needed it done manually, so I did this in my <code>.profile</code> and I have <code>.bashrc</code> source <code>.profile</code>: BIGBLOCK You can also just run <code>ssh-add</code> and if it fails start an agent.1."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You don't necessarily need Ajax for this. Just an <code>&lt;a&gt;</code> link is enough if you set the <code>content-disposition</code> to <code>attachment</code> in the server side code. This way the parent page will just stay open, if that was your major concern (why would you unnecessarily have chosen Ajax for this otherwise?). Besides, there is no way to handle this nicely acynchronously. PDF is not character data. It's binary data. You can't do stuff like <code>$(element).load()</code>. You want to use <strong>completely new</strong> request for this. For that <code>&lt;a href=\"pdfservlet/filename.pdf\"&gt;pdf&lt;/a&gt;</code> is perfectly suitable. To assist you more with the server side code, you'll need to tell more about the language used and post an excerpt of the code attempts.",
        "output": "You don't necessarily need Ajax for this. Just an <code>&lt;a&gt;</code> link is enough if you set the <code>content-disposition</code> to <code>attachment</code> in the server side code. PDF is not character data. It's binary data. You want to use <strong>completely new</strong> request for this.",
        "answer": "You don't necessarily need Ajax for this. Just an <code>&lt;a&gt;</code> link is enough if you set the <code>content-disposition</code> to <code>attachment</code> in the server side code. This way the parent page will just stay open, if that was your major concern (why would you unnecessarily have chosen Ajax for this otherwise?). Besides, there is no way to handle this nicely acynchronously. PDF is not character data. It's binary data. You can't do stuff like <code>$(element).load()</code>. You want to use <strong>completely new</strong> request for this. For that <code>&lt;a href=\"pdfservlet/filename.pdf\"&gt;pdf&lt;/a&gt;</code> is perfectly suitable. To assist you more with the server side code, you'll need to tell more about the language used and post an excerpt of the code attempts.",
        "summary": "You don't necessarily need Ajax for this. Just an <code>&lt;a&gt;</code> link is enough if you set the <code>content-disposition</code> to <code>attachment</code> in the server side code. PDF is not character data. It's binary data. You want to use <strong>completely new</strong> request for this."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n \"Best\" way is too wide a request. Is it \"shortest\"? \"Fastest\"? \"Readable\"? Filter in place or into another collection? Simplest (but not most readable) way is to iterate it and use Iterator.remove() method: Now, to make it more readable, you can wrap it into a utility method. Then invent a IPredicate interface, create an anonymous implementation of that interface and do something like: where filterInPlace() iterate the collection and calls Predicate.keepIt() to learn if the instance to be kept in the collection. I don't really see a justification for bringing in a third-party library just for this task.",
        "output": "Simplest (but not most readable) way is to iterate it and use Iterator.remove() method:",
        "answer": "\"Best\" way is too wide a request. Is it \"shortest\"? \"Fastest\"? \"Readable\"? Filter in place or into another collection? Simplest (but not most readable) way is to iterate it and use Iterator.remove() method: Now, to make it more readable, you can wrap it into a utility method. Then invent a IPredicate interface, create an anonymous implementation of that interface and do something like: where filterInPlace() iterate the collection and calls Predicate.keepIt() to learn if the instance to be kept in the collection. I don't really see a justification for bringing in a third-party library just for this task.",
        "summary": "Simplest (but not most readable) way is to iterate it and use Iterator.remove() method:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's not a single operator, it's two. It's equivalent to the following and is a quick way to cast a value to boolean.",
        "output": "It's not a single operator, it's two. It's equivalent to the following and is a quick way to cast a value to boolean.",
        "answer": "It's not a single operator, it's two. It's equivalent to the following and is a quick way to cast a value to boolean.",
        "summary": "It's not a single operator, it's two. It's equivalent to the following and is a quick way to cast a value to boolean."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Similarly with <code>OUTER JOINs</code>, the word <code>\"OUTER\"</code> is optional. It's the <code>LEFT</code> or <code>RIGHT</code> keyword that makes the <code>JOIN</code> an <code>\"OUTER\" JOIN</code>. However for some reason I always use <code>\"OUTER\"</code> as in <code>LEFT OUTER JOIN</code> and never <code>LEFT JOIN</code>, but I never use <code>INNER JOIN</code>, but rather I just use <code>\"JOIN\"</code>:",
        "output": "Similarly with <code>OUTER JOINs</code>, the word <code>\"OUTER\"</code> is optional.",
        "answer": "Similarly with <code>OUTER JOINs</code>, the word <code>\"OUTER\"</code> is optional. It's the <code>LEFT</code> or <code>RIGHT</code> keyword that makes the <code>JOIN</code> an <code>\"OUTER\" JOIN</code>. However for some reason I always use <code>\"OUTER\"</code> as in <code>LEFT OUTER JOIN</code> and never <code>LEFT JOIN</code>, but I never use <code>INNER JOIN</code>, but rather I just use <code>\"JOIN\"</code>:",
        "summary": "Similarly with <code>OUTER JOINs</code>, the word <code>\"OUTER\"</code> is optional."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The first thing is to know the difference between an instance of a class, and the class itself. A class models certain properties, and the behaviour of the whole in the context of those properties. An instance will define specific values for those properties. Anything bound to the static keyword is available in the context of the class rather than in the context of an instance of the class As a corollary to the above variables within a method can not be static static fields, and methods must be invoked using the class-name e.g. MyProgram7.main(...) The lifetime of a static field/method is equivalent to the lifetime of your application E.g. Say, car has the property colour, and exhibits the behaviour 'motion'. An instance of the car would be a Red Volkswagen Beetle in motion at 25kmph. Now a static property of the car would be the number of wheels (4) on the road, and this would apply to all cars. HTH",
        "output": "Anything bound to the static keyword is available in the context of the class rather than in the context of an instance of the class",
        "answer": "The first thing is to know the difference between an instance of a class, and the class itself. A class models certain properties, and the behaviour of the whole in the context of those properties. An instance will define specific values for those properties. Anything bound to the static keyword is available in the context of the class rather than in the context of an instance of the class As a corollary to the above variables within a method can not be static static fields, and methods must be invoked using the class-name e.g. MyProgram7.main(...) The lifetime of a static field/method is equivalent to the lifetime of your application E.g. Say, car has the property colour, and exhibits the behaviour 'motion'. An instance of the car would be a Red Volkswagen Beetle in motion at 25kmph. Now a static property of the car would be the number of wheels (4) on the road, and this would apply to all cars. HTH",
        "summary": "Anything bound to the static keyword is available in the context of the class rather than in the context of an instance of the class"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You shouldn't really be de-encrypting passwords. You should be encrypting the password entered into your application and comparing against the encrypted password from the database. Edit - and if this is because the password has been forgotten, then setup a mechanism to create a new password.",
        "output": "You shouldn't really be de-encrypting passwords. You should be encrypting the password entered into your application and comparing against the encrypted password from the database.",
        "answer": "You shouldn't really be de-encrypting passwords. You should be encrypting the password entered into your application and comparing against the encrypted password from the database. Edit - and if this is because the password has been forgotten, then setup a mechanism to create a new password.",
        "summary": "You shouldn't really be de-encrypting passwords. You should be encrypting the password entered into your application and comparing against the encrypted password from the database."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n iOS 3.2 and later support this. Straight from the <em>What's New in iPhone OS 3.2</em> doc: <strong>Custom Font Support</strong> Applications that want to use custom fonts can now include those fonts in their application bundle and register those fonts with the system by including the UIAppFonts key in their Info.plist file. When the system sees the key, it loads the specified fonts and makes them available to the application. Once the fonts have been set in the <code>Info.plist</code>, you can use your custom fonts as any other font in IB or programatically. There is an ongoing thread on Apple Developer Forums: https://devforums.apple.com/thread/37824 (login required) And here's an excellent and simple 3 steps tutorial on how to achieve this (broken link removed) <li>Add your custom font files into your project using Xcode as a resource <li>Add a key to your <code>Info.plist</code> file called <code>UIAppFonts</code>. <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the <code>UIAppFonts</code> array <li>Save <code>Info.plist</code> Also: Make sure the fonts are in your Copy Bundle Resources.",
        "output": "Straight from the <em>What's New in iPhone OS 3.2</em> doc: <li>Add a key to your <code>Info.plist</code> file called <code>UIAppFonts</code>. <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the <code>UIAppFonts</code> array <li>Save <code>Info.plist</code>",
        "answer": "iOS 3.2 and later support this. Straight from the <em>What's New in iPhone OS 3.2</em> doc: <strong>Custom Font Support</strong> Applications that want to use custom fonts can now include those fonts in their application bundle and register those fonts with the system by including the UIAppFonts key in their Info.plist file. When the system sees the key, it loads the specified fonts and makes them available to the application. Once the fonts have been set in the <code>Info.plist</code>, you can use your custom fonts as any other font in IB or programatically. There is an ongoing thread on Apple Developer Forums: https://devforums.apple.com/thread/37824 (login required) And here's an excellent and simple 3 steps tutorial on how to achieve this (broken link removed) <li>Add your custom font files into your project using Xcode as a resource <li>Add a key to your <code>Info.plist</code> file called <code>UIAppFonts</code>. <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the <code>UIAppFonts</code> array <li>Save <code>Info.plist</code> Also: Make sure the fonts are in your Copy Bundle Resources.",
        "summary": "Straight from the <em>What's New in iPhone OS 3.2</em> doc: <li>Add a key to your <code>Info.plist</code> file called <code>UIAppFonts</code>. <li>Make this key an array <li>For each font you have, enter the full name of your font file (including the extension) as items to the <code>UIAppFonts</code> array <li>Save <code>Info.plist</code>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Maybe too late now, but more often than not you need to run after installing asp.net. Maybe I would do it anyway now.",
        "output": "Maybe too late now, but more often than not you need to run",
        "answer": "Maybe too late now, but more often than not you need to run after installing asp.net. Maybe I would do it anyway now.",
        "summary": "Maybe too late now, but more often than not you need to run"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Use the beginning and end anchors. Use <code>\"^\\d+$\"</code> if you need to match more than one digit. Note that <code>\"\\d\"</code> will match <code>[0-9]</code> and other digit characters like the Eastern Arabic numerals <code>Ã¨Â´ÂÃ¤Â½ÂÃ¤Â½ÂÃ¤Â¼Â²Ã¤Â¼Â½Ã¤Â½Â¶Ã¤Â½Â´Ã¤Â¾ÂÃ¤Â¾ÂÃ¤Â¾Â</code>. Use <code>\"^[0-9]+$\"</code> to restrict matches to just the Arabic numerals 0 - 9. If you need to include any numeric representations other than just digits (like decimal values for starters), then see @tchrist's comprehensive guide to parsing numbers with regular expressions.",
        "output": "Use the beginning and end anchors. Use <code>\"^\\d+$\"</code> if you need to match more than one digit. Use <code>\"^[0-9]+$\"</code> to restrict matches to just the Arabic numerals 0 - 9.",
        "answer": "Use the beginning and end anchors. Use <code>\"^\\d+$\"</code> if you need to match more than one digit. Note that <code>\"\\d\"</code> will match <code>[0-9]</code> and other digit characters like the Eastern Arabic numerals <code>Ã¨Â´ÂÃ¤Â½ÂÃ¤Â½ÂÃ¤Â¼Â²Ã¤Â¼Â½Ã¤Â½Â¶Ã¤Â½Â´Ã¤Â¾ÂÃ¤Â¾ÂÃ¤Â¾Â</code>. Use <code>\"^[0-9]+$\"</code> to restrict matches to just the Arabic numerals 0 - 9. If you need to include any numeric representations other than just digits (like decimal values for starters), then see @tchrist's comprehensive guide to parsing numbers with regular expressions.",
        "summary": "Use the beginning and end anchors. Use <code>\"^\\d+$\"</code> if you need to match more than one digit. Use <code>\"^[0-9]+$\"</code> to restrict matches to just the Arabic numerals 0 - 9."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Would this work?",
        "output": "Would this work?",
        "answer": "Would this work?",
        "summary": "Would this work?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When you inline an initial value for a variable it will be done implicitly in the constructor anyway. I would argue that this syntax was best practice in C# up to 5: As this gives you clear control of the order values are assigned. As of C#6 there is a new way:",
        "output": "I would argue that this syntax was best practice in C# up to 5: As of C#6 there is a new way:",
        "answer": "When you inline an initial value for a variable it will be done implicitly in the constructor anyway. I would argue that this syntax was best practice in C# up to 5: As this gives you clear control of the order values are assigned. As of C#6 there is a new way:",
        "summary": "I would argue that this syntax was best practice in C# up to 5: As of C#6 there is a new way:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is easily (ab)used as a global variable. Classes that depend on singletons are relatively harder to unit test in isolation.",
        "output": "It is easily (ab)used as a global variable. Classes that depend on singletons are relatively harder to unit test in isolation.",
        "answer": "It is easily (ab)used as a global variable. Classes that depend on singletons are relatively harder to unit test in isolation.",
        "summary": "It is easily (ab)used as a global variable. Classes that depend on singletons are relatively harder to unit test in isolation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There is a dynamic comparison chart over at the versioncontrolblog where you can compare several different version control systems. Here is a comparison table between git, hg and bzr.",
        "output": "There is a dynamic comparison chart over at the versioncontrolblog where you can compare several different version control systems.",
        "answer": "There is a dynamic comparison chart over at the versioncontrolblog where you can compare several different version control systems. Here is a comparison table between git, hg and bzr.",
        "summary": "There is a dynamic comparison chart over at the versioncontrolblog where you can compare several different version control systems."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Depends on what they looked like. I use gitx which makes pictures like this one: You can compare <code>git log --graph</code> vs. gitk on a 24-way octopus merge (originally from http://clojure-log.n01se.net/date/2008-12-24.html):",
        "output": "I use gitx which makes pictures like this one: You can compare <code>git log --graph</code> vs. gitk on a 24-way octopus merge (originally from http://clojure-log.n01se.net/date/2008-12-24.html):",
        "answer": "Depends on what they looked like. I use gitx which makes pictures like this one: You can compare <code>git log --graph</code> vs. gitk on a 24-way octopus merge (originally from http://clojure-log.n01se.net/date/2008-12-24.html):",
        "summary": "I use gitx which makes pictures like this one: You can compare <code>git log --graph</code> vs. gitk on a 24-way octopus merge (originally from http://clojure-log.n01se.net/date/2008-12-24.html):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You cannot share cookies across domains. You can however allow all subdomains to have access. To allow all subdomains of <code>example.com</code> to have access, set the domain to <code>.example.com</code>. It's not possible giving <code>otherexample.com</code> access to <code>example.com</code>'s cookies though.",
        "output": "To allow all subdomains of <code>example.com</code> to have access, set the domain to <code>.example.com</code>. It's not possible giving <code>otherexample.com</code> access to <code>example.com</code>'s cookies though.",
        "answer": "You cannot share cookies across domains. You can however allow all subdomains to have access. To allow all subdomains of <code>example.com</code> to have access, set the domain to <code>.example.com</code>. It's not possible giving <code>otherexample.com</code> access to <code>example.com</code>'s cookies though.",
        "summary": "To allow all subdomains of <code>example.com</code> to have access, set the domain to <code>.example.com</code>. It's not possible giving <code>otherexample.com</code> access to <code>example.com</code>'s cookies though."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As found in http://www.mofeel.net/582-comp-soft-sys-matlab/54166.aspx Note: The command has to be executed after the plot!",
        "output": "As found in http://www.mofeel.net/582-comp-soft-sys-matlab/54166.aspx",
        "answer": "As found in http://www.mofeel.net/582-comp-soft-sys-matlab/54166.aspx Note: The command has to be executed after the plot!",
        "summary": "As found in http://www.mofeel.net/582-comp-soft-sys-matlab/54166.aspx"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you want the ability to change which method is called at run time I would recommend using a delegate:  http://www.codeproject.com/KB/cs/delegates_step1.aspx It will allow you to create an object to store the method to call and you can pass that to your other methods when it's needed.",
        "output": "If you want the ability to change which method is called at run time I would recommend using a delegate:  http://www.codeproject.com/KB/cs/delegates_step1.aspx",
        "answer": "If you want the ability to change which method is called at run time I would recommend using a delegate:  http://www.codeproject.com/KB/cs/delegates_step1.aspx It will allow you to create an object to store the method to call and you can pass that to your other methods when it's needed.",
        "summary": "If you want the ability to change which method is called at run time I would recommend using a delegate:  http://www.codeproject.com/KB/cs/delegates_step1.aspx"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You're obviously not disposing of things. Consider the \"using\" command when temporarily using objects that implement IDisposable.",
        "output": "You're obviously not disposing of things. Consider the \"using\" command when temporarily using objects that implement IDisposable.",
        "answer": "You're obviously not disposing of things. Consider the \"using\" command when temporarily using objects that implement IDisposable.",
        "summary": "You're obviously not disposing of things. Consider the \"using\" command when temporarily using objects that implement IDisposable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n static_cast <code>static_cast</code> is used for cases where you basically want to reverse an implicit conversion, with a few restrictions and additions. <code>static_cast</code> performs no runtime checks. This should be used if you know that you refer to an object of a specific type, and thus a check would be unnecessary. Example: In this example, you know that you passed a <code>MyClass</code> object, and thus there isn't any need for a runtime check to ensure this. dynamic_cast <code>dynamic_cast</code> is useful when you don't know what the dynamic type of the object is. It returns a null pointer if the object referred to doesn't contain the type casted to as a base class (when you cast to a reference, a <code>bad_cast</code> exception is thrown in that case). You cannot use <code>dynamic_cast</code> if you downcast (cast to a derived class) and the argument type is not polymorphic. For example, the following code is not valid, because <code>Base</code> doesn't contain any virtual function: An \"up-cast\" (cast to the base class) is always valid with both <code>static_cast</code> and <code>dynamic_cast</code>, and also without any cast, as an \"up-cast\" is an implicit conversion. Regular Cast These casts are also called C-style cast. A C-style cast is basically identical to trying out a range of sequences of C++ casts, and taking the first C++ cast that works, without ever considering <code>dynamic_cast</code>. Needless to say, this is much more powerful as it combines all of <code>const_cast</code>, <code>static_cast</code> and <code>reinterpret_cast</code>, but it's also unsafe, because it does not use <code>dynamic_cast</code>. In addition, C-style casts not only allow you to do this, but they also allow you to safely cast to a private base-class, while the \"equivalent\" <code>static_cast</code> sequence would give you a compile-time error for that. Some people prefer C-style casts because of their brevity. I use them for numeric casts only, and use the appropriate C++ casts when user defined types are involved, as they provide stricter checking.",
        "output": "<code>static_cast</code> is used for cases where you basically want to reverse an implicit conversion, with a few restrictions and additions. <code>static_cast</code> performs no runtime checks. A C-style cast is basically identical to trying out a range of sequences of C++ casts, and taking the first C++ cast that works, without ever considering <code>dynamic_cast</code>.",
        "answer": "static_cast <code>static_cast</code> is used for cases where you basically want to reverse an implicit conversion, with a few restrictions and additions. <code>static_cast</code> performs no runtime checks. This should be used if you know that you refer to an object of a specific type, and thus a check would be unnecessary. Example: In this example, you know that you passed a <code>MyClass</code> object, and thus there isn't any need for a runtime check to ensure this. dynamic_cast <code>dynamic_cast</code> is useful when you don't know what the dynamic type of the object is. It returns a null pointer if the object referred to doesn't contain the type casted to as a base class (when you cast to a reference, a <code>bad_cast</code> exception is thrown in that case). You cannot use <code>dynamic_cast</code> if you downcast (cast to a derived class) and the argument type is not polymorphic. For example, the following code is not valid, because <code>Base</code> doesn't contain any virtual function: An \"up-cast\" (cast to the base class) is always valid with both <code>static_cast</code> and <code>dynamic_cast</code>, and also without any cast, as an \"up-cast\" is an implicit conversion. Regular Cast These casts are also called C-style cast. A C-style cast is basically identical to trying out a range of sequences of C++ casts, and taking the first C++ cast that works, without ever considering <code>dynamic_cast</code>. Needless to say, this is much more powerful as it combines all of <code>const_cast</code>, <code>static_cast</code> and <code>reinterpret_cast</code>, but it's also unsafe, because it does not use <code>dynamic_cast</code>. In addition, C-style casts not only allow you to do this, but they also allow you to safely cast to a private base-class, while the \"equivalent\" <code>static_cast</code> sequence would give you a compile-time error for that. Some people prefer C-style casts because of their brevity. I use them for numeric casts only, and use the appropriate C++ casts when user defined types are involved, as they provide stricter checking.",
        "summary": "<code>static_cast</code> is used for cases where you basically want to reverse an implicit conversion, with a few restrictions and additions. <code>static_cast</code> performs no runtime checks. A C-style cast is basically identical to trying out a range of sequences of C++ casts, and taking the first C++ cast that works, without ever considering <code>dynamic_cast</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See this demo:",
        "output": "See this demo:",
        "answer": "See this demo:",
        "summary": "See this demo:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Bitwise operations, including bit shift, are fundamental to low-level hardware or embedded programming. If you read a specification for a device or even some binary file formats, you will see bytes, words, and dwords, broken up into non-byte aligned bitfields, which contain various values of interest. Accessing these bit-fields for reading/writing is the most common usage. A simple real example in graphics programming is that a 16-bit pixel is represented as follows: To get at the green value you would do this: <strong>Explanation</strong> In order to obtain the value of green ONLY, which starts at offset 5 and ends at 10 (i.e. 6-bits long), you need to use a (bit) mask, which when applied against the entire 16-bit pixel, will yield only the bits we are interested in. The appropriate mask is 0x7E0 which in binary is 0000011111100000 (which is 2016 in decimal). To apply a mask, you use the AND operator (&amp;). After applying the mask, you'll end up with a 16-bit number which is really just a 11-bit number since its MSB is in the 11th bit. Green is actually only 6-bits long, so we need to scale it down using a right shift (11 - 6 = 5), hence the use of 5 as offset (<code>#define GREEN_OFFSET  5</code>). Also common is using bit shifts for fast multiplication and division by powers of 2:",
        "output": "Bitwise operations, including bit shift, are fundamental to low-level hardware or embedded programming. Accessing these bit-fields for reading/writing is the most common usage. <strong>Explanation</strong> In order to obtain the value of green ONLY, which starts at offset 5 and ends at 10 (i.e. 6-bits long), you need to use a (bit) mask, which when applied against the entire 16-bit pixel, will yield only the bits we are interested in. The appropriate mask is 0x7E0 which in binary is 0000011111100000 (which is 2016 in decimal). To apply a mask, you use the AND operator (&amp;).",
        "answer": "Bitwise operations, including bit shift, are fundamental to low-level hardware or embedded programming. If you read a specification for a device or even some binary file formats, you will see bytes, words, and dwords, broken up into non-byte aligned bitfields, which contain various values of interest. Accessing these bit-fields for reading/writing is the most common usage. A simple real example in graphics programming is that a 16-bit pixel is represented as follows: To get at the green value you would do this: <strong>Explanation</strong> In order to obtain the value of green ONLY, which starts at offset 5 and ends at 10 (i.e. 6-bits long), you need to use a (bit) mask, which when applied against the entire 16-bit pixel, will yield only the bits we are interested in. The appropriate mask is 0x7E0 which in binary is 0000011111100000 (which is 2016 in decimal). To apply a mask, you use the AND operator (&amp;). After applying the mask, you'll end up with a 16-bit number which is really just a 11-bit number since its MSB is in the 11th bit. Green is actually only 6-bits long, so we need to scale it down using a right shift (11 - 6 = 5), hence the use of 5 as offset (<code>#define GREEN_OFFSET  5</code>). Also common is using bit shifts for fast multiplication and division by powers of 2:",
        "summary": "Bitwise operations, including bit shift, are fundamental to low-level hardware or embedded programming. Accessing these bit-fields for reading/writing is the most common usage. <strong>Explanation</strong> In order to obtain the value of green ONLY, which starts at offset 5 and ends at 10 (i.e. 6-bits long), you need to use a (bit) mask, which when applied against the entire 16-bit pixel, will yield only the bits we are interested in. The appropriate mask is 0x7E0 which in binary is 0000011111100000 (which is 2016 in decimal). To apply a mask, you use the AND operator (&amp;)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As an alias called <code>myip</code>, that should work everywhere: Works correctly with Python 2.x, Python 3.x, modern and old Linux distros, OSX/macOS and Windows for finding the current IPv4 address. Will not return the correct result for machines with multiple IP addresses, IPv6, no configured IP address or no internet access. Same as above, but only the Python code: This will throw an exception if no IP address is configured. Version that will also work on LANs without an internet connection: (thanks @ccpizza) Background: Using <code>socket.gethostbyname(socket.gethostname())</code> did not work here, because one of the computers I was on had an <code>/etc/hosts</code> with duplicate entries and references to itself. <code>socket.gethostbyname()</code> only returns the last entry in <code>/etc/hosts</code>. This was my initial attempt, which weeds out all addresses starting with <code>\"127. \"</code>: This works with Python 2 and 3, on Linux and Windows, but does not deal with several network devices or IPv6. However, it stopped working on recent Linux distros, so I tried this alternative technique instead. It tries to connect to the Google DNS server at <code>8.8.8.8</code> at port <code>53</code>: Then I combined the two above techniques into a one-liner that should work everywhere, and created the <code>myip</code> alias and Python snippet at the top of this answer. With the increasing popularity of IPv6, and for servers with multiple network interfaces, using a third-party Python module for finding the IP address is probably both more robust and reliable than any of the methods listed here.",
        "output": "As an alias called <code>myip</code>, that should work everywhere:",
        "answer": "As an alias called <code>myip</code>, that should work everywhere: Works correctly with Python 2.x, Python 3.x, modern and old Linux distros, OSX/macOS and Windows for finding the current IPv4 address. Will not return the correct result for machines with multiple IP addresses, IPv6, no configured IP address or no internet access. Same as above, but only the Python code: This will throw an exception if no IP address is configured. Version that will also work on LANs without an internet connection: (thanks @ccpizza) Background: Using <code>socket.gethostbyname(socket.gethostname())</code> did not work here, because one of the computers I was on had an <code>/etc/hosts</code> with duplicate entries and references to itself. <code>socket.gethostbyname()</code> only returns the last entry in <code>/etc/hosts</code>. This was my initial attempt, which weeds out all addresses starting with <code>\"127. \"</code>: This works with Python 2 and 3, on Linux and Windows, but does not deal with several network devices or IPv6. However, it stopped working on recent Linux distros, so I tried this alternative technique instead. It tries to connect to the Google DNS server at <code>8.8.8.8</code> at port <code>53</code>: Then I combined the two above techniques into a one-liner that should work everywhere, and created the <code>myip</code> alias and Python snippet at the top of this answer. With the increasing popularity of IPv6, and for servers with multiple network interfaces, using a third-party Python module for finding the IP address is probably both more robust and reliable than any of the methods listed here.",
        "summary": "As an alias called <code>myip</code>, that should work everywhere:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n No, there is no difference, pure syntactic sugar.",
        "output": "No, there is no difference, pure syntactic sugar.",
        "answer": "No, there is no difference, pure syntactic sugar.",
        "summary": "No, there is no difference, pure syntactic sugar."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you inherit publicly from another class, everybody knows you are inheriting and you can be used polymorphically by anyone through a base class pointer. If you inherit protectedly only your children classes will be able to use you polymorphically. If you inherit privately only yourself will be able to execute parent class methods. Which basically symbolizes the knowledge the rest of the classes have about your relationship with your parent class",
        "output": "If you inherit publicly from another class, everybody knows you are inheriting and you can be used polymorphically by anyone through a base class pointer. If you inherit protectedly only your children classes will be able to use you polymorphically. If you inherit privately only yourself will be able to execute parent class methods.",
        "answer": "If you inherit publicly from another class, everybody knows you are inheriting and you can be used polymorphically by anyone through a base class pointer. If you inherit protectedly only your children classes will be able to use you polymorphically. If you inherit privately only yourself will be able to execute parent class methods. Which basically symbolizes the knowledge the rest of the classes have about your relationship with your parent class",
        "summary": "If you inherit publicly from another class, everybody knows you are inheriting and you can be used polymorphically by anyone through a base class pointer. If you inherit protectedly only your children classes will be able to use you polymorphically. If you inherit privately only yourself will be able to execute parent class methods."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Well in general index is a <code>B-tree</code>. There are two types of indexes: clustered and nonclustered. Clustered index creates a physical order of rows (it can be only one and in most cases it is also a primary key - if you create primary key on table you create clustered index on this table also). Nonclustered index is also a binary tree but it doesn't create a physical order of rows. So the leaf nodes of nonclustered index contain PK (if it exists) or row index. Indexes are used to increase the speed of search. Because the complexity is of O(log N). Indexes is very large and interesting topic. I can say that creating indexes on large database is some kind of art sometimes.",
        "output": "Well in general index is a <code>B-tree</code>. There are two types of indexes: clustered and nonclustered. Clustered index creates a physical order of rows (it can be only one and in most cases it is also a primary key - if you create primary key on table you create clustered index on this table also). Nonclustered index is also a binary tree but it doesn't create a physical order of rows. Indexes are used to increase the speed of search.",
        "answer": "Well in general index is a <code>B-tree</code>. There are two types of indexes: clustered and nonclustered. Clustered index creates a physical order of rows (it can be only one and in most cases it is also a primary key - if you create primary key on table you create clustered index on this table also). Nonclustered index is also a binary tree but it doesn't create a physical order of rows. So the leaf nodes of nonclustered index contain PK (if it exists) or row index. Indexes are used to increase the speed of search. Because the complexity is of O(log N). Indexes is very large and interesting topic. I can say that creating indexes on large database is some kind of art sometimes.",
        "summary": "Well in general index is a <code>B-tree</code>. There are two types of indexes: clustered and nonclustered. Clustered index creates a physical order of rows (it can be only one and in most cases it is also a primary key - if you create primary key on table you create clustered index on this table also). Nonclustered index is also a binary tree but it doesn't create a physical order of rows. Indexes are used to increase the speed of search."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>using</strong> is used when you have a resource that you want disposed after it's been used. For instance if you allocate a File resource and only need to use it in one section of code for a little reading or writing, using is helpful for disposing of the File resource as soon as your done. The resource being used needs to implement IDisposable to work properly. Example: BIGBLOCK",
        "output": "<strong>using</strong> is used when you have a resource that you want disposed after it's been used. The resource being used needs to implement IDisposable to work properly.",
        "answer": "<strong>using</strong> is used when you have a resource that you want disposed after it's been used. For instance if you allocate a File resource and only need to use it in one section of code for a little reading or writing, using is helpful for disposing of the File resource as soon as your done. The resource being used needs to implement IDisposable to work properly. Example: BIGBLOCK",
        "summary": "<strong>using</strong> is used when you have a resource that you want disposed after it's been used. The resource being used needs to implement IDisposable to work properly."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n For a happy medium between a 232 lookup table and iterating through each bit individually: From http://ctips.pbwiki.com/CountBits",
        "output": "For a happy medium between a 232 lookup table and iterating through each bit individually:",
        "answer": "For a happy medium between a 232 lookup table and iterating through each bit individually: From http://ctips.pbwiki.com/CountBits",
        "summary": "For a happy medium between a 232 lookup table and iterating through each bit individually:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to python docs: <code>has_key()</code> is deprecated in favor of   <code>key in d</code>.",
        "output": "<code>has_key()</code> is deprecated in favor of   <code>key in d</code>.",
        "answer": "According to python docs: <code>has_key()</code> is deprecated in favor of   <code>key in d</code>.",
        "summary": "<code>has_key()</code> is deprecated in favor of   <code>key in d</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <em>Note, this answer is for Python 2.x as it was written in 2008, metaclasses are slightly different in 3.x, see the comments.</em> Metaclasses are the secret sauce that make 'class' work. The default metaclass for a new style object is called 'type'. Metaclasses take 3 args. '<strong>name</strong>', '<strong>bases</strong>' and '<strong>dict</strong>' Here is where the secret starts. Look for where name, bases and the dict come from in this example class definition. Lets define a metaclass that will demonstrate how '<strong>class:</strong>' calls it. And now, an example that actually means something, this will automatically make the variables in the list \"attributes\" set on the class, and set to None. Note that the magic behaviour that 'Initalised' gains by having the metaclass <code>init_attributes</code> is not passed onto a subclass of Initalised. Here is an even more concrete example, showing how you can subclass 'type' to make a metaclass that performs an action when the class is created. This is quite tricky:",
        "output": "Metaclasses are the secret sauce that make 'class' work. The default metaclass for a new style object is called 'type'. Metaclasses take 3 args. '<strong>name</strong>', '<strong>bases</strong>' and '<strong>dict</strong>'",
        "answer": "<em>Note, this answer is for Python 2.x as it was written in 2008, metaclasses are slightly different in 3.x, see the comments.</em> Metaclasses are the secret sauce that make 'class' work. The default metaclass for a new style object is called 'type'. Metaclasses take 3 args. '<strong>name</strong>', '<strong>bases</strong>' and '<strong>dict</strong>' Here is where the secret starts. Look for where name, bases and the dict come from in this example class definition. Lets define a metaclass that will demonstrate how '<strong>class:</strong>' calls it. And now, an example that actually means something, this will automatically make the variables in the list \"attributes\" set on the class, and set to None. Note that the magic behaviour that 'Initalised' gains by having the metaclass <code>init_attributes</code> is not passed onto a subclass of Initalised. Here is an even more concrete example, showing how you can subclass 'type' to make a metaclass that performs an action when the class is created. This is quite tricky:",
        "summary": "Metaclasses are the secret sauce that make 'class' work. The default metaclass for a new style object is called 'type'. Metaclasses take 3 args. '<strong>name</strong>', '<strong>bases</strong>' and '<strong>dict</strong>'"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You are correct that overloading is not the answer. Neither is overriding. Overriding is the means by which you get polymorphism. Polymorphism is the ability for an object to vary behavior based on its type. This is best demonstrated when the caller of an object that exhibits polymorphism is unaware of what specific type the object is.",
        "output": "Overriding is the means by which you get polymorphism. Polymorphism is the ability for an object to vary behavior based on its type. This is best demonstrated when the caller of an object that exhibits polymorphism is unaware of what specific type the object is.",
        "answer": "You are correct that overloading is not the answer. Neither is overriding. Overriding is the means by which you get polymorphism. Polymorphism is the ability for an object to vary behavior based on its type. This is best demonstrated when the caller of an object that exhibits polymorphism is unaware of what specific type the object is.",
        "summary": "Overriding is the means by which you get polymorphism. Polymorphism is the ability for an object to vary behavior based on its type. This is best demonstrated when the caller of an object that exhibits polymorphism is unaware of what specific type the object is."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Polymorphism relates to the ability of a language to have different object treated uniformly by using a single interfaces; as such it is related to overriding, so the interface (or the base class) is polymorphic, the implementor is the object which overrides (two faces of the same medal) anyway, the difference between the two terms is better explained using other languages, such as c++: a polymorphic object in c++ behaves as the java counterpart if the base function is virtual, but if the method is not virtual the code jump is resolved <em>statically</em>, and the true type not checked at runtime so, polymorphism include the ability for an object to behave differently depending on the interface used to access it; let me make an example in pseudocode: BIGBLOCK (supposing that makeRumor is NOT virtual) java doesn't truly offer this level of polymorphism (called also object slicing). animal a = new dog();    dog b = new dog(); BIGBLOCK on both case it will only print woff..since a and b is refering to class dog",
        "output": "Polymorphism relates to the ability of a language to have different object treated uniformly by using a single interfaces; as such it is related to overriding, so the interface (or the base class) is polymorphic, the implementor is the object which overrides (two faces of the same medal)",
        "answer": "Polymorphism relates to the ability of a language to have different object treated uniformly by using a single interfaces; as such it is related to overriding, so the interface (or the base class) is polymorphic, the implementor is the object which overrides (two faces of the same medal) anyway, the difference between the two terms is better explained using other languages, such as c++: a polymorphic object in c++ behaves as the java counterpart if the base function is virtual, but if the method is not virtual the code jump is resolved <em>statically</em>, and the true type not checked at runtime so, polymorphism include the ability for an object to behave differently depending on the interface used to access it; let me make an example in pseudocode: BIGBLOCK (supposing that makeRumor is NOT virtual) java doesn't truly offer this level of polymorphism (called also object slicing). animal a = new dog();    dog b = new dog(); BIGBLOCK on both case it will only print woff..since a and b is refering to class dog",
        "summary": "Polymorphism relates to the ability of a language to have different object treated uniformly by using a single interfaces; as such it is related to overriding, so the interface (or the base class) is polymorphic, the implementor is the object which overrides (two faces of the same medal)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n PHP arrays have internal pointers, so try this: Works okay for me (only very preliminarily tested though).",
        "output": "PHP arrays have internal pointers, so try this:",
        "answer": "PHP arrays have internal pointers, so try this: Works okay for me (only very preliminarily tested though).",
        "summary": "PHP arrays have internal pointers, so try this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The right answer is: <code>h1 { color: yellow; text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black; }</code> This will set four same type shadows from the four sides.",
        "output": "This will set four same type shadows from the four sides.",
        "answer": "The right answer is: <code>h1 { color: yellow; text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black; }</code> This will set four same type shadows from the four sides.",
        "summary": "This will set four same type shadows from the four sides."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use: for finding the parent table row of an element. It is more elegant than parent().parent() which is what I started out doing and soon learnt the error of my ways. --Edit -- Someone pointed out that the question was about removing the row... As pointed out below you can simply do: A similar code snippet can be used for many operations such as firing events on multiple elements.",
        "output": "As pointed out below you can simply do:",
        "answer": "You can use: for finding the parent table row of an element. It is more elegant than parent().parent() which is what I started out doing and soon learnt the error of my ways. --Edit -- Someone pointed out that the question was about removing the row... As pointed out below you can simply do: A similar code snippet can be used for many operations such as firing events on multiple elements.",
        "summary": "As pointed out below you can simply do:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The root problem is (I think) that you are unwittingly using a character set for which: in some cases. UTF-8 is an example of such a character set. Specifically, certain sequences of bytes are not valid encodings in UTF-8. If the UTF-8 decoder encounters one of these sequences, it is liable to discard the offending bytes or decode them as the Unicode codepoint for \"no such character\". Naturally, when you then try to encode the characters as bytes the result will be different. The solution is: Be explicit about the character encoding you are using; i.e. use a String constructor and <code>String.toByteArray</code> method with an explicit charset. Use the right character set for your byte data ... or alternatively one (such as \"Latin-1\" where all byte sequences map to valid Unicode characters. If your bytes are (really) binary data and you want to be able to transmit / receive them over a \"text based\" channel, use something like Base64 encoding ... which is designed for this purpose.",
        "output": "The root problem is (I think) that you are unwittingly using a character set for which: Be explicit about the character encoding you are using; i.e. Use the right character set for your byte data ... or alternatively one (such as \"Latin-1\" where all byte sequences map to valid Unicode characters. If your bytes are (really) binary data and you want to be able to transmit / receive them over a \"text based\" channel, use something like Base64 encoding ... which is designed for this purpose.",
        "answer": "The root problem is (I think) that you are unwittingly using a character set for which: in some cases. UTF-8 is an example of such a character set. Specifically, certain sequences of bytes are not valid encodings in UTF-8. If the UTF-8 decoder encounters one of these sequences, it is liable to discard the offending bytes or decode them as the Unicode codepoint for \"no such character\". Naturally, when you then try to encode the characters as bytes the result will be different. The solution is: Be explicit about the character encoding you are using; i.e. use a String constructor and <code>String.toByteArray</code> method with an explicit charset. Use the right character set for your byte data ... or alternatively one (such as \"Latin-1\" where all byte sequences map to valid Unicode characters. If your bytes are (really) binary data and you want to be able to transmit / receive them over a \"text based\" channel, use something like Base64 encoding ... which is designed for this purpose.",
        "summary": "The root problem is (I think) that you are unwittingly using a character set for which: Be explicit about the character encoding you are using; i.e. Use the right character set for your byte data ... or alternatively one (such as \"Latin-1\" where all byte sequences map to valid Unicode characters. If your bytes are (really) binary data and you want to be able to transmit / receive them over a \"text based\" channel, use something like Base64 encoding ... which is designed for this purpose."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Yes, but you need to move the variable assignment into the query: BIGBLOCK Test case: BIGBLOCK Result: BIGBLOCK Note that for <code>SET</code>, either <code>=</code> or <code>:=</code> can be used as the assignment operator. However inside other statements, the assignment operator must be <code>:=</code> and not <code>=</code> because <code>=</code> is treated as a comparison operator in non-SET statements. <strong>UPDATE:</strong> Further to comments below, you may also do the following: BIGBLOCK",
        "output": "Yes, but you need to move the variable assignment into the query: BIGBLOCK Further to comments below, you may also do the following: BIGBLOCK",
        "answer": "Yes, but you need to move the variable assignment into the query: BIGBLOCK Test case: BIGBLOCK Result: BIGBLOCK Note that for <code>SET</code>, either <code>=</code> or <code>:=</code> can be used as the assignment operator. However inside other statements, the assignment operator must be <code>:=</code> and not <code>=</code> because <code>=</code> is treated as a comparison operator in non-SET statements. <strong>UPDATE:</strong> Further to comments below, you may also do the following: BIGBLOCK",
        "summary": "Yes, but you need to move the variable assignment into the query: BIGBLOCK Further to comments below, you may also do the following: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to use a delegate. In this case all your methods take a <code>string</code> parameter and return an <code>int</code> - this is most simply represented by the <code>Func&lt;string, int&gt;</code> delegate1. So your code can become correct with as simple a change as this: Delegates have a lot more power than this, admittedly. For example, with C# you can create a delegate from a lambda expression, so you could invoke your method this way: That will create an anonymous function like this: and then pass that delegate to the <code>RunTheMethod</code> method. You can use delegates for event subscriptions, asynchronous execution, callbacks - all kinds of things. It's well worth reading up on them, particularly if you want to use LINQ. I have an article which is mostly about the differences between delegates and events, but you may find it useful anyway. 1 This is just based on the generic <code>Func&lt;T, TResult&gt;</code> delegate type in the framework; you could easily declare your own: and then make the parameter be of type <code>MyDelegateType</code> instead.",
        "output": "You need to use a delegate.",
        "answer": "You need to use a delegate. In this case all your methods take a <code>string</code> parameter and return an <code>int</code> - this is most simply represented by the <code>Func&lt;string, int&gt;</code> delegate1. So your code can become correct with as simple a change as this: Delegates have a lot more power than this, admittedly. For example, with C# you can create a delegate from a lambda expression, so you could invoke your method this way: That will create an anonymous function like this: and then pass that delegate to the <code>RunTheMethod</code> method. You can use delegates for event subscriptions, asynchronous execution, callbacks - all kinds of things. It's well worth reading up on them, particularly if you want to use LINQ. I have an article which is mostly about the differences between delegates and events, but you may find it useful anyway. 1 This is just based on the generic <code>Func&lt;T, TResult&gt;</code> delegate type in the framework; you could easily declare your own: and then make the parameter be of type <code>MyDelegateType</code> instead.",
        "summary": "You need to use a delegate."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can try <strong>-Xbootclasspath/a:path</strong> option of java application launcher. By description it specifies \"a colon-separated path of directires, JAR archives, and ZIP archives to append to the default bootstrap class path.\"",
        "output": "You can try <strong>-Xbootclasspath/a:path</strong> option of java application launcher.",
        "answer": "You can try <strong>-Xbootclasspath/a:path</strong> option of java application launcher. By description it specifies \"a colon-separated path of directires, JAR archives, and ZIP archives to append to the default bootstrap class path.\"",
        "summary": "You can try <strong>-Xbootclasspath/a:path</strong> option of java application launcher."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n New versions of JUnit contains the Categories runner:http://kentbeck.github.com/junit/doc/ReleaseNotes4.8.html But releasing procedure of JUnit is not maven based, so maven users have to put it manually to their repositories.",
        "output": "But releasing procedure of JUnit is not maven based, so maven users have to put it manually to their repositories.",
        "answer": "New versions of JUnit contains the Categories runner:http://kentbeck.github.com/junit/doc/ReleaseNotes4.8.html But releasing procedure of JUnit is not maven based, so maven users have to put it manually to their repositories.",
        "summary": "But releasing procedure of JUnit is not maven based, so maven users have to put it manually to their repositories."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What you're basically doing here is relying on <code>Date#toString()</code> which already has a fixed pattern. To convert a Java <code>Date</code> object into another human readable String pattern, you need <code>SimpleDateFormat#format()</code>. By the way, the \"unparseable date\" exception can here only be thrown by <code>SimpleDateFormat#parse()</code>. This means that the <code>inputDate</code> isn't in the expected pattern <code>\"yyyy-MM-dd HH:mm:ss z\"</code>. You'll probably need to modify the pattern to match the <code>inputDate</code>'s actual pattern. Update: Okay, I did a test: This correctly prints: (I'm on GMT-4) Update 2: as per your edit, you really got a <code>ParseException</code> on that. The most suspicious part would then be the timezone of <code>UTC</code>. Is this actually known at your Java environment? What Java version and what OS version are you using? Check <code>TimeZone.getAvailableIDs()</code>. There must be a <code>UTC</code> in between.",
        "output": "What you're basically doing here is relying on <code>Date#toString()</code> which already has a fixed pattern. To convert a Java <code>Date</code> object into another human readable String pattern, you need <code>SimpleDateFormat#format()</code>.",
        "answer": "What you're basically doing here is relying on <code>Date#toString()</code> which already has a fixed pattern. To convert a Java <code>Date</code> object into another human readable String pattern, you need <code>SimpleDateFormat#format()</code>. By the way, the \"unparseable date\" exception can here only be thrown by <code>SimpleDateFormat#parse()</code>. This means that the <code>inputDate</code> isn't in the expected pattern <code>\"yyyy-MM-dd HH:mm:ss z\"</code>. You'll probably need to modify the pattern to match the <code>inputDate</code>'s actual pattern. Update: Okay, I did a test: This correctly prints: (I'm on GMT-4) Update 2: as per your edit, you really got a <code>ParseException</code> on that. The most suspicious part would then be the timezone of <code>UTC</code>. Is this actually known at your Java environment? What Java version and what OS version are you using? Check <code>TimeZone.getAvailableIDs()</code>. There must be a <code>UTC</code> in between.",
        "summary": "What you're basically doing here is relying on <code>Date#toString()</code> which already has a fixed pattern. To convert a Java <code>Date</code> object into another human readable String pattern, you need <code>SimpleDateFormat#format()</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n E-satis response is the correct way to determine the file extension. Alternatively, instead of relying on a files extension, you could use the fileinfo (http://us2.php.net/fileinfo) to determine the files MIME type. Here's a simplified example of processing an image uploaded by a user:",
        "output": "Alternatively, instead of relying on a files extension, you could use the fileinfo (http://us2.php.net/fileinfo) to determine the files MIME type.",
        "answer": "E-satis response is the correct way to determine the file extension. Alternatively, instead of relying on a files extension, you could use the fileinfo (http://us2.php.net/fileinfo) to determine the files MIME type. Here's a simplified example of processing an image uploaded by a user:",
        "summary": "Alternatively, instead of relying on a files extension, you could use the fileinfo (http://us2.php.net/fileinfo) to determine the files MIME type."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Another nice way to deal with JSON data is using the JQuery getJSON function. You can call the Method from the jquery getJSON method by simply...",
        "output": "Another nice way to deal with JSON data is using the JQuery getJSON function.",
        "answer": "Another nice way to deal with JSON data is using the JQuery getJSON function. You can call the Method from the jquery getJSON method by simply...",
        "summary": "Another nice way to deal with JSON data is using the JQuery getJSON function."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I dont think having an absolute position would be best if you want an element always centered in the middle of the page. You probably want a fixed element. I found another jquery centering plugin that used fixed positioning. It is called fixed center.",
        "output": "I found another jquery centering plugin that used fixed positioning.",
        "answer": "I dont think having an absolute position would be best if you want an element always centered in the middle of the page. You probably want a fixed element. I found another jquery centering plugin that used fixed positioning. It is called fixed center.",
        "summary": "I found another jquery centering plugin that used fixed positioning."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Perhaps an analogy will help understanding the difference: Student <strong>ID</strong> cards are distinct. No two students on campus will have the same student <strong>ID</strong> card. However, many students can and will share at least one <strong>Class</strong> with each other. It's okay to put multiple students under one <strong>Class</strong> title, such as Biology. But it's never acceptable to put multiple students under one student <strong>ID</strong>. When giving <strong>Rules</strong> over the school intercom system, you can give <strong>Rules</strong> to a <strong>Class</strong>: \"Tomorrow, all students are to wear a red shirt to Biology class.\" Or you can give rules to a Specific Student, by calling his unique <strong>ID</strong>: \"Jonathan Sampson is to wear a green shirt tomorrow.\" In this case, Jonathan Sampson is receiving two commands: one as a student in the Biology class, and another as a direct requirement. Because Jonathan was told directly, via the id attribute, to wear a green shirt, he will disregard the earlier request to wear a red shirt. The more specific selectors win.",
        "output": "Perhaps an analogy will help understanding the difference: Student <strong>ID</strong> cards are distinct. No two students on campus will have the same student <strong>ID</strong> card. However, many students can and will share at least one <strong>Class</strong> with each other.",
        "answer": "Perhaps an analogy will help understanding the difference: Student <strong>ID</strong> cards are distinct. No two students on campus will have the same student <strong>ID</strong> card. However, many students can and will share at least one <strong>Class</strong> with each other. It's okay to put multiple students under one <strong>Class</strong> title, such as Biology. But it's never acceptable to put multiple students under one student <strong>ID</strong>. When giving <strong>Rules</strong> over the school intercom system, you can give <strong>Rules</strong> to a <strong>Class</strong>: \"Tomorrow, all students are to wear a red shirt to Biology class.\" Or you can give rules to a Specific Student, by calling his unique <strong>ID</strong>: \"Jonathan Sampson is to wear a green shirt tomorrow.\" In this case, Jonathan Sampson is receiving two commands: one as a student in the Biology class, and another as a direct requirement. Because Jonathan was told directly, via the id attribute, to wear a green shirt, he will disregard the earlier request to wear a red shirt. The more specific selectors win.",
        "summary": "Perhaps an analogy will help understanding the difference: Student <strong>ID</strong> cards are distinct. No two students on campus will have the same student <strong>ID</strong> card. However, many students can and will share at least one <strong>Class</strong> with each other."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n On Ubuntu/Debian and other distributions using aptitude: Package <code>libmysql-ruby</code> has been phased out and replaced by <code>ruby-mysql</code>. This is where I found the solution. If the above command doesn't work because <code>libmysql-ruby</code> cannot be found, the following should be sufficient: On Red Hat/CentOS and other distributions using yum: On Mac OS X with Homebrew:",
        "output": "On Ubuntu/Debian and other distributions using aptitude: Package <code>libmysql-ruby</code> has been phased out and replaced by <code>ruby-mysql</code>. On Red Hat/CentOS and other distributions using yum: On Mac OS X with Homebrew:",
        "answer": "On Ubuntu/Debian and other distributions using aptitude: Package <code>libmysql-ruby</code> has been phased out and replaced by <code>ruby-mysql</code>. This is where I found the solution. If the above command doesn't work because <code>libmysql-ruby</code> cannot be found, the following should be sufficient: On Red Hat/CentOS and other distributions using yum: On Mac OS X with Homebrew:",
        "summary": "On Ubuntu/Debian and other distributions using aptitude: Package <code>libmysql-ruby</code> has been phased out and replaced by <code>ruby-mysql</code>. On Red Hat/CentOS and other distributions using yum: On Mac OS X with Homebrew:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>in</code> is definitely more pythonic. In fact <code>has_key()</code> was removed in Python 3.x.",
        "output": "<code>in</code> is definitely more pythonic.",
        "answer": "<code>in</code> is definitely more pythonic. In fact <code>has_key()</code> was removed in Python 3.x.",
        "summary": "<code>in</code> is definitely more pythonic."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n With POST you can also do multipart mime encoding which means you can attach files as  well. Also if you are using post variables across navigation of pages, the user will get a warning asking if they want to resubmit the post parameter. Typically they look the same in an HTTP request, but you should just stick to POST if you need to \"POST\" something TO a server and \"GET\" if you need to GET something FROM a server as that's the way they were intended.",
        "output": "With POST you can also do multipart mime encoding which means you can attach files as  well. Also if you are using post variables across navigation of pages, the user will get a warning asking if they want to resubmit the post parameter. Typically they look the same in an HTTP request, but you should just stick to POST if you need to \"POST\" something TO a server and \"GET\" if you need to GET something FROM a server as that's the way they were intended.",
        "answer": "With POST you can also do multipart mime encoding which means you can attach files as  well. Also if you are using post variables across navigation of pages, the user will get a warning asking if they want to resubmit the post parameter. Typically they look the same in an HTTP request, but you should just stick to POST if you need to \"POST\" something TO a server and \"GET\" if you need to GET something FROM a server as that's the way they were intended.",
        "summary": "With POST you can also do multipart mime encoding which means you can attach files as  well. Also if you are using post variables across navigation of pages, the user will get a warning asking if they want to resubmit the post parameter. Typically they look the same in an HTTP request, but you should just stick to POST if you need to \"POST\" something TO a server and \"GET\" if you need to GET something FROM a server as that's the way they were intended."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The first link to sp_generate_inserts is pretty cool, here is a really simple version: On my system, I get this result:",
        "output": "The first link to sp_generate_inserts is pretty cool, here is a really simple version:",
        "answer": "The first link to sp_generate_inserts is pretty cool, here is a really simple version: On my system, I get this result:",
        "summary": "The first link to sp_generate_inserts is pretty cool, here is a really simple version:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just to add some other things to watch out for: <li>Sudo in a init.d script is no good since it needs a tty (\"sudo: sorry, you must have a tty to run sudo\") <li>If you are daemonizing a java application, you might want to consider Java Service Wrapper (which provides a mechanism for setting the user id) <li>Another alternative could be <em>su --session-command=[cmd] [user]</em>",
        "output": "<li>Sudo in a init.d script is no good since it needs a tty (\"sudo: sorry, you must have a tty to run sudo\") <li>If you are daemonizing a java application, you might want to consider Java Service Wrapper (which provides a mechanism for setting the user id) <li>Another alternative could be <em>su --session-command=[cmd] [user]</em>",
        "answer": "Just to add some other things to watch out for: <li>Sudo in a init.d script is no good since it needs a tty (\"sudo: sorry, you must have a tty to run sudo\") <li>If you are daemonizing a java application, you might want to consider Java Service Wrapper (which provides a mechanism for setting the user id) <li>Another alternative could be <em>su --session-command=[cmd] [user]</em>",
        "summary": "<li>Sudo in a init.d script is no good since it needs a tty (\"sudo: sorry, you must have a tty to run sudo\") <li>If you are daemonizing a java application, you might want to consider Java Service Wrapper (which provides a mechanism for setting the user id) <li>Another alternative could be <em>su --session-command=[cmd] [user]</em>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n When a constructor creates an object, that object implicitly references the constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property for the purpose of resolving property references. The constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property can be referenced by the program expression constructor.prototype, and properties added to an object__________________________ÃÂ¢________________________________s prototype are shared, through inheritance, by all objects sharing the prototype.",
        "output": "The constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property can be referenced by the program expression constructor.prototype, and properties added to an object__________________________ÃÂ¢________________________________s prototype are shared, through inheritance, by all objects sharing the prototype.",
        "answer": "When a constructor creates an object, that object implicitly references the constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property for the purpose of resolving property references. The constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property can be referenced by the program expression constructor.prototype, and properties added to an object__________________________ÃÂ¢________________________________s prototype are shared, through inheritance, by all objects sharing the prototype.",
        "summary": "The constructor__________________________ÃÂ¢________________________________s __________________________ÃÂ¢________________________________prototype__________________________ÃÂ¢________________________________ property can be referenced by the program expression constructor.prototype, and properties added to an object__________________________ÃÂ¢________________________________s prototype are shared, through inheritance, by all objects sharing the prototype."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <code>1G=G</code>. That should indent all the lines in the file. <code>1G</code> takes you the first line, <code>=</code> will start the auto-indent and the final <code>G</code> will take you the last line in the file.",
        "output": "<code>1G=G</code>. That should indent all the lines in the file.",
        "answer": "<code>1G=G</code>. That should indent all the lines in the file. <code>1G</code> takes you the first line, <code>=</code> will start the auto-indent and the final <code>G</code> will take you the last line in the file.",
        "summary": "<code>1G=G</code>. That should indent all the lines in the file."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can try this BIGBLOCK",
        "output": "You can try this BIGBLOCK",
        "answer": "You can try this BIGBLOCK",
        "summary": "You can try this BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This code first compares x and 0 and then decrements x. (Also said in the first answer: You're post-decrementing x and then comparing x and 0 with the <code>&gt;</code> operator.) See the output of this code: We now first compare and then decrement by seeing 0 in the output. If we want to first decrement and then compare, use this code: That output is:",
        "output": "We now first compare and then decrement by seeing 0 in the output. If we want to first decrement and then compare, use this code:",
        "answer": "This code first compares x and 0 and then decrements x. (Also said in the first answer: You're post-decrementing x and then comparing x and 0 with the <code>&gt;</code> operator.) See the output of this code: We now first compare and then decrement by seeing 0 in the output. If we want to first decrement and then compare, use this code: That output is:",
        "summary": "We now first compare and then decrement by seeing 0 in the output. If we want to first decrement and then compare, use this code:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Here is my implementation in C#: BIGBLOCK",
        "output": "Here is my implementation in C#: BIGBLOCK",
        "answer": "Here is my implementation in C#: BIGBLOCK",
        "summary": "Here is my implementation in C#: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Pipe them through <code>sort</code> and <code>uniq</code>. This removes all duplicates. <code>uniq -d</code> gives only the duplicates, <code>uniq -u</code> gives only the unique ones (strips duplicates).",
        "output": "Pipe them through <code>sort</code> and <code>uniq</code>. <code>uniq -d</code> gives only the duplicates, <code>uniq -u</code> gives only the unique ones (strips duplicates).",
        "answer": "Pipe them through <code>sort</code> and <code>uniq</code>. This removes all duplicates. <code>uniq -d</code> gives only the duplicates, <code>uniq -u</code> gives only the unique ones (strips duplicates).",
        "summary": "Pipe them through <code>sort</code> and <code>uniq</code>. <code>uniq -d</code> gives only the duplicates, <code>uniq -u</code> gives only the unique ones (strips duplicates)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Just read the JavaDoc for the asList method: Returns a {@code List} of the objects   in the specified array. The size of   the {@code List} cannot be modified,   i.e. adding and removing are   unsupported, but the elements can be   set. Setting an element modifies the   underlying array. This is from Java 6 but it looks like it is the same for the android java. EDIT The type of the resulting list is <code>Arrays.ArrayList</code>, which is a private class inside Arrays.class. Practically speaking, it is nothing but a List-view on the array that you've passed with <code>Arrays.asList</code>. With a consequence: if you change the array, the list is changed too. And because an array is not resizeable, remove and add operation must be unsupported.",
        "output": "Just read the JavaDoc for the asList method:",
        "answer": "Just read the JavaDoc for the asList method: Returns a {@code List} of the objects   in the specified array. The size of   the {@code List} cannot be modified,   i.e. adding and removing are   unsupported, but the elements can be   set. Setting an element modifies the   underlying array. This is from Java 6 but it looks like it is the same for the android java. EDIT The type of the resulting list is <code>Arrays.ArrayList</code>, which is a private class inside Arrays.class. Practically speaking, it is nothing but a List-view on the array that you've passed with <code>Arrays.asList</code>. With a consequence: if you change the array, the list is changed too. And because an array is not resizeable, remove and add operation must be unsupported.",
        "summary": "Just read the JavaDoc for the asList method:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n See <code>String.replaceAll</code>. Use the regex <code>\"\\s\"</code> and replace with <code>\" \"</code>. Then use <code>String.trim</code>.",
        "output": "See <code>String.replaceAll</code>.",
        "answer": "See <code>String.replaceAll</code>. Use the regex <code>\"\\s\"</code> and replace with <code>\" \"</code>. Then use <code>String.trim</code>.",
        "summary": "See <code>String.replaceAll</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In most regex dialects there are a set of convenient character summaries you can use for this kind of thing - these are good ones to remember: <code>\\w</code> - Matches any word character. <code>\\W</code> - Matches any nonword character. <code>\\s</code> - Matches any white-space character. <code>\\S</code> - Matches anything but white-space characters. <code>\\d</code> - Matches any digit. <code>\\D</code> - Matches anything except digits. A search for \"Regex Cheatsheets\" should reward you with a whole lot of useful summaries.",
        "output": "In most regex dialects there are a set of convenient character summaries you can use for this kind of thing - these are good ones to remember: <code>\\w</code> - Matches any word character. <code>\\W</code> - Matches any nonword character. <code>\\s</code> - Matches any white-space character. <code>\\S</code> - Matches anything but white-space characters. <code>\\d</code> - Matches any digit. <code>\\D</code> - Matches anything except digits.",
        "answer": "In most regex dialects there are a set of convenient character summaries you can use for this kind of thing - these are good ones to remember: <code>\\w</code> - Matches any word character. <code>\\W</code> - Matches any nonword character. <code>\\s</code> - Matches any white-space character. <code>\\S</code> - Matches anything but white-space characters. <code>\\d</code> - Matches any digit. <code>\\D</code> - Matches anything except digits. A search for \"Regex Cheatsheets\" should reward you with a whole lot of useful summaries.",
        "summary": "In most regex dialects there are a set of convenient character summaries you can use for this kind of thing - these are good ones to remember: <code>\\w</code> - Matches any word character. <code>\\W</code> - Matches any nonword character. <code>\\s</code> - Matches any white-space character. <code>\\S</code> - Matches anything but white-space characters. <code>\\d</code> - Matches any digit. <code>\\D</code> - Matches anything except digits."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Big O is a measure of how much time/space an algorithm uses relative to the size of its input. If an algorithm is O(n) then the time/space will increase at the same rate as its input. If an algorithm is O(n2) then the time/space increase at the rate of its input squared. and so on.",
        "output": "Big O is a measure of how much time/space an algorithm uses relative to the size of its input.",
        "answer": "Big O is a measure of how much time/space an algorithm uses relative to the size of its input. If an algorithm is O(n) then the time/space will increase at the same rate as its input. If an algorithm is O(n2) then the time/space increase at the rate of its input squared. and so on.",
        "summary": "Big O is a measure of how much time/space an algorithm uses relative to the size of its input."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Compare to null is undefined, unless you use IS NULL. So, when comparing 3 to NULL (query A), it returns undefined. I.e. SELECT 'true' where 3 in (1,2,null) and SELECT 'true' where 3 not in (1,2,null) will produce the same result, as NOT (UNDEFINED) is still undefined, but not TRUE",
        "output": "Compare to null is undefined, unless you use IS NULL. So, when comparing 3 to NULL (query A), it returns undefined.",
        "answer": "Compare to null is undefined, unless you use IS NULL. So, when comparing 3 to NULL (query A), it returns undefined. I.e. SELECT 'true' where 3 in (1,2,null) and SELECT 'true' where 3 not in (1,2,null) will produce the same result, as NOT (UNDEFINED) is still undefined, but not TRUE",
        "summary": "Compare to null is undefined, unless you use IS NULL. So, when comparing 3 to NULL (query A), it returns undefined."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths.",
        "output": "This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths.",
        "answer": "This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths.",
        "summary": "This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I doubt lambda will go away. See Guido's post about finally giving up trying to remove it. Also see an outline of the conflict. You might check out this post for more of a history about the deal behind Python's functional features: http://python-history.blogspot.com/2009/04/origins-of-pythons-functional-features.html Curiously, the map, filter, and reduce functions that originally motivated the introduction of lambda and other functional features have to a large extent been superseded by list comprehensions and generator expressions. In fact, the reduce function was removed from list of builtin functions in Python 3.0. (However, it's not necessary to send in complaints about the removal of lambda, map or filter: they are staying. :-) My own two cents: Rarely is lambda worth it as far as clarity goes. Generally there is a more clear solution that doesn't include lambda.",
        "output": "My own two cents: Rarely is lambda worth it as far as clarity goes. Generally there is a more clear solution that doesn't include lambda.",
        "answer": "I doubt lambda will go away. See Guido's post about finally giving up trying to remove it. Also see an outline of the conflict. You might check out this post for more of a history about the deal behind Python's functional features: http://python-history.blogspot.com/2009/04/origins-of-pythons-functional-features.html Curiously, the map, filter, and reduce functions that originally motivated the introduction of lambda and other functional features have to a large extent been superseded by list comprehensions and generator expressions. In fact, the reduce function was removed from list of builtin functions in Python 3.0. (However, it's not necessary to send in complaints about the removal of lambda, map or filter: they are staying. :-) My own two cents: Rarely is lambda worth it as far as clarity goes. Generally there is a more clear solution that doesn't include lambda.",
        "summary": "My own two cents: Rarely is lambda worth it as far as clarity goes. Generally there is a more clear solution that doesn't include lambda."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n urllib2 provides some extra functionality, namely the <code>urlopen()</code> function can allow you to specify headers (normally you'd have had to use httplib in the past, which is far more verbose.) More importantly though, urllib2 provides the <code>Request</code> class, which allows for a more declarative approach to doing a request: BIGBLOCK Note that <code>urlencode()</code> is only in urllib, not urllib2. There are also handlers for implementing more advanced URL support in urllib2. The short answer is, unless you're working with legacy code, you probably want to use the URL opener from urllib2, but you still need to import into urllib for some of the utility functions. <strong>Bonus answer</strong>With Google App Engine, you can use any of httplib, urllib or urllib2, but all of them are just wrappers for Google's URL Fetch API. That is, you are still subject to the same limitations such as ports, protocols, and the length of the response allowed. You can use the core of the libraries as you would expect for retrieving HTTP URLs, though.",
        "output": "urllib2 provides some extra functionality, namely the <code>urlopen()</code> function can allow you to specify headers (normally you'd have had to use httplib in the past, which is far more verbose.) More importantly though, urllib2 provides the <code>Request</code> class, which allows for a more declarative approach to doing a request: BIGBLOCK The short answer is, unless you're working with legacy code, you probably want to use the URL opener from urllib2, but you still need to import into urllib for some of the utility functions.",
        "answer": "urllib2 provides some extra functionality, namely the <code>urlopen()</code> function can allow you to specify headers (normally you'd have had to use httplib in the past, which is far more verbose.) More importantly though, urllib2 provides the <code>Request</code> class, which allows for a more declarative approach to doing a request: BIGBLOCK Note that <code>urlencode()</code> is only in urllib, not urllib2. There are also handlers for implementing more advanced URL support in urllib2. The short answer is, unless you're working with legacy code, you probably want to use the URL opener from urllib2, but you still need to import into urllib for some of the utility functions. <strong>Bonus answer</strong>With Google App Engine, you can use any of httplib, urllib or urllib2, but all of them are just wrappers for Google's URL Fetch API. That is, you are still subject to the same limitations such as ports, protocols, and the length of the response allowed. You can use the core of the libraries as you would expect for retrieving HTTP URLs, though.",
        "summary": "urllib2 provides some extra functionality, namely the <code>urlopen()</code> function can allow you to specify headers (normally you'd have had to use httplib in the past, which is far more verbose.) More importantly though, urllib2 provides the <code>Request</code> class, which allows for a more declarative approach to doing a request: BIGBLOCK The short answer is, unless you're working with legacy code, you probably want to use the URL opener from urllib2, but you still need to import into urllib for some of the utility functions."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n As mentioned by @Mike Ritacco but updated for SSMS 2008 R2 Right click on the database name Choose Tasks > Generate scripts Depending on your settings the intro page may show or not Choose 'Select specific database objects', Expand the tree view and check the relevant tables Click Next Click Advanced Under General section, choose the appropriate option for 'Types of data to script' Complete the wizard You will then get all of the INSERT statements for the data straight out of SSMS. EDIT 2016-10-25 SQL Server 2016/SSMS 13.0.15900.1 Right click on the database name Choose Tasks > Generate scripts Depending on your settings the intro page may show or not Choose 'Select specific database objects', Expand the tree view and check the relevant tables Click Next Click Advanced Under General section, choose the appropriate option for 'Types of data to script' Click OK Pick whether you want the output to go to a new query, the clipboard or a file Click Next twice Your script is prepared in accordance with the settings you picked above Click Finish",
        "output": "You will then get all of the INSERT statements for the data straight out of SSMS.",
        "answer": "As mentioned by @Mike Ritacco but updated for SSMS 2008 R2 Right click on the database name Choose Tasks > Generate scripts Depending on your settings the intro page may show or not Choose 'Select specific database objects', Expand the tree view and check the relevant tables Click Next Click Advanced Under General section, choose the appropriate option for 'Types of data to script' Complete the wizard You will then get all of the INSERT statements for the data straight out of SSMS. EDIT 2016-10-25 SQL Server 2016/SSMS 13.0.15900.1 Right click on the database name Choose Tasks > Generate scripts Depending on your settings the intro page may show or not Choose 'Select specific database objects', Expand the tree view and check the relevant tables Click Next Click Advanced Under General section, choose the appropriate option for 'Types of data to script' Click OK Pick whether you want the output to go to a new query, the clipboard or a file Click Next twice Your script is prepared in accordance with the settings you picked above Click Finish",
        "summary": "You will then get all of the INSERT statements for the data straight out of SSMS."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Many years ago, to provide an age calculator gimmick on my website, I wrote a function to calculate age to a fraction. This is a quick port of that function to C# (from the PHP version). I'm afraid I haven't been able to test the C# version, but hope you enjoy all the same! (Admittedly this is a bit gimmicky for the purposes of showing user profiles on Stack Overflow, but maybe readers will find some use for it. :-))",
        "output": "Many years ago, to provide an age calculator gimmick on my website, I wrote a function to calculate age to a fraction.",
        "answer": "Many years ago, to provide an age calculator gimmick on my website, I wrote a function to calculate age to a fraction. This is a quick port of that function to C# (from the PHP version). I'm afraid I haven't been able to test the C# version, but hope you enjoy all the same! (Admittedly this is a bit gimmicky for the purposes of showing user profiles on Stack Overflow, but maybe readers will find some use for it. :-))",
        "summary": "Many years ago, to provide an age calculator gimmick on my website, I wrote a function to calculate age to a fraction."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I'd say there is no preferred method, it all depends on what you're going to do with the response. If the results are going to be used together in further processing then structures make sense, if not I'd tend to pass then as individual references unless the function was going to be used in a composite statement: I often choose to pass 'out structures' by reference in the parameter list rather than having the pass by copy overhead of returning a new structure (but this is sweating the small stuff). Are out parameters confusing? A parameter sent as reference suggests the value is going to change (as opposed to a const reference). Sensible naming also removes confusion.",
        "output": "If the results are going to be used together in further processing then structures make sense, if not I'd tend to pass then as individual references unless the function was going to be used in a composite statement:",
        "answer": "I'd say there is no preferred method, it all depends on what you're going to do with the response. If the results are going to be used together in further processing then structures make sense, if not I'd tend to pass then as individual references unless the function was going to be used in a composite statement: I often choose to pass 'out structures' by reference in the parameter list rather than having the pass by copy overhead of returning a new structure (but this is sweating the small stuff). Are out parameters confusing? A parameter sent as reference suggests the value is going to change (as opposed to a const reference). Sensible naming also removes confusion.",
        "summary": "If the results are going to be used together in further processing then structures make sense, if not I'd tend to pass then as individual references unless the function was going to be used in a composite statement:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n How about putting the <code>checkbox</code> <em>into</em> the <code>label</code>, making the label automatically \"click sensitive\" for the check box, and giving the checkbox a <code>onchange</code> event? BIGBLOCK This will additionally catch users using a keyboard to toggle the check box, something <code>onclick</code> would not.",
        "output": "How about putting the <code>checkbox</code> <em>into</em> the <code>label</code>, making the label automatically \"click sensitive\" for the check box, and giving the checkbox a <code>onchange</code> event?",
        "answer": "How about putting the <code>checkbox</code> <em>into</em> the <code>label</code>, making the label automatically \"click sensitive\" for the check box, and giving the checkbox a <code>onchange</code> event? BIGBLOCK This will additionally catch users using a keyboard to toggle the check box, something <code>onclick</code> would not.",
        "summary": "How about putting the <code>checkbox</code> <em>into</em> the <code>label</code>, making the label automatically \"click sensitive\" for the check box, and giving the checkbox a <code>onchange</code> event?"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n to navigate directories quicky, there's $CDPATH, cdargs, and ways to generate aliases automatically http://jackndempsey.blogspot.com/2008/07/cdargs.html http://muness.blogspot.com/2008/06/lazy-bash-cd-aliaes.html https://web.archive.org/web/1/http://articles.techrepublic%2ecom%2ecom/5100-10878_11-5827311.html",
        "output": "to navigate directories quicky, there's $CDPATH, cdargs, and ways to generate aliases automatically",
        "answer": "to navigate directories quicky, there's $CDPATH, cdargs, and ways to generate aliases automatically http://jackndempsey.blogspot.com/2008/07/cdargs.html http://muness.blogspot.com/2008/06/lazy-bash-cd-aliaes.html https://web.archive.org/web/1/http://articles.techrepublic%2ecom%2ecom/5100-10878_11-5827311.html",
        "summary": "to navigate directories quicky, there's $CDPATH, cdargs, and ways to generate aliases automatically"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n <strong>Decorators</strong> Decorators allow to wrap a function or method in another function that can add functionality, modify arguments or results, etc. You write decorators one line above the function definition, beginning with an \"at\" sign (@). Example shows a <code>print_args</code> decorator that prints the decorated function's arguments before calling it:",
        "output": "<strong>Decorators</strong>",
        "answer": "<strong>Decorators</strong> Decorators allow to wrap a function or method in another function that can add functionality, modify arguments or results, etc. You write decorators one line above the function definition, beginning with an \"at\" sign (@). Example shows a <code>print_args</code> decorator that prints the decorated function's arguments before calling it:",
        "summary": "<strong>Decorators</strong>"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n IMPORTANT NOTE: Classes B, C and D all contain the variables x, y and z. It is just question of access. About usage of protected and private inheritance you could read here.",
        "output": "It is just question of access.",
        "answer": "IMPORTANT NOTE: Classes B, C and D all contain the variables x, y and z. It is just question of access. About usage of protected and private inheritance you could read here.",
        "summary": "It is just question of access."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Apart from basic differences mentioned above, there is a core subtle difference between instanceof operator and isAssignableFrom method in Class. Read <code>instanceof</code> as Ã©ÂÂ¥Ã¦Â¸Âs this (the left part) the instance of this or any subclass of this (the right part)Ã©Â?and read <code>x.getClass().isAssignableFrom(Y.class)</code> as Ã©ÂÂ¥Ã¦Â·Âan I write <code>X x = new Y()</code>Ã©Â? In other words, instanceof operator checks if the left object is same or subclass of right class, while <code>isAssignableFrom</code> checks if we can assign object of the parameter class (from) to the reference of the class on which the method is called. Note that both of these consider the actual instance not the reference type. Consider an example of 3 classes A, B and C where C extends B and B extends A. BIGBLOCK",
        "output": "Read <code>instanceof</code> as Ã©ÂÂ¥Ã¦Â¸Âs this (the left part) the instance of this or any subclass of this (the right part)Ã©Â?and read <code>x.getClass().isAssignableFrom(Y.class)</code> as Ã©ÂÂ¥Ã¦Â·Âan I write <code>X x = new Y()</code>Ã©Â? In other words, instanceof operator checks if the left object is same or subclass of right class, while <code>isAssignableFrom</code> checks if we can assign object of the parameter class (from) to the reference of the class on which the method is called. Consider an example of 3 classes A, B and C where C extends B and B extends A. BIGBLOCK",
        "answer": "Apart from basic differences mentioned above, there is a core subtle difference between instanceof operator and isAssignableFrom method in Class. Read <code>instanceof</code> as Ã©ÂÂ¥Ã¦Â¸Âs this (the left part) the instance of this or any subclass of this (the right part)Ã©Â?and read <code>x.getClass().isAssignableFrom(Y.class)</code> as Ã©ÂÂ¥Ã¦Â·Âan I write <code>X x = new Y()</code>Ã©Â? In other words, instanceof operator checks if the left object is same or subclass of right class, while <code>isAssignableFrom</code> checks if we can assign object of the parameter class (from) to the reference of the class on which the method is called. Note that both of these consider the actual instance not the reference type. Consider an example of 3 classes A, B and C where C extends B and B extends A. BIGBLOCK",
        "summary": "Read <code>instanceof</code> as Ã©ÂÂ¥Ã¦Â¸Âs this (the left part) the instance of this or any subclass of this (the right part)Ã©Â?and read <code>x.getClass().isAssignableFrom(Y.class)</code> as Ã©ÂÂ¥Ã¦Â·Âan I write <code>X x = new Y()</code>Ã©Â? In other words, instanceof operator checks if the left object is same or subclass of right class, while <code>isAssignableFrom</code> checks if we can assign object of the parameter class (from) to the reference of the class on which the method is called. Consider an example of 3 classes A, B and C where C extends B and B extends A. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you know list size: If you don't (an iterator): In the latter case, it can be rephrased in a more beautiful way if you can be sure that the sequence always contains a whole number of chunks of given size (i.e. there is no incomplete last chunk).",
        "output": "If you know list size: If you don't (an iterator):",
        "answer": "If you know list size: If you don't (an iterator): In the latter case, it can be rephrased in a more beautiful way if you can be sure that the sequence always contains a whole number of chunks of given size (i.e. there is no incomplete last chunk).",
        "summary": "If you know list size: If you don't (an iterator):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I know this is an old question but for people searching for this solution it's worth noting that you should not use append() to add content to a textarea. the append() method targets innerHTML not the value of the textarea. The content may appear in the textarea but it will not be added to the element's form value. As noted above using: BIGBLOCK will work fine.",
        "output": "I know this is an old question but for people searching for this solution it's worth noting that you should not use append() to add content to a textarea. As noted above using: BIGBLOCK will work fine.",
        "answer": "I know this is an old question but for people searching for this solution it's worth noting that you should not use append() to add content to a textarea. the append() method targets innerHTML not the value of the textarea. The content may appear in the textarea but it will not be added to the element's form value. As noted above using: BIGBLOCK will work fine.",
        "summary": "I know this is an old question but for people searching for this solution it's worth noting that you should not use append() to add content to a textarea. As noted above using: BIGBLOCK will work fine."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The maximum request size is, by default, 4mb (4096 KB) This is explained here: http://support.microsoft.com/default.aspx?scid=kb;EN-US;295626 The above article also explains how to fix this issue :)",
        "output": "The maximum request size is, by default, 4mb (4096 KB)",
        "answer": "The maximum request size is, by default, 4mb (4096 KB) This is explained here: http://support.microsoft.com/default.aspx?scid=kb;EN-US;295626 The above article also explains how to fix this issue :)",
        "summary": "The maximum request size is, by default, 4mb (4096 KB)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Given parent class named <code>Parent</code> and child class named <code>Child</code>, you can do something like this: Note that <code>Parent</code> is the class's actual name and not a keyword.",
        "output": "Given parent class named <code>Parent</code> and child class named <code>Child</code>, you can do something like this:",
        "answer": "Given parent class named <code>Parent</code> and child class named <code>Child</code>, you can do something like this: Note that <code>Parent</code> is the class's actual name and not a keyword.",
        "summary": "Given parent class named <code>Parent</code> and child class named <code>Child</code>, you can do something like this:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I use <code>SingleOrDefault</code> in situations where my logic dictates that the will be either zero or one results. If there are more, it's an error situation, which is helpful.",
        "output": "I use <code>SingleOrDefault</code> in situations where my logic dictates that the will be either zero or one results.",
        "answer": "I use <code>SingleOrDefault</code> in situations where my logic dictates that the will be either zero or one results. If there are more, it's an error situation, which is helpful.",
        "summary": "I use <code>SingleOrDefault</code> in situations where my logic dictates that the will be either zero or one results."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A common misunderstanding among starters is that they think that the call of a <code>forward()</code>, <code>sendRedirect()</code>, or <code>sendError()</code> would magically exit and \"jump\" out of the method block, hereby ignoring the remnant of the code. For example: BIGBLOCK This is thus actually not true. They do certainly not behave differently than any other Java methods (expect of <code>System#exit()</code> of course). When the <code>someCondition</code> in above example is <code>true</code> and you're thus calling <code>forward()</code> after <code>sendRedirect()</code> or <code>sendError()</code> on the same request/response, then the chance is <strong>big</strong> that you will get the exception: java.lang.IllegalStateException: Cannot forward after response has been committed If the <code>if</code> statement calls a <code>forward()</code> and you're afterwards calling <code>sendRedirect()</code> or <code>sendError()</code>, then below exception will be thrown: java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed To fix this, you need either to add a <code>return;</code> statement afterwards BIGBLOCK ... or to introduce an else block. BIGBLOCK To naildown the root cause in your code, just search for any line which calls a <code>forward()</code>, <code>sendRedirect()</code> or <code>sendError()</code> without exiting the method block or skipping the remnant of the code. This can be inside the same servlet before the particular code line, but also in any servlet or filter which was been called before the particular servlet. In case of <code>sendError()</code>, if your sole purpose is to set the response status, use <code>setStatus()</code> instead. Another probable cause is that the servlet writes to the response while a <code>forward()</code> will be called, or has been called in the very same method. BIGBLOCK The response buffer size defaults in most server to 2KB, so if you write more than 2KB to it, then it will be committed and <code>forward()</code> will fail the same way: java.lang.IllegalStateException: Cannot forward after response has been committed Solution is obvious, just don't write to the response in the servlet. That's the responsibility of the JSP. You just set a request attribute like so <code>request.setAttribute(\"data\", \"some string\")</code> and then print it in JSP like so <code>${data}</code>. See also our Servlets wiki page to learn how to use Servlets the right way. See also: <li>What exactly does &quot;Response already committed&quot; mean? How to handle exceptions then? <strong>Unrelated</strong> to your concrete problem, your JDBC code is leaking resources. Fix that as well. For hints, see also How often should Connection, Statement and ResultSet be closed in JDBC?",
        "output": "A common misunderstanding among starters is that they think that the call of a <code>forward()</code>, <code>sendRedirect()</code>, or <code>sendError()</code> would magically exit and \"jump\" out of the method block, hereby ignoring the remnant of the code. If the <code>if</code> statement calls a <code>forward()</code> and you're afterwards calling <code>sendRedirect()</code> or <code>sendError()</code>, then below exception will be thrown: java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed To fix this, you need either to add a <code>return;</code> statement afterwards BIGBLOCK ... or to introduce an else block. BIGBLOCK To naildown the root cause in your code, just search for any line which calls a <code>forward()</code>, <code>sendRedirect()</code> or <code>sendError()</code> without exiting the method block or skipping the remnant of the code. Another probable cause is that the servlet writes to the response while a <code>forward()</code> will be called, or has been called in the very same method. Solution is obvious, just don't write to the response in the servlet.",
        "answer": "A common misunderstanding among starters is that they think that the call of a <code>forward()</code>, <code>sendRedirect()</code>, or <code>sendError()</code> would magically exit and \"jump\" out of the method block, hereby ignoring the remnant of the code. For example: BIGBLOCK This is thus actually not true. They do certainly not behave differently than any other Java methods (expect of <code>System#exit()</code> of course). When the <code>someCondition</code> in above example is <code>true</code> and you're thus calling <code>forward()</code> after <code>sendRedirect()</code> or <code>sendError()</code> on the same request/response, then the chance is <strong>big</strong> that you will get the exception: java.lang.IllegalStateException: Cannot forward after response has been committed If the <code>if</code> statement calls a <code>forward()</code> and you're afterwards calling <code>sendRedirect()</code> or <code>sendError()</code>, then below exception will be thrown: java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed To fix this, you need either to add a <code>return;</code> statement afterwards BIGBLOCK ... or to introduce an else block. BIGBLOCK To naildown the root cause in your code, just search for any line which calls a <code>forward()</code>, <code>sendRedirect()</code> or <code>sendError()</code> without exiting the method block or skipping the remnant of the code. This can be inside the same servlet before the particular code line, but also in any servlet or filter which was been called before the particular servlet. In case of <code>sendError()</code>, if your sole purpose is to set the response status, use <code>setStatus()</code> instead. Another probable cause is that the servlet writes to the response while a <code>forward()</code> will be called, or has been called in the very same method. BIGBLOCK The response buffer size defaults in most server to 2KB, so if you write more than 2KB to it, then it will be committed and <code>forward()</code> will fail the same way: java.lang.IllegalStateException: Cannot forward after response has been committed Solution is obvious, just don't write to the response in the servlet. That's the responsibility of the JSP. You just set a request attribute like so <code>request.setAttribute(\"data\", \"some string\")</code> and then print it in JSP like so <code>${data}</code>. See also our Servlets wiki page to learn how to use Servlets the right way. See also: <li>What exactly does &quot;Response already committed&quot; mean? How to handle exceptions then? <strong>Unrelated</strong> to your concrete problem, your JDBC code is leaking resources. Fix that as well. For hints, see also How often should Connection, Statement and ResultSet be closed in JDBC?",
        "summary": "A common misunderstanding among starters is that they think that the call of a <code>forward()</code>, <code>sendRedirect()</code>, or <code>sendError()</code> would magically exit and \"jump\" out of the method block, hereby ignoring the remnant of the code. If the <code>if</code> statement calls a <code>forward()</code> and you're afterwards calling <code>sendRedirect()</code> or <code>sendError()</code>, then below exception will be thrown: java.lang.IllegalStateException: Cannot call sendRedirect() after the response has been committed To fix this, you need either to add a <code>return;</code> statement afterwards BIGBLOCK ... or to introduce an else block. BIGBLOCK To naildown the root cause in your code, just search for any line which calls a <code>forward()</code>, <code>sendRedirect()</code> or <code>sendError()</code> without exiting the method block or skipping the remnant of the code. Another probable cause is that the servlet writes to the response while a <code>forward()</code> will be called, or has been called in the very same method. Solution is obvious, just don't write to the response in the servlet."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Canonical's releases use the user 'ubuntu' by default for anyone landing here with a ubuntu image that is coming up with the same problem.",
        "output": "Canonical's releases use the user 'ubuntu' by default for anyone landing here with a ubuntu image that is coming up with the same problem.",
        "answer": "Canonical's releases use the user 'ubuntu' by default for anyone landing here with a ubuntu image that is coming up with the same problem.",
        "summary": "Canonical's releases use the user 'ubuntu' by default for anyone landing here with a ubuntu image that is coming up with the same problem."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Serialization systems other than the native java one can also use this modifier. Hibernate, for instance, will not persist fields marked with either <strong>@Transient</strong> or the <strong>transient</strong> modifier. Terracotta as well respects this modifier. I believe the figurative meaning of the modifier is \"this field is for in-memory use only. don't persist or move it outside of this particular VM in any way. Its non-portable\". i.e. you can't rely on its value in another VM memory space. Much like <strong>volatile</strong> means you can't rely on certain memory and thread semantics.",
        "output": "Serialization systems other than the native java one can also use this modifier. Hibernate, for instance, will not persist fields marked with either <strong>@Transient</strong> or the <strong>transient</strong> modifier. I believe the figurative meaning of the modifier is \"this field is for in-memory use only. Its non-portable\". i.e. you can't rely on its value in another VM memory space.",
        "answer": "Serialization systems other than the native java one can also use this modifier. Hibernate, for instance, will not persist fields marked with either <strong>@Transient</strong> or the <strong>transient</strong> modifier. Terracotta as well respects this modifier. I believe the figurative meaning of the modifier is \"this field is for in-memory use only. don't persist or move it outside of this particular VM in any way. Its non-portable\". i.e. you can't rely on its value in another VM memory space. Much like <strong>volatile</strong> means you can't rely on certain memory and thread semantics.",
        "summary": "Serialization systems other than the native java one can also use this modifier. Hibernate, for instance, will not persist fields marked with either <strong>@Transient</strong> or the <strong>transient</strong> modifier. I believe the figurative meaning of the modifier is \"this field is for in-memory use only. Its non-portable\". i.e. you can't rely on its value in another VM memory space."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A simple way which should work nicely for a small amount of bits it something like this (For 4 bits in this example): (i &amp; 1) + (i &amp; 2)/2 + (i &amp; 4)/4 + (i &amp; 8)/8 Would others recommend this for a small number of bits as a simple solution?",
        "output": "A simple way which should work nicely for a small amount of bits it something like this (For 4 bits in this example):",
        "answer": "A simple way which should work nicely for a small amount of bits it something like this (For 4 bits in this example): (i &amp; 1) + (i &amp; 2)/2 + (i &amp; 4)/4 + (i &amp; 8)/8 Would others recommend this for a small number of bits as a simple solution?",
        "summary": "A simple way which should work nicely for a small amount of bits it something like this (For 4 bits in this example):"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n either send the user to another page which does it BIGBLOCK or do it with ajax BIGBLOCK",
        "output": "either send the user to another page which does it BIGBLOCK or do it with ajax BIGBLOCK",
        "answer": "either send the user to another page which does it BIGBLOCK or do it with ajax BIGBLOCK",
        "summary": "either send the user to another page which does it BIGBLOCK or do it with ajax BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The IntelliJ debugger has a very handy feature called \"Evaluate Expression\", that is by far better than eclipses pendant. It has full code-completion and i concider it to be generally \"more useful\".",
        "output": "The IntelliJ debugger has a very handy feature called \"Evaluate Expression\", that is by far better than eclipses pendant.",
        "answer": "The IntelliJ debugger has a very handy feature called \"Evaluate Expression\", that is by far better than eclipses pendant. It has full code-completion and i concider it to be generally \"more useful\".",
        "summary": "The IntelliJ debugger has a very handy feature called \"Evaluate Expression\", that is by far better than eclipses pendant."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Regarding the Carmac method, it seems like it would be quite easy just to iterate once more, which should double the number of digits of accuracy. It is, after all, an extremely truncated iterative method -- Newton's, with a very good first guess. Regarding your current best, I see two micro-optimizations: <li>move the check vs. 0 after the check using mod255 <li>rearrange the dividing out powers of four to skip all the checks for the usual (75%) case. I.e: BIGBLOCK Even better might be a simple BIGBLOCK Obviously, it would be interesting to know how many numbers get culled at each checkpoint -- I rather doubt the checks are truly independent, which makes things tricky.",
        "output": "Regarding the Carmac method, it seems like it would be quite easy just to iterate once more, which should double the number of digits of accuracy. Regarding your current best, I see two micro-optimizations: <li>move the check vs. 0 after the check using mod255 <li>rearrange the dividing out powers of four to skip all the checks for the usual (75%) case. Even better might be a simple BIGBLOCK",
        "answer": "Regarding the Carmac method, it seems like it would be quite easy just to iterate once more, which should double the number of digits of accuracy. It is, after all, an extremely truncated iterative method -- Newton's, with a very good first guess. Regarding your current best, I see two micro-optimizations: <li>move the check vs. 0 after the check using mod255 <li>rearrange the dividing out powers of four to skip all the checks for the usual (75%) case. I.e: BIGBLOCK Even better might be a simple BIGBLOCK Obviously, it would be interesting to know how many numbers get culled at each checkpoint -- I rather doubt the checks are truly independent, which makes things tricky.",
        "summary": "Regarding the Carmac method, it seems like it would be quite easy just to iterate once more, which should double the number of digits of accuracy. Regarding your current best, I see two micro-optimizations: <li>move the check vs. 0 after the check using mod255 <li>rearrange the dividing out powers of four to skip all the checks for the usual (75%) case. Even better might be a simple BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can do it (albeit not lightning-quickly) like so: That is, \"select all people where there isn't another different person in the list with the same ID.\" Mind you, in your example, that would just select person 3. I'm not sure how to tell which you want, out of the previous two.",
        "output": "That is, \"select all people where there isn't another different person in the list with the same ID.\" Mind you, in your example, that would just select person 3.",
        "answer": "You can do it (albeit not lightning-quickly) like so: That is, \"select all people where there isn't another different person in the list with the same ID.\" Mind you, in your example, that would just select person 3. I'm not sure how to tell which you want, out of the previous two.",
        "summary": "That is, \"select all people where there isn't another different person in the list with the same ID.\" Mind you, in your example, that would just select person 3."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I believe question was not whether you can call the static member of the class by calling <code>ClassName::staticMember</code>. Question was what's the difference between using <code>self::classmember</code> and <code>$this-&gt;classmember</code>. For e.g., both of the following examples work without any errors, whether you use <code>self::</code> or <code>$this-&gt;</code>",
        "output": "Question was what's the difference between using <code>self::classmember</code> and <code>$this-&gt;classmember</code>.",
        "answer": "I believe question was not whether you can call the static member of the class by calling <code>ClassName::staticMember</code>. Question was what's the difference between using <code>self::classmember</code> and <code>$this-&gt;classmember</code>. For e.g., both of the following examples work without any errors, whether you use <code>self::</code> or <code>$this-&gt;</code>",
        "summary": "Question was what's the difference between using <code>self::classmember</code> and <code>$this-&gt;classmember</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Using PDO you could do something like this: BIGBLOCK You obviously should also check whether <code>PDO::query()</code> executes the query OK (either by checking the result or telling PDO to throw exceptions instead)",
        "output": "Using PDO you could do something like this: BIGBLOCK You obviously should also check whether <code>PDO::query()</code> executes the query OK (either by checking the result or telling PDO to throw exceptions instead)",
        "answer": "Using PDO you could do something like this: BIGBLOCK You obviously should also check whether <code>PDO::query()</code> executes the query OK (either by checking the result or telling PDO to throw exceptions instead)",
        "summary": "Using PDO you could do something like this: BIGBLOCK You obviously should also check whether <code>PDO::query()</code> executes the query OK (either by checking the result or telling PDO to throw exceptions instead)"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The JOIN syntax keeps conditions near the table they apply to. This is especially useful when you join a large amount of tables. By the way, you can do an outer join with the first syntax too: BIGBLOCK Or BIGBLOCK Or BIGBLOCK",
        "output": "The JOIN syntax keeps conditions near the table they apply to.",
        "answer": "The JOIN syntax keeps conditions near the table they apply to. This is especially useful when you join a large amount of tables. By the way, you can do an outer join with the first syntax too: BIGBLOCK Or BIGBLOCK Or BIGBLOCK",
        "summary": "The JOIN syntax keeps conditions near the table they apply to."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You need to be running a mail server locally.If this is Unix, enable sendmailIf this is Windows  install the Simple Mail Transfer Server (not sure if the name is correct) component of IIs. E.g. for windows 2003 follow this: http://msdn.microsoft.com/en-us/library/8b83ac7t.aspx",
        "output": "You need to be running a mail server locally.If this is Unix, enable sendmailIf this is Windows  install the Simple Mail Transfer Server (not sure if the name is correct) component of IIs.",
        "answer": "You need to be running a mail server locally.If this is Unix, enable sendmailIf this is Windows  install the Simple Mail Transfer Server (not sure if the name is correct) component of IIs. E.g. for windows 2003 follow this: http://msdn.microsoft.com/en-us/library/8b83ac7t.aspx",
        "summary": "You need to be running a mail server locally.If this is Unix, enable sendmailIf this is Windows  install the Simple Mail Transfer Server (not sure if the name is correct) component of IIs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's generally only an issue if you're passing eval user input.",
        "output": "It's generally only an issue if you're passing eval user input.",
        "answer": "It's generally only an issue if you're passing eval user input.",
        "summary": "It's generally only an issue if you're passing eval user input."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n From what I can tell, the MVVM maps to the MV of MVC - meaning that in a traditional MVC pattern the V does not communicate directly with the M. In the second version of MVC, there is a direct link between M and V. MVVM appears to take all tasks related to M and V communication, and couple it to decouple it from the C. In effect, there's still the larger scope application workflow (or implementation of the use scenarios) that are not fully accounted for in MVVM. This is the role of the controller. By removing these lower level aspects from the controllers, they are cleaner and makes it easier to modify the application's use scenario and business logic, also making controllers more reusable.",
        "output": "From what I can tell, the MVVM maps to the MV of MVC - meaning that in a traditional MVC pattern the V does not communicate directly with the M. In the second version of MVC, there is a direct link between M and V. MVVM appears to take all tasks related to M and V communication, and couple it to decouple it from the C. In effect, there's still the larger scope application workflow (or implementation of the use scenarios) that are not fully accounted for in MVVM. By removing these lower level aspects from the controllers, they are cleaner and makes it easier to modify the application's use scenario and business logic, also making controllers more reusable.",
        "answer": "From what I can tell, the MVVM maps to the MV of MVC - meaning that in a traditional MVC pattern the V does not communicate directly with the M. In the second version of MVC, there is a direct link between M and V. MVVM appears to take all tasks related to M and V communication, and couple it to decouple it from the C. In effect, there's still the larger scope application workflow (or implementation of the use scenarios) that are not fully accounted for in MVVM. This is the role of the controller. By removing these lower level aspects from the controllers, they are cleaner and makes it easier to modify the application's use scenario and business logic, also making controllers more reusable.",
        "summary": "From what I can tell, the MVVM maps to the MV of MVC - meaning that in a traditional MVC pattern the V does not communicate directly with the M. In the second version of MVC, there is a direct link between M and V. MVVM appears to take all tasks related to M and V communication, and couple it to decouple it from the C. In effect, there's still the larger scope application workflow (or implementation of the use scenarios) that are not fully accounted for in MVVM. By removing these lower level aspects from the controllers, they are cleaner and makes it easier to modify the application's use scenario and business logic, also making controllers more reusable."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you set <code>LD_PRELOAD</code> to the path of a shared object, that file will be loaded <strong>before</strong> any other library (including the C runtime, <code>libc.so</code>). So to run <code>ls</code> with your special <code>malloc()</code> implementation, do this: BIGBLOCK",
        "output": "So to run <code>ls</code> with your special <code>malloc()</code> implementation, do this: BIGBLOCK",
        "answer": "If you set <code>LD_PRELOAD</code> to the path of a shared object, that file will be loaded <strong>before</strong> any other library (including the C runtime, <code>libc.so</code>). So to run <code>ls</code> with your special <code>malloc()</code> implementation, do this: BIGBLOCK",
        "summary": "So to run <code>ls</code> with your special <code>malloc()</code> implementation, do this: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I found a project called Fizzler that takes a jQuery/Sizzler approach to selecting HTML elements. It's based on HTML Agility Pack. It's currently in beta and only supports a subset of CSS selectors, but it's pretty damn cool and refreshing to use CSS selectors over nasty XPath. http://code.google.com/p/fizzler/",
        "output": "I found a project called Fizzler that takes a jQuery/Sizzler approach to selecting HTML elements.",
        "answer": "I found a project called Fizzler that takes a jQuery/Sizzler approach to selecting HTML elements. It's based on HTML Agility Pack. It's currently in beta and only supports a subset of CSS selectors, but it's pretty damn cool and refreshing to use CSS selectors over nasty XPath. http://code.google.com/p/fizzler/",
        "summary": "I found a project called Fizzler that takes a jQuery/Sizzler approach to selecting HTML elements."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This usually means that there was a network error, such as a TCP timeout. I would start by placing a sniffer (wireshark) on the connection to see if you can see any problems. If there is a TCP error, you should be able to see it. Also, you can check your router logs, if this is applicable. If wireless is involved anywhere, that is another source for these kind of errors.",
        "output": "This usually means that there was a network error, such as a TCP timeout.",
        "answer": "This usually means that there was a network error, such as a TCP timeout. I would start by placing a sniffer (wireshark) on the connection to see if you can see any problems. If there is a TCP error, you should be able to see it. Also, you can check your router logs, if this is applicable. If wireless is involved anywhere, that is another source for these kind of errors.",
        "summary": "This usually means that there was a network error, such as a TCP timeout."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n According to Microsoft they are the same thing. When <code>false</code>, User ID and Password are specified in the connection. When true, the current Windows account credentials are used for authentication.   Recognized values are <code>true</code>, <code>false</code>, <code>yes</code>, <code>no</code>, and <code>sspi</code> (strongly recommended), which is equivalent to <code>true</code>.",
        "output": "According to Microsoft they are the same thing.   Recognized values are <code>true</code>, <code>false</code>, <code>yes</code>, <code>no</code>, and <code>sspi</code> (strongly recommended), which is equivalent to <code>true</code>.",
        "answer": "According to Microsoft they are the same thing. When <code>false</code>, User ID and Password are specified in the connection. When true, the current Windows account credentials are used for authentication.   Recognized values are <code>true</code>, <code>false</code>, <code>yes</code>, <code>no</code>, and <code>sspi</code> (strongly recommended), which is equivalent to <code>true</code>.",
        "summary": "According to Microsoft they are the same thing.   Recognized values are <code>true</code>, <code>false</code>, <code>yes</code>, <code>no</code>, and <code>sspi</code> (strongly recommended), which is equivalent to <code>true</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n JavaScript file paths When in script, <strong>paths are relative to displayed page</strong> to make things easier you can print out a simple js declaration like this and using this variable all across your scripts: Solution, which was employed on <strong>StackOverflow</strong> around Feb 2010: BIGBLOCK If you were visiting this page around 2010 you could just have a look at <strong>StackOverflow's html source</strong>, you could find this badass one-liner [formatted to 3 lines :) ] in the <code>&lt;head /&gt;</code> section",
        "output": "When in script, <strong>paths are relative to displayed page</strong> Solution, which was employed on <strong>StackOverflow</strong> around Feb 2010: BIGBLOCK",
        "answer": "JavaScript file paths When in script, <strong>paths are relative to displayed page</strong> to make things easier you can print out a simple js declaration like this and using this variable all across your scripts: Solution, which was employed on <strong>StackOverflow</strong> around Feb 2010: BIGBLOCK If you were visiting this page around 2010 you could just have a look at <strong>StackOverflow's html source</strong>, you could find this badass one-liner [formatted to 3 lines :) ] in the <code>&lt;head /&gt;</code> section",
        "summary": "When in script, <strong>paths are relative to displayed page</strong> Solution, which was employed on <strong>StackOverflow</strong> around Feb 2010: BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Looks like FireBug crew is working on an EventBug extension. It will add another panel to FireBug - Events. \"The events panel will list all of the event handlers on the page grouped by event type. For each event type you can open up to see the elements the listeners are bound to and summary of the function source.\" EventBug Rising Although they cannot say right now when it will be released.",
        "output": "Looks like FireBug crew is working on an EventBug extension. It will add another panel to FireBug - Events.",
        "answer": "Looks like FireBug crew is working on an EventBug extension. It will add another panel to FireBug - Events. \"The events panel will list all of the event handlers on the page grouped by event type. For each event type you can open up to see the elements the listeners are bound to and summary of the function source.\" EventBug Rising Although they cannot say right now when it will be released.",
        "summary": "Looks like FireBug crew is working on an EventBug extension. It will add another panel to FireBug - Events."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Make sure you are in the project directory before running <code>bundle install</code>. For example, after running <code>rails new myproject</code>, you will want to <code>cd myproject</code> before running <code>bundle install</code>.",
        "output": "Make sure you are in the project directory before running <code>bundle install</code>.",
        "answer": "Make sure you are in the project directory before running <code>bundle install</code>. For example, after running <code>rails new myproject</code>, you will want to <code>cd myproject</code> before running <code>bundle install</code>.",
        "summary": "Make sure you are in the project directory before running <code>bundle install</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n One big thing not mentioned is the fact that with WinSCP you can also use key file authentication which I am unable to do successfully with Ubuntu FTP clients. KFTPGrabber is the closest thing I can find that supports key file authentication... but it still doesn't work for me, where WinSCP does.",
        "output": "KFTPGrabber is the closest thing I can find that supports key file authentication... but it still doesn't work for me, where WinSCP does.",
        "answer": "One big thing not mentioned is the fact that with WinSCP you can also use key file authentication which I am unable to do successfully with Ubuntu FTP clients. KFTPGrabber is the closest thing I can find that supports key file authentication... but it still doesn't work for me, where WinSCP does.",
        "summary": "KFTPGrabber is the closest thing I can find that supports key file authentication... but it still doesn't work for me, where WinSCP does."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n A sort-of-canonical definition is \"when two threads access the same location in memory at the same time, and at least one of the accesses is a write.\" In the situation the \"reader\" thread may get the old value or the new value, depending on which thread \"wins the race.\" This is not always a bug&mdash;in fact, some really hairy low-level algorithms do this on purpose&mdash;but it should generally be avoided. @Steve Gury give's a good example of when it might be a problem.",
        "output": "A sort-of-canonical definition is \"when two threads access the same location in memory at the same time, and at least one of the accesses is a write.\"",
        "answer": "A sort-of-canonical definition is \"when two threads access the same location in memory at the same time, and at least one of the accesses is a write.\" In the situation the \"reader\" thread may get the old value or the new value, depending on which thread \"wins the race.\" This is not always a bug&mdash;in fact, some really hairy low-level algorithms do this on purpose&mdash;but it should generally be avoided. @Steve Gury give's a good example of when it might be a problem.",
        "summary": "A sort-of-canonical definition is \"when two threads access the same location in memory at the same time, and at least one of the accesses is a write.\""
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's easiest to just use <code>.read()</code> to read the partial or entire response, then write it into a file you've opened in a known good location.",
        "output": "It's easiest to just use <code>.read()</code> to read the partial or entire response, then write it into a file you've opened in a known good location.",
        "answer": "It's easiest to just use <code>.read()</code> to read the partial or entire response, then write it into a file you've opened in a known good location.",
        "summary": "It's easiest to just use <code>.read()</code> to read the partial or entire response, then write it into a file you've opened in a known good location."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n We can solve Q2 by summing both the numbers themselves, and the <em>squares</em> of the numbers. We can then reduce the problem to BIGBLOCK Where <code>x</code> and <code>y</code> are how far the sums are below the expected values. Substituting gives us: BIGBLOCK Which we can then solve to determine our missing numbers.",
        "output": "We can solve Q2 by summing both the numbers themselves, and the <em>squares</em> of the numbers.",
        "answer": "We can solve Q2 by summing both the numbers themselves, and the <em>squares</em> of the numbers. We can then reduce the problem to BIGBLOCK Where <code>x</code> and <code>y</code> are how far the sums are below the expected values. Substituting gives us: BIGBLOCK Which we can then solve to determine our missing numbers.",
        "summary": "We can solve Q2 by summing both the numbers themselves, and the <em>squares</em> of the numbers."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try: BIGBLOCK Note that this will not copy indexes, keys, etc. If you want to copy the <strong>entire</strong> structure, you need to generate a Create Script of the table. You can use that script to create a new table with the same structure. You can then also dump the data into the new table if you need to. If you are using Enterprise Manager, just right-click the table and select copy to generate a Create Script.",
        "output": "BIGBLOCK If you want to copy the <strong>entire</strong> structure, you need to generate a Create Script of the table. If you are using Enterprise Manager, just right-click the table and select copy to generate a Create Script.",
        "answer": "Try: BIGBLOCK Note that this will not copy indexes, keys, etc. If you want to copy the <strong>entire</strong> structure, you need to generate a Create Script of the table. You can use that script to create a new table with the same structure. You can then also dump the data into the new table if you need to. If you are using Enterprise Manager, just right-click the table and select copy to generate a Create Script.",
        "summary": "BIGBLOCK If you want to copy the <strong>entire</strong> structure, you need to generate a Create Script of the table. If you are using Enterprise Manager, just right-click the table and select copy to generate a Create Script."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Basically, when your FROM clause lists tables like so: BIGBLOCK the result is a cross product of all the rows in tables A, B, C. Then you apply the restriction <code>WHERE tableA.id = tableB.a_id</code> which will throw away a huge number of rows, then further ... <code>AND tableB.id = tableC.b_id</code> and you should then get only those rows you are really interested in. DBMSs know how to optimise this SQL so that the performance difference to writing this using JOINs is negligible (if any). Using the JOIN notation makes the SQL statement <em>more</em> readable (IMHO, not using joins turns the statement into a mess). Using the cross product, you need to provide join criteria in the WHERE clause, and that's the problem with the notation. You are crowding your WHERE clause with stuff like BIGBLOCK which is only used to restrict the cross product. WHERE clause should only contain RESTRICTIONS to the resultset. If you mix table join criteria with resultset restrictions, you (and others) will find your query harder to read. You should definitely use JOINs and keep the FROM clause a FROM clause, and the WHERE clause a WHERE clause.",
        "output": "Basically, when your FROM clause lists tables like so: BIGBLOCK the result is a cross product of all the rows in tables A, B, C. Then you apply the restriction <code>WHERE tableA.id = tableB.a_id</code> which will throw away a huge number of rows, then further ... <code>AND tableB.id = tableC.b_id</code> and you should then get only those rows you are really interested in. Using the JOIN notation makes the SQL statement <em>more</em> readable (IMHO, not using joins turns the statement into a mess). Using the cross product, you need to provide join criteria in the WHERE clause, and that's the problem with the notation. You should definitely use JOINs and keep the FROM clause a FROM clause, and the WHERE clause a WHERE clause.",
        "answer": "Basically, when your FROM clause lists tables like so: BIGBLOCK the result is a cross product of all the rows in tables A, B, C. Then you apply the restriction <code>WHERE tableA.id = tableB.a_id</code> which will throw away a huge number of rows, then further ... <code>AND tableB.id = tableC.b_id</code> and you should then get only those rows you are really interested in. DBMSs know how to optimise this SQL so that the performance difference to writing this using JOINs is negligible (if any). Using the JOIN notation makes the SQL statement <em>more</em> readable (IMHO, not using joins turns the statement into a mess). Using the cross product, you need to provide join criteria in the WHERE clause, and that's the problem with the notation. You are crowding your WHERE clause with stuff like BIGBLOCK which is only used to restrict the cross product. WHERE clause should only contain RESTRICTIONS to the resultset. If you mix table join criteria with resultset restrictions, you (and others) will find your query harder to read. You should definitely use JOINs and keep the FROM clause a FROM clause, and the WHERE clause a WHERE clause.",
        "summary": "Basically, when your FROM clause lists tables like so: BIGBLOCK the result is a cross product of all the rows in tables A, B, C. Then you apply the restriction <code>WHERE tableA.id = tableB.a_id</code> which will throw away a huge number of rows, then further ... <code>AND tableB.id = tableC.b_id</code> and you should then get only those rows you are really interested in. Using the JOIN notation makes the SQL statement <em>more</em> readable (IMHO, not using joins turns the statement into a mess). Using the cross product, you need to provide join criteria in the WHERE clause, and that's the problem with the notation. You should definitely use JOINs and keep the FROM clause a FROM clause, and the WHERE clause a WHERE clause."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n In C++, there are three distinct character types: <code>char</code> <code>signed char</code> <code>unsigned char</code> If you are using character types for text, use the unqualified <code>char</code>: it is the type of character literals like <code>'a'</code> or <code>'0'</code>. it is the type that makes up C strings like <code>\"abcde\"</code> It also works out as a number value, but it is unspecified whether that value is treated as signed or unsigned. Beware character comparisons through inequalities - although if you limit yourself to ASCII (0-127) you're just about safe. If you are using character types as numbers, use: <code>signed char</code>, which gives you at least the -127 to 127 range. (-128 to 127 is common) <code>unsigned char</code>, which gives you at least the 0 to 255 range. \"At least\", because the C++ standard only gives the minimum range of values that each numeric type is required to cover. <code>sizeof (char)</code> is required to be 1 (i.e. one byte), but a byte could in theory be for example 32 bits. <code>sizeof</code> would still be report its size as <code>1</code> - meaning that you could have <code>sizeof (char) == sizeof (long) == 1</code>.",
        "output": "If you are using character types for text, use the unqualified <code>char</code>: If you are using character types as numbers, use: <code>signed char</code>, which gives you at least the -127 to 127 range. <code>unsigned char</code>, which gives you at least the 0 to 255 range.",
        "answer": "In C++, there are three distinct character types: <code>char</code> <code>signed char</code> <code>unsigned char</code> If you are using character types for text, use the unqualified <code>char</code>: it is the type of character literals like <code>'a'</code> or <code>'0'</code>. it is the type that makes up C strings like <code>\"abcde\"</code> It also works out as a number value, but it is unspecified whether that value is treated as signed or unsigned. Beware character comparisons through inequalities - although if you limit yourself to ASCII (0-127) you're just about safe. If you are using character types as numbers, use: <code>signed char</code>, which gives you at least the -127 to 127 range. (-128 to 127 is common) <code>unsigned char</code>, which gives you at least the 0 to 255 range. \"At least\", because the C++ standard only gives the minimum range of values that each numeric type is required to cover. <code>sizeof (char)</code> is required to be 1 (i.e. one byte), but a byte could in theory be for example 32 bits. <code>sizeof</code> would still be report its size as <code>1</code> - meaning that you could have <code>sizeof (char) == sizeof (long) == 1</code>.",
        "summary": "If you are using character types for text, use the unqualified <code>char</code>: If you are using character types as numbers, use: <code>signed char</code>, which gives you at least the -127 to 127 range. <code>unsigned char</code>, which gives you at least the 0 to 255 range."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I've used BIGBLOCK before; i think because 'exit' was failing for me for some reason. The above defaults seem like a good idea, though.",
        "output": "I've used BIGBLOCK",
        "answer": "I've used BIGBLOCK before; i think because 'exit' was failing for me for some reason. The above defaults seem like a good idea, though.",
        "summary": "I've used BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I haven't checked the maths, but I suspect that computing <code>Ã¥Â?n^2)</code> in the same pass as we compute <code>Ã¥Â?n)</code> would provide enough info to get two missing numbers, Do <code>Ã¥Â?n^3)</code> as well if there are three, and so on.",
        "output": "I haven't checked the maths, but I suspect that computing <code>Ã¥Â?n^2)</code> in the same pass as we compute <code>Ã¥Â?n)</code> would provide enough info to get two missing numbers, Do <code>Ã¥Â?n^3)</code> as well if there are three, and so on.",
        "answer": "I haven't checked the maths, but I suspect that computing <code>Ã¥Â?n^2)</code> in the same pass as we compute <code>Ã¥Â?n)</code> would provide enough info to get two missing numbers, Do <code>Ã¥Â?n^3)</code> as well if there are three, and so on.",
        "summary": "I haven't checked the maths, but I suspect that computing <code>Ã¥Â?n^2)</code> in the same pass as we compute <code>Ã¥Â?n)</code> would provide enough info to get two missing numbers, Do <code>Ã¥Â?n^3)</code> as well if there are three, and so on."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's a double <code>not</code> operation. The first <code>!</code> converts the value to boolean and inverts its logical value. The second <code>!</code> inverts the logical value back.",
        "output": "It's a double <code>not</code> operation.",
        "answer": "It's a double <code>not</code> operation. The first <code>!</code> converts the value to boolean and inverts its logical value. The second <code>!</code> inverts the logical value back.",
        "summary": "It's a double <code>not</code> operation."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Apart from the fact that mutexes have an owner, the two objects may be optimized for different usage. Mutexes are designed to be held only for a short time; violating this can cause poor performance and unfair scheduling. For example, a running thread may be permitted to acquire a mutex, even though another thread is already blocked on it. Semaphores may provide more fairness, or fairness can be forced using several condition variables.",
        "output": "Mutexes are designed to be held only for a short time; violating this can cause poor performance and unfair scheduling. Semaphores may provide more fairness, or fairness can be forced using several condition variables.",
        "answer": "Apart from the fact that mutexes have an owner, the two objects may be optimized for different usage. Mutexes are designed to be held only for a short time; violating this can cause poor performance and unfair scheduling. For example, a running thread may be permitted to acquire a mutex, even though another thread is already blocked on it. Semaphores may provide more fairness, or fairness can be forced using several condition variables.",
        "summary": "Mutexes are designed to be held only for a short time; violating this can cause poor performance and unfair scheduling. Semaphores may provide more fairness, or fairness can be forced using several condition variables."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It is an Exception which occurs if you attempt to downcast a class, but in fact the class is not of that type. Consider this heirarchy: Object -> Animal -> Dog You might have a method called: If called with this code: It will compile just fine, but at runtime you will get a <code>ClassCastException</code> because o was in fact an Animal, not a Dog. In later versions of Java you do get a compiler warning unless you do:",
        "output": "It is an Exception which occurs if you attempt to downcast a class, but in fact the class is not of that type.",
        "answer": "It is an Exception which occurs if you attempt to downcast a class, but in fact the class is not of that type. Consider this heirarchy: Object -> Animal -> Dog You might have a method called: If called with this code: It will compile just fine, but at runtime you will get a <code>ClassCastException</code> because o was in fact an Animal, not a Dog. In later versions of Java you do get a compiler warning unless you do:",
        "summary": "It is an Exception which occurs if you attempt to downcast a class, but in fact the class is not of that type."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n To answer the other half of the question, you can call: when you want to return partial HTML. You'll just have to find some way to decide whether the request wants JSON or HTML, perhaps based on a URL part/parameter.",
        "output": "To answer the other half of the question, you can call:",
        "answer": "To answer the other half of the question, you can call: when you want to return partial HTML. You'll just have to find some way to decide whether the request wants JSON or HTML, perhaps based on a URL part/parameter.",
        "summary": "To answer the other half of the question, you can call:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n There's no exact counterpart to Java's <code>getClass()</code> in JavaScript. Mostly that's due to JavaScript being a prototype-based language, as opposed to Java being a class-based one. Depending on what you need <code>getClass()</code> for, there are several options in JavaScript: <code>typeof</code> <code>instanceof</code> <code>obj.</code><code>constructor</code> <code>func.</code><code>prototype</code>, <code>proto</code>.<code>isPrototypeOf</code> A few examples: Note: if you are compiling your code with Uglify it will change non-global class names. To prevent this, Uglify has a <code>--mangle</code> param that you can set to false is using gulp or grunt.",
        "output": "There's no exact counterpart to Java's <code>getClass()</code> in JavaScript. Depending on what you need <code>getClass()</code> for, there are several options in JavaScript:",
        "answer": "There's no exact counterpart to Java's <code>getClass()</code> in JavaScript. Mostly that's due to JavaScript being a prototype-based language, as opposed to Java being a class-based one. Depending on what you need <code>getClass()</code> for, there are several options in JavaScript: <code>typeof</code> <code>instanceof</code> <code>obj.</code><code>constructor</code> <code>func.</code><code>prototype</code>, <code>proto</code>.<code>isPrototypeOf</code> A few examples: Note: if you are compiling your code with Uglify it will change non-global class names. To prevent this, Uglify has a <code>--mangle</code> param that you can set to false is using gulp or grunt.",
        "summary": "There's no exact counterpart to Java's <code>getClass()</code> in JavaScript. Depending on what you need <code>getClass()</code> for, there are several options in JavaScript:"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Find a log4j.properties or log4j.xml online that has a root appender, and put it on your classpath. will log to the console. I prefer logging to a file so you can investigate afterwards. although for verbose logging applications 100KB usually needs to be increased to 1MB or 10MB, especially for debug. Personally I set up multiple loggers, and set the root logger to warn or error level instead of debug.",
        "output": "Find a log4j.properties or log4j.xml online that has a root appender, and put it on your classpath.",
        "answer": "Find a log4j.properties or log4j.xml online that has a root appender, and put it on your classpath. will log to the console. I prefer logging to a file so you can investigate afterwards. although for verbose logging applications 100KB usually needs to be increased to 1MB or 10MB, especially for debug. Personally I set up multiple loggers, and set the root logger to warn or error level instead of debug.",
        "summary": "Find a log4j.properties or log4j.xml online that has a root appender, and put it on your classpath."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I blogged about this a while back, quoting on Todd Snyder's excellent post on the difference between the two: Here are the key differences between   the patterns: MVP Pattern   View is more loosely coupled to the model. The presenter is   responsible for binding the model to   the view.   Easier to unit test because interaction with the view is through   an interface   Usually view to presenter map one to one. Complex views may have   multi presenters. MVC Pattern   Controller are based on behaviors and can be shared across   views   Can be responsible for determining which view to display It is the best explanation on the web I could find.",
        "output": "Here are the key differences between",
        "answer": "I blogged about this a while back, quoting on Todd Snyder's excellent post on the difference between the two: Here are the key differences between   the patterns: MVP Pattern   View is more loosely coupled to the model. The presenter is   responsible for binding the model to   the view.   Easier to unit test because interaction with the view is through   an interface   Usually view to presenter map one to one. Complex views may have   multi presenters. MVC Pattern   Controller are based on behaviors and can be shared across   views   Can be responsible for determining which view to display It is the best explanation on the web I could find.",
        "summary": "Here are the key differences between"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n The Collections2.filter(Collection,Predicate) method in Google's Guava library does just what you're looking for.",
        "output": "The Collections2.filter(Collection,Predicate) method in Google's Guava library does just what you're looking for.",
        "answer": "The Collections2.filter(Collection,Predicate) method in Google's Guava library does just what you're looking for.",
        "summary": "The Collections2.filter(Collection,Predicate) method in Google's Guava library does just what you're looking for."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I had a .NET 4.0, ASP.NET MVC 2.0, Entity Framework 4.0 web application developed in Visual Studio 2010. I had the same problem, that it worked on one Windows Server 2008 R2 server but not on another Windows Server 2008 R2 server, even though the versions of .NET and ASP.NET MVC were the same, throwing this same error as yours. I went to follow miko's suggestion, so I installed Windows SDK v7.1 (x64) on the failing server, so I could run !dumpheap. Well, it turns out that installing Windows SDK v7.1 (x64) resolved the issue. Whatever dependency was missing must have been included in the SDK. It can be downloaded from Microsoft Windows SDK for Windows 7 and .NET Framework 4.",
        "output": "Well, it turns out that installing Windows SDK v7.1 (x64) resolved the issue.",
        "answer": "I had a .NET 4.0, ASP.NET MVC 2.0, Entity Framework 4.0 web application developed in Visual Studio 2010. I had the same problem, that it worked on one Windows Server 2008 R2 server but not on another Windows Server 2008 R2 server, even though the versions of .NET and ASP.NET MVC were the same, throwing this same error as yours. I went to follow miko's suggestion, so I installed Windows SDK v7.1 (x64) on the failing server, so I could run !dumpheap. Well, it turns out that installing Windows SDK v7.1 (x64) resolved the issue. Whatever dependency was missing must have been included in the SDK. It can be downloaded from Microsoft Windows SDK for Windows 7 and .NET Framework 4.",
        "summary": "Well, it turns out that installing Windows SDK v7.1 (x64) resolved the issue."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I would recommend jQueryUI Position utility which gives you much more possibilities than only centering ...",
        "output": "I would recommend jQueryUI Position utility",
        "answer": "I would recommend jQueryUI Position utility which gives you much more possibilities than only centering ...",
        "summary": "I would recommend jQueryUI Position utility"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you think of the body of a loop as a subroutine, <code>continue</code> is sort of like <code>return</code>. The same keyword exists in C, and serves the same purpose. Here's a contrived example: This will print out only the odd numbers.",
        "output": "If you think of the body of a loop as a subroutine, <code>continue</code> is sort of like <code>return</code>.",
        "answer": "If you think of the body of a loop as a subroutine, <code>continue</code> is sort of like <code>return</code>. The same keyword exists in C, and serves the same purpose. Here's a contrived example: This will print out only the odd numbers.",
        "summary": "If you think of the body of a loop as a subroutine, <code>continue</code> is sort of like <code>return</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n It's very simple. JSON stands for Java Script Object Notation. Think of it as an alternative to using XML for transferring data between software components. For example, I recently wrote a bunch of web services that returned JSON, and some Javascript developers then wrote code which called the services and consumed the information returned in that format.",
        "output": "JSON stands for Java Script Object Notation. Think of it as an alternative to using XML for transferring data between software components.",
        "answer": "It's very simple. JSON stands for Java Script Object Notation. Think of it as an alternative to using XML for transferring data between software components. For example, I recently wrote a bunch of web services that returned JSON, and some Javascript developers then wrote code which called the services and consumed the information returned in that format.",
        "summary": "JSON stands for Java Script Object Notation. Think of it as an alternative to using XML for transferring data between software components."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Thanks for all the great answers, I found a solution that best suits my needs.",
        "output": "Thanks for all the great answers, I found a solution that best suits my needs.",
        "answer": "Thanks for all the great answers, I found a solution that best suits my needs.",
        "summary": "Thanks for all the great answers, I found a solution that best suits my needs."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can use <code>&amp;apos;</code> (which is iffy in IE) or <code>&amp;#39;</code> (which should work everywhere). For a comprehensive list, see the W3C HTML5 Named Character References or the HTML entities table on WebPlatform.org.",
        "output": "You can use <code>&amp;apos;</code> (which is iffy in IE) or <code>&amp;#39;</code> (which should work everywhere).",
        "answer": "You can use <code>&amp;apos;</code> (which is iffy in IE) or <code>&amp;#39;</code> (which should work everywhere). For a comprehensive list, see the W3C HTML5 Named Character References or the HTML entities table on WebPlatform.org.",
        "summary": "You can use <code>&amp;apos;</code> (which is iffy in IE) or <code>&amp;#39;</code> (which should work everywhere)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Represent it as text entity (ASCII 39): BIGBLOCK",
        "output": "Represent it as text entity (ASCII 39): BIGBLOCK",
        "answer": "Represent it as text entity (ASCII 39): BIGBLOCK",
        "summary": "Represent it as text entity (ASCII 39): BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I tend to follow the design of JDK libraries, especially Collections and Concurrency (Joshua Bloch, Doug Lea, those guys know how to design solid APIs). Anyway, many APIs in the JDK pro-actively throws <code>NullPointerException</code>. For example, the Javadoc for <code>Map.containsKey</code> states: @throws NullPointerException if the key is null and this map     does not permit null keys (optional). It's perfectly valid to throw your own NPE. The convention is to include the parameter name which was null in the message of the exception. The pattern goes: Whatever you do, don't allow a bad value to get set and throw an exception later when other code attempts to use it. That makes debugging a nightmare. You should always the follow the \"fail-fast\" principle.",
        "output": "It's perfectly valid to throw your own NPE.",
        "answer": "I tend to follow the design of JDK libraries, especially Collections and Concurrency (Joshua Bloch, Doug Lea, those guys know how to design solid APIs). Anyway, many APIs in the JDK pro-actively throws <code>NullPointerException</code>. For example, the Javadoc for <code>Map.containsKey</code> states: @throws NullPointerException if the key is null and this map     does not permit null keys (optional). It's perfectly valid to throw your own NPE. The convention is to include the parameter name which was null in the message of the exception. The pattern goes: Whatever you do, don't allow a bad value to get set and throw an exception later when other code attempts to use it. That makes debugging a nightmare. You should always the follow the \"fail-fast\" principle.",
        "summary": "It's perfectly valid to throw your own NPE."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n This should do what you need. BIGBLOCK",
        "output": "This should do what you need. BIGBLOCK",
        "answer": "This should do what you need. BIGBLOCK",
        "summary": "This should do what you need. BIGBLOCK"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I recommend <code>use boolean;</code>. You have to install the boolean module from cpan though.",
        "output": "I recommend <code>use boolean;</code>.",
        "answer": "I recommend <code>use boolean;</code>. You have to install the boolean module from cpan though.",
        "summary": "I recommend <code>use boolean;</code>."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n I once tried to do those round corners and drop shadows with css3. Later on, I found it is still poorly supported (Internet Explorer(s), of course!) I ended up trying to do that in JS (HTML canvas with IE Canvas), but it impacts the performance a lot (even on my C2D machine). In short, if you really need the effect, consider JS libraries (most of them should be able to run on IE6) but don't over do it due to performance issues; if you still need an alternative... you could use SFiR, then PS it and SFiR it. CSS3 isn't ready today.",
        "output": "Later on, I found it is still poorly supported (Internet Explorer(s), of course!) In short, if you really need the effect, consider JS libraries (most of them should be able to run on IE6) but don't over do it due to performance issues; if you still need an alternative... you could use SFiR, then PS it and SFiR it.",
        "answer": "I once tried to do those round corners and drop shadows with css3. Later on, I found it is still poorly supported (Internet Explorer(s), of course!) I ended up trying to do that in JS (HTML canvas with IE Canvas), but it impacts the performance a lot (even on my C2D machine). In short, if you really need the effect, consider JS libraries (most of them should be able to run on IE6) but don't over do it due to performance issues; if you still need an alternative... you could use SFiR, then PS it and SFiR it. CSS3 isn't ready today.",
        "summary": "Later on, I found it is still poorly supported (Internet Explorer(s), of course!) In short, if you really need the effect, consider JS libraries (most of them should be able to run on IE6) but don't over do it due to performance issues; if you still need an alternative... you could use SFiR, then PS it and SFiR it."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n You can't, it just doesn't support it. I have to ask, why those calculations need to happen Only inside the flash app? You have to be navigating to an URL that clearly relates to the metadata you get from the flash app. Otherwise how would the flash app know to get the values depending on the URL you hit. Options are: <li><strong>calculate on the page:</strong> When serving the page you need to do those same calculations on the server and send the title, etc on the page metadata. <li><strong>send metadata in the query string to your site</strong>: If you really must keep the calculation off the server, an alternative trick would be to explicitly set the metadata in the URL the users click to get to your site from Facebook. When processing the page, you just copy it back in the metadata sections (don't forget to encode appropriately). That is clearly limited because of the url size restrictions. <li><strong>send the calculation results in the query string to your site:</strong> if those calculations just give you a couple numbers that are used in the metadata, you could include just that in the query string of the URL the users click back to your site. That's more likely to not give you problems with URL sizes. re Why is this upvoted? It's wrong. You CAN - it IS supported to add custom title, description and images to your share. I do it all the time. Ã©Â?Dustin Fineout 3 hours ago The OP very clearly stated that he already knew you could serve that from a page, but wanted to pass the values directly to facebook (not through the target page). Besides, note that I gave 3 different options to work around the issue, one of which is what you posted as an answer later. Your option isn't how the OP was trying to do it, its just a workaround because of facebook restrictions. Finally, just as I did, you should mention that particular solution is flawed because you can easily hit the URL size restriction.",
        "output": "You can't, it just doesn't support it. Options are: <li><strong>calculate on the page:</strong> When serving the page you need to do those same calculations on the server and send the title, etc on the page metadata. <li><strong>send metadata in the query string to your site</strong>: If you really must keep the calculation off the server, an alternative trick would be to explicitly set the metadata in the URL the users click to get to your site from Facebook. <li><strong>send the calculation results in the query string to your site:</strong> if those calculations just give you a couple numbers that are used in the metadata, you could include just that in the query string of the URL the users click back to your site.",
        "answer": "You can't, it just doesn't support it. I have to ask, why those calculations need to happen Only inside the flash app? You have to be navigating to an URL that clearly relates to the metadata you get from the flash app. Otherwise how would the flash app know to get the values depending on the URL you hit. Options are: <li><strong>calculate on the page:</strong> When serving the page you need to do those same calculations on the server and send the title, etc on the page metadata. <li><strong>send metadata in the query string to your site</strong>: If you really must keep the calculation off the server, an alternative trick would be to explicitly set the metadata in the URL the users click to get to your site from Facebook. When processing the page, you just copy it back in the metadata sections (don't forget to encode appropriately). That is clearly limited because of the url size restrictions. <li><strong>send the calculation results in the query string to your site:</strong> if those calculations just give you a couple numbers that are used in the metadata, you could include just that in the query string of the URL the users click back to your site. That's more likely to not give you problems with URL sizes. re Why is this upvoted? It's wrong. You CAN - it IS supported to add custom title, description and images to your share. I do it all the time. Ã©Â?Dustin Fineout 3 hours ago The OP very clearly stated that he already knew you could serve that from a page, but wanted to pass the values directly to facebook (not through the target page). Besides, note that I gave 3 different options to work around the issue, one of which is what you posted as an answer later. Your option isn't how the OP was trying to do it, its just a workaround because of facebook restrictions. Finally, just as I did, you should mention that particular solution is flawed because you can easily hit the URL size restriction.",
        "summary": "You can't, it just doesn't support it. Options are: <li><strong>calculate on the page:</strong> When serving the page you need to do those same calculations on the server and send the title, etc on the page metadata. <li><strong>send metadata in the query string to your site</strong>: If you really must keep the calculation off the server, an alternative trick would be to explicitly set the metadata in the URL the users click to get to your site from Facebook. <li><strong>send the calculation results in the query string to your site:</strong> if those calculations just give you a couple numbers that are used in the metadata, you could include just that in the query string of the URL the users click back to your site."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If youÃ©ÂÂ¥Ã¦ÂªÂe using a multi-byte character encoding and do not just want to remove the first four <em>bytes</em> like <code>substr</code> does, use the multi-byte counterpart <code>mb_substr</code>. This does of course will also work with single-byte strings.",
        "output": "If youÃ©ÂÂ¥Ã¦ÂªÂe using a multi-byte character encoding and do not just want to remove the first four <em>bytes</em> like <code>substr</code> does, use the multi-byte counterpart <code>mb_substr</code>. This does of course will also work with single-byte strings.",
        "answer": "If youÃ©ÂÂ¥Ã¦ÂªÂe using a multi-byte character encoding and do not just want to remove the first four <em>bytes</em> like <code>substr</code> does, use the multi-byte counterpart <code>mb_substr</code>. This does of course will also work with single-byte strings.",
        "summary": "If youÃ©ÂÂ¥Ã¦ÂªÂe using a multi-byte character encoding and do not just want to remove the first four <em>bytes</em> like <code>substr</code> does, use the multi-byte counterpart <code>mb_substr</code>. This does of course will also work with single-byte strings."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n What your missing here is that .Reverse() is a void method. It's not possible to assign the result of .Reverse() to a variable. You can however alter the order to use Enumerable.Reverse() and get your result BIGBLOCK The difference is that Enumerable.Reverse() returns an IEnumerable&lt;T&gt; instead of being void return",
        "output": "What your missing here is that .Reverse() is a void method. The difference is that Enumerable.Reverse() returns an IEnumerable&lt;T&gt; instead of being void return",
        "answer": "What your missing here is that .Reverse() is a void method. It's not possible to assign the result of .Reverse() to a variable. You can however alter the order to use Enumerable.Reverse() and get your result BIGBLOCK The difference is that Enumerable.Reverse() returns an IEnumerable&lt;T&gt; instead of being void return",
        "summary": "What your missing here is that .Reverse() is a void method. The difference is that Enumerable.Reverse() returns an IEnumerable&lt;T&gt; instead of being void return"
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n Try netstat -b, that may hopefully shed some light on the situation (showing what .exe is using the port). Good luck.",
        "output": "Try netstat -b, that may hopefully shed some light on the situation (showing what .exe is using the port).",
        "answer": "Try netstat -b, that may hopefully shed some light on the situation (showing what .exe is using the port). Good luck.",
        "summary": "Try netstat -b, that may hopefully shed some light on the situation (showing what .exe is using the port)."
    },
    {
        "instruction": "Summarize the following paragraph, avoid adding any information not presented in the original text.\n If you know about the impact of <code>lazy=false</code> and still want to makes it as default (e.g., for prototyping purposes), you can use any of the following: if you are using XML configuration: add <code>default-lazy=\"false\"</code> to your <code>&lt;hibernate-mapping&gt;</code> element if you are using annotation configuration: add <code>@Proxy(lazy=false)</code> to your entity class(es)",
        "output": "If you know about the impact of <code>lazy=false</code> and still want to makes it as default (e.g., for prototyping purposes), you can use any of the following:",
        "answer": "If you know about the impact of <code>lazy=false</code> and still want to makes it as default (e.g., for prototyping purposes), you can use any of the following: if you are using XML configuration: add <code>default-lazy=\"false\"</code> to your <code>&lt;hibernate-mapping&gt;</code> element if you are using annotation configuration: add <code>@Proxy(lazy=false)</code> to your entity class(es)",
        "summary": "If you know about the impact of <code>lazy=false</code> and still want to makes it as default (e.g., for prototyping purposes), you can use any of the following:"
    }
]